{
  "skeleton": "//ATOM_PLACEHOLDER_SumMinMax\n\n// The order of the recursion in these two functions\n// must match the order of the iteration in the algorithm above\n//ATOM_PLACEHOLDER_Min\n\n//ATOM_PLACEHOLDER_Max",
  "atoms": {
    "SumMinMax": [
      [
        "Max",
        "Min"
      ],
      "// SPEC \nmethod SumMinMax(a: array<int>) returns (sum: int)\n    requires a.Length > 0\n    ensures sum == Max(a[..]) + Min(a[..])\n{\n}\n",
      "method"
    ],
    "Min": [
      [],
      "// ATOM \n\n// The order of the recursion in these two functions\n// must match the order of the iteration in the algorithm above\nfunction Min(a: seq<int>) : int\n    requires |a| > 0\n{\n    if |a| == 1 then a[0]\n    else\n        var minPrefix := Min(a[..|a|-1]);\n        if a[|a|-1] <= minPrefix then a[|a|-1] else Min(a[..|a|-1])\n}\n",
      "function"
    ],
    "Max": [
      [],
      "// ATOM \n\nfunction Max(a: seq<int>) : int\n    requires |a| > 0\n{\n    if |a| == 1 then a[0]\n    else\n        var maxPrefix := Max(a[..|a|-1]);\n        if a[|a|-1] >= maxPrefix then a[|a|-1] else Max(a[..|a|-1])\n}\n",
      "function"
    ]
  },
  "placeholder_mapping": {
    "//ATOM_PLACEHOLDER_SumMinMax": "SumMinMax",
    "//ATOM_PLACEHOLDER_Min": "Min",
    "//ATOM_PLACEHOLDER_Max": "Max"
  }
}