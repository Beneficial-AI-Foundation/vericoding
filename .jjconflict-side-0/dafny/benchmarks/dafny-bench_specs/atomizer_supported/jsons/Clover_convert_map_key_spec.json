{
  "skeleton": "//ATOM_PLACEHOLDER_convert_map_key\n\n",
  "atoms": {
    "convert_map_key": [
      [],
      "// SPEC \nmethod convert_map_key(inputs: map<nat, bool>, f: nat->nat) returns(r:map<nat, bool>)\n  requires forall n1: nat, n2: nat :: n1 != n2 ==> f(n1) != f(n2)\n  ensures forall k :: k in inputs <==> f(k) in r\n  ensures forall k :: k in inputs ==> r[f(k)] == inputs[k]\n{\n}\n",
      "method"
    ]
  },
  "placeholder_mapping": {
    "//ATOM_PLACEHOLDER_convert_map_key": "convert_map_key"
  }
}