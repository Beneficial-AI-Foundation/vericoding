num_iterations: 8
success: true
verification_error: "note: automatically chose triggers for this expression:\n  -->\
  \ /tmp/tmprwre_z92.rs:33:5\n   |\n33 | /     exists|subseq: Seq<i32>| {\n34 | |\
  \         is_subsequence_of(subseq, nums) &&\n35 | |         is_strictly_increasing(subseq)\
  \ &&\n36 | |         subseq.len() == result\n...  |\n40 | |         is_subsequence_of(subseq,\
  \ nums) && is_strictly_increasing(subseq) \n41 | |         ==> subseq.len() <= result\n\
  \   | |__________________________________^\n\nnote:   trigger 1 of 2:\n  --> /tmp/tmprwre_z92.rs:35:9\n\
  \   |\n35 |         is_strictly_increasing(subseq) &&\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\
  \nnote:   trigger 2 of 2:\n  --> /tmp/tmprwre_z92.rs:36:9\n   |\n36 |         subseq.len()\
  \ == result\n   |         ^^^^^^^^^^^^\n\nnote: Verus printed one or more automatically\
  \ chosen quantifier triggers\n      because it had low confidence in the chosen\
  \ triggers.\n      To suppress these messages, do one of the following:\n      \
  \  (1) manually annotate a single desired trigger using #[trigger]\n           \
  \ (example: forall|i: int, j: int| f(i) && #[trigger] g(i) && #[trigger] h(j)),\n\
  \        (2) manually annotate multiple desired triggers using #![trigger ...]\n\
  \            (example: forall|i: int| #![trigger f(i)] #![trigger g(i)] f(i) &&\
  \ g(i)),\n        (3) accept the automatically chosen trigger using #![auto]\n \
  \           (example: forall|i: int, j: int| #![auto] f(i) && g(i) && h(j))\n  \
  \      (4) use the --triggers-silent command-line option to suppress all printing\
  \ of triggers.\n      (Note: triggers are used by the underlying SMT theorem prover\
  \ to instantiate quantifiers;\n      the theorem prover instantiates a quantifier\
  \ whenever some expression matches the\n      pattern specified by one of the quantifier's\
  \ triggers.)\n  --> /tmp/tmprwre_z92.rs:33:5\n   |\n33 | /     exists|subseq: Seq<i32>|\
  \ {\n34 | |         is_subsequence_of(subseq, nums) &&\n35 | |         is_strictly_increasing(subseq)\
  \ &&\n36 | |         subseq.len() == result\n...  |\n40 | |         is_subsequence_of(subseq,\
  \ nums) && is_strictly_increasing(subseq) \n41 | |         ==> subseq.len() <= result\n\
  \   | |__________________________________^\n\n"
verification_output: 'verification results:: 6 verified, 0 errors

  '
