{
  "id": "verina_basic_11",
  "description": "-----Description-----  \nThis task requires writing a Lean 4 method that extracts the last digit of a given non-negative integer. The method should return the last digit, which is obtained by computing the remainder when the number is divided by 10. The result must always be between 0 and 9.\n\n-----Input-----  \nThe input consists of a single value:  \nn: A non-negative integer.\n\n-----Output-----  \nThe output is an integer:  \nReturns the last digit of the input number, ensuring that the digit lies within the range 0 to 9.\n\n-----Note-----  \nIt is assumed that the input number n is non-negative.",
  "lean_code": "-- !benchmark @start import type=solution\n\n-- !benchmark @end import\n\n-- !benchmark @start solution_aux\n\n-- !benchmark @end solution_aux\n\n-- !benchmark @start precond_aux\n\n-- !benchmark @end precond_aux\n\n@[reducible, simp]\ndef lastDigit_precond (n : Nat) : Prop :=\n  -- !benchmark @start precond\n  True\n  -- !benchmark @end precond\n\n\n-- !benchmark @start code_aux\n\n-- !benchmark @end code_aux\n\n\ndef lastDigit (n : Nat) (h_precond : lastDigit_precond (n)) : Nat :=\n  -- !benchmark @start code\n  n % 10\n  -- !benchmark @end code\n\n\n-- !benchmark @start postcond_aux\n\n-- !benchmark @end postcond_aux\n\n\n@[reducible, simp]\ndef lastDigit_postcond (n : Nat) (result: Nat) (h_precond : lastDigit_precond (n)) :=\n  -- !benchmark @start postcond\n  (0 \u2264 result \u2227 result < 10) \u2227\n  (n % 10 - result = 0 \u2227 result - n % 10 = 0)\n  -- !benchmark @end postcond\n\n\n-- !benchmark @start proof_aux\n\n-- !benchmark @end proof_aux\n\n\ntheorem lastDigit_spec_satisfied (n: Nat) (h_precond : lastDigit_precond (n)) :\n    lastDigit_postcond (n) (lastDigit (n) h_precond) h_precond := by\n  -- !benchmark @start proof\n  unfold lastDigit lastDigit_postcond\n  constructor\n  \u00b7 constructor\n    \u00b7 simp\n    \u00b7 exact Nat.mod_lt n (by decide)\n  \u00b7 simp\n  -- !benchmark @end proof\n",
  "signature": {
    "name": "lastDigit",
    "parameters": {
      "param_name": [
        "n"
      ],
      "param_type": [
        "Nat"
      ]
    },
    "return_type": "Nat"
  },
  "metadata": {
    "upstream": {
      "name": "dafny-synthesis",
      "link": "https://github.com/Mondego/dafny-synthesis",
      "task_id": "task_id_435",
      "student_id": null
    }
  },
  "tests": {
    "input": [
      "{\"n\": 123}",
      "{\"n\": 0}",
      "{\"n\": 987654321}",
      "{\"n\": 10}",
      "{\"n\": 999}",
      "{\"n\": 45}",
      "{\"n\": 100}",
      "{\"n\": 5}"
    ],
    "expected": [
      [
        "3"
      ],
      [
        "0"
      ],
      [
        "1"
      ],
      [
        "0"
      ],
      [
        "9"
      ],
      [
        "5"
      ],
      [
        "0"
      ],
      [
        "5"
      ]
    ],
    "unexpected": [
      [
        "2",
        "1",
        "23"
      ],
      [
        "10",
        "5",
        "9"
      ],
      [
        "9",
        "0",
        "2"
      ],
      [
        "1",
        "10",
        "5"
      ],
      [
        "8",
        "99",
        "0"
      ],
      [
        "4",
        "0",
        "55"
      ],
      [
        "1",
        "10",
        "5"
      ],
      [
        "4",
        "0",
        "6"
      ]
    ]
  },
  "reject_inputs": {
    "input": []
  },
  "difficulty": "basic"
}