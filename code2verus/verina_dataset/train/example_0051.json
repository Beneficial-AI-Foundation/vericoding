{
  "id": "verina_basic_7",
  "description": "-----Description----- \nThis task requires writing a Lean 4 method that computes the sum of the squares of the first n odd natural numbers. The result should match the formula: (n * (2 * n - 1) * (2 * n + 1)) / 3.\n\n-----Input-----\nThe input consists of:\nn: A natural number representing the count of odd natural numbers to consider (n should be non-negative).\n\n-----Output-----\nThe output is a natural number:\nReturns the sum of the squares of the first n odd natural numbers, as defined by the formula: (n * (2 * n - 1) * (2 * n + 1)) / 3.",
  "lean_code": "-- !benchmark @start import type=solution\n\n-- !benchmark @end import\n\n-- !benchmark @start solution_aux\n\n-- !benchmark @end solution_aux\n\n-- !benchmark @start precond_aux\n\n-- !benchmark @end precond_aux\n\n@[reducible, simp]\ndef sumOfSquaresOfFirstNOddNumbers_precond (n : Nat) : Prop :=\n  -- !benchmark @start precond\n  True\n  -- !benchmark @end precond\n\n\n-- !benchmark @start code_aux\n\n-- !benchmark @end code_aux\n\n\ndef sumOfSquaresOfFirstNOddNumbers (n : Nat) (h_precond : sumOfSquaresOfFirstNOddNumbers_precond (n)) : Nat :=\n  -- !benchmark @start code\n  let rec loop (k : Nat) (sum : Nat) : Nat :=\n    if k = 0 then\n      sum\n    else\n      loop (k - 1) (sum + (2 * k - 1) * (2 * k - 1))\n  loop n 0\n  -- !benchmark @end code\n\n\n-- !benchmark @start postcond_aux\n\n-- !benchmark @end postcond_aux\n\n\n@[reducible, simp]\ndef sumOfSquaresOfFirstNOddNumbers_postcond (n : Nat) (result: Nat) (h_precond : sumOfSquaresOfFirstNOddNumbers_precond (n)) :=\n  -- !benchmark @start postcond\n  result - (n * (2 * n - 1) * (2 * n + 1)) / 3 = 0 \u2227\n  (n * (2 * n - 1) * (2 * n + 1)) / 3 - result = 0\n  -- !benchmark @end postcond\n\n\n-- !benchmark @start proof_aux\n\n-- !benchmark @end proof_aux\n\n\ntheorem sumOfSquaresOfFirstNOddNumbers_spec_satisfied (n: Nat) (h_precond : sumOfSquaresOfFirstNOddNumbers_precond (n)) :\n    sumOfSquaresOfFirstNOddNumbers_postcond (n) (sumOfSquaresOfFirstNOddNumbers (n) h_precond) h_precond := by\n  -- !benchmark @start proof\n  sorry\n  -- !benchmark @end proof\n",
  "signature": {
    "name": "sumOfSquaresOfFirstNOddNumbers",
    "parameters": {
      "param_name": [
        "n"
      ],
      "param_type": [
        "Nat"
      ]
    },
    "return_type": "Nat"
  },
  "metadata": {
    "upstream": {
      "name": "dafny-synthesis",
      "link": "https://github.com/Mondego/dafny-synthesis",
      "task_id": "task_id_267",
      "student_id": null
    }
  },
  "tests": {
    "input": [
      "{\"n\": 0}",
      "{\"n\": 1}",
      "{\"n\": 2}",
      "{\"n\": 3}",
      "{\"n\": 4}",
      "{\"n\": 5}",
      "{\"n\": 10}"
    ],
    "expected": [
      [
        "0"
      ],
      [
        "1"
      ],
      [
        "10"
      ],
      [
        "35"
      ],
      [
        "84"
      ],
      [
        "165"
      ],
      [
        "1330"
      ]
    ],
    "unexpected": [
      [
        "1",
        "2"
      ],
      [
        "0",
        "2",
        "3"
      ],
      [
        "9",
        "11",
        "12"
      ],
      [
        "30",
        "34",
        "36"
      ],
      [
        "80",
        "85",
        "90"
      ],
      [
        "160",
        "166",
        "170"
      ],
      [
        "1320",
        "1331",
        "1340"
      ]
    ]
  },
  "reject_inputs": {
    "input": []
  },
  "difficulty": "basic"
}