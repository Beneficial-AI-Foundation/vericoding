{
  "id": "verina_basic_5",
  "description": "-----Description----- \nThis task requires writing a Lean 4 method that multiplies two integers. The method should return the product of the two input numbers.\n\n-----Input-----\nThe input consists of:\na: The first integer.\nb: The second integer.\n\n-----Output-----\nThe output is an integer:\nReturns the product of the two input integers (a * b).",
  "lean_code": "-- !benchmark @start import type=solution\n\n-- !benchmark @end import\n\n-- !benchmark @start solution_aux\n\n-- !benchmark @end solution_aux\n\n-- !benchmark @start precond_aux\n\n-- !benchmark @end precond_aux\n\n@[reducible, simp]\ndef multiply_precond (a : Int) (b : Int) : Prop :=\n  -- !benchmark @start precond\n  True\n  -- !benchmark @end precond\n\n\n-- !benchmark @start code_aux\n\n-- !benchmark @end code_aux\n\n\ndef multiply (a : Int) (b : Int) (h_precond : multiply_precond (a) (b)) : Int :=\n  -- !benchmark @start code\n  a * b\n  -- !benchmark @end code\n\n\n-- !benchmark @start postcond_aux\n\n-- !benchmark @end postcond_aux\n\n\n@[reducible, simp]\ndef multiply_postcond (a : Int) (b : Int) (result: Int) (h_precond : multiply_precond (a) (b)) :=\n  -- !benchmark @start postcond\n  result - a * b = 0 \u2227 a * b - result = 0\n  -- !benchmark @end postcond\n\n\n-- !benchmark @start proof_aux\n\n-- !benchmark @end proof_aux\n\n\ntheorem multiply_spec_satisfied (a: Int) (b: Int) (h_precond : multiply_precond (a) (b)) :\n    multiply_postcond (a) (b) (multiply (a) (b) h_precond) h_precond := by\n  -- !benchmark @start proof\n  unfold multiply multiply_postcond\n  simp\n  -- !benchmark @end proof\n",
  "signature": {
    "name": "multiply",
    "parameters": {
      "param_name": [
        "a",
        "b"
      ],
      "param_type": [
        "Int",
        "Int"
      ]
    },
    "return_type": "Int"
  },
  "metadata": {
    "upstream": {
      "name": "dafny-synthesis",
      "link": "https://github.com/Mondego/dafny-synthesis",
      "task_id": "task_id_127",
      "student_id": null
    }
  },
  "tests": {
    "input": [
      "{\"a\": 3, \"b\": 4}",
      "{\"a\": 3, \"b\": -4}",
      "{\"a\": -3, \"b\": 4}",
      "{\"a\": -3, \"b\": -4}",
      "{\"a\": 0, \"b\": 5}",
      "{\"a\": 5, \"b\": 0}",
      "{\"a\": 0, \"b\": 0}"
    ],
    "expected": [
      [
        "12"
      ],
      [
        "-12"
      ],
      [
        "-12"
      ],
      [
        "12"
      ],
      [
        "0"
      ],
      [
        "0"
      ],
      [
        "0"
      ]
    ],
    "unexpected": [
      [
        "0",
        "11",
        "15"
      ],
      [
        "0",
        "-11",
        "12"
      ],
      [
        "0",
        "-11",
        "12"
      ],
      [
        "0",
        "11",
        "-12"
      ],
      [
        "1",
        "-1",
        "5"
      ],
      [
        "1",
        "-1",
        "5"
      ],
      [
        "1",
        "-1",
        "5"
      ]
    ]
  },
  "reject_inputs": {
    "input": []
  },
  "difficulty": "basic"
}