{
  "id": "verina_advanced_65",
  "description": "-----Description-----\nThis task requires writing a Lean 4 method that reverses a given string. The method should return a new string which consists of the characters of the input string in reverse order.\n\n-----Input-----\nThe input consists of:\ns: A string (which may be empty).\n\n-----Output-----\nThe output is a string:\nReturns a string where the characters are in reverse order from the original input.\n\n",
  "lean_code": "-- !benchmark @start import type=solution\n\n-- !benchmark @end import\n\n-- !benchmark @start solution_aux\n\n-- !benchmark @end solution_aux\n\n-- !benchmark @start precond_aux\n\n-- !benchmark @end precond_aux\n@[reducible]\ndef reverseString_precond (s : String) : Prop :=\n  -- !benchmark @start precond\n  True\n  -- !benchmark @end precond\n\n\n-- !benchmark @start code_aux\n\n-- !benchmark @end code_aux\n\n\ndef reverseString (s : String) (h_precond : reverseString_precond (s)) : String :=\n  -- !benchmark @start code\n  let rec reverseAux (chars : List Char) (acc : List Char) : List Char :=\n    match chars with\n    | [] => acc\n    | h::t => reverseAux t (h::acc)\n  String.mk (reverseAux (s.toList) [])\n  -- !benchmark @end code\n\n\n-- !benchmark @start postcond_aux\n\n-- !benchmark @end postcond_aux\n\n\n@[reducible]\ndef reverseString_postcond (s : String) (result: String) (h_precond : reverseString_precond (s)) : Prop :=\n  -- !benchmark @start postcond\n  result.length = s.length \u2227 result.toList = s.toList.reverse\n  -- !benchmark @end postcond\n\n\n-- !benchmark @start proof_aux\n\n-- !benchmark @end proof_aux\n\n\ntheorem reverseString_spec_satisfied (s: String) (h_precond : reverseString_precond (s)) :\n    reverseString_postcond (s) (reverseString (s) h_precond) h_precond := by\n  -- !benchmark @start proof\n  sorry\n  -- !benchmark @end proof\n\n\n",
  "signature": {
    "name": "reverseString",
    "parameters": {
      "param_name": [
        "s"
      ],
      "param_type": [
        "String"
      ]
    },
    "return_type": "String"
  },
  "metadata": {
    "upstream": {
      "name": "lab_assignment",
      "link": "https://leetcode.com/problems/reverse-string/",
      "task_id": "lab_reverseString_325766147",
      "student_id": [
        33
      ]
    }
  },
  "tests": {
    "input": [
      "{\"s\": \"hello\"}",
      "{\"s\": \"a\"}",
      "{\"s\": \"\"}",
      "{\"s\": \"racecar\"}",
      "{\"s\": \"Lean\"}"
    ],
    "expected": [
      [
        "olleh"
      ],
      [
        "a"
      ],
      [
        ""
      ],
      [
        "racecar"
      ],
      [
        "naeL"
      ]
    ],
    "unexpected": [
      [
        "hello",
        "helo",
        "hell"
      ],
      [
        "",
        "aa"
      ],
      [
        " ",
        "a"
      ],
      [
        "rceacar",
        "raeccar"
      ],
      [
        "Lean",
        "aenL"
      ]
    ]
  },
  "reject_inputs": {
    "input": []
  },
  "difficulty": "advanced"
}