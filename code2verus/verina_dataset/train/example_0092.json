{
  "id": "verina_advanced_6",
  "description": "-----Description----- \nThis task requires writing a Lean 4 method that determines whether a given string contains all 5 English vowels: a, e, i, o, u.\n\nThe check is case-insensitive, meaning that both uppercase and lowercase vowels count.\n\n-----Input-----\nThe input consists of a string:\ns: A string of alphabetic characters (may include uppercase and lowercase)\n\n-----Output-----\nThe output is true or false:\nReturns true if the input string contains all 5 vowels (a, e, i, o, u), false otherwise.\n\n",
  "lean_code": "-- !benchmark @start import type=solution\n\n-- !benchmark @end import\n\n-- !benchmark @start solution_aux\ndef toLower (c : Char) : Char :=\n  if 'A' \u2264 c && c \u2264 'Z' then\n    Char.ofNat (Char.toNat c + 32)\n  else\n    c\n\ndef normalize_str (s : String) : List Char :=\n  s.data.map toLower\n-- !benchmark @end solution_aux\n\n-- !benchmark @start precond_aux\n\n-- !benchmark @end precond_aux\n@[reducible]\ndef allVowels_precond (s : String) : Prop :=\n  -- !benchmark @start precond\n  True\n  -- !benchmark @end precond\n\n\n-- !benchmark @start code_aux\n\n-- !benchmark @end code_aux\n\n\ndef allVowels (s : String) (h_precond : allVowels_precond (s)) : Bool :=\n  -- !benchmark @start code\n  let chars := normalize_str s\n  let vowelSet := ['a', 'e', 'i', 'o', 'u']\n  vowelSet.all (fun v => chars.contains v)\n  -- !benchmark @end code\n\n\n-- !benchmark @start postcond_aux\n\n-- !benchmark @end postcond_aux\n\n\n@[reducible]\ndef allVowels_postcond (s : String) (result: Bool) (h_precond : allVowels_precond (s)) : Prop :=\n  -- !benchmark @start postcond\n  let chars := normalize_str s\n  (result \u2194 List.all ['a', 'e', 'i', 'o', 'u'] (fun v => chars.contains v))\n  -- !benchmark @end postcond\n\n\n-- !benchmark @start proof_aux\n\n-- !benchmark @end proof_aux\n\n\ntheorem allVowels_spec_satisfied (s: String) (h_precond : allVowels_precond (s)) :\n    allVowels_postcond (s) (allVowels (s) h_precond) h_precond := by\n  -- !benchmark @start proof\n  sorry\n  -- !benchmark @end proof\n\n\n",
  "signature": {
    "name": "allVowels",
    "parameters": {
      "param_name": [
        "s"
      ],
      "param_type": [
        "String"
      ]
    },
    "return_type": "Bool"
  },
  "metadata": {
    "upstream": {
      "name": "lab_assignment",
      "link": "https://leetcode.com/problems/check-if-the-sentence-is-prangram/",
      "task_id": "lab_allVowels_325657053",
      "student_id": [
        4
      ]
    }
  },
  "tests": {
    "input": [
      "{\"s\": \"education\"}",
      "{\"s\": \"education123\"}",
      "{\"s\": \"AEIOU\"}",
      "{\"s\": \"hello\"}",
      "{\"s\": \"\"}",
      "{\"s\": \"apple orange union\"}"
    ],
    "expected": [
      [
        "True"
      ],
      [
        "True"
      ],
      [
        "True"
      ],
      [
        "False"
      ],
      [
        "False"
      ],
      [
        "True"
      ]
    ],
    "unexpected": [
      [
        "False"
      ],
      [
        "False"
      ],
      [
        "False"
      ],
      [
        "True"
      ],
      [
        "True"
      ],
      [
        "False"
      ]
    ]
  },
  "reject_inputs": {
    "input": []
  },
  "difficulty": "advanced"
}