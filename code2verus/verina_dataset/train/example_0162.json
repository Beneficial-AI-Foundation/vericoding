{
  "id": "verina_basic_3",
  "description": "-----Description----- \nThis task requires writing a Lean 4 method that determines whether a given integer is divisible by 11. The method should return true if the number is divisible by 11 and false otherwise.\n\n-----Input-----\nThe input consists of:\nn: An integer to check for divisibility by 11.\n\n-----Output-----\nThe output is a Boolean value:\nReturns true if the input number is divisible by 11.\nReturns false if the input number is not divisible by 11.",
  "lean_code": "-- !benchmark @start import type=solution\nimport Mathlib\n-- !benchmark @end import\n\n-- !benchmark @start solution_aux\n\n-- !benchmark @end solution_aux\n\n-- !benchmark @start precond_aux\n\n-- !benchmark @end precond_aux\n\n@[reducible, simp]\ndef isDivisibleBy11_precond (n : Int) : Prop :=\n  -- !benchmark @start precond\n  True\n  -- !benchmark @end precond\n\n\n-- !benchmark @start code_aux\n\n-- !benchmark @end code_aux\n\n\ndef isDivisibleBy11 (n : Int) (h_precond : isDivisibleBy11_precond (n)) : Bool :=\n  -- !benchmark @start code\n  n % 11 == 0\n  -- !benchmark @end code\n\n\n-- !benchmark @start postcond_aux\n\n-- !benchmark @end postcond_aux\n\n\n@[reducible, simp]\ndef isDivisibleBy11_postcond (n : Int) (result: Bool) (h_precond : isDivisibleBy11_precond (n)) :=\n  -- !benchmark @start postcond\n  (result \u2192 (\u2203 k : Int, n = 11 * k)) \u2227 (\u00ac result \u2192 (\u2200 k : Int, \u00ac n = 11 * k))\n  -- !benchmark @end postcond\n\n\n-- !benchmark @start proof_aux\n\n-- !benchmark @end proof_aux\n\n\ntheorem isDivisibleBy11_spec_satisfied (n: Int) (h_precond : isDivisibleBy11_precond (n)) :\n    isDivisibleBy11_postcond (n) (isDivisibleBy11 (n) h_precond) h_precond := by\n  -- !benchmark @start proof\n  unfold isDivisibleBy11 isDivisibleBy11_postcond\n  constructor\n  \u00b7 simp_all\n    exact fun a => a\n  \u00b7 apply Not.imp_symm\n    rw [not_forall_not]\n    intro h\n    rw [beq_iff_eq]\n    exact Int.emod_eq_zero_of_dvd h\n  -- !benchmark @end proof\n",
  "signature": {
    "name": "isDivisibleBy11",
    "parameters": {
      "param_name": [
        "n"
      ],
      "param_type": [
        "Int"
      ]
    },
    "return_type": "Bool"
  },
  "metadata": {
    "upstream": {
      "name": "dafny-synthesis",
      "link": "https://github.com/Mondego/dafny-synthesis",
      "task_id": "task_id_77",
      "student_id": null
    }
  },
  "tests": {
    "input": [
      "{\"n\": 0}",
      "{\"n\": 11}",
      "{\"n\": 22}",
      "{\"n\": 23}",
      "{\"n\": 33}",
      "{\"n\": 44}",
      "{\"n\": -11}",
      "{\"n\": -22}",
      "{\"n\": 1}",
      "{\"n\": -1}",
      "{\"n\": 121}",
      "{\"n\": 123}"
    ],
    "expected": [
      [
        "True"
      ],
      [
        "True"
      ],
      [
        "True"
      ],
      [
        "False"
      ],
      [
        "True"
      ],
      [
        "True"
      ],
      [
        "True"
      ],
      [
        "True"
      ],
      [
        "False"
      ],
      [
        "False"
      ],
      [
        "True"
      ],
      [
        "False"
      ]
    ],
    "unexpected": [
      [
        "False"
      ],
      [
        "False"
      ],
      [
        "False"
      ],
      [
        "True"
      ],
      [
        "False"
      ],
      [
        "False"
      ],
      [
        "False"
      ],
      [
        "False"
      ],
      [
        "True"
      ],
      [
        "True"
      ],
      [
        "False"
      ],
      [
        "True"
      ]
    ]
  },
  "reject_inputs": {
    "input": []
  },
  "difficulty": "basic"
}