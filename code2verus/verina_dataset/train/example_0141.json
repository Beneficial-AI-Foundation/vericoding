{
  "id": "verina_basic_42",
  "description": "-----Description-----  \nThis task requires writing a Lean 4 method that counts the number of digit characters within a given string. A digit is any character between '0' and '9'. The method should determine how many such digit characters appear in the input.\n\n-----Input-----  \nThe input consists of:  \ns: A string.\n\n-----Output-----  \nThe output is a natural number (Nat):  \nReturns a non-negative count representing the number of digit characters found in the input string.\n\n-----Note-----  \nThere are no additional preconditions; the method works for any provided string.",
  "lean_code": "-- !benchmark @start import type=solution\n\n-- !benchmark @end import\n\n-- !benchmark @start solution_aux\ndef isDigit (c : Char) : Bool :=\n  '0' \u2264 c \u2227 c \u2264 '9'\n-- !benchmark @end solution_aux\n\n-- !benchmark @start precond_aux\n\n-- !benchmark @end precond_aux\n\n@[reducible, simp]\ndef countDigits_precond (s : String) : Prop :=\n  -- !benchmark @start precond\n  True\n  -- !benchmark @end precond\n\n\n-- !benchmark @start code_aux\n\n-- !benchmark @end code_aux\n\n\ndef countDigits (s : String) (h_precond : countDigits_precond (s)) : Nat :=\n  -- !benchmark @start code\n  List.length (List.filter isDigit s.toList)\n  -- !benchmark @end code\n\n\n-- !benchmark @start postcond_aux\n\n-- !benchmark @end postcond_aux\n\n\n@[reducible, simp]\ndef countDigits_postcond (s : String) (result: Nat) (h_precond : countDigits_precond (s)) :=\n  -- !benchmark @start postcond\n  result - List.length (List.filter isDigit s.toList) = 0 \u2227\n  List.length (List.filter isDigit s.toList) - result = 0\n  -- !benchmark @end postcond\n\n\n-- !benchmark @start proof_aux\n\n-- !benchmark @end proof_aux\n\n\ntheorem countDigits_spec_satisfied (s: String) (h_precond : countDigits_precond (s)) :\n    countDigits_postcond (s) (countDigits (s) h_precond) h_precond := by\n  -- !benchmark @start proof\n  unfold countDigits countDigits_postcond\n  simp\n  -- !benchmark @end proof\n",
  "signature": {
    "name": "countDigits",
    "parameters": {
      "param_name": [
        "s"
      ],
      "param_type": [
        "String"
      ]
    },
    "return_type": "Nat"
  },
  "metadata": {
    "upstream": {
      "name": "dafny-synthesis",
      "link": "https://github.com/Mondego/dafny-synthesis",
      "task_id": "task_id_764",
      "student_id": null
    }
  },
  "tests": {
    "input": [
      "{\"s\": \"123abc456\"}",
      "{\"s\": \"no digits here!\"}",
      "{\"s\": \"1234567890\"}",
      "{\"s\": \"\"}",
      "{\"s\": \"a1b2c3\"}",
      "{\"s\": \"0\"}",
      "{\"s\": \"abc\"}"
    ],
    "expected": [
      [
        "6"
      ],
      [
        "0"
      ],
      [
        "10"
      ],
      [
        "0"
      ],
      [
        "3"
      ],
      [
        "1"
      ],
      [
        "0"
      ]
    ],
    "unexpected": [
      [
        "5",
        "7",
        "0"
      ],
      [
        "1",
        "2",
        "3"
      ],
      [
        "9",
        "11",
        "0"
      ],
      [
        "1",
        "2",
        "10"
      ],
      [
        "2",
        "4",
        "5"
      ],
      [
        "0",
        "2",
        "10"
      ],
      [
        "1",
        "8",
        "9"
      ]
    ]
  },
  "reject_inputs": {
    "input": []
  },
  "difficulty": "basic"
}