{
  "id": "verina_advanced_40",
  "description": "-----Description-----\nThis task requires writing a Lean 4 function that returns the maximum element from a non-empty list of natural numbers.\n\n-----Input-----\nThe input consists of:\nlst: a non-empty list of natural numbers.\n\n-----Output-----\nThe output is:\nA natural number representing the largest element in the list.\n\n",
  "lean_code": "-- !benchmark @start import type=solution\n\n-- !benchmark @end import\n\n-- !benchmark @start solution_aux\n\n-- !benchmark @end solution_aux\n\n-- !benchmark @start precond_aux\n\n-- !benchmark @end precond_aux\n@[reducible]\ndef maxOfList_precond (lst : List Nat) : Prop :=\n  -- !benchmark @start precond\n  lst \u2260 []  -- Ensure the list is non-empty\n  -- !benchmark @end precond\n\n\n-- !benchmark @start code_aux\n\n-- !benchmark @end code_aux\n\n\ndef maxOfList (lst : List Nat) (h_precond : maxOfList_precond (lst)) : Nat :=\n  -- !benchmark @start code\n  let rec helper (lst : List Nat) : Nat :=\n    match lst with\n    | [] => 0  -- technically shouldn't happen if input is always non-empty\n    | [x] => x\n    | x :: xs =>\n      let maxTail := helper xs\n      if x > maxTail then x else maxTail\n  helper lst\n  -- !benchmark @end code\n\n\n-- !benchmark @start postcond_aux\n\n-- !benchmark @end postcond_aux\n\n\n@[reducible]\ndef maxOfList_postcond (lst : List Nat) (result: Nat) (h_precond : maxOfList_precond (lst)) : Prop :=\n  -- !benchmark @start postcond\n  result \u2208 lst \u2227 \u2200 x \u2208 lst, x \u2264 result\n  -- !benchmark @end postcond\n\n\n-- !benchmark @start proof_aux\n\n-- !benchmark @end proof_aux\n\n\ntheorem maxOfList_spec_satisfied (lst: List Nat) (h_precond : maxOfList_precond (lst)) :\n    maxOfList_postcond (lst) (maxOfList (lst) h_precond) h_precond := by\n  -- !benchmark @start proof\n  sorry\n  -- !benchmark @end proof\n\n\n",
  "signature": {
    "name": "maxOfList",
    "parameters": {
      "param_name": [
        "lst"
      ],
      "param_type": [
        "List Nat"
      ]
    },
    "return_type": "Nat"
  },
  "metadata": {
    "upstream": {
      "name": "lab_assignment",
      "link": "Original",
      "task_id": "lab_maxOfList_325098964",
      "student_id": [
        32
      ]
    }
  },
  "tests": {
    "input": [
      "{\"lst\": \"[1, 2, 3]\"}",
      "{\"lst\": \"[5, 5, 5]\"}",
      "{\"lst\": \"[10, 1, 9]\"}",
      "{\"lst\": \"[7]\"}",
      "{\"lst\": \"[0, 0, 0, 0]\"}"
    ],
    "expected": [
      [
        "3"
      ],
      [
        "5"
      ],
      [
        "10"
      ],
      [
        "7"
      ],
      [
        "0"
      ]
    ],
    "unexpected": [
      [
        "2",
        "1",
        "0"
      ],
      [
        "4",
        "0"
      ],
      [
        "1",
        "9"
      ],
      [
        "0",
        "6"
      ],
      [
        "1"
      ]
    ]
  },
  "reject_inputs": {
    "input": [
      "{'lst': '[]'}"
    ]
  },
  "difficulty": "advanced"
}