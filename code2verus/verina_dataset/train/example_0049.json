{
  "id": "verina_advanced_66",
  "description": "-----Description-----\nGiven an input string \"words_str\", this task requires writing a Lean 4 function that reverses the order of its words. A word is defined as a contiguous sequence of non-space characters. The function must remove any extra spaces so that the output string contains words separated by a single space and has no leading or trailing spaces. The characters within each word must stay the same as the original input.\n\n-----Input-----\nwords_str: A string that may contain leading, trailing, or multiple spaces between words.\n\n-----Output-----\nA string with the words from the input reversed, where words are separated by a single space, with no extra spaces at the beginning or end.\n\n",
  "lean_code": "-- !benchmark @start import type=solution\n\n-- !benchmark @end import\n\n-- !benchmark @start solution_aux\n\n-- !benchmark @end solution_aux\n\n-- !benchmark @start precond_aux\n\n-- !benchmark @end precond_aux\n@[reducible]\ndef reverseWords_precond (words_str : String) : Prop :=\n  -- !benchmark @start precond\n  True\n  -- !benchmark @end precond\n\n\n-- !benchmark @start code_aux\n\n-- !benchmark @end code_aux\n\n\ndef reverseWords (words_str : String) (h_precond : reverseWords_precond (words_str)) : String :=\n  -- !benchmark @start code\n  let rawWords : List String := words_str.splitOn \" \"\n  let rec filterNonEmpty (words : List String) : List String :=\n    match words with\n    | [] => []\n    | h :: t =>\n      if h = \"\" then\n        filterNonEmpty t\n      else\n        h :: filterNonEmpty t\n  let filteredWords : List String := filterNonEmpty rawWords\n  let revWords : List String := filteredWords.reverse\n  let rec joinWithSpace (words : List String) : String :=\n    match words with\n    | [] => \"\"\n    | [w] => w\n    | h :: t =>\n      -- Append the current word with a space and continue joining the rest.\n      h ++ \" \" ++ joinWithSpace t\n  let result : String := joinWithSpace revWords\n  result\n  -- !benchmark @end code\n\n\n-- !benchmark @start postcond_aux\n\n-- !benchmark @end postcond_aux\n\n\n@[reducible]\ndef reverseWords_postcond (words_str : String) (result: String) (h_precond : reverseWords_precond (words_str)) : Prop :=\n  -- !benchmark @start postcond\n  \u2203 words : List String,\n    (words = (words_str.splitOn \" \").filter (fun w => w \u2260 \"\")) \u2227\n    result = String.intercalate \" \" (words.reverse)\n  -- !benchmark @end postcond\n\n\n-- !benchmark @start proof_aux\n\n-- !benchmark @end proof_aux\n\n\ntheorem reverseWords_spec_satisfied (words_str: String) (h_precond : reverseWords_precond (words_str)) :\n    reverseWords_postcond (words_str) (reverseWords (words_str) h_precond) h_precond := by\n  -- !benchmark @start proof\n  sorry\n  -- !benchmark @end proof\n\n\n",
  "signature": {
    "name": "reverseWords",
    "parameters": {
      "param_name": [
        "words_str"
      ],
      "param_type": [
        "String"
      ]
    },
    "return_type": "String"
  },
  "metadata": {
    "upstream": {
      "name": "lab_assignment",
      "link": "https://leetcode.com/problems/reverse-words-in-a-string/description/",
      "task_id": "lab_reverseWords_324895224",
      "student_id": [
        48
      ]
    }
  },
  "tests": {
    "input": [
      "{\"words_str\": \"the sky is blue\"}",
      "{\"words_str\": \"  hello world  \"}",
      "{\"words_str\": \"a good   example\"}",
      "{\"words_str\": \"  Bob    Loves  Alice   \"}",
      "{\"words_str\": \"this lab is interesting\"}"
    ],
    "expected": [
      [
        "blue is sky the"
      ],
      [
        "world hello"
      ],
      [
        "example good a"
      ],
      [
        "Alice Loves Bob"
      ],
      [
        "interesting is lab this"
      ]
    ],
    "unexpected": [
      [
        "the sky is blue",
        "sky the blue is"
      ],
      [
        "hello world",
        "worldhello"
      ],
      [
        "a good example",
        "example a good"
      ],
      [
        "Bob Loves Alice",
        "Alice Loves Bob "
      ],
      [
        "gnitseretni si bal siht"
      ]
    ]
  },
  "reject_inputs": {
    "input": []
  },
  "difficulty": "advanced"
}