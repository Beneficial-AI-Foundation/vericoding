{
  "bn_spec{1:Add}_atoms{11,13,29,38,40,41,46,30}.dfy": {
    "success": true,
    "num_iterations": 12,
    "verification_output": "verification results:: 10 verified, 0 errors\n",
    "verification_error": ""
  },
  "bn_spec{27:Mul}_atoms{1,11,31,13,30,40,leftShift}.dfy": {
    "success": true,
    "num_iterations": 9,
    "verification_output": "verification results:: 14 verified, 0 errors\n",
    "verification_error": ""
  },
  "bn_spec{1:Add}_atoms{2,11,40,41,46}.dfy": {
    "success": false,
    "num_iterations": 12,
    "verification_output": "verification results:: 4 verified, 1 errors\n",
    "verification_error": "error: postcondition not satisfied\n  --> /tmp/tmpekwpmsm7.rs:78:13\n   |\n75 |   proof fn add_aux_top(x: Seq<char>, y: Seq<char>, old_sb: Seq<char>, sb: Seq<char>, old_i: int,\n   |  _______-\n76 | |                      old_j: int, i: int, j: int, carry: nat, bit_x: nat, bit_y: nat, digit: nat, sum: nat, old_carry: nat)\n   | |__________________________________________________________________________________________________________________________- at the end of the function body\n77 |       requires add_aux_pred(x, y, old_sb, sb, old_i, old_j, i, j, carry, bit_x, bit_y, digit, sum, old_carry)\n78 |       ensures str2int(old_sb) +\n   |  _____________^\n79 | |           (old_carry * pow2(old_sb.len() as nat)) +\n80 | |           (if old_i >= 0 { str2int(x.subrange(0, old_i + 1)) * pow2(old_sb.len() as nat) } else { 0nat }) +\n81 | |           (if old_j >= 0 { str2int(y.subrange(0, old_j + 1)) * pow2(old_sb.len() as nat) } else { 0nat }) ==\n...  |\n84 | |           (if i >= 0 { str2int(x.subrange(0, i + 1)) * pow2(sb.len() as nat) } else { 0nat }) +\n85 | |           (if j >= 0 { str2int(y.subrange(0, j + 1)) * pow2(sb.len() as nat) } else { 0nat })\n   | |_____________________________________________________________________________________________^ failed this postcondition\n\nerror: aborting due to 1 previous error\n\n"
  },
  "bn_spec{2:AddAuxTop}_atoms{11,31-35,40,46}.dfy": {
    "success": false,
    "num_iterations": 4,
    "verification_output": "verification results:: 8 verified, 1 errors\n",
    "verification_error": "error: postcondition not satisfied\n   --> /tmp/tmpvcq41ft0.rs:122:13\n    |\n119 |   proof fn add_aux_top(x: Seq<char>, y: Seq<char>, old_sb: Seq<char>, sb: Seq<char>, old_i: int,\n    |  _______-\n120 | |                      old_j: int, i: int, j: int, carry: nat, bit_x: nat, bit_y: nat, digit: nat, sum: nat, old_carry: nat)\n    | |__________________________________________________________________________________________________________________________- at the end of the function body\n121 |       requires add_aux_pred(x, y, old_sb, sb, old_i, old_j, i, j, carry, bit_x, bit_y, digit, sum, old_carry)\n122 |       ensures str2int(old_sb) +\n    |  _____________^\n123 | |             (old_carry * pow2(old_sb.len() as nat)) +\n124 | |             (if old_i >= 0 { str2int(x.subrange(0, old_i + 1)) * pow2(old_sb.len() as nat) } else { 0nat }) +\n125 | |             (if old_j >= 0 { str2int(y.subrange(0, old_j + 1)) * pow2(old_sb.len() as nat) } else { 0nat }) ==\n...   |\n128 | |             (if i >= 0 { str2int(x.subrange(0, i + 1)) * pow2(sb.len() as nat) } else { 0nat }) +\n129 | |             (if j >= 0 { str2int(y.subrange(0, j + 1)) * pow2(sb.len() as nat) } else { 0nat })\n    | |_______________________________________________________________________________________________^ failed this postcondition\n\nerror: aborting due to 1 previous error\n\n"
  },
  "bn_spec{27:Mul}_atoms{11,13,29,38,40,41,46,1,30}.dfy": {
    "success": true,
    "num_iterations": 9,
    "verification_output": "verification results:: 16 verified, 0 errors\n",
    "verification_error": ""
  },
  "bn_spec{27:Mul}_atoms{11,40,41,46}.dfy": {
    "success": true,
    "num_iterations": 18,
    "verification_output": "verification results:: 6 verified, 0 errors\n",
    "verification_error": ""
  },
  "bn_spec{40:Str2Int}_atoms{11,46}.dfy": {
    "success": true,
    "num_iterations": 8,
    "verification_output": "verification results:: 3 verified, 0 errors\n",
    "verification_error": ""
  },
  "bn_spec{41:Str2IntLemma}_atoms{11,40,46}.dfy": {
    "success": true,
    "num_iterations": 3,
    "verification_output": "verification results:: 3 verified, 0 errors\n",
    "verification_error": ""
  },
  "bn_spec{4:BitStringDecomposition}_atoms{11,40,46}.dfy": {
    "success": true,
    "num_iterations": 4,
    "verification_output": "verification results:: 3 verified, 0 errors\n",
    "verification_error": ""
  },
  "bn_spec{5:Bound}_atoms{11,40}.dfy": {
    "success": true,
    "num_iterations": 2,
    "verification_output": "verification results:: 3 verified, 0 errors\n",
    "verification_error": ""
  },
  "bn_spec{30:NormalizeBitString}_atoms{11,,40,41,46}.dfy": {
    "success": true,
    "num_iterations": 13,
    "verification_output": "verification results:: 3 verified, 0 errors\n",
    "verification_error": ""
  },
  "bn_spec{7:Compare}_atoms{11,40,46}.dfy": {
    "success": true,
    "num_iterations": 3,
    "verification_output": "verification results:: 3 verified, 0 errors\n",
    "verification_error": ""
  },
  "bn_spec{leftShift}_atoms{11,31,40}.dfy": {
    "success": true,
    "num_iterations": 4,
    "verification_output": "verification results:: 3 verified, 0 errors\n",
    "verification_error": ""
  }
}