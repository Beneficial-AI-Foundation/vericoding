num_iterations: 6
success: true
verification_error: "note: automatically chose triggers for this expression:\n  -->\
  \ /tmp/tmpznstj3kh.rs:13:5\n   |\n13 |     exists|i: int| 0 <= i < a.len() && p.apply(a[i])\n\
  \   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nnote:   trigger 1\
  \ of 1:\n  --> /tmp/tmpznstj3kh.rs:13:48\n   |\n13 |     exists|i: int| 0 <= i <\
  \ a.len() && p.apply(a[i])\n   |                                               \
  \ ^^^^\n\nnote: automatically chose triggers for this expression:\n  --> /tmp/tmpznstj3kh.rs:20:5\n\
  \   |\n20 |     (forall|k: int| 0 <= k < result ==> !p.apply(a[k]))\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\
  \nnote:   trigger 1 of 1:\n  --> /tmp/tmpznstj3kh.rs:20:50\n   |\n20 |     (forall|k:\
  \ int| 0 <= k < result ==> !p.apply(a[k]))\n   |                               \
  \                   ^^^^\n\nnote: automatically chose triggers for this expression:\n\
  \  --> /tmp/tmpznstj3kh.rs:35:13\n   |\n35 |             forall|k: int| 0 <= k <\
  \ n ==> !p.apply(a[k]),\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\
  \nnote:   trigger 1 of 1:\n  --> /tmp/tmpznstj3kh.rs:35:52\n   |\n35 |         \
  \    forall|k: int| 0 <= k < n ==> !p.apply(a[k]),\n   |                       \
  \                             ^^^^\n\nnote: automatically chose triggers for this\
  \ expression:\n  --> /tmp/tmpznstj3kh.rs:36:13\n   |\n36 |             exists|i:\
  \ int| n <= i < a.len() && p.apply(a[i]),\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\
  \nnote:   trigger 1 of 1:\n  --> /tmp/tmpznstj3kh.rs:36:56\n   |\n36 |         \
  \    exists|i: int| n <= i < a.len() && p.apply(a[i]),\n   |                   \
  \                                     ^^^^\n\nnote: Verus printed one or more automatically\
  \ chosen quantifier triggers\n      because it had low confidence in the chosen\
  \ triggers.\n      To suppress these messages, do one of the following:\n      \
  \  (1) manually annotate a single desired trigger using #[trigger]\n           \
  \ (example: forall|i: int, j: int| f(i) && #[trigger] g(i) && #[trigger] h(j)),\n\
  \        (2) manually annotate multiple desired triggers using #![trigger ...]\n\
  \            (example: forall|i: int| #![trigger f(i)] #![trigger g(i)] f(i) &&\
  \ g(i)),\n        (3) accept the automatically chosen trigger using #![auto]\n \
  \           (example: forall|i: int, j: int| #![auto] f(i) && g(i) && h(j))\n  \
  \      (4) use the --triggers-silent command-line option to suppress all printing\
  \ of triggers.\n      (Note: triggers are used by the underlying SMT theorem prover\
  \ to instantiate quantifiers;\n      the theorem prover instantiates a quantifier\
  \ whenever some expression matches the\n      pattern specified by one of the quantifier's\
  \ triggers.)\n  --> /tmp/tmpznstj3kh.rs:36:13\n   |\n36 |             exists|i:\
  \ int| n <= i < a.len() && p.apply(a[i]),\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\
  \n"
verification_output: 'verification results:: 3 verified, 0 errors

  '
