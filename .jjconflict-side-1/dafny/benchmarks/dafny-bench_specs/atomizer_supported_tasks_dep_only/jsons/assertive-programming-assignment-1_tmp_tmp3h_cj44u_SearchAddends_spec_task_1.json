{
  "skeleton": "//ATOM_PLACEHOLDER_Main\n\n//ATOM_PLACEHOLDER_Sorted\n\n//ATOM_PLACEHOLDER_HasAddends\n\n//ATOM_PLACEHOLDER_FindAddends\n\n//ATOM_PLACEHOLDER_IsValidIndex\n\n//ATOM_PLACEHOLDER_AreOreredIndices\n\n//ATOM_PLACEHOLDER_AreAddendsIndices\n\n//ATOM_PLACEHOLDER_HasAddendsInIndicesRange\n\n//ATOM_PLACEHOLDER_LoopInv\n\n//ATOM_PLACEHOLDER_LoopInvWhenSumIsBigger\n\n\n\n",
  "atoms": {
    "AreAddendsIndices": [
      [
        "IsValidIndex"
      ],
      "// ATOM \n\npredicate AreAddendsIndices(q: seq<int>, x: int, i: nat, j: nat)\n\trequires IsValidIndex(q, i) && IsValidIndex(q, j)\n{\n\tq[i] + q[j] == x\n}\n",
      "predicate"
    ],
    "HasAddendsInIndicesRange": [
      [
        "AreOreredIndices",
        "HasAddends"
      ],
      "// ATOM \n\npredicate HasAddendsInIndicesRange(q: seq<int>, x: int, i: nat, j: nat)\n\trequires AreOreredIndices(q, i, j)\n{\n\tHasAddends(q[i..(j + 1)], x)\n}\n",
      "predicate"
    ],
    "Main": [
      [
        "FindAddends"
      ],
      "// SPEC \nmethod Main()\n{\n}\n",
      "method"
    ],
    "AreOreredIndices": [
      [],
      "// ATOM \n\npredicate AreOreredIndices<T>(q: seq<T>, i: nat, j: nat)\n{\n\t0 <= i < j < |q|\n}\n",
      "predicate"
    ],
    "FindAddends": [
      [
        "Sorted",
        "HasAddends",
        "LoopInvWhenSumIsBigger"
      ],
      "// SPEC \n\nmethod FindAddends(q: seq<int>, x: int) returns (i: nat, j: nat)\n\trequires Sorted(q) && HasAddends(q, x)\n\tensures i < j < |q| && q[i]+q[j] == x\n{\n}\n",
      "method"
    ],
    "HasAddends": [
      [],
      "// ATOM \n\npredicate HasAddends(q: seq<int>, x: int)\n{\n\texists i,j :: 0 <= i < j < |q| && q[i] + q[j] == x\n}\n",
      "predicate"
    ],
    "LoopInv": [
      [
        "AreAddendsIndices",
        "HasAddendsInIndicesRange",
        "AreOreredIndices"
      ],
      "// ATOM \n\npredicate LoopInv(q: seq<int>, x: int, i: nat, j: nat, sum: int)\n{\n\tAreOreredIndices(q, i, j) &&\n\tHasAddendsInIndicesRange(q, x, i, j) &&\n\tAreAddendsIndices(q, sum, i, j)\n}\n",
      "predicate"
    ],
    "Sorted": [
      [],
      "// ATOM \n\npredicate Sorted(q: seq<int>)\n{\n\tforall i,j :: 0 <= i <= j < |q| ==> q[i] <= q[j] \n}\n",
      "predicate"
    ],
    "IsValidIndex": [
      [],
      "// ATOM \n\npredicate IsValidIndex<T>(q: seq<T>, i: nat)\n{\n\t0 <= i < |q|\n}\n",
      "predicate"
    ],
    "LoopInvWhenSumIsBigger": [
      [
        "Sorted",
        "HasAddends",
        "HasAddendsInIndicesRange",
        "LoopInv"
      ],
      "// ATOM \n\nlemma LoopInvWhenSumIsBigger(q: seq<int>, x: int, i: nat, j: nat, sum: int)\n\trequires HasAddends(q, x)\n\trequires Sorted(q)\n\trequires sum > x;\n\trequires LoopInv(q, x, i, j, sum)\n\tensures HasAddendsInIndicesRange(q, x, i, j - 1)\n{\n}\n",
      "lemma"
    ]
  },
  "placeholder_mapping": {
    "//ATOM_PLACEHOLDER_Main": "Main",
    "//ATOM_PLACEHOLDER_Sorted": "Sorted",
    "//ATOM_PLACEHOLDER_HasAddends": "HasAddends",
    "//ATOM_PLACEHOLDER_FindAddends": "FindAddends",
    "//ATOM_PLACEHOLDER_IsValidIndex": "IsValidIndex",
    "//ATOM_PLACEHOLDER_AreOreredIndices": "AreOreredIndices",
    "//ATOM_PLACEHOLDER_AreAddendsIndices": "AreAddendsIndices",
    "//ATOM_PLACEHOLDER_HasAddendsInIndicesRange": "HasAddendsInIndicesRange",
    "//ATOM_PLACEHOLDER_LoopInv": "LoopInv",
    "//ATOM_PLACEHOLDER_LoopInvWhenSumIsBigger": "LoopInvWhenSumIsBigger"
  }
}