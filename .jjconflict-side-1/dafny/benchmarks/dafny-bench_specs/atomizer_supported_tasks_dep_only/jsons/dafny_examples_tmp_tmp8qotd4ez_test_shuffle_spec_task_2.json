{
  "skeleton": "\n//ATOM_PLACEHOLDER_random//ATOM_PLACEHOLDER_eqMultiset_t\n\n//ATOM_PLACEHOLDER_eqMultiset\n\n//ATOM_PLACEHOLDER_swap\n  \n//ATOM_PLACEHOLDER_getAllShuffledDataEntries\n\n//ATOM_PLACEHOLDER_set_of_seq\n\n//ATOM_PLACEHOLDER_in_set_of_seq//ATOM_PLACEHOLDER_subset_set_of_seq//ATOM_PLACEHOLDER_getRandomDataEntry\n\n\n\n",
  "atoms": {
    "swap": [
      [],
      "// SPEC \n\nmethod swap<T>(a: array<T>, i: int, j: int)\n  // requires a != null\n  requires 0 <= i < a.Length && 0 <= j < a.Length\n  modifies a\n  ensures a[i] == old(a[j])\n  ensures a[j] == old(a[i])\n  ensures forall m :: 0 <= m < a.Length && m != i && m != j ==> a[m] == old(a[m])\n  ensures multiset(a[..]) == old(multiset(a[..]))\n{\n}\n",
      "method"
    ]
  },
  "placeholder_mapping": {
    "//ATOM_PLACEHOLDER_swap": "swap"
  }
}