{
  "skeleton": "/**\nCVS 2021-22 Handout 1\nAuthors\nGon\u00e7alo Martins Louren\u00e7o n\u00ba55780\nJoana Soares Faria  n\u00ba55754\n */\n\n// First Exercise\n//ATOM_PLACEHOLDER_peasantMultLemma\n\n//ATOM_PLACEHOLDER_peasantMult\n\n\n//Second Exercise\n//ATOM_PLACEHOLDER_euclidianDiv\n\n\n\n",
  "atoms": {
    "peasantMultLemma": [
      [],
      "// ATOM \n\n// First Exercise\nlemma peasantMultLemma(a:int, b:int)\n    requires b >= 0\n    ensures b % 2 == 0 ==> (a * b == 2 * a * b / 2)\n    ensures b % 2 == 1 ==> (a * b == a + 2 * a * (b - 1) / 2)\n    {\n        if (b % 2 == 0 && b > 0) { \n            peasantMultLemma(a, b - 2);\n        }\n\n        if (b % 2 == 1 && b > 1) {\n            peasantMultLemma(a, b - 2);\n        }\n\n    }\n",
      "lemma"
    ],
    "peasantMult": [
      [
        "peasantMultLemma"
      ],
      "// SPEC \n\nmethod peasantMult(a: int, b: int) returns (r: int)\n    requires b > 0\n    ensures r == a * b\n    {\n}\n",
      "method"
    ],
    "euclidianDiv": [
      [],
      "// SPEC \n\n\n//Second Exercise\nmethod euclidianDiv(a: int,b : int) returns (q: int,r: int)\n    requires a >= 0\n    requires b > 0\n    ensures a == b * q + r\n    {\n}\n",
      "method"
    ]
  },
  "placeholder_mapping": {
    "//ATOM_PLACEHOLDER_peasantMultLemma": "peasantMultLemma",
    "//ATOM_PLACEHOLDER_peasantMult": "peasantMult",
    "//ATOM_PLACEHOLDER_euclidianDiv": "euclidianDiv"
  }
}