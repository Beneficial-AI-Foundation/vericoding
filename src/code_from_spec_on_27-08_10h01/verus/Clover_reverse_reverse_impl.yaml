vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-


vc-spec: |-
  // <vc-spec>
  fn reverse(a: &mut Vec<i32>)
      ensures forall|i: int| 0 <= i < old(a).len() ==> a[i] == old(a)[old(a).len() - 1 - i]
  // </vc-spec>

vc-code: |-
  {
      let len = a.len();
      let mut i: usize = 0;
      while i < len / 2
          invariant
              i <= len / 2,
              len == a.len(),
              forall|j: int| 0 <= j < i ==> a[j] == old(a)[len - 1 - j],
              forall|j: int| len - i <= j < len ==> a[j] == old(a)[len - 1 - j],
              forall|j: int| i <= j < len - i ==> a[j] == old(a)[j]
          decreases len / 2 - i
      {
          let temp = a[i];
          let other_temp = a[len - 1 - i];
          a.set(i, other_temp);
          a.set(len - 1 - i, temp);
          i += 1;
      }
  }

vc-postamble: |-
  
  fn main() {
  }
  
  }

