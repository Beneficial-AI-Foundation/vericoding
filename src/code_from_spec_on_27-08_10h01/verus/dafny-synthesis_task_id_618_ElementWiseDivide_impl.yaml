vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-


vc-spec: |-
  // <vc-spec>
  fn element_wise_divide(a: Seq<int>, b: Seq<int>) -> (result: Seq<int>)
      requires 
          a.len() == b.len(),
          forall|i: int| 0 <= i < b.len() ==> b[i] != 0,
      ensures 
          result.len() == a.len(),
          forall|i: int| 0 <= i < result.len() ==> result[i] == a[i] / b[i],
  // </vc-spec>

vc-code: |-
  {
      let mut result: Vec<int> = Vec::new();
      let mut i: usize = 0;
      while i < a.len()
          invariant
              0 <= i <= a.len(),
              result.len() == i,
              forall|j: int| 0 <= j < i ==> result@[j] == a[j] / b[j],
      {
          result.push(a[i as int] / b[i as int]);
          i += 1;
      }
      result@
  }

vc-postamble: |-
  
  fn main() {
  }
  
  }

