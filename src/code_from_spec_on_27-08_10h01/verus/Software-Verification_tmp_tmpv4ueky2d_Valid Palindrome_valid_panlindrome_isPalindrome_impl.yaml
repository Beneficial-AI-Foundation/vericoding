vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-
  // Helper lemmas and spec functions for palindrome verification

vc-spec: |-
  // <vc-spec>
  fn isPalindrome(s: &Vec<char>) -> (result: bool)
      requires 1 <= s.len() <= 200000,
      ensures result <==> (forall|i: int| 0 <= i < (s.len() as int) / 2 ==> s[i] == s[(s.len() as int) - 1 - i])
  // </vc-spec>

vc-code: |-
  {
      let len = s.len();
      let mut i: usize = 0;
      
      while i < len / 2
          invariant 
              0 <= i <= len / 2,
              forall|j: int| 0 <= j < i ==> s@[j] == s@[(len as int) - 1 - j]
      {
          if s@[i] != s@[(len as int) - 1 - (i as int)] {
              return false;
          }
          i += 1;
      }
      
      true
  }

vc-postamble: |-
  
  fn main() {
  }
  
  }

