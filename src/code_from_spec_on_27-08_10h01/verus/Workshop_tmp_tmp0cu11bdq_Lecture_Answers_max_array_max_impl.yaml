vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {
  
  // http://verifythus.cost-ic0701.org/common-example/arraymax-in-dafny

vc-helpers: |-


vc-spec: |-
  // <vc-spec>
  fn max(a: &[i32]) -> (max: i32)
      requires a.len() > 0,
      ensures forall|j: int| 0 <= j < a.len() ==> max >= a[j], //max is larger then anything in the array
      // Note: exists quantifier syntax may vary in different Verus versions
      // ensures exists|j: int| 0 <= j < a.len() && max == a[j], //max is an element in the array
  // </vc-spec>

vc-code: |-
  {
      let mut max_val = a[0];
      let mut i = 1;
      
      while i < a.len()
          invariant 
              1 <= i <= a.len(),
              forall|j: int| 0 <= j < i ==> max_val >= a[j],
              exists|j: int| 0 <= j < i && max_val == a[j],
          decreases a.len() - i,
      {
          if a[i] > max_val {
              max_val = a[i];
          }
          i += 1;
      }
      
      max_val
  }

vc-postamble: |-
  fn main() {}
  
  }

