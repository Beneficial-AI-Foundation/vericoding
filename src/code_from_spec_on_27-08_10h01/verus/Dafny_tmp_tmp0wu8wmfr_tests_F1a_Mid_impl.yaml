vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-


vc-spec: |-
  // <vc-spec>
  fn mid(p: int, q: int) -> (m: int)
      // | ... | ??? | ... |
      //        p m   q
      requires 
          p <= q,
      ensures 
          p <= m <= q,
          m - p <= q - m,
          0 <= (q - m) - (m - p) <= 1,
  // </vc-spec>

vc-code: |-
  {
      let m = p + (q - p) / 2;
      proof {
          assert(p <= m) by {
              assert((q - p) / 2 >= 0);
              assert(p + (q - p) / 2 >= p);
          };
          assert(m <= q) by {
              assert((q - p) / 2 <= q - p);
              assert(p + (q - p) / 2 <= p + (q - p));
              assert(p + (q - p) == q);
          };
          assert(m - p <= q - m) by {
              assert(m - p == (q - p) / 2);
              assert(q - m == q - p - (q - p) / 2);
              if (q - p) % 2 == 0 {
                  assert((q - p) / 2 == q - p - (q - p) / 2);
              } else {
                  assert((q - p) / 2 == q - p - (q - p) / 2 - 1);
              }
          };
          assert(0 <= (q - m) - (m - p) <= 1) by {
              assert((q - m) - (m - p) == (q - p) - 2 * ((q - p) / 2));
              assert((q - m) - (m - p) == (q - p) % 2);
              assert(0 <= (q - p) % 2 <= 1);
          };
      }
      m
  }

vc-postamble: |-
  
  fn main() {
  }
  
  }

