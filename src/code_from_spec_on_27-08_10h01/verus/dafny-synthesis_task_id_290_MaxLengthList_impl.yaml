vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-
  spec fn max_len_in_lists(lists: Vec<Vec<int>>) -> nat {
      if lists.len() == 0 {
          0
      } else {
          let mut max_len: nat = 0;
          let mut i: nat = 0;
          while i < lists.len()
              invariant 0 <= i <= lists.len(), max_len >= 0
              decreases lists.len() - i
          {
              if lists[i as int].len() > max_len {
                  max_len = lists[i as int].len();
              }
              i = i + 1;
          }
          max_len
      }
  }
  
  proof fn lemma_max_list_properties(lists: &Vec<Vec<int>>, max_idx: usize)
      requires 
          lists.len() > 0,
          max_idx < lists.len(),
          forall|i: int| 0 <= i < lists.len() ==> lists[i].len() <= lists[max_idx as int].len()
      ensures
          forall|i: int| 0 <= i < lists.len() ==> lists[i].len() <= lists[max_idx as int].len(),
          exists|i: int| 0 <= i < lists.len() && lists[max_idx as int]@ == lists[i]@
  {
      assert(lists[max_idx as int]@ == lists[max_idx as int]@);
  }

vc-spec: |-
  // <vc-spec>
  fn max_length_list(lists: &Vec<Vec<int>>) -> (max_list: Vec<int>)
      requires lists.len() > 0
      ensures forall|i: int| 0 <= i < lists.len() ==> lists[i].len() <= max_list.len(),
              exists|i: int| 0 <= i < lists.len() && max_list@ == lists[i]@
  // </vc-spec>

vc-code: |-
  {
      let mut max_idx: usize = 0;
      let mut max_len: usize = lists[0].len();
      let mut i: usize = 1;
      
      while i < lists.len()
          invariant 
              0 <= max_idx < lists.len(),
              max_len == lists[max_idx].len(),
              forall|j: int| 0 <= j < i ==> lists[j].len() <= max_len,
              i <= lists.len()
      {
          if lists[i].len() > max_len {
              max_idx = i;
              max_len = lists[i].len();
          }
          i = i + 1;
      }
      
      proof {
          lemma_max_list_properties(lists, max_idx);
      }
      
      lists[max_idx].clone()
  }

vc-postamble: |-
  
  fn main() {}
  
  }

