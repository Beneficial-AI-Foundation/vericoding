vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-
  spec fn is_symmetric(a: &[i32]) -> bool {
      forall|x: int| 0 <= x < a.len() ==> #[trigger] a[x] == a[a.len() - x - 1]
  }
  
  spec fn has_asymmetric_pair(a: &[i32]) -> bool {
      exists|x: int| 0 <= x < a.len() && #[trigger] a[x] != a[a.len() - x - 1]
  }
  
  proof fn symmetric_completeness(a: &[i32])
      ensures !is_symmetric(a) ==> has_asymmetric_pair(a)
  {
      if !is_symmetric(a) {
          assert(exists|x: int| 0 <= x < a.len() && #[trigger] a[x] != a[a.len() - x - 1]);
      }
  }

vc-spec: |-
  // <vc-spec>
  fn symmetric(a: &[i32]) -> (flag: bool)
      ensures 
          flag == true ==> forall|x: int| 0 <= x < a.len() ==> #[trigger] a[x] == a[a.len() - x - 1],
          flag == false ==> exists|x: int| #[trigger] a[x] != a[a.len() - x - 1] && 0 <= x < a.len(),
  // </vc-spec>

vc-code: |-
  {
      let mut i = 0;
      while i < a.len() / 2
          invariant 
              0 <= i <= a.len() / 2,
              forall|x: int| 0 <= x < i ==> #[trigger] a[x] == a[a.len() - x - 1],
          decreases a.len() / 2 - i
      {
          if a[i] != a[a.len() - i - 1] {
              proof {
                  assert(0 <= i < a.len() && a[i as int] != a[a.len() - (i as int) - 1]);
                  assert(has_asymmetric_pair(a));
              }
              return false;
          }
          i += 1;
      }
      
      proof {
          assert(forall|x: int| 0 <= x < a.len() / 2 ==> #[trigger] a[x] == a[a.len() - x - 1]);
          
          assert(forall|x: int| 0 <= x < a.len() ==> #[trigger] a[x] == a[a.len() - x - 1]) by {
              let x = choose|x: int| 0 <= x < a.len();
              if x < a.len() / 2 {
                  assert(a[x] == a[a.len() - x - 1]);
              } else {
                  let mirror_x = a.len() - x - 1;
                  assert(0 <= mirror_x < a.len() / 2);
                  assert(a[mirror_x] == a[a.len() - mirror_x - 1]);
                  assert(a.len() - mirror_x - 1 == x);
                  assert(a[x] == a[a.len() - x - 1]);
              }
          }
      }
      
      true
  }

vc-postamble: |-
  fn main() {}
  
  }

