vc-description: |-


vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-
  // No updates needed for helpers in this case

vc-spec: |-
  fn is_greater(arr: &Vec<i32>, number: i32) -> (result: bool)
      // post-conditions-start
      ensures
          result == (forall|i: int| 0 <= i < arr.len() ==> number > arr[i]),
      // post-conditions-end

vc-code: |-
  fn is_greater(arr: &Vec<i32>, number: i32) -> (result: bool)
      ensures
          result == (forall|i: int| 0 <= i < arr.len() ==> number > arr@[i]),
  {
      let mut i: usize = 0;
      while i < arr.len()
          invariant
              0 <= i <= arr.len(),
              forall|k: int| 0 <= k < i ==> number > arr@[k],
      {
          if number <= arr@[i] {
              return false;
          }
          i = i + 1;
      }
      true
  }

vc-postamble: |-
  
  } // verus!
  
  fn main() {}

