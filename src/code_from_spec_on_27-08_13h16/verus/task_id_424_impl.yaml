vc-description: |-


vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-
  // No updates needed for helpers section as the issue is related to type mismatches in the code.

vc-spec: |-
  fn extract_rear_chars(s: &Vec<Vec<char>>) -> (result: Vec<char>)
      // pre-conditions-start
      requires
          forall|i: int| 0 <= i < s.len() ==> #[trigger] s[i].len() > 0,
      // pre-conditions-end
      // post-conditions-start
      ensures
          s.len() == result.len(),
          forall|i: int| 0 <= i < s.len() ==> result[i] == #[trigger] s[i][s[i].len() - 1],
      // post-conditions-end

vc-code: |-
  {
      let mut result: Vec<char> = Vec::new();
      let mut i: usize = 0;
  
      while i < s.len()
          invariant
              i <= s.len(),
              result.len() == i,
              forall|k: usize| 0 <= k < i ==> result[k] == #[trigger] s[k][s[k].len() as int - 1],
          decreases s.len() - i
      {
          assert(s[i].len() as int > 0);
          let last_char = s[i][s[i].len() as int - 1];
          result.push(last_char);
          i = i + 1;
      }
  
      result
  }

vc-postamble: |-
  
  } // verus!
  
  fn main() {}

