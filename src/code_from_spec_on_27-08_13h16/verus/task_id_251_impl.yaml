vc-description: |-


vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-
  // No updates needed in helpers for this fix

vc-spec: |-
  fn insert_before_each(arr: &Vec<i32>, elem: i32) -> (result: Vec<i32>)
      // post-conditions-start
      ensures
          result@.len() == (2 * arr.len()),
          forall|k: int| 0 <= k < arr.len() ==> #[trigger] result[2 * k] == elem,
          forall|k: int| 0 <= k < arr.len() ==> #[trigger] result[2 * k + 1] == arr[k],
      // post-conditions-end

vc-code: |-
  {
      let mut result: Vec<i32> = Vec::new();
      let mut i: usize = 0;
  
      while i < arr.len()
          invariant
              i <= arr.len(),
              result@.len() == 2 * i,
              forall|k: int| 0 <= k < i ==> #[trigger] result[2 * k] == elem,
              forall|k: int| 0 <= k < i ==> #[trigger] result[2 * k + 1] == arr[k],
          decreases arr.len() - i
      {
          result.push(elem);
          result.push(arr[i]);
          i = i + 1;
      }
  
      result
  }

vc-postamble: |-
  
  } // verus!
  
  fn main() {}

