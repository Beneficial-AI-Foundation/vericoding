vc-description: |-


vc-preamble: |-
  use vstd::prelude::*;
  
  
  verus! {

vc-helpers: |-
  // No changes needed in helpers for this fix

vc-spec: |-
  fn is_smaller(arr1: &Vec<i32>, arr2: &Vec<i32>) -> (result: bool)
      // pre-conditions-start
      requires
          arr1.len() == arr2.len(),
      // pre-conditions-end
      // post-conditions-start
      ensures
          result == (forall|i: int| 0 <= i < arr1.len() ==> arr1[i] > arr2[i]),
      // post-conditions-end

vc-code: |-
  fn is_smaller(arr1: &Vec<i32>, arr2: &Vec<i32>) -> (result: bool)
      requires
          arr1.len() == arr2.len(),
      ensures
          result == (forall|i: int| 0 <= i < arr1.len() ==> arr1[i] > arr2[i]),
  {
      let mut result = true;
      let mut i = 0;
      while i < arr1.len()
          invariant
              0 <= i <= arr1.len(),
              result == (forall|j: int| 0 <= j < i ==> arr1[j] > arr2[j]),
      {
          if arr1[i] <= arr2[i] {
              result = false;
              break;
          }
          i = i + 1;
      }
      result
  }

vc-postamble: |-
  
  } // verus!
  
  fn main() {}

