vc-description: |-


vc-preamble: |-
  #[allow(unused_imports)]
  use vstd::prelude::*;
  
  
  verus!{
  
  spec fn f(seq: Seq<u64>, i: int) -> (result: bool) {
      seq[i] == i + 2
  }
  // pure-end

vc-helpers: |-
  proof fn prove_f_for_index(seq: Seq<u64>, idx: int)
      requires
          forall |i: int| 0 <= i < seq.len() ==> f(seq, i),
          0 <= idx < seq.len(),
      ensures
          seq[idx] == idx as u64 + 2,
  {
      assert(f(seq, idx)) by {
          assert(0 <= idx < seq.len());
      };
  }

vc-spec: |-
  fn get_element_check_property(arr: Vec<u64>, i: usize) -> (ret: u64)
      // pre-conditions-start
      requires
          arr.len() > 0,
          0 < i < arr@.len(),
          forall |i: int| f(arr@, i),
      // pre-conditions-end
      // post-conditions-start
      ensures
          ret == i + 2,
          ret == arr@[i as int],
      // post-conditions-end

vc-code: |-
  {
      let ret = arr[i];
      proof {
          prove_f_for_index(arr@, i as int);
      }
      ret
  }

vc-postamble: |-
  
  }
  
  fn main() {}

