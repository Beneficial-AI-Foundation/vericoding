vc-description: |-


vc-preamble: |-
  use vstd::prelude::*;
  
  verus!{

vc-helpers: |-


vc-spec: |-
  fn myfun(a: &mut Vec<u32>, N: u32) -> (sum: u32)
      // pre-conditions-start
      requires 
          old(a).len() == N,
          N <= 0x7FFF_FFFF,
      // pre-conditions-end
      // post-conditions-start
      ensures
          sum <= 2*N,
      // post-conditions-end

vc-code: |-
  {
      // impl-start
      let mut sum: u32 = 0;
      let mut i: usize = 0;
      
      while i < a.len()
          invariant
              i <= a.len(),
              a.len() == N,
              sum <= 2 * i,
      {
          if a[i] > 2 {
              a.set(i, 2);
          }
          sum = sum + a[i];
          i = i + 1;
      }
      
      sum
      // impl-end
  }

vc-postamble: |-
  
  }
  
  fn main() {}

