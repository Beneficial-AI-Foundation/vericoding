vc-description: |-


vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-


vc-spec: |-
  fn max_element(a: &Vec<i32>) -> (max: i32)
      // pre-conditions-start
      requires
          a.len() > 0,
      // pre-conditions-end
      // post-conditions-start
      ensures
          forall|i: int| 0 <= i < a.len() ==> a[i] <= max,
          exists|i: int| 0 <= i < a.len() && a[i] == max,
      // post-conditions-end

vc-code: |-
  {
      let mut max = a[0];
      let mut idx = 0;
      
      while idx < a.len()
          invariant
              0 <= idx <= a.len(),
              forall|i: int| 0 <= i < idx ==> a[i] <= max,
              exists|i: int| 0 <= i < idx && a[i] == max,
      {
          if a[idx] > max {
              max = a[idx];
          }
          idx += 1;
      }
      
      max
  }

vc-postamble: |-
  
  }
  fn main() {}

