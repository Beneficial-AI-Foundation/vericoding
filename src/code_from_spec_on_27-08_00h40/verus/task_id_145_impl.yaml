vc-description: |-


vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-
  spec fn abs_diff(a: i32, b: i32) -> i32 {
      if a >= b { a - b } else { b - a }
  }
  
  spec fn max_diff_in_array(arr: &Vec<i32>) -> i32 
      decreases arr.len()
  {
      if arr.len() == 0 {
          0
      } else if arr.len() == 1 {
          0
      } else {
          let mut max_val = arr[0];
          let mut min_val = arr[0];
          let mut i = 1;
          while i < arr.len()
              invariant
                  1 <= i <= arr.len(),
                  forall|k: int| 0 <= k < i ==> min_val <= arr[k] <= max_val,
          {
              if arr[i] > max_val {
                  max_val = arr[i];
              }
              if arr[i] < min_val {
                  min_val = arr[i];
              }
              i = i + 1;
          }
          max_val - min_val
      }
  }

vc-spec: |-
  fn max_difference(arr: &Vec<i32>) -> (diff: i32)
      // pre-conditions-start
      requires
          arr.len() > 0,
          forall|i: int| 0 <= i < arr.len() ==> i32::MIN / 2 < #[trigger] arr[i] < i32::MAX / 2,
      // pre-conditions-end
      // post-conditions-start
      ensures
          forall|i: int, j: int| 0 <= i < arr.len() && 0 <= j < arr.len() ==> arr[i] - arr[j] <= diff,
      // post-conditions-end

vc-code: |-
  {
      let mut max_val = arr[0];
      let mut min_val = arr[0];
      let mut i = 1;
      
      while i < arr.len()
          invariant
              1 <= i <= arr.len(),
              forall|k: int| 0 <= k < i ==> min_val <= arr[k] <= max_val,
              forall|j: int, k: int| 0 <= j < i && 0 <= k < i ==> arr[j] - arr[k] <= max_val - min_val,
      {
          if arr[i] > max_val {
              max_val = arr[i];
          }
          if arr[i] < min_val {
              min_val = arr[i];
          }
          i = i + 1;
      }
      
      proof {
          assert(forall|j: int, k: int| 0 <= j < arr.len() && 0 <= k < arr.len() ==> arr[j] - arr[k] <= max_val - min_val) by {
              assert(forall|j: int| 0 <= j < arr.len() ==> arr[j] <= max_val);
              assert(forall|k: int| 0 <= k < arr.len() ==> min_val <= arr[k]);
          }
      }
      
      max_val - min_val
  }

vc-postamble: |-
  
  } // verus!
  
  fn main() {}

