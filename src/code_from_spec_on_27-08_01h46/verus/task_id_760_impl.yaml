vc-description: |-


vc-preamble: |-
  use vstd::prelude::*;
  
  
  verus! {

vc-helpers: |-


vc-spec: |-
  fn has_only_one_distinct_element(arr: &Vec<i32>) -> (result: bool)
      // pre-conditions-start
      ensures
          result == (forall|i: int| 1 <= i < arr@.len() ==> arr[0] == #[trigger] arr[i]),
      // pre-conditions-end

vc-code: |-
  {
      if arr.len() == 0 {
          return true;
      }
      
      let first_element = arr[0];
      let mut i = 1;
      
      while i < arr.len()
          invariant
              0 < arr@.len(),
              1 <= i <= arr@.len(),
              forall|j: int| 1 <= j < i ==> arr[0] == #[trigger] arr[j],
          decreases arr@.len() - i,
      {
          if arr[i] != first_element {
              return false;
          }
          i += 1;
      }
      
      true
  }

vc-postamble: |-
  
  } // verus!
  
  fn main() {}

