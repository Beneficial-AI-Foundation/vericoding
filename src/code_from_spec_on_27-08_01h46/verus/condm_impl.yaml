vc-description: |-


vc-preamble: |-
  use vstd::prelude::*;
  
  verus!{

vc-helpers: |-


vc-spec: |-
  fn myfun(a: &mut Vec<i32>, N: u32)
  		// pre-conditions-start
  		requires
  			N > 0,
  			old(a).len() == N,
  		// pre-conditions-end
  		// post-conditions-start
  		ensures
  			forall |k:int| 0 <= k < N ==> a[k] % 2 == N % 2,
  		// post-conditions-end

vc-code: |-
  {
      // impl-start
      let mut i: usize = 0;
      while i < N as usize
          invariant
              i <= N,
              a.len() == N,
              forall |k:int| 0 <= k < i ==> a[k] % 2 == N % 2,
          decreases N as usize - i
      {
          if N % 2 == 0 {
              a.set(i, 0);
          } else {
              a.set(i, 1);
          }
          i += 1;
      }
      // impl-end
  }

vc-postamble: |-
  
  }
  
  fn main() {}

