vc-description: |-


vc-preamble: |-
  use vstd::prelude::*;
  
  verus!{

vc-helpers: |-
  // </vc-helpers>

vc-spec: |-
  fn myfun(a: &mut Vec<i32>, sum: &mut Vec<i32>, N: i32)
      // pre-conditions-start
      requires
          N > 0,
          old(a).len() == N,
          old(sum).len() == 1,
      // pre-conditions-end
      // post-conditions-start
      ensures
          sum[0] <= N,
      // post-conditions-end

vc-code: |-
  {
      // impl-start
      let mut count = 0;
      let mut i = 0;
      while i < a.len()
          invariant
              0 <= i <= a.len(),
              count <= i,
              a.len() == N,
              sum.len() == 1,
          decreases a.len() - i
      {
          if a[i] > 0 {
              count += 1;
          }
          i += 1;
      }
      sum.set(0, count);
      // impl-end
  }

vc-postamble: |-
  
  }
  
  fn main() {}

