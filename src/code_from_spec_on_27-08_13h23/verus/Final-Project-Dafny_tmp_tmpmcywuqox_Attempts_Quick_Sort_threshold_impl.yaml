vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {
  
  spec fn quick_sorted(seq: Seq<int>) -> bool {
      forall|idx_1: int, idx_2: int| 0 <= idx_1 < idx_2 < seq.len() ==> seq[idx_1] <= seq[idx_2]
  }

vc-helpers: |-
  spec fn is_less_than_or_equal_to_threshold(seq: Seq<int>, thres: int, idx: int) -> bool {
      seq[idx] <= thres
  }
  
  spec fn is_greater_than_or_equal_to_threshold(seq: Seq<int>, thres: int, idx: int) -> bool {
      seq[idx] >= thres
  }

vc-spec: |-
  // <vc-spec>
  fn threshold(thres: int, seq: Seq<int>) -> (ret: (Seq<int>, Seq<int>))
      ensures 
          (forall|x: int| ret.0.contains(x) ==> x <= thres) &&
          (forall|x: int| ret.1.contains(x) ==> x >= thres) &&
          ret.0.len() + ret.1.len() == seq.len() &&
          ret.0.to_multiset().add(ret.1.to_multiset()) == seq.to_multiset()
  // </vc-spec>

vc-code: |-
  fn threshold(thres: int, seq: Seq<int>) -> (ret: (Seq<int>, Seq<int>))
      ensures 
          (forall|x: int| ret.0.contains(x) ==> x <= thres) &&
          (forall|x: int| ret.1.contains(x) ==> x >= thres) &&
          ret.0.len() + ret.1.len() == seq.len() &&
          ret.0.to_multiset().add(ret.1.to_multiset()) == seq.to_multiset()
  {
      let mut less_or_equal: Vec<int> = Vec::new();
      let mut greater_or_equal: Vec<int> = Vec::new();
      let mut i: usize = 0;
  
      while i < seq.len()
          invariant
              0 <= i <= seq.len(),
              (forall|x: int| less_or_equal.contains(x) ==> x <= thres),
              (forall|x: int| greater_or_equal.contains(x) ==> x >= thres),
              less_or_equal.len() + greater_or_equal.len() == i,
              less_or_equal.to_seq().to_multiset().add(greater_or_equal.to_seq().to_multiset()) == seq.subrange(0, i as int).to_multiset()
      {
          if seq[i as int] <= thres {
              less_or_equal.push(seq[i as int]);
          } else {
              greater_or_equal.push(seq[i as int]);
          }
          i = i + 1;
      }
  
      (less_or_equal.to_seq(), greater_or_equal.to_seq())
  }

vc-postamble: |-
  fn main() {
  }
  
  }

