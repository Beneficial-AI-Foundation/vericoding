vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {
  
  spec fn min_pair(s: Seq<i32>) -> i32 {
      if s[0] <= s[1] { s[0] } else { s[1] }
  }
  
  spec fn min(s: Seq<i32>) -> i32;

vc-helpers: |-
  spec fn min(s: Seq<i32>) -> i32
      decreases s.len()
  {
      if s.len() == 0 {
          0
      } else if s.len() == 1 {
          s[0]
      } else {
          let m = min(s.drop_first());
          if s[0] <= m {
              s[0]
          } else {
              m
          }
      }
  }

vc-spec: |-
  // <vc-spec>
  fn second_smallest(s: &[i32]) -> (second_smallest: i32)
      requires 
          s.len() >= 2,
          exists|i: int, j: int| 0 <= i < s.len() && 0 <= j < s.len() && i != j && 
              s[i] == min(s@) && s[j] != s[i]
      ensures 
          exists|i: int, j: int| 0 <= i < s.len() && 0 <= j < s.len() && i != j && 
              s[i] == min(s@) && s[j] == second_smallest,
          forall|k: int| 0 <= k < s.len() && s[k] != min(s@) ==> s[k] >= second_smallest
  // </vc-spec>

vc-code: |-
  fn second_smallest(s: &[i32]) -> (second_smallest: i32)
      requires 
          s.len() >= 2,
          exists|i: int, j: int| 0 <= i < s.len() && 0 <= j < s.len() && i != j && 
              s[i] == min(s@) && s[j] != s[i]
      ensures 
          exists|i: int, j: int| 0 <= i < s.len() && 0 <= j < s.len() && i != j && 
              s[i] == min(s@) && s[j] == second_smallest,
          forall|k: int| 0 <= k < s.len() && s[k] != min(s@) ==> s[k] >= second_smallest
  {
      let mut min_val = if s[0] <= s[1] { s[0] } else { s[1] };
      let mut second_min = if s[0] <= s[1] { s[1] } else { s[0] };
      let mut i: usize = 2;
  
      while i < s.len()
          invariant
              0 <= i <= s.len(),
              min_val <= second_min,
              exists|k: int| 0 <= k < i as int && s[k] == min_val,
              forall|k: int| 0 <= k < i as int && s[k] != min_val ==> s[k] >= second_min
      {
          if s[i] < min_val {
              second_min = min_val;
              min_val = s[i];
          } else if s[i] < second_min && s[i] != min_val {
              second_min = s[i];
          }
          i = i + 1;
      }
      second_min
  }

vc-postamble: |-
  fn main() {
  }
  
  }

