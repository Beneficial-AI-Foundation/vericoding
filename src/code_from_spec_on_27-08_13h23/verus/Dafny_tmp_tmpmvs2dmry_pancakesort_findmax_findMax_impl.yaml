vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {
  
  // returns an index of the largest element of array 'a' in the range [0..n)

vc-helpers: |-
  proof fn lemma_max_in_range(a: Seq<i32>, n: usize, max_idx: usize)
      requires
          0 < n <= a.len(),
          0 <= max_idx < n,
          forall|k: usize| 0 <= k < n ==> a[max_idx] >= a[k],
      ensures
          forall|k: usize| 0 <= k < n ==> a[max_idx] >= a[k],
  {
  }

vc-spec: |-
  // <vc-spec>
  fn findMax(a: &[i32], n: usize) -> (r: usize)
      requires
          a.len() > 0,
          0 < n <= a.len(),
      ensures
          0 <= r < n <= a.len(),
          forall|k: usize| 0 <= k < n <= a.len() ==> a[r as int] >= a[k as int],
  // </vc-spec>

vc-code: |-
  fn find_max(a: &[i32], n: usize) -> (r: usize)
      requires
          a.len() > 0,
          0 < n <= a.len(),
      ensures
          0 <= r < n,
          forall|k: usize| 0 <= k < n ==> a[r] >= a[k],
  {
      let mut max_idx: usize = 0;
      let mut i: usize = 1;
  
      while i < n
          invariant
              0 <= max_idx < n,
              0 < n <= a.len(),
              1 <= i <= n,
              forall|k: usize| 0 <= k < i ==> a[max_idx] >= a[k],
      {
          if a[i] > a[max_idx] {
              max_idx = i;
          }
          i = i + 1;
      }
  
      max_idx
  }

vc-postamble: |-
  fn main() {}
  
  }

