vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-
  // Helper lemma to assist in proving properties about reversed indices
  proof fn lemma_reverse_index(len: int, i: int)
      requires
          0 <= i < len,
      ensures
          0 <= len - 1 - i < len,
  {
  }

vc-spec: |-
  // <vc-spec>
  fn reverse(a: &mut Vec<i32>)
      ensures forall|i: int| 0 <= i < old(a).len() ==> a[i] == old(a)[old(a).len() - 1 - i]
  // </vc-spec>

vc-code: |-
  fn reverse(a: &mut Vec<i32>)
      ensures forall|i: int| 0 <= i < old(a).len() ==> a[i] == old(a)[old(a).len() - 1 - i]
  {
      let len = a.len();
      let mut i: usize = 0;
      while i < len / 2
          invariant
              0 <= i <= len / 2,
              a.len() == len,
              forall|k: int| 0 <= k < i || len - i <= k < len ==> a[k] == old(a)[len - 1 - k],
              forall|k: int| i <= k < len - i ==> a[k] == old(a)[k],
      {
          let temp = a[i];
          a.set(i, a[len - 1 - i]);
          a.set(len - 1 - i, temp);
          i = i + 1;
      }
  }

vc-postamble: |-
  
  fn main() {
  }
  
  }

