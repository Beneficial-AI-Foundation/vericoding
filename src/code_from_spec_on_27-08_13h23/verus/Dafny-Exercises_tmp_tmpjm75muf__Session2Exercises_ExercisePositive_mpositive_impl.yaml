vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {
  
  spec fn positive(s: Seq<int>) -> bool {
      forall|u: int| 0 <= u < s.len() ==> s[u] >= 0
  }

vc-helpers: |-
  proof fn seq_positive_implies_all_positive(s: Seq<int>)
      requires positive(s)
      ensures forall|i: int| 0 <= i < s.len() ==> s[i] >= 0
  {
  }

vc-spec: |-
  // <vc-spec>
  fn mpositive(v: &[int]) -> (b: bool)
      ensures b == positive(v@)
  // </vc-spec>

vc-code: |-
  fn mpositive(v: &[int]) -> (b: bool)
      ensures b == positive(v@)
  {
      let mut i: usize = 0;
      while i < v.len()
          invariant
              0 <= i <= v.len(),
              forall|j: int| 0 <= j < i ==> v@[j] >= 0
      {
          if v[i] < 0 {
              return false;
          }
          i = i + 1;
      }
      true
  }

vc-postamble: |-
  fn main() {
  }
  
  }

