vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-
  // No additional helpers needed for this fix

vc-spec: |-
  // <vc-spec>
  fn index_wise_addition(a: Seq<Seq<int>>, b: Seq<Seq<int>>) -> (result: Seq<Seq<int>>)
      requires 
          a.len() > 0 && b.len() > 0,
          a.len() == b.len(),
          forall|i: int| 0 <= i < a.len() ==> a[i].len() == b[i].len(),
      ensures 
          result.len() == a.len(),
          forall|i: int| 0 <= i < result.len() ==> result[i].len() == a[i].len(),
          forall|i: int, j: int| 0 <= i < result.len() && 0 <= j < result[i].len() ==> 
              result[i][j] == a[i][j] + b[i][j],
  // </vc-spec>

vc-code: |-
  fn index_wise_addition(a: Seq<Seq<int>>, b: Seq<Seq<int>>) -> (result: Seq<Seq<int>>)
      requires 
          a.len() > 0 && b.len() > 0,
          a.len() == b.len(),
          forall|i: int| 0 <= i < a.len() ==> a[i].len() == b[i].len(),
      ensures 
          result.len() == a.len(),
          forall|i: int| 0 <= i < result.len() ==> result[i].len() == a[i].len(),
          forall|i: int, j: int| 0 <= i < result.len() && 0 <= j < result[i].len() ==> 
              result[i][j] == a[i][j] + b[i][j],
  {
      let mut result: Vec<Vec<int>> = Vec::new();
      let mut i: usize = 0;
      
      while i < a.len()
          invariant
              i <= a.len(),
              result.len() == i,
              forall|k: int| 0 <= k < i ==> result[k].len() == a[k].len(),
              forall|k: int, l: int| 0 <= k < i && 0 <= l < result[k].len() ==> 
                  result[k][l] == a[k][l] + b[k][l],
      {
          let mut inner_vec: Vec<int> = Vec::new();
          let mut j: usize = 0;
          
          while j < a[i].len()
              invariant
                  j <= a[i].len(),
                  inner_vec.len() == j,
                  forall|k: int| 0 <= k < j ==> inner_vec[k] == a[i][k] + b[i][k],
          {
              inner_vec.push(a[i][j] + b[i][j]);
              j = j + 1;
          }
          
          result.push(inner_vec);
          i = i + 1;
      }
      
      result
  }

vc-postamble: |-
  
  fn main() {}
  
  }

