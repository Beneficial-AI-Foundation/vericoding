vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-
  // No updates needed for helpers

vc-spec: |-
  // <vc-spec>
  fn zap_negatives(a: &mut Vec<i32>)
      ensures 
          a.len() == old(a).len(),
          forall|i: int| 0 <= i < a.len() ==> 
              if old(a)[i] < 0 { a[i] == 0 } 
              else { a[i] == old(a)[i] }
  // </vc-spec>

vc-code: |-
  fn zap_negatives(a: &mut Vec<i32>)
      ensures
          a.len() == old(a).len(),
          forall|i: int| 0 <= i < a.len() ==> 
              if old(a)[i] < 0 { a[i] == 0 } 
              else { a[i] == old(a)[i] }
  {
      let mut i: usize = 0;
      while i < a.len()
          invariant
              0 <= i <= a.len(),
              a.len() == old(a).len(),
              forall|k: int| 0 <= k < i ==> 
                  if old(a)[k] < 0 { a[k] == 0 } 
                  else { a[k] == old(a)[k] }
      {
          if a[i] < 0 {
              a.set(i, 0);
          }
          i = i + 1;
      }
  }

vc-postamble: |-
  
  fn main() {
  }
  
  }

