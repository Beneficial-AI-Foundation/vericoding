vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-
  // No updates needed for helpers

vc-spec: |-
  // <vc-spec>
  fn replace(v: &mut Vec<i32>, x: i32, y: i32)
      ensures
          forall|k: int| 0 <= k < old(v).len() && old(v)[k] == x ==> v[k] == y,
          forall|k: int| 0 <= k < old(v).len() && old(v)[k] != x ==> v[k] == old(v)[k],
  // </vc-spec>

vc-code: |-
  fn replace(v: &mut Vec<i32>, x: i32, y: i32)
      ensures
          forall|k: int| 0 <= k < old(v).len() && old(v)[k] == x ==> v[k] == y,
          forall|k: int| 0 <= k < old(v).len() && old(v)[k] != x ==> v[k] == old(v)[k],
  {
      let mut i: usize = 0;
      while i < v.len()
          invariant
              0 <= i <= v.len(),
              forall|k: int| 0 <= k < i && old(v)[k] == x ==> v[k] == y,
              forall|k: int| 0 <= k < i && old(v)[k] != x ==> v[k] == old(v)[k],
              forall|k: int| i <= k < old(v).len() ==> v[k] == old(v)[k],
      {
          if v[i] == x {
              v.set(i, y);
          }
          i = i + 1;
      }
  }

vc-postamble: |-
  fn main() {
  }
  
  }

