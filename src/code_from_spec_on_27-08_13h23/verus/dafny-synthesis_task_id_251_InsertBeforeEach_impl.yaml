vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-
  // No changes needed in helpers for this fix

vc-spec: |-
  // <vc-spec>
  #[verifier::exec_allows_no_decreases_clause]
  fn insert_before_each(s: Seq<String>, x: String) -> (v: Seq<String>)
      ensures
          v.len() == 2 * s.len(),
          forall|i: int| 0 <= i < s.len() ==> v[2*i] == x && v[2*i + 1] == s[i],
  // </vc-spec>

vc-code: |-
  #[verifier::exec_allows_no_decreases_clause]
  fn insert_before_each(s: Seq<String>, x: String) -> (v: Seq<String>)
      ensures
          v.len() == 2 * s.len(),
          forall|i: int| 0 <= i < s.len() ==> v[2*i] == x && v[2*i + 1] == s[i],
  {
      let mut result: Vec<String> = Vec::new();
      let mut i: usize = 0;
      
      while i < s.len()
          invariant
              i <= s.len(),
              result.len() == 2 * i,
              forall|j: int| 0 <= j < i ==> result[2*j] == x && result[2*j + 1] == s[j],
      {
          result.push(x.clone());
          result.push(s[i].clone());
          i = i + 1;
      }
      
      result.into_seq()
  }

vc-postamble: |-
  fn main() {}
  
  }

