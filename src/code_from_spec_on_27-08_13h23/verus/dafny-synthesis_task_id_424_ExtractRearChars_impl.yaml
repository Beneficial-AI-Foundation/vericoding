vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-
  // No additional helpers needed for this fix

vc-spec: |-
  // <vc-spec>
  fn extract_rear_chars(l: &Vec<Vec<char>>) -> (r: Vec<char>)
      requires forall|i: int| 0 <= i < l.len() ==> l[i].len() > 0
      ensures 
          r.len() == l.len()
          && forall|i: int| 0 <= i < l.len() ==> r[i] == l[i][l[i].len() - 1]
  {
  // </vc-spec>

vc-code: |-
  let mut result: Vec<char> = Vec::new();
  let mut i: usize = 0;
  
  while i < l.len()
      invariant
          i <= l.len(),
          result.len() == i,
          forall|k: int| 0 <= k < i ==> result[k as usize] == l[k as usize][l[k as usize].len() - 1]
  {
      let last_char = l[i][l[i].len() - 1];
      result.push(last_char);
      i = i + 1;
  }
  result

vc-postamble: |-
  
  fn main() {
  }
  
  }

