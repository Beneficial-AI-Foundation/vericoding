vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-
  proof fn lemma_swap_preserves_multiset(v1: &Vec<i32>, v2: &Vec<i32>, i: usize, j: usize)
      requires
          i < v1.len(),
          j < v1.len(),
          v2.len() == v1.len(),
          forall |k: usize| k < v1.len() && k != i && k != j ==> v1@[k] == v2@[k],
          v1@[i] == v2@[j],
          v1@[j] == v2@[i],
      ensures
          v1@.to_multiset() == v2@.to_multiset(),
  {
  }
  
  proof fn lemma_vec_update_preserves_multiset(v: &Vec<i32>, new_v: &Vec<i32>, index: usize, value: i32)
      requires
          index < v.len(),
          new_v.len() == v.len(),
          new_v@[index] == value,
          forall |k: usize| k < v.len() && k != index ==> v@[k] == new_v@[k],
      ensures
          v@.to_multiset() == new_v@.to_multiset(),
  {
  }

vc-spec: |-
  // <vc-spec>
  fn selection_sorted(array: &mut Vec<i32>) 
      ensures array@.to_multiset() == old(array)@.to_multiset()
  // </vc-spec>

vc-code: |-
  fn selection_sorted(array: &mut Vec<i32>)
      ensures
          array@.to_multiset() == old(array)@.to_multiset(),
  {
      let mut i: usize = 0;
      while i < array.len()
          invariant
              0 <= i <= array.len(),
              array@.to_multiset() == old(array)@.to_multiset(),
      {
          let mut min_idx: usize = i;
          let mut j: usize = i + 1;
          while j < array.len()
              invariant
                  i <= min_idx < array.len(),
                  i < array.len(),
                  i <= j <= array.len(),
                  array@.to_multiset() == old(array)@.to_multiset(),
                  forall |k: usize| i <= k < j ==> array@[min_idx] <= array@[k],
          {
              if array@[j] < array@[min_idx] {
                  min_idx = j;
              }
              j = j + 1;
          }
          if min_idx != i {
              let temp = array@[i];
              array.set(i, array@[min_idx]);
              array.set(min_idx, temp);
              proof {
                  lemma_swap_preserves_multiset(array, array, i, min_idx);
              }
          }
          i = i + 1;
      }
  }

vc-postamble: |-
  fn main() {}
  
  }

