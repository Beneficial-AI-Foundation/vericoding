vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-
  // No updates needed for helpers to fix the compilation error.

vc-spec: |-
  // <vc-spec>
  fn remove_element(nums: &mut Vec<i32>, val: i32) -> (i: usize)
      requires 
          old(nums).len() <= 100,
          forall|j: int| 0 <= j < old(nums).len() ==> #[trigger] old(nums)[j] >= 0 && old(nums)[j] <= 50,
          0 <= val <= 100,
      ensures
          forall|j: int| 0 < j < i < nums.len() ==> #[trigger] nums[j] != val,
  // </vc-spec>

vc-code: |-
  fn remove_element(nums: &mut Vec<i32>, val: i32) -> (i: usize)
      requires 
          old(nums).len() <= 100,
          forall|j: int| 0 <= j < old(nums).len() ==> #[trigger] old(nums)[j] >= 0 && old(nums)[j] <= 50,
          0 <= val <= 100,
      ensures
          forall|j: int| 0 <= j < i ==> #[trigger] nums[j] != val,
          i <= nums.len(),
  {
      let mut i: usize = 0;
      let mut j: usize = 0;
      let len = nums.len();
  
      while j < len
          invariant
              i <= j <= len,
              forall|k: int| 0 <= k < i ==> #[trigger] nums[k] != val,
      {
          if nums[j] != val {
              if i != j {
                  let tmp = nums[i];
                  nums.set(i, nums[j]);
                  nums.set(j, tmp);
              }
              i = i + 1;
          }
          j = j + 1;
      }
      i
  }

vc-postamble: |-
  
  fn main() {
  }
  
  }

