vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-
  // No updates needed for helpers as the issue was a syntax error in the code section

vc-spec: |-
  // <vc-spec>
  fn all_digits(s: &str) -> (result: bool)
      ensures result <==> (forall|i: int| 0 <= i < s@.len() ==> {
          let c = #[trigger] s@.index(i);
          c == '0' || c == '1' || c == '2' || c == '3' || c == '4' || 
          c == '5' || c == '6' || c == '7' || c == '8' || c == '9'
      })
  // </vc-spec>

vc-code: |-
  fn all_digits(s: &str) -> (result: bool)
      ensures result <==> (forall|i: int| 0 <= i < s@.len() ==> {
          let c = #[trigger] s@.index(i);
          c == '0' || c == '1' || c == '2' || c == '3' || c == '4' || 
          c == '5' || c == '6' || c == '7' || c == '8' || c == '9'
      })
  {
      let mut i: usize = 0;
      while i < s@.len()
          invariant
              0 <= i <= s@.len(),
              forall|j: int| 0 <= j < i ==> {
                  let c = #[trigger] s@.index(j);
                  c == '0' || c == '1' || c == '2' || c == '3' || c == '4' || 
                  c == '5' || c == '6' || c == '7' || c == '8' || c == '9'
              }
          decreases s@.len() - i
      {
          let c = s@.index(i as int);
          if !(c == '0' || c == '1' || c == '2' || c == '3' || c == '4' || 
               c == '5' || c == '6' || c == '7' || c == '8' || c == '9') {
              return false;
          }
          i = i + 1;
      }
      true
  }

vc-postamble: |-
  fn main() {
  }
  
  }

