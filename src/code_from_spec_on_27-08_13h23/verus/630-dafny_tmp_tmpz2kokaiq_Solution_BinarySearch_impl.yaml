vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {
  
  spec fn sorted(a: &[int]) -> bool {
      forall|i: int, j: int| 0 <= i < j < a.len() ==> a[i] <= a[j]
  }

vc-helpers: |-
  spec fn mid_point(low: int, high: int) -> int {
      low + (high - low) / 2
  }
  
  proof fn lemma_mid_in_range(low: int, high: int)
      requires
          0 <= low <= high,
      ensures
          low <= mid_point(low, high) <= high,
  {
      let mid = mid_point(low, high);
      assert(low <= mid);
      assert(mid <= high);
  }
  
  proof fn lemma_sorted_subrange(a: &[int], start: int, end: int)
      requires
          sorted(a),
          0 <= start <= end <= a.len(),
      ensures
          sorted(&a[start..end]),
  {
  }

vc-spec: |-
  // <vc-spec>
  fn binary_search(a: &[int], x: int) -> (index: i32)
      requires 
          sorted(a),
      ensures 
          0 <= index < a.len() ==> a[index as int] == x,
          index == -1 ==> forall|i: int| 0 <= i < a.len() ==> a[i] != x,
  // </vc-spec>

vc-code: |-
  fn binary_search(a: &[int], x: int) -> (index: i32)
      requires
          sorted(a),
      ensures
          0 <= index < a.len() ==> a[index as int] == x,
          index == -1 ==> forall|i: int| 0 <= i < a.len() ==> a[i] != x,
  {
      let mut low: i32 = 0;
      let mut high: i32 = if a.len() > 0 { a.len() as i32 - 1 } else { -1 };
      let mut result: i32 = -1;
  
      while low <= high
          invariant
              0 <= low as int <= high as int + 1 <= a.len(),
              result == -1,
              forall|i: int| 0 <= i < low as int ==> a[i] < x,
              forall|i: int| high as int < i < a.len() ==> a[i] > x,
          decreases
              high - low,
      {
          let mid = mid_point(low as int, high as int) as i32;
          proof {
              lemma_mid_in_range(low as int, high as int);
          }
          if a[mid as usize] == x {
              result = mid;
              break;
          } else if a[mid as usize] < x {
              low = mid + 1;
          } else {
              high = mid - 1;
          }
      }
      result
  }

vc-postamble: |-
  fn main() {}
  
  }

