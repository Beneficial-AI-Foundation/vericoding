vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-
  proof fn div_mod_helper(x: nat, y: nat) -> (result: (int, int))
      requires y != 0
      ensures {
          let (q, r) = result;
          q * y + r == x && 0 <= r < y && 0 <= q
      }
      decreases x
  {
      if x < y {
          (0, x as int)
      } else {
          let (q1, r1) = div_mod_helper((x - y) as nat, y);
          (q1 + 1, r1)
      }
  }

vc-spec: |-
  // <vc-spec>
  proof fn quotient(x: nat, y: nat) -> (result: (int, int))
      requires y != 0
      ensures ({
          let (r, q) = result;
          q * y + r == x && 0 <= r < y && 0 <= q
      })
  // </vc-spec>

vc-code: |-
  proof fn quotient(x: nat, y: nat) -> (result: (int, int))
      requires y != 0
      ensures {
          let (q, r) = result;
          q * y + r == x && 0 <= r < y && 0 <= q
      }
  {
      div_mod_helper(x, y)
  }

vc-postamble: |-
  
  fn main() {
  }
  
  }

