vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-
  // No updates needed for helpers in this case

vc-spec: |-
  // <vc-spec>
  fn array_split(a: Vec<i32>) -> (ret: (Vec<i32>, Vec<i32>))
      ensures
          a@ == ret.0@ + ret.1@,
          a.len() == ret.0.len() + ret.1.len(),
          a.len() > 1 ==> a.len() > ret.0.len(),
          a.len() > 1 ==> a.len() > ret.1.len(),
  // </vc-spec>

vc-code: |-
  fn array_split(a: Vec<i32>) -> (ret: (Vec<i32>, Vec<i32>))
      ensures
          a@ == ret.0@ + ret.1@,
          a.len() == ret.0.len() + ret.1.len(),
          a.len() > 1 ==> a.len() > ret.0.len(),
          a.len() > 1 ==> a.len() > ret.1.len(),
  {
      let mid = a.len() / 2;
      let mut left = Vec::new();
      let mut right = Vec::new();
      let mut i = 0;
  
      while i < a.len()
          invariant
              0 <= i <= a.len(),
              left.len() == if i <= mid { i } else { mid },
              right.len() == if i <= mid { 0 } else { i - mid },
              forall |j: usize| j < left.len() ==> left@[j] == a@[j],
              forall |j: usize| j < right.len() ==> right@[j] == a@[mid + j],
      {
          if i < mid {
              left.push(a[i as usize]);
          } else {
              right.push(a[i as usize]);
          }
          i = i + 1;
      }
  
      (left, right)
  }

vc-postamble: |-
  fn main() {
  }
  
  }

