vc-preamble: |-
  method toMultiset(s: string) returns (mset: multiset<char>)
      ensures multiset(s) == mset
  {
    assume{:axiom} false;
  }
  
  method msetEqual(s: multiset<char>, t: multiset<char>) returns (equal: bool)
      ensures s == t <==> equal
  {
    assume{:axiom} false;
  }

vc-helpers: |-
  // Helper lemma to ensure multiset equality implies anagram property
  lemma MultisetEqualityImpliesAnagram(s: string, t: string)
    ensures multiset(s) == multiset(t) ==> forall c :: c in multiset(s) ==> c in multiset(t) && multiset(s)[c] == multiset(t)[c]
  {
  }

vc-spec: |-
  // <vc-spec>
  method isAnagram(s: string, t: string) returns (equal: bool)
      ensures (multiset(s) == multiset(t)) == equal
  // </vc-spec>

vc-code: |-
  {
    var sMset := toMultiset(s);
    var tMset := toMultiset(t);
    var areEqual := msetEqual(sMset, tMset);
    return areEqual;
  }

vc-postamble: |-


