vc-preamble: |-


vc-helpers: |-
  // No additional helpers or proofs needed for this implementation

vc-spec: |-
  // <vc-spec>
  method counting_bits(n: int) returns (result: array<int>)
      requires 0 <= n <= 100000
      ensures result.Length == n + 1
      ensures forall i :: 1 <= i < n + 1 ==> result[i] == result[i / 2] + i % 2
  // </vc-spec>

vc-code: |-
  method CountingBits(n: int) returns (result: array<int>)
      requires 0 <= n <= 100000
      ensures result.Length == n + 1
      ensures forall i :: 0 <= i < n + 1 ==> (i == 0 ==> result[i] == 0) && (i > 0 ==> result[i] == result[i / 2] + i % 2)
  {
      result := new int[n + 1];
      result[0] := 0;
      var i := 1;
      while i <= n
          invariant 0 <= i <= n + 1
          invariant forall j :: 0 <= j < i ==> (j == 0 ==> result[j] == 0) && (j > 0 ==> result[j] == result[j / 2] + j % 2)
      {
          result[i] := result[i / 2] + i % 2;
          i := i + 1;
      }
  }

vc-postamble: |-


