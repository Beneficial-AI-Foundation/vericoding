vc-preamble: |-


vc-helpers: |-
  // No additional helpers or proofs needed for this implementation

vc-spec: |-
  // <vc-spec>
  method firstE(a: array<char>) returns (x: int)
  ensures if 'e' in a[..] then 0 <= x < a.Length && a[x] == 'e' && forall i | 0 <= i < x :: a[i] != 'e' else x == -1
  // </vc-spec>

vc-code: |-
  method firstE(a: array<char>) returns (x: int)
    ensures if 'e' in a[..] then 0 <= x < a.Length && a[x] == 'e' && forall i | 0 <= i < x :: a[i] != 'e' else x == -1
  {
    x := -1;
    var i := 0;
    while i < a.Length
      invariant 0 <= i <= a.Length
      invariant x == -1 ==> forall k | 0 <= k < i :: a[k] != 'e'
      invariant x != -1 ==> 0 <= x < i && a[x] == 'e' && forall k | 0 <= k < x :: a[k] != 'e'
    {
      if a[i] == 'e' && x == -1 {
        x := i;
      }
      i := i + 1;
    }
  }

vc-postamble: |-


