vc-preamble: |-


vc-helpers: |-
  // Helper lemma to prove properties about sequence membership and length
  lemma MinLengthProperty(s: seq<seq<int>>, minSublist: seq<int>)
    requires |s| > 0
    requires minSublist in s
    requires forall sublist :: sublist in s ==> |minSublist| <= |sublist|
    ensures minSublist in s
    ensures forall sublist :: sublist in s ==> |minSublist| <= |sublist|
  {
    // This lemma is trivially true as it restates the requires as ensures
  }

vc-spec: |-
  // <vc-spec>
  method MinLengthSublist(s: seq<seq<int>>) returns (minSublist: seq<int>)
      requires |s| > 0
      ensures minSublist in s
      ensures forall sublist :: sublist in s ==> |minSublist| <= |sublist|
  // </vc-spec>

vc-code: |-
  method MinLengthSublistImpl(s: seq<seq<int>>) returns (minSublist: seq<int>)
      requires |s| > 0
      ensures minSublist in s
      ensures forall sublist :: sublist in s ==> |minSublist| <= |sublist|
  {
    minSublist := s[0];
    var i := 1;
    while i < |s|
      invariant 0 <= i <= |s|
      invariant minSublist in s
      invariant forall k :: 0 <= k < i ==> |minSublist| <= |s[k]|
    {
      if |s[i]| < |minSublist| {
        minSublist := s[i];
      }
      i := i + 1;
    }
    // After the loop, minSublist is the shortest sublist seen so far
    assert forall k :: 0 <= k < |s| ==> |minSublist| <= |s[k]|;
  }

vc-postamble: |-


