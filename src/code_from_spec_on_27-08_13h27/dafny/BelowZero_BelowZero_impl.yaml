vc-preamble: |-
  /* 
  HumanEvalX 3
  You're given a list of deposit and withdrawal operations on a bank account that starts with zero balance. 
  Your task is to detect if at any point the balance of account falls below zero, and at that point function 
  should return True. Otherwise it should return False.
  */
  
  function sum(s: seq<int>, n: nat): int
      requires n <= |s|
  {
      if |s| == 0 || n == 0 then
          0
      else
          s[0] + sum(s[1..], n-1)
  }

vc-helpers: |-
  // Helper lemma to prove properties about sum function for prefix sums
  lemma SumPrefix(s: seq<int>, n: nat)
    requires n <= |s|
    ensures forall k: nat :: k <= n ==> sum(s, k) == if k == 0 then 0 else sum(s, k-1) + s[k-1]
  {
    if n == 0 {
      return;
    }
    SumPrefix(s[1..], n-1);
    assert forall k: nat :: k <= n ==> sum(s, k) == if k == 0 then 0 else sum(s, k-1) + s[k-1];
  }
  
  // Helper lemma to relate sum to cumulative balance
  lemma SumUpdate(s: seq<int>, i: nat)
    requires 0 <= i < |s|
    ensures sum(s, i+1) == sum(s, i) + s[i]
  {
    if i == 0 {
      assert sum(s, 1) == s[0];
      assert sum(s, 0) == 0;
    } else {
      assert sum(s, i+1) == s[0] + sum(s[1..], i);
      assert sum(s, i) == s[0] + sum(s[1..], i-1);
      SumUpdate(s[1..], i-1);
    }
  }

vc-spec: |-
  // <vc-spec>
  method BelowZero(ops: seq<int>) returns (result: bool)
      ensures result <==> exists n: nat :: n <= |ops| && sum(ops, n) < 0
  // </vc-spec>

vc-code: |-
  method BelowZeroImpl(ops: seq<int>) returns (result: bool)
    ensures result <==> exists n: nat :: n <= |ops| && sum(ops, n) < 0
  {
    var balance := 0;
    var i := 0;
    SumPrefix(ops, |ops|);
    while i < |ops|
      invariant 0 <= i <= |ops|
      invariant balance == sum(ops, i)
      invariant forall k: nat :: k <= i ==> sum(ops, k) >= 0
      decreases |ops| - i
    {
      balance := balance + ops[i];
      SumUpdate(ops, i);
      assert balance == sum(ops, i+1);
      if balance < 0 {
        result := true;
        return;
      }
      i := i + 1;
    }
    result := false;
  }

vc-postamble: |-


