vc-preamble: |-


vc-helpers: |-
  // Helper lemma to ensure absolute difference is correctly handled
  lemma AbsDiff(a: real, b: real)
    ensures (if a - b < 0.0 then b - a else a - b) >= 0.0
  {
  }

vc-spec: |-
  // <vc-spec>
  method has_close_elements(numbers: seq<real>, threshold: real) returns (res: bool)
    requires threshold >= 0.0
    ensures res ==> exists i: int, j: int :: 0 <= i < |numbers| && 0 <= j < |numbers| && i != j && (if numbers[i] - numbers[j] < 0.0 then numbers[j] - numbers[i] else numbers[i] - numbers[j]) < threshold
    ensures !res ==> (forall i: int, j: int :: 1 <= i < |numbers| && 0 <= j < i ==>  (if numbers[i] - numbers[j] < 0.0 then numbers[j] - numbers[i] else numbers[i] - numbers[j]) >= threshold)
  // </vc-spec>

vc-code: |-
  method has_close_elements_impl(numbers: seq<real>, threshold: real) returns (res: bool)
    requires threshold >= 0.0
    ensures res ==> exists i: int, j: int :: 0 <= i < |numbers| && 0 <= j < |numbers| && i != j && (if numbers[i] - numbers[j] < 0.0 then numbers[j] - numbers[i] else numbers[i] - numbers[j]) < threshold
    ensures !res ==> (forall i: int, j: int :: 1 <= i < |numbers| && 0 <= j < i ==> (if numbers[i] - numbers[j] < 0.0 then numbers[j] - numbers[i] else numbers[i] - numbers[j]) >= threshold)
  {
    if |numbers| < 2 {
      return false;
    }
    
    var i := 0;
    while i < |numbers| - 1
      invariant 0 <= i < |numbers|
      invariant forall k: int, l: int :: 0 <= k < i && 0 <= l < k ==> (if numbers[k] - numbers[l] < 0.0 then numbers[l] - numbers[k] else numbers[k] - numbers[l]) >= threshold
    {
      var j := i + 1;
      while j < |numbers|
        invariant i < j <= |numbers|
        invariant forall k: int, l: int :: 0 <= k < i && 0 <= l < k ==> (if numbers[k] - numbers[l] < 0.0 then numbers[l] - numbers[k] else numbers[k] - numbers[l]) >= threshold
        invariant forall l: int :: i < l < j ==> (if numbers[i] - numbers[l] < 0.0 then numbers[l] - numbers[i] else numbers[i] - numbers[l]) >= threshold
      {
        var diff := if numbers[i] - numbers[j] < 0.0 then numbers[j] - numbers[i] else numbers[i] - numbers[j];
        if diff < threshold {
          return true;
        }
        j := j + 1;
      }
      i := i + 1;
    }
    return false;
  }

vc-postamble: |-


