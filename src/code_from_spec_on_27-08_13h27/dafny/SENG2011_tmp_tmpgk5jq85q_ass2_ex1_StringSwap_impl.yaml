vc-preamble: |-
  // method verifies

vc-helpers: |-
  // No additional helpers needed for this implementation

vc-spec: |-
  // <vc-spec>
  method StringSwap(s: string, i:nat, j:nat) returns (t: string)
  requires i >= 0 && j >= 0 && |s| >= 0;
  requires |s| > 0 ==> i < |s| && j < |s|;
  ensures multiset(s[..]) == multiset(t[..]);
  ensures |s| == |t|;
  ensures |s| > 0 ==> forall k:nat :: k != i && k != j && k < |s| ==> t[k] == s[k]
  ensures |s| > 0 ==> t[i] == s[j] && t[j] == s[i];
  ensures |s| == 0 ==> t == s;
  // </vc-spec>

vc-code: |-
  method StringSwapImpl(s: string, i: nat, j: nat) returns (t: string)
    requires i >= 0 && j >= 0 && |s| >= 0
    requires |s| > 0 ==> i < |s| && j < |s|
    ensures multiset(s[..]) == multiset(t[..])
    ensures |s| == |t|
    ensures |s| > 0 ==> forall k: nat :: k != i && k != j && k < |s| ==> t[k] == s[k]
    ensures |s| > 0 ==> t[i] == s[j] && t[j] == s[i]
    ensures |s| == 0 ==> t == s
  {
    if |s| == 0 {
      t := s;
    } else {
      var temp := s[i];
      t := s[i := s[j]];
      t := t[j := temp];
    }
  }

vc-postamble: |-
  // string == seq<Char>
  //give se2011 ass2 ex1.dfy

