vc-preamble: |-
  // MFES, Exam 8/Sept/20201, Exercise 5 
  
  // Computes the length (i) of the longest common prefix (initial subarray) 
  // of two arrays a and b.

vc-helpers: |-
  // Helper lemma to ensure array equality up to a certain index
  lemma PrefixEquality(a: array<int>, b: array<int>, i: nat)
    requires i <= a.Length && i <= b.Length
    requires a[..i] == b[..i]
    ensures forall k :: 0 <= k < i ==> a[k] == b[k]
  {
  }

vc-spec: |-
  // <vc-spec>
  method longestPrefix(a: array<int>, b: array <int>) returns (i: nat) 
   ensures i <= a.Length && i <= b.Length
   ensures a[..i] == b[..i]
   ensures i < a.Length && i < b.Length ==> a[i] != b[i]
  // </vc-spec>

vc-code: |-
  method LongestPrefix(a: array<int>, b: array<int>) returns (i: nat)
    ensures i <= a.Length && i <= b.Length
    ensures a[..i] == b[..i]
    ensures i < a.Length && i < b.Length ==> a[i] != b[i]
  {
    i := 0;
    while i < a.Length && i < b.Length && a[i] == b[i]
      invariant i <= a.Length && i <= b.Length
      invariant a[..i] == b[..i]
    {
      i := i + 1;
    }
  }

vc-postamble: |-
  // Test method with an example.

