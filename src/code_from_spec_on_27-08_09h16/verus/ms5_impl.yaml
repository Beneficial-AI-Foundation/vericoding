vc-description: |-


vc-preamble: |-
  use vstd::prelude::*;
  
  verus!{

vc-helpers: |-
  spec fn max(a: i32, b: i32) -> i32 {
      if a >= b { a } else { b }
  }

vc-spec: |-
  fn myfun(a: &mut Vec<i32>, sum: &mut Vec<i32>, N: i32) 
  	// pre-conditions-start
  	requires 
  		old(a).len() == N,
  		old(sum).len() == 1,
  		N > 0,
  		N < 1000,
  	// pre-conditions-end
  	// post-conditions-start
  	ensures
  		sum[0] <= 4 * N,
  	// post-conditions-end

vc-code: |-
  {
      let mut total = 0i32;
      let mut i = 0;
      
      while i < N
          invariant 
              0 <= i <= N,
              total <= 4 * i,
              a.len() == N,
              sum.len() == 1,
              total >= 0,
          decreases N - i,
      {
          if a[i as usize] > 0 {
              if 4 * N >= a[i as usize] && total <= 4 * N - a[i as usize] {
                  total = total + a[i as usize];
              }
          }
          i = i + 1;
      }
      
      sum.set(0, total);
  }

vc-postamble: |-
  
  }
  
  fn main() {}

