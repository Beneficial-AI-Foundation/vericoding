vc-description: |-


vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-
  // No updates needed for helpers in this case

vc-spec: |-
  #[verifier::loop_isolation(false)]
  fn replace(a: &mut Vec<i32>, x: i32, y: i32)
      // post-conditions-start
      ensures
          a.len() == old(a).len(),
          forall|k: int| 0 <= k < old(a).len() && old(a)[k] == x ==> a[k] == y,
          forall|k: int| 0 <= k < old(a).len() && old(a)[k] != x ==> a[k] == old(a)[k],
      // post-conditions-end

vc-code: |-
  {
      let mut i: usize = 0;
      while i < a.len()
          invariant
              0 <= i <= a.len(),
              a.len() == old(a).len(),
              forall|k: int| 0 <= k < i ==> (old(a)[k] == x ==> a[k] == y),
              forall|k: int| 0 <= k < i ==> (old(a)[k] != x ==> a[k] == old(a)[k]),
              forall|k: int| i <= k < a.len() ==> a[k] == old(a)[k],
          decreases a.len() - i
      {
          if a[i] == x {
              a.set(i, y);
          }
          i = i + 1;
      }
  }

vc-postamble: |-
  
  fn main() {}
  }

