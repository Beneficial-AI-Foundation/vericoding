vc-description: |-


vc-preamble: |-
  use vstd::prelude::*;
  
  verus!{

vc-helpers: |-
  // No additional helpers needed for this fix

vc-spec: |-
  fn myfun(a: &mut Vec<i32>, b: &mut Vec<i32>, sum: &mut Vec<i32>, N: i32)
  	// pre-conditions-start
  	requires
  		N > 0,
  		old(a).len() == N,
  		old(b).len() == N,
  		old(sum).len() == 1,
  		N < 1000,
  	// pre-conditions-end
  	// post-conditions-start
  	ensures
  		forall |k:int| 0 <= k < N ==> a[k] == 2 * N + 1,
  	// post-conditions-end

vc-code: |-
  {
      let mut i: i32 = 0;
      while i < N
          invariant
              0 <= i <= N,
              forall |k: int| 0 <= k < i ==> a@.index(k as usize) == 2 * N + 1,
          decreases N - i
      {
          let val = 2 * N + 1;
          assert(val < i32::MAX) by {
              assert(N < 1000);
              assert(2 * N < 2000);
              assert(2 * N + 1 < 2001);
              assert(2001 < i32::MAX);
          };
          a.set(i as usize, val);
          i = i + 1;
      }
  }

vc-postamble: |-
  
  }
  
  fn main() {}

