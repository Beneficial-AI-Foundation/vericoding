vc-description: |-


vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-
  // No changes needed in helpers for this fix

vc-spec: |-
  fn incr_list(l: Vec<i32>) -> (result: Vec<i32>)
      // pre-conditions-start
      requires
          forall|i: int| 0 <= i < l.len() ==> l[i] + 1 <= i32::MAX,
      // pre-conditions-end
  
      // post-conditions-start
      ensures
          result.len() == l.len(),
          forall|i: int| 0 <= i < l.len() ==> #[trigger] result[i] == l[i] + 1,
      // post-conditions-end

vc-code: |-
  {
      let mut result: Vec<i32> = Vec::new();
      let mut i: usize = 0;
      
      while i < l.len()
          invariant
              i <= l.len(),
              result.len() == i,
              forall|j: int| 0 <= j < i ==> #[trigger] result[j] == l[j] + 1,
          decreases l.len() - i
      {
          proof {
              assert(l[i] + 1 <= i32::MAX); // Prove no overflow based on precondition
          }
          result.push(l[i] + 1);
          i = i + 1;
      }
      
      result
  }

vc-postamble: |-
  
  }
  fn main() {}

