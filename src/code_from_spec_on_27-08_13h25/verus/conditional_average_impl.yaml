vc-description: |-


vc-preamble: |-
  use vstd::prelude::*;
  
  verus!{

vc-helpers: |-
  // No updates needed for helpers

vc-spec: |-
  fn conditional_average(vals_1: &Vec<u64>, vals_2: &Vec<u64>, conds_1: &Vec<bool>, conds_2: &Vec<bool>, avgs: &mut Vec<u64>) 
      // pre-conditions-start
      requires 
          vals_1.len() == vals_2.len(),
          vals_1.len() == conds_1.len(),
          vals_1.len() == conds_2.len(),
          forall |idx:int| 0 <= idx < vals_1.len() ==> conds_1[idx] || conds_2[idx],
          forall |idx:int| 0 <= idx < vals_1.len() ==> vals_1[idx] < 1000,
          forall |idx:int| 0 <= idx < vals_2.len() ==> vals_2[idx] < 1000,
      // pre-conditions-end
      // post-conditions-start
      ensures
          avgs.len() == vals_1.len(),
          forall |idx:int| 0 <= idx < vals_1.len() ==> (
              (conds_1[idx] && conds_2[idx] ==> avgs[idx] == (vals_1[idx] + vals_2[idx]) / 2) &&
              (conds_1[idx] && !conds_2[idx] ==> avgs[idx] == vals_1[idx]) &&
              (!conds_1[idx] && conds_2[idx] ==> avgs[idx] == vals_2[idx])
          )
      // post-conditions-end

vc-code: |-
  {
      let len = vals_1.len();
      avgs.clear();
      avgs.reserve(len);
      
      let mut i: usize = 0;
      while i < len
          invariant
              i <= len,
              avgs.len() == i,
              forall |idx: int| 0 <= idx < i ==> (
                  (conds_1[idx] && conds_2[idx] ==> avgs[idx] == (vals_1[idx] + vals_2[idx]) / 2) &&
                  (conds_1[idx] && !conds_2[idx] ==> avgs[idx] == vals_1[idx]) &&
                  (!conds_1[idx] && conds_2[idx] ==> avgs[idx] == vals_2[idx])
              ),
              vals_1.len() == len,
              vals_2.len() == len,
              conds_1.len() == len,
              conds_2.len() == len
          decreases len - i
      {
          let val_1 = vals_1[i];
          let val_2 = vals_2[i];
          let cond_1 = conds_1[i];
          let cond_2 = conds_2[i];
          
          let avg = if cond_1 && cond_2 {
              (val_1 + val_2) / 2
          } else if cond_1 {
              val_1
          } else {
              val_2
          };
          
          avgs.push(avg);
          i = i + 1;
      }
  }

vc-postamble: |-
  
  }
  
  fn main() {}

