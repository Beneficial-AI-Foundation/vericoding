vc-description: |-


vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-
  // No changes needed in helpers for this verification fix

vc-spec: |-
  fn reverse(a: &[i32]) -> (result: Vec<i32>)
      // post-conditions-start
      ensures
          result.len() == a.len(),
          forall|i: int| 0 <= i && i < result.len() ==> result[i] == a[a.len() - 1 - i],
      // post-conditions-end

vc-code: |-
  {
      let mut result: Vec<i32> = Vec::new();
      let mut i: usize = 0;
      
      while i < a.len()
          invariant
              i <= a.len(),
              result.len() == i,
              forall|j: int| 0 <= j && j < i ==> result[j] == a[a.len() - 1 - j],
          decreases a.len() - i
      {
          result.push(a[a.len() - 1 - i]);
          i = i + 1;
      }
      
      result
  }

vc-postamble: |-
  
  fn main() {}
  }

