vc-description: |-


vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-
  // No changes needed in helpers for this fix

vc-spec: |-
  #[verifier::loop_isolation(false)]
  fn remove_element(a: &[i32], pos: usize) -> (result: Vec<i32>)
      // pre-conditions-start
      requires
          0 <= pos < a.len(),
      // pre-conditions-end
      // post-conditions-start
      ensures
          result.len() == a.len() - 1,
          forall|i: int| 0 <= i < pos ==> result[i] == a[i],
          forall|i: int| pos <= i < result.len() ==> result[i] == a[i + 1],
      // post-conditions-end

vc-code: |-
  {
      let mut result: Vec<i32> = Vec::new();
      let mut i: usize = 0;
      
      while i < a.len()
          invariant
              i <= a.len(),
              result.len() == if i <= pos { i } else { (i - 1) as usize },
              forall|j: int| 0 <= j < result.len() ==> 
                  if j < pos {
                      result[j] == a[j]
                  } else {
                      result[j] == a[j + 1]
                  },
          decreases a.len() - i
      {
          if i != pos {
              result.push(a[i]);
          }
          i = i + 1;
      }
      
      result
  }

vc-postamble: |-
  
  fn main() {}
  }

