vc-description: |-


vc-preamble: |-
  use vstd::prelude::*;
  
  verus!{

vc-helpers: |-
  // No updates needed in helpers for this fix

vc-spec: |-
  fn myfun(a: &mut Vec<i32>, b: &mut Vec<i32>, sum: &mut Vec<i32>, N: i32)
  	// pre-conditions-start
  	requires
  		N > 0,
  		old(a).len() == N,
  		old(b).len() == N,
  		old(sum).len() == 1,
  		N < 1000,
  	// pre-conditions-end
  	// post-conditions-start
  	ensures
  		sum[0] <= 2 * N,
  	// post-conditions-end

vc-code: |-
  {
      let mut i: usize = 0;
      sum.set(0, 0);
  
      while i < N as usize
          invariant
              i <= N as usize,
              sum.len() == 1,
              sum[0] <= 2 * (i as i32),
              i < old(a).len(),
              i < old(b).len(),
          decreases (N as usize) - i
      {
          let ai = a@[i];
          let bi = b@[i];
          let current_sum = sum@[0];
          let increment = (if ai > 0 { 1 } else { 0 }) + (if bi > 0 { 1 } else { 0 });
          proof {
              assert(current_sum + increment <= 2 * (i as i32) + 2);
          }
          sum.set(0, current_sum + increment);
          i = i + 1;
      }
  }

vc-postamble: |-
  
  }
  
  fn main() {}

