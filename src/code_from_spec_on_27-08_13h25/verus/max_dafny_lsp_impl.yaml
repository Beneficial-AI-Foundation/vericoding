vc-description: |-


vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-
  // No updates needed for helpers in this case

vc-spec: |-
  #[verifier::loop_isolation(false)]
  fn max_dafny_lsp(a: &[i32]) -> (x: usize)
      // pre-conditions-start
      requires
          a.len() > 0,
      // pre-conditions-end
      // post-conditions-start
      ensures
          0 <= x < a.len(),
          forall|k: int| 0 <= k < a.len() ==> a[k] <= a[x as int],
      // post-conditions-end

vc-code: |-
  {
      let mut max_index: usize = 0;
      let mut i: usize = 1;
  
      while i < a.len()
          invariant
              0 <= max_index < a.len(),
              0 <= i <= a.len(),
              forall|k: int| 0 <= k < i as int ==> a[k] <= a[max_index as int],
          decreases a.len() - i,
      {
          if a[i] > a[max_index] {
              max_index = i;
          }
          i = i + 1;
      }
  
      max_index
  }

vc-postamble: |-
  
  fn main() {}
  }

