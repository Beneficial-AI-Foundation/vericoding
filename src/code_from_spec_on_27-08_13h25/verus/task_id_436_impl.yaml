vc-description: |-


vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-


vc-spec: |-
  fn find_negative_numbers(arr: &Vec<i32>) -> (negative_list: Vec<i32>)
      // post-conditions-start
      ensures
          negative_list@ == arr@.filter(|x: i32| x < 0),
      // post-conditions-end

vc-code: |-
  {
      let mut negative_list: Vec<i32> = Vec::new();
      let mut i: usize = 0;
  
      while i < arr.len()
          invariant
              i <= arr.len(),
              negative_list@ == arr@.take(i as int).filter(|x: i32| *x < 0),
          decreases arr.len() - i,
      {
          if arr[i] < 0 {
              negative_list.push(arr[i]);
          }
          i = i + 1;
      }
  
      negative_list
  }

vc-postamble: |-
  
  } // verus!
  
  fn main() {}

