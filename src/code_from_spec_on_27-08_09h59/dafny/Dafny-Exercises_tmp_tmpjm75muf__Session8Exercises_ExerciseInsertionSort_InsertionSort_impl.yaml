vc-preamble: |-
  predicate sorted_seg(a:array<int>, i:int, j:int) //i and j included
  requires 0 <= i <= j+1 <= a.Length
  reads a
  {
      forall l, k :: i <= l <= k <= j ==> a[l] <= a[k]
  }

vc-helpers: |-
  lemma SortedSegmentExtend(a: array<int>, i: int, j: int, k: int)
    requires 0 <= i <= j < k < a.Length
    requires sorted_seg(a, i, j)
    requires forall l :: i <= l <= j ==> a[l] <= a[k]
    ensures sorted_seg(a, i, k)
  {
    forall l, m | i <= l <= m <= k
      ensures a[l] <= a[m]
    {
      if m <= j {
        assert sorted_seg(a, i, j);
      } else if l <= j {
        assert a[l] <= a[j];
        assert a[j] <= a[k];
        assert a[l] <= a[k];
        assert a[l] <= a[m];
      } else {
        assert l > j;
        assert m > j;
        assert l == k && m == k;
      }
    }
  }
  
  lemma SortedSegmentPreserved(a: array<int>, i: int, j: int, pos: int, val: int)
    requires 0 <= i <= j < a.Length
    requires 0 <= pos < a.Length
    requires pos < i || pos > j
    requires sorted_seg(a, i, j)
    ensures sorted_seg(a, i, j)
  {
  }

vc-spec: |-
  // <vc-spec>
  method InsertionSort(a: array<int>)
    modifies a;
    ensures sorted_seg(a,0,a.Length-1) 
    ensures multiset(a[..]) == old(multiset(a[..])) //Add and prove this
  // </vc-spec>

vc-code: |-
  {
    if a.Length <= 1 {
      return;
    }
    
    var i := 1;
    while i < a.Length
      invariant 1 <= i <= a.Length
      invariant sorted_seg(a, 0, i-1)
      invariant multiset(a[..]) == old(multiset(a[..]))
    {
      var key := a[i];
      var j := i - 1;
      
      while j >= 0 && a[j] > key
        invariant -1 <= j <= i - 1
        invariant sorted_seg(a, 0, j)
        invariant sorted_seg(a, j+2, i)
        invariant forall l :: 0 <= l <= j ==> a[l] <= key
        invariant forall l :: j+2 <= l <= i ==> a[l] >= key
        invariant forall l :: j+2 <= l <= i ==> a[l] == key
        invariant multiset(a[..]) == old(multiset(a[..]))
        decreases j
      {
        a[j+1] := a[j];
        j := j - 1;
      }
      
      a[j+1] := key;
      i := i + 1;
    }
  }

vc-postamble: |-


