vc-preamble: |-
  // Author of question: Snorri Agnarsson
  // Permalink of question: https://rise4fun.com/Dafny/0HRr
  
  // Author of solution:    Alexander Gu√∞mundsson
  // Permalink of solution: https://rise4fun.com/Dafny/8pxWd
  
  // Use the command
  //   dafny LinearSearch-skeleton.dfy
  // or
  //   compile LinearSearch-skeleton.dfy
  // to compile the file.
  // Or use the web page rise4fun.com/dafny.
  
  // When you have solved the problem put
  // the solution on the Dafny web page,
  // generate a permalink and put it in
  // this file.

vc-helpers: |-


vc-spec: |-
  // <vc-spec>
  method SearchLoop( a: seq<int>, i: int, j: int, x: int ) returns (k: int)
      requires 0 <= i <= j <= |a|;
      ensures i <= k < j || k == -1;
      ensures k != -1 ==> a[k] == x;
      ensures k != -1 ==> forall r | k < r < j :: a[r] != x;
      ensures k == -1 ==> forall r | i <= r < j :: a[r] != x;
  // </vc-spec>

vc-code: |-
  {
    var index := i;
    var result := -1;
    
    while index < j
      invariant i <= index <= j
      invariant result == -1 || (i <= result < index && a[result] == x)
      invariant result != -1 ==> forall r | result < r < index :: a[r] != x
      invariant result == -1 ==> forall r | i <= r < index :: a[r] != x
    {
      if a[index] == x {
        result := index;
      }
      index := index + 1;
    }
    
    return result;
  }

vc-postamble: |-


