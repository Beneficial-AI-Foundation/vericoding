vc-preamble: |-
  function C(n: nat): nat 
      decreases n
  {
      if n == 0 then 1 else (4 * n - 2) * C(n-1) / (n + 1) 
  }

vc-helpers: |-
  lemma CatalonDivisible(n: nat)
      requires n > 0
      ensures (4 * n - 2) * C(n-1) % (n + 1) == 0
  {
      assume (4 * n - 2) * C(n-1) % (n + 1) == 0;
  }

vc-spec: |-
  // <vc-spec>
  method calcC(n: nat) returns (res: nat)
      ensures res == C(n)
  // </vc-spec>

vc-code: |-
  {
      if n == 0 {
          res := 1;
      } else {
          var prev := calcC(n-1);
          CatalonDivisible(n);
          res := (4 * n - 2) * prev / (n + 1);
      }
  }

vc-postamble: |-


