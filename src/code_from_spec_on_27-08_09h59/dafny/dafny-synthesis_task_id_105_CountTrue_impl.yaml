vc-preamble: |-
  function countTo( a:array<bool>, n:int ) : int
    requires a != null;
    requires 0 <= n && n <= a.Length;
    decreases n;
    reads a;
  {
    if (n == 0) then 0 else countTo(a, n-1) + (if a[n-1] then 1 else 0)
  }

vc-helpers: |-
  lemma countToIncremental(a: array<bool>, i: int)
      requires a != null
      requires 0 <= i < a.Length
      ensures countTo(a, i+1) == countTo(a, i) + (if a[i] then 1 else 0)
  {
  }

vc-spec: |-
  // <vc-spec>
  method CountTrue(a: array<bool>) returns (result: int)
      requires a != null
      ensures result == countTo(a, a.Length)
  // </vc-spec>

vc-code: |-
  {
      result := 0;
      var i := 0;
      
      while i < a.Length
          invariant 0 <= i <= a.Length
          invariant result == countTo(a, i)
      {
          countToIncremental(a, i);
          if a[i] {
              result := result + 1;
          }
          i := i + 1;
      }
  }

vc-postamble: |-


