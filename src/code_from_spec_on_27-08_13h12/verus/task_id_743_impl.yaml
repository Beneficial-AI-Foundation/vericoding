vc-description: |-


vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {
  
  spec fn rotation_split(len: usize, n: usize) -> (result: int) {
      len - (n % len)
  }
  // pure-end

vc-helpers: |-


vc-spec: |-
  fn rotate_right(list: &Vec<u32>, n: usize) -> (new_list: Vec<u32>)
      // pre-conditions-start
      requires
          list.len() > 0,
      // pre-conditions-end
      // post-conditions-start
      ensures
          new_list.len() == list.len(),
          new_list@ == list@.subrange(rotation_split(list.len(), n) as int, list@.len() as int).add(
              list@.subrange(0, rotation_split(list.len(), n) as int),
          ),
      // post-conditions-end

vc-code: |-
  {
      // impl-start
      assume(false);
      vec![]
      // impl-end
  }

vc-postamble: |-
  
  } // verus!
  
  fn main() {}

