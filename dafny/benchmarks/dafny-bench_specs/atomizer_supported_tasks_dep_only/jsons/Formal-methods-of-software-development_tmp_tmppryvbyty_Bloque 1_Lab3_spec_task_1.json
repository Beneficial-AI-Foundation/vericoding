{
  "skeleton": "\n//ATOM_PLACEHOLDER_multipleReturns//ATOM_PLACEHOLDER_multipleReturns2//ATOM_PLACEHOLDER_multipleReturns3//ATOM_PLACEHOLDER_factorial\n\n// PROGRAMA VERIFICADOR DE WHILE\n//ATOM_PLACEHOLDER_ComputeFact\n\n//ATOM_PLACEHOLDER_ComputeFact2\n\n\n// n>=1 ==> 1 + 3 + 5 + ... + (2*n-1) = n*n\n\n//ATOM_PLACEHOLDER_Sqare\n\n\n//ATOM_PLACEHOLDER_sumSerie\n\n//ATOM_PLACEHOLDER_unknown_1152 Sqare_Lemma (n:int)\nrequires n>=1\nensures sumSerie(n) == n*n\n{\n    if n==1 {}\n    else{\n        Sqare_Lemma(n-1);\n\n        calc == {\n            sumSerie(n);\n            sumSerie(n-1) + 2*n -1;\n            {\n                Sqare_Lemma(n-1);\n            }\n            (n-1)*(n-1) + 2*n -1;\n            n*n-2*n+1 +2*n -1;\n            n*n;\n        }\n    }\n}\n\n\n//ATOM_PLACEHOLDER_Sqare2\n\n\n\n\n\n",
  "atoms": {
    "multipleReturns": [
      [],
      "// SPEC \n\nmethod multipleReturns (x:int, y:int) returns (more:int, less:int)\nrequires y > 0\nensures less < x < more\n",
      "method"
    ]
  },
  "placeholder_mapping": {
    "//ATOM_PLACEHOLDER_multipleReturns": "multipleReturns"
  }
}