{
  "skeleton": "\n//ATOM_PLACEHOLDER_Foo\n\n//ATOM_PLACEHOLDER_stringToSet\n//ensures forall a, b :: 0 <= a < b < |s|  ==> forall k, j :: a <=k < j <=b ==> k !=j ==> s[k] != s[j] ==> b-a <= longest\n// lemma stringSet(s: string)\n//    \n//   {\n//     if |s| != 0 {\n\n\n//     }\n//   }\n\n\n//ATOM_PLACEHOLDER_Main\n\n",
  "atoms": {
    "Foo": [
      [],
      "// SPEC \n\nmethod Foo(y: int, x: int) returns (z: int) \n  requires 0 <= y\n  ensures z == x*y\n{\n}\n",
      "method"
    ]
  },
  "placeholder_mapping": {
    "//ATOM_PLACEHOLDER_Foo": "Foo"
  }
}