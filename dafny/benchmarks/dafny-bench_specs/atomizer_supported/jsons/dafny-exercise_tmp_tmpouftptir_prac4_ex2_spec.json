{
  "skeleton": "//ATOM_PLACEHOLDER_triple\n\n//ATOM_PLACEHOLDER_GetTriple\n\n//ATOM_PLACEHOLDER_TesterGetTriple\n\n\n\n",
  "atoms": {
    "triple": [
      [],
      "// ATOM \npredicate triple(a: array<int>) \nreads a\n{\n\texists i :: 0 <= i < a.Length - 2 && a[i] == a[i + 1] == a[i + 2]\n}\n",
      "predicate"
    ],
    "GetTriple": [
      [
        "triple"
      ],
      "// SPEC \n\nmethod GetTriple(a: array<int>) returns (index: int)\nensures 0 <= index < a.Length - 2 || index == a.Length\nensures index == a.Length <==> !triple(a)\nensures 0 <= index < a.Length - 2 <==> triple(a)\nensures 0 <= index < a.Length - 2 ==> a[index] == a[index + 1] == a[index + 2]\n{\n}\n",
      "method"
    ],
    "TesterGetTriple": [
      [
        "GetTriple"
      ],
      "// SPEC \n\nmethod TesterGetTriple()\n{\n}\n",
      "method"
    ]
  },
  "placeholder_mapping": {
    "//ATOM_PLACEHOLDER_triple": "triple",
    "//ATOM_PLACEHOLDER_GetTriple": "GetTriple",
    "//ATOM_PLACEHOLDER_TesterGetTriple": "TesterGetTriple"
  }
}