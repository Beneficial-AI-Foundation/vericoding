{
  "skeleton": "// RUN: %dafny /compile:0 /dprint:\"%t.dprint\" \"%s\" > \"%t\"\n// RUN: %diff \"%s.expect\" \"%t\"\n\n//ATOM_PLACEHOLDER_NinetyOne\n\n//ATOM_PLACEHOLDER_Gcd\n\n//ATOM_PLACEHOLDER_Determinant\n\n\n\n",
  "atoms": {
    "NinetyOne": [
      [],
      "// SPEC \n// RUN: %dafny /compile:0 /dprint:\"%t.dprint\" \"%s\" > \"%t\"\n// RUN: %diff \"%s.expect\" \"%t\"\n\nmethod NinetyOne(x: int, ghost proveFunctionalPostcondition: bool) returns (z: int)\n  ensures proveFunctionalPostcondition ==> z == if x > 101 then x-10 else 91;\n{\n}\n",
      "method"
    ],
    "Gcd": [
      [],
      "// SPEC \n\nmethod Gcd(x1: int, x2: int)\n  requires 1 <= x1 && 1 <= x2;\n{\n}\n",
      "method"
    ],
    "Determinant": [
      [],
      "// SPEC \n\nmethod Determinant(X: array2<int>, M: int) returns (z: int)\n  requires 1 <= M;\n  requires X != null && M == X.Length0 && M == X.Length1;\n  modifies X;\n{\n}\n",
      "method"
    ]
  },
  "placeholder_mapping": {
    "//ATOM_PLACEHOLDER_NinetyOne": "NinetyOne",
    "//ATOM_PLACEHOLDER_Gcd": "Gcd",
    "//ATOM_PLACEHOLDER_Determinant": "Determinant"
  }
}