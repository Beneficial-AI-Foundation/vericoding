{
  "skeleton": "// RUN: %dafny /compile:3 /print:\"%t.print\" /dprint:\"%t.dprint\" \"%s\" > \"%t\"\n// RUN: %diff \"%s.expect\" \"%t\"\n\n// /autoTriggers:1 added to suppress instabilities\n\n//ATOM_PLACEHOLDER_Main\n\n//ATOM_PLACEHOLDER_H\n\n//ATOM_PLACEHOLDER_K\n\n//ATOM_PLACEHOLDER_L\n\n//ATOM_PLACEHOLDER_M\n\n//ATOM_PLACEHOLDER_M'\n\n\n\n",
  "atoms": {
    "Main": [
      [],
      "// SPEC \n// RUN: %dafny /compile:3 /print:\"%t.print\" /dprint:\"%t.dprint\" \"%s\" > \"%t\"\n// RUN: %diff \"%s.expect\" \"%t\"\n\n// /autoTriggers:1 added to suppress instabilities\n\nmethod Main() {\n}\n",
      "method"
    ],
    "H": [
      [],
      "// SPEC \n\nmethod H(a: array<int>, c: array<int>, n: nat, j: nat)\n  requires j < n == a.Length == c.Length\n{\n}\n",
      "method"
    ],
    "K": [
      [],
      "// SPEC \n\nmethod K(a: array<int>, c: array<int>, n: nat)\n  requires n <= a.Length && n <= c.Length\n{\n}\n",
      "method"
    ],
    "L": [
      [],
      "// SPEC \n\nmethod L(a: array<int>, c: array<int>, n: nat)\n  requires n <= a.Length == c.Length\n{\n}\n",
      "method"
    ],
    "M": [
      [],
      "// SPEC \n\nmethod M'(a: array<int>, c: array<int>, m: nat, n: nat, k: nat, l: nat)\n  requires k + m <= a.Length\n  requires l + n <= c.Length\n{\n}\n",
      "method"
    ]
  },
  "placeholder_mapping": {
    "//ATOM_PLACEHOLDER_Main": "Main",
    "//ATOM_PLACEHOLDER_H": "H",
    "//ATOM_PLACEHOLDER_K": "K",
    "//ATOM_PLACEHOLDER_L": "L",
    "//ATOM_PLACEHOLDER_M": "M",
    "//ATOM_PLACEHOLDER_M'": "M'"
  }
}