{
  "skeleton": "//ATOM_PLACEHOLDER_has_count\n\n\n//ATOM_PLACEHOLDER_count\n\n",
  "atoms": {
    "has_count": [
      [],
      "// ATOM \nfunction has_count(v: int, a: array<int>, n: int): int\n    reads a  // This allows the function to read from array 'a'\n    requires n >= 0 && n <= a.Length\n{\n    if n == 0 then 0 else\n    (if a[n-1] == v then has_count(v, a, n-1) + 1 else has_count(v, a, n-1))\n}\n",
      "function"
    ],
    "count": [
      [
        "has_count"
      ],
      "// SPEC \n\n\nmethod count (v: int, a: array<int>, n: int) returns (r: int)\n    requires n >= 0 && n <= a.Length;\n    ensures has_count(v, a, n) == r;\n{\n}\n",
      "method"
    ]
  },
  "placeholder_mapping": {
    "//ATOM_PLACEHOLDER_has_count": "has_count",
    "//ATOM_PLACEHOLDER_count": "count"
  }
}