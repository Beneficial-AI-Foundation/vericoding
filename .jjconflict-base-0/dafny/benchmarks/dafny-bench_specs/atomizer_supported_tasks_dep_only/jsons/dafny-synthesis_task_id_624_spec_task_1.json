{
  "skeleton": "//ATOM_PLACEHOLDER_IsLowerCase\n\n//ATOM_PLACEHOLDER_IsLowerUpperPair\n\n//ATOM_PLACEHOLDER_ShiftMinus32\n\n//ATOM_PLACEHOLDER_ToUppercase\n\n",
  "atoms": {
    "ToUppercase": [
      [
        "IsLowerCase",
        "IsLowerUpperPair",
        "ShiftMinus32"
      ],
      "// SPEC \n\nmethod ToUppercase(s: string) returns (v: string)\n    ensures |v| == |s|\n    ensures forall i :: 0 <= i < |s| ==>  if IsLowerCase(s[i]) then IsLowerUpperPair(s[i], v[i]) else v[i] == s[i]\n{\n}\n",
      "method"
    ],
    "ShiftMinus32": [
      [],
      "// ATOM \n\nfunction ShiftMinus32(c : char) :  char\n{\n    ((c as int - 32) % 128) as char\n}\n",
      "function"
    ],
    "IsLowerCase": [
      [],
      "// ATOM \npredicate IsLowerCase(c : char)\n{\n    97 <= c as int <= 122\n}\n",
      "predicate"
    ],
    "IsLowerUpperPair": [
      [],
      "// ATOM \n\npredicate IsLowerUpperPair(c : char, C : char)\n{\n    (c as int) == (C as int) + 32\n}\n",
      "predicate"
    ]
  },
  "placeholder_mapping": {
    "//ATOM_PLACEHOLDER_IsLowerCase": "IsLowerCase",
    "//ATOM_PLACEHOLDER_IsLowerUpperPair": "IsLowerUpperPair",
    "//ATOM_PLACEHOLDER_ShiftMinus32": "ShiftMinus32",
    "//ATOM_PLACEHOLDER_ToUppercase": "ToUppercase"
  }
}