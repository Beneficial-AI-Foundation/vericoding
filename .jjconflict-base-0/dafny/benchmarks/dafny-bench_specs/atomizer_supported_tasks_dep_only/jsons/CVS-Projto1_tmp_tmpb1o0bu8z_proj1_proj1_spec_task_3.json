{
  "skeleton": "//Exercicio 1.a)\n//ATOM_PLACEHOLDER_sum\n\n//Exercicio 1.b)\n//ATOM_PLACEHOLDER_query\n\n//Exercicio 1.c)\n//ATOM_PLACEHOLDER_queryLemma\n\n//ATOM_PLACEHOLDER_queryFast\n\n//ATOM_PLACEHOLDER_is_prefix_sum_for\n\n///Exercicio 2.\n//ATOM_PLACEHOLDER_List//ATOM_PLACEHOLDER_from_array\n\n//ATOM_PLACEHOLDER_mem\n\n\n\n",
  "atoms": {
    "from_array": [
      [
        "mem"
      ],
      "// SPEC \n\nmethod from_array<T>(a: array<T>) returns (l: List<T>)\nrequires a.Length > 0\nensures forall j::0 <= j < a.Length ==> mem(a[j],l)\n{\n}\n",
      "method"
    ],
    "mem": [
      [],
      "// ATOM \n\nfunction mem<T(==)> (x: T, l:List<T>) : bool\n{\n    match l\n    case Nil => false\n    case Cons(y,r)=> if (x==y) then true else mem(x,r)\n}\n",
      "function"
    ]
  },
  "placeholder_mapping": {
    "//ATOM_PLACEHOLDER_from_array": "from_array",
    "//ATOM_PLACEHOLDER_mem": "mem"
  }
}