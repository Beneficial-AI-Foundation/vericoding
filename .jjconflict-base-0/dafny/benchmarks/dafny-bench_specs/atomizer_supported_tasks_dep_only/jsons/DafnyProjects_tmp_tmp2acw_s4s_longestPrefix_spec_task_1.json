{
  "skeleton": "// MFES, Exam 8/Sept/20201, Exercise 5 \n\n// Computes the length (i) of the longest common prefix (initial subarray) \n// of two arrays a and b. \n//ATOM_PLACEHOLDER_longestPrefix\n \n// Test method with an example.\n//ATOM_PLACEHOLDER_testLongestPrefix\n\n\n\n",
  "atoms": {
    "longestPrefix": [
      [],
      "// SPEC \n// MFES, Exam 8/Sept/20201, Exercise 5 \n\n// Computes the length (i) of the longest common prefix (initial subarray) \n// of two arrays a and b. \nmethod longestPrefix(a: array<int>, b: array <int>) returns (i: nat) \n ensures i <= a.Length && i <= b.Length\n ensures a[..i] == b[..i]\n ensures i < a.Length && i < b.Length ==> a[i] != b[i]\n{\n}\n",
      "method"
    ]
  },
  "placeholder_mapping": {
    "//ATOM_PLACEHOLDER_longestPrefix": "longestPrefix"
  }
}