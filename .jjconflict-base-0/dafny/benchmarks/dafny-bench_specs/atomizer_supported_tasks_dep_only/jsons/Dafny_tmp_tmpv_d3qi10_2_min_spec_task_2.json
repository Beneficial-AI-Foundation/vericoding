{
  "skeleton": "\n//ATOM_PLACEHOLDER_min\n\n//ATOM_PLACEHOLDER_minMethod\n\n//ATOM_PLACEHOLDER_minFunction\n\n\n// Return a minimum of a.\n//ATOM_PLACEHOLDER_minArray\n\n//ATOM_PLACEHOLDER_Main\n\n\n\n",
  "atoms": {
    "minArray": [
      [],
      "// SPEC \n\n\n// Return a minimum of a.\nmethod minArray(a: array<int>) returns (m: int)\n    requires a!= null  && a.Length > 0 ;\n\n    ensures forall k | 0 <= k < a.Length :: m <= a[k]\n    ensures exists k | 0 <= k < a.Length :: m == a[k]\n{\n}\n",
      "method"
    ]
  },
  "placeholder_mapping": {
    "//ATOM_PLACEHOLDER_minArray": "minArray"
  }
}