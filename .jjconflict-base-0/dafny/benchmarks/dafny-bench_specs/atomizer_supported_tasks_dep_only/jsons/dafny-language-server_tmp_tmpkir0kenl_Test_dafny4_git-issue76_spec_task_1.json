{
  "skeleton": "// RUN: %dafny  /compile:3 \"%s\" > \"%t\"\n// RUN: %diff \"%s.expect\" \"%t\"\n\n//ATOM_PLACEHOLDER_Main\n\n// The verification of the following methods requires knowledge\n// about the injectivity of sequence displays.\n\n//ATOM_PLACEHOLDER_M0\n\n//ATOM_PLACEHOLDER_M1\n\n//ATOM_PLACEHOLDER_EqualityOfStrings0\n\n//ATOM_PLACEHOLDER_EqualityOfStrings1\n\n//ATOM_PLACEHOLDER_M2\n\n//ATOM_PLACEHOLDER_M3\n\n\n\n",
  "atoms": {
    "Main": [
      [
        "M1",
        "EqualityOfStrings1",
        "EqualityOfStrings0",
        "M0"
      ],
      "// SPEC \n// RUN: %dafny  /compile:3 \"%s\" > \"%t\"\n// RUN: %diff \"%s.expect\" \"%t\"\n\nmethod Main() {\n}\n",
      "method"
    ],
    "M0": [
      [],
      "// SPEC \n\n// The verification of the following methods requires knowledge\n// about the injectivity of sequence displays.\n\nmethod M0()\n{\n}\n",
      "method"
    ],
    "EqualityOfStrings0": [
      [],
      "// SPEC \n\nmethod EqualityOfStrings0() {\n}\n",
      "method"
    ],
    "EqualityOfStrings1": [
      [],
      "// SPEC \n\nmethod EqualityOfStrings1() {\n}\n",
      "method"
    ],
    "M1": [
      [],
      "// SPEC \n\nmethod M1()\n{\n}\n",
      "method"
    ]
  },
  "placeholder_mapping": {
    "//ATOM_PLACEHOLDER_Main": "Main",
    "//ATOM_PLACEHOLDER_M0": "M0",
    "//ATOM_PLACEHOLDER_M1": "M1",
    "//ATOM_PLACEHOLDER_EqualityOfStrings0": "EqualityOfStrings0",
    "//ATOM_PLACEHOLDER_EqualityOfStrings1": "EqualityOfStrings1"
  }
}