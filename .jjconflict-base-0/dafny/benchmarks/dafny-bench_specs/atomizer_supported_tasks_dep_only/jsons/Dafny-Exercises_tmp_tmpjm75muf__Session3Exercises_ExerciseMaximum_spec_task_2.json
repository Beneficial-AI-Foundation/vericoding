{
  "skeleton": "//Algorithm 1: From left to right return the first\n//ATOM_PLACEHOLDER_mmaximum1\n\n//Algorithm 2: From right to left return the last\n//ATOM_PLACEHOLDER_mmaximum2\n\n\n//ATOM_PLACEHOLDER_mfirstMaximum\n\n//ATOM_PLACEHOLDER_mlastMaximum\n\n//Algorithm : from left to right\n//Algorithm : from right to left\n\n//ATOM_PLACEHOLDER_mmaxvalue1\n\n//ATOM_PLACEHOLDER_mmaxvalue2\n\n",
  "atoms": {
    "mmaximum2": [
      [],
      "// SPEC \n\n//Algorithm 2: From right to left return the last\nmethod mmaximum2(v:array<int>) returns (i:int) \nrequires v.Length>0\nensures 0<=i<v.Length \nensures forall k:: 0<=k<v.Length ==> v[i]>=v[k]\n{\n}\n",
      "method"
    ]
  },
  "placeholder_mapping": {
    "//ATOM_PLACEHOLDER_mmaximum2": "mmaximum2"
  }
}