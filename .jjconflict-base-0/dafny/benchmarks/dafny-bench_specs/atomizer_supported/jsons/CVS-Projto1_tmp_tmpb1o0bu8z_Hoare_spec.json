{
  "skeleton": "//ATOM_PLACEHOLDER_Max\n\n//ATOM_PLACEHOLDER_Test\n\n//ATOM_PLACEHOLDER_m1\n\n\n\n//ATOM_PLACEHOLDER_fib\n\n//ATOM_PLACEHOLDER_Fib\n\n\n//ATOM_PLACEHOLDER_List//ATOM_PLACEHOLDER_add\n\n\n//ATOM_PLACEHOLDER_addImp\n\n\n//ATOM_PLACEHOLDER_MaxA\n\n\n\n",
  "atoms": {
    "Max": [
      [],
      "// SPEC \nmethod Max (x: nat, y:nat) returns (r:nat)\n    ensures (r >= x && r >=y)\n    ensures (r == x || r == y)\n{\n}\n",
      "method"
    ],
    "Test": [
      [
        "Max"
      ],
      "// SPEC \n\nmethod Test ()\n{\n}\n",
      "method"
    ],
    "m1": [
      [],
      "// SPEC \n\nmethod m1 (x: int, y: int) returns (z: int)\nrequires 0 < x < y\nensures z >= 0 && z <= y && z != x\n{\n}\n",
      "method"
    ],
    "fib": [
      [],
      "// ATOM \n\n\n\nfunction fib (n: nat) : nat\n{\n    if n == 0 then 1 else\n    if n == 1 then 1 else\n    fib(n -1) + fib (n-2)\n}\n",
      "function"
    ],
    "Fib": [
      [
        "fib"
      ],
      "// SPEC \n\nmethod Fib (n: nat) returns (r:nat)\n    ensures r == fib(n)\n{\n}\n",
      "method"
    ],
    "List": [
      [],
      "// ATOM \n\n\ndatatype List<T> = Nil | Cons(head: T, tail: List<T>)\n",
      "datatype"
    ],
    "add": [
      [],
      "// ATOM \n\nfunction add(l:List<int>) : int\n{\n    match l\n    case Nil => 0\n    case Cons(x, xs) => x + add(xs)\n}\n",
      "function"
    ],
    "addImp": [
      [
        "add"
      ],
      "// SPEC \n\n\nmethod addImp (l: List<int>) returns (s: int)\n    ensures s == add(l)\n{\n}\n",
      "method"
    ],
    "MaxA": [
      [],
      "// SPEC \n\n\nmethod MaxA (a: array<int>) returns (m: int)\n    requires a.Length > 0\n    ensures forall i :: 0 <= i < a.Length ==> a[i] <= m\n    ensures exists i :: 0 <= i < a.Length && a[i] == m\n{\n}\n",
      "method"
    ]
  },
  "placeholder_mapping": {
    "//ATOM_PLACEHOLDER_Max": "Max",
    "//ATOM_PLACEHOLDER_Test": "Test",
    "//ATOM_PLACEHOLDER_m1": "m1",
    "//ATOM_PLACEHOLDER_fib": "fib",
    "//ATOM_PLACEHOLDER_Fib": "Fib",
    "//ATOM_PLACEHOLDER_List": "List",
    "//ATOM_PLACEHOLDER_add": "add",
    "//ATOM_PLACEHOLDER_addImp": "addImp",
    "//ATOM_PLACEHOLDER_MaxA": "MaxA"
  }
}