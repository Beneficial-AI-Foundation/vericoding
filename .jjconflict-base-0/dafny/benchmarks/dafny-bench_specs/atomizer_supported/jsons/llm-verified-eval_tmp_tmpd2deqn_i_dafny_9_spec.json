{
  "skeleton": "//ATOM_PLACEHOLDER_isMax\n\n//ATOM_PLACEHOLDER_max\n\n//ATOM_PLACEHOLDER_rolling_max\n\n\n\n",
  "atoms": {
    "isMax": [
      [],
      "// ATOM \nfunction isMax(m: int, numbers: seq<int>): bool\n{\n    m in numbers &&\n    forall i :: 0 <= i < |numbers| ==> numbers[i] <= m\n\n}\n",
      "function"
    ],
    "max": [
      [
        "isMax"
      ],
      "// SPEC \n\nmethod max(numbers: seq<int>) returns (result: int)\nrequires numbers != []\nensures isMax(result, numbers)\n{\n}\n",
      "method"
    ],
    "rolling_max": [
      [
        "isMax"
      ],
      "// SPEC \n\nmethod rolling_max(numbers: seq<int>) returns (result: seq<int>)\nrequires numbers != []\nensures |result| == |numbers|\nensures forall i :: 0 < i < |result| ==> isMax(result[i], numbers[0..(i+1)])\n{\n}\n",
      "method"
    ]
  },
  "placeholder_mapping": {
    "//ATOM_PLACEHOLDER_isMax": "isMax",
    "//ATOM_PLACEHOLDER_max": "max",
    "//ATOM_PLACEHOLDER_rolling_max": "rolling_max"
  }
}