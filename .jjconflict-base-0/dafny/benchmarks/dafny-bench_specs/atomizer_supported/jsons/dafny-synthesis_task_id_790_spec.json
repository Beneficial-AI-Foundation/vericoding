{
  "skeleton": "//ATOM_PLACEHOLDER_IsEven\n\n//ATOM_PLACEHOLDER_IsEvenAtIndexEven",
  "atoms": {
    "IsEven": [
      [],
      "// ATOM \npredicate IsEven(n: int)\n{\n    n % 2 == 0\n}\n",
      "predicate"
    ],
    "IsEvenAtIndexEven": [
      [
        "IsEven"
      ],
      "// SPEC \n\nmethod IsEvenAtIndexEven(lst: seq<int>) returns (result: bool)\n    ensures result <==> forall i :: 0 <= i < |lst| ==> (IsEven(i) ==> IsEven(lst[i]))\n{\n}\n",
      "method"
    ]
  },
  "placeholder_mapping": {
    "//ATOM_PLACEHOLDER_IsEven": "IsEven",
    "//ATOM_PLACEHOLDER_IsEvenAtIndexEven": "IsEvenAtIndexEven"
  }
}