{
  "skeleton": "//ATOM_PLACEHOLDER_maxcheck\n\n//ATOM_PLACEHOLDER_max\n\n//ATOM_PLACEHOLDER_Checker\n\n",
  "atoms": {
    "maxcheck": [
      [],
      "// ATOM \nfunction maxcheck(s: array<nat>, i: int, max: int): int\nrequires 0 <= i <= s.Length\nreads s\n{\n    if i == 0 then max\n    else if s[i - 1] > max then maxcheck(s, i - 1, s[i - 1])\n    else maxcheck(s, i - 1, max)\n}\n",
      "function"
    ],
    "max": [
      [],
      "// SPEC \n\nmethod max(s: array<nat>) returns (a:int)\nrequires s.Length > 0\nensures forall x :: 0 <= x < s.Length ==> a >= s[x]\nensures a in s[..]\n{\n}\n",
      "method"
    ],
    "Checker": [
      [
        "max"
      ],
      "// SPEC \n\nmethod Checker() {\n}\n",
      "method"
    ]
  },
  "placeholder_mapping": {
    "//ATOM_PLACEHOLDER_maxcheck": "maxcheck",
    "//ATOM_PLACEHOLDER_max": "max",
    "//ATOM_PLACEHOLDER_Checker": "Checker"
  }
}