{
  "skeleton": "//ATOM_PLACEHOLDER_update_map\n\n",
  "atoms": {
    "update_map": [
      [],
      "// SPEC \nmethod update_map<K(!new), V>(m1: map<K, V>, m2: map<K, V>) returns (r: map<K, V>)\n  ensures (forall k :: k in m2 ==> k in r)\n  ensures (forall k :: k in m1 ==> k in r)\n  ensures  (forall k :: k in m2 ==> r[k] == m2[k])\n  ensures  (forall k :: !(k in m2) && k in m1 ==> r[k] == m1[k])\n  ensures  (forall k :: !(k in m2) && !(k in m1) ==> !(k in r))\n{\n}\n",
      "method"
    ]
  },
  "placeholder_mapping": {
    "//ATOM_PLACEHOLDER_update_map": "update_map"
  }
}