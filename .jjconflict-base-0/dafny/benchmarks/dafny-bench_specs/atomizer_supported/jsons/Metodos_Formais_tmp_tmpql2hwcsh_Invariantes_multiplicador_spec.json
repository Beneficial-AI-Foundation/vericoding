{
  "skeleton": "// Exemplo de invariantes\n// Invariante significa que o valor n\u00e3o muda desde a pr\u00e9-condi\u00e7\u00e3o at\u00e9 a p\u00f3s-condi\u00e7\u00e3o\n\n//ATOM_PLACEHOLDER_Mult\n\n// Teste do m\u00e9todo para encontrar a invariante\n// x | y | m | n | r\n// 5 | 3 | 5 | 3 | 0\n// 5 | 3 | 4 | 3 | 3\n// 5 | 3 | 3 | 3 | 6\n// 5 | 3 | 2 | 3 | 9\n// 5 | 3 | 1 | 3 | 12\n// 5 | 3 | 0 | 3 | 15\n\n// vimos o seguinte:\n// m * n + r = x * y\n// 5 * 3 + 0 (15) = 5 * 3 (15)\n// portanto a f\u00f3rmula m*n+r == x*y \u00e9 uma invariante\n// mas s\u00f3 isso n\u00e3o serve, o m ele \u00e9 maior ou igual a zero quando acaba o while\n// por isso, tamb\u00e9m \u00e9 a invariante que necessita\n// com isso dizemos para o programa as altera\u00e7\u00f5es do m de maior ou igual a zero\n// e mostramos a fun\u00e7\u00e3o encontrada que alterava o valor de m e n das variaveis criadas\n\n// SE OS ALGORITMOS TIVEREM REPETI\u00c7\u00c3O OU RECURS\u00c3O, DEVEM SER MOSTRADOS QUAIS S\u00c3O AS INVARIANTES\n// OU SEJA, OS VALORES QUE N\u00c3O EST\u00c3O SENDO MUDADOS E COLOCAR A F\u00d3RMULA DELE COMO ACIMA\n\n\n// Teste do m\u00e9todo para encontrar a invariante\n// x | y | m | n | r\n// 5 | 3 | 5 | 3 | 0\n// 5 | 3 | 4 | 3 | 3\n// 5 | 3 | 3 | 3 | 6\n// 5 | 3 | 2 | 3 | 9\n// 5 | 3 | 1 | 3 | 12\n// 5 | 3 | 0 | 3 | 15\n\n// vimos o seguinte:\n// m * n + r = x * y\n// 5 * 3 + 0 (15) = 5 * 3 (15)\n// portanto a f\u00f3rmula m*n+r == x*y \u00e9 uma invariante\n// mas s\u00f3 isso n\u00e3o serve, o m ele \u00e9 maior ou igual a zero quando acaba o while\n// por isso, tamb\u00e9m \u00e9 a invariante que necessita\n// com isso dizemos para o programa as altera\u00e7\u00f5es do m de maior ou igual a zero\n// e mostramos a fun\u00e7\u00e3o encontrada que alterava o valor de m e n das variaveis criadas\n\n// SE OS ALGORITMOS TIVEREM REPETI\u00c7\u00c3O OU RECURS\u00c3O, DEVEM SER MOSTRADOS QUAIS S\u00c3O AS INVARIANTES\n// OU SEJA, OS VALORES QUE N\u00c3O EST\u00c3O SENDO MUDADOS E COLOCAR A F\u00d3RMULA DELE COMO ACIMA\n",
  "atoms": {
    "Mult": [
      [],
      "// SPEC \n// Exemplo de invariantes\n// Invariante significa que o valor n\u00e3o muda desde a pr\u00e9-condi\u00e7\u00e3o at\u00e9 a p\u00f3s-condi\u00e7\u00e3o\n\nmethod Mult(x:nat, y:nat) returns (r:nat)\nensures r == x * y\n{\n}\n",
      "method"
    ]
  },
  "placeholder_mapping": {
    "//ATOM_PLACEHOLDER_Mult": "Mult"
  }
}