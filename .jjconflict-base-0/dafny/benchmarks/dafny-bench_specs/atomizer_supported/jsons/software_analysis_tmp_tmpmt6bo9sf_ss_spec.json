{
  "skeleton": "//ATOM_PLACEHOLDER_find_min_index\n\n\n\n//ATOM_PLACEHOLDER_is_sorted\n\n//ATOM_PLACEHOLDER_is_permutation\n\n\n// predicate is_permutation(a:seq<int>, b:seq<int>)\n// decreases |a|\n// decreases |b|\n// {\n//     |a| == |b|  && ((|a| == 0 && |b| == 0) ||  exists i,j : int :: 0<=i<|a| &&  0<=j<|b|  && a[i] == b[j] && is_permutation(a[0..i] + a[i+1..], b[0..j] + b[j+1..]))\n// }\n\n//ATOM_PLACEHOLDER_is_permutation2\n\n\n\n//ATOM_PLACEHOLDER_selection_sort\n\n",
  "atoms": {
    "find_min_index": [
      [],
      "// SPEC \nmethod find_min_index(a : array<int>, s: int, e: int) returns (min_i: int)\nrequires a.Length > 0\nrequires 0 <= s < a.Length\nrequires e <= a.Length\nrequires e > s\n\nensures min_i >= s \nensures min_i < e \nensures forall k: int :: s <= k < e ==> a[min_i] <= a[k]\n{\n}\n",
      "method"
    ],
    "is_sorted": [
      [],
      "// ATOM \n\n\n\npredicate is_sorted(ss: seq<int>)\n{\n    forall i, j: int:: 0 <= i <= j < |ss| ==> ss[i] <= ss[j]\n}\n",
      "predicate"
    ],
    "is_permutation": [
      [],
      "// ATOM \n\npredicate is_permutation(a:seq<int>, b:seq<int>)\n{\n    |a| == |b|  && \n    ((|a| == 0 && |b| == 0) ||  \n    exists i,j : int :: 0<=i<|a| &&  0<=j<|b|  && a[i] == b[j] && is_permutation(a[0..i] + if i < |a| then a[i+1..] else [], b[0..j] + if j < |b| then  b[j+1..] else []))\n}\n",
      "predicate"
    ],
    "is_permutation2": [
      [
        "is_permutation"
      ],
      "// ATOM \n\n\n// predicate is_permutation(a:seq<int>, b:seq<int>)\n// decreases |a|\n// decreases |b|\n// {\n//     |a| == |b|  && ((|a| == 0 && |b| == 0) ||  exists i,j : int :: 0<=i<|a| &&  0<=j<|b|  && a[i] == b[j] && is_permutation(a[0..i] + a[i+1..], b[0..j] + b[j+1..]))\n// }\n\npredicate is_permutation2(a:seq<int>, b:seq<int>)\n{\n    multiset(a) == multiset(b)\n}\n",
      "predicate"
    ],
    "selection_sort": [
      [
        "find_min_index",
        "is_sorted",
        "is_permutation2"
      ],
      "// SPEC \n\n\n\nmethod selection_sort(ns: array<int>) \nrequires ns.Length >= 0\nensures is_sorted(ns[..])\nensures is_permutation2(old(ns[..]), ns[..])\nmodifies ns\n{\n}\n",
      "method"
    ]
  },
  "placeholder_mapping": {
    "//ATOM_PLACEHOLDER_find_min_index": "find_min_index",
    "//ATOM_PLACEHOLDER_is_sorted": "is_sorted",
    "//ATOM_PLACEHOLDER_is_permutation": "is_permutation",
    "//ATOM_PLACEHOLDER_is_permutation2": "is_permutation2",
    "//ATOM_PLACEHOLDER_selection_sort": "selection_sort"
  }
}