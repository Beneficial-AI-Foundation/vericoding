vc-preamble: |-
  // Author of question: Snorri Agnarsson
  // Permalink of question: https://rise4fun.com/Dafny/0HRr

  // Author of solution:    Alexander Gu√∞mundsson
  // Permalink of solution: https://rise4fun.com/Dafny/8pxWd

  // Use the command
  //   dafny LinearSearch-skeleton.dfy
  // or
  //   compile LinearSearch-skeleton.dfy
  // to compile the file.
  // Or use the web page rise4fun.com/dafny.

  // When you have solved the problem put
  // the solution on the Dafny web page,
  // generate a permalink and put it in
  // this file.

vc-helpers: |-
  // <vc-helpers>
  // </vc-helpers>

vc-spec: |-
  method SearchRecursive( a: seq<int>, i: int, j: int, x: int ) returns (k: int)
      decreases j-i;
      requires 0 <= i <= j <= |a|;
      ensures i <= k < j || k == -1;
      ensures k != -1 ==> a[k] == x;
      ensures k != -1 ==> forall r | k < r < j :: a[r] != x;
      ensures k == -1 ==> forall r | i <= r < j :: a[r] != x;

vc-code: |-
  {
      // Put program text here so that Dafny
      // accepts this function.
      // In this function loops are not allowed
      // but recursion should be used, and it
      // is not allowed to call the function
      // SearchLoop below.

      if j == i
      {
          k := -1;
          return;
      }
      if a[j-1] == x
      {
          k := j-1;
          return;

      }
      else
      {
          k := SearchRecursive(a, i, j-1, x);
      }
  }

vc-postamble: |-

