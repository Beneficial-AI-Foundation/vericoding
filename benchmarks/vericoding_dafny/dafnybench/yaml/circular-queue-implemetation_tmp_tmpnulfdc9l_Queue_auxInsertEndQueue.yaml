vc-preamble: |-
  class {:autocontracts} Queue {

    // Atributos
    var circularQueue: array<int>;
    var rear: nat;  // cauda
    var front: nat; // head
    var counter: nat;

    // Abstração
    ghost var Content: seq<int>;

    // Predicado
    ghost predicate Valid()
    {
      0 <= counter <= circularQueue.Length &&
      0 <= front &&
      0 <= rear &&
      Content == circularQueue[..]
    }

    // Construtor
    constructor()
      ensures circularQueue.Length == 0
      ensures front == 0 && rear == 0
      ensures Content == [] // REVISAR
      ensures counter == 0
    {
      circularQueue := new int[0];
      rear := 0;
      front := 0;
      Content := [];
      counter := 0;
    } //[tam] ; [1, 2, 3, 4]
vc-helpers: ''
vc-spec: |-
  method auxInsertEndQueue(item:int)
      requires front == 0 && rear == circularQueue.Length && circularQueue.Length >= 1
      ensures Content == old(Content) + [item]
      ensures |Content| == old(|Content|) + 1
      ensures front == 0
      ensures rear == old(rear) + 1
      ensures counter == old(counter) + 1
vc-code: |-
  {
    assume false;
  }
vc-postamble: |-
  // TODO
  }
