vc-preamble: "/* \n* Formal verification of the selection sort algorithm with Dafny.\n* FEUP, MIEIC, MFES, 2020/21.\n*/\n\n// Checks if array 'a' is sorted between positions 'from' (inclusive) and 'to' (exclusive).\npredicate isSorted(a: array<real>, from: nat, to: nat)\n  requires 0 <= from <= to <= a.Length\n  reads a\n{\n    forall i, j :: from <= i < j < to ==> a[i] <= a[j] \n}\n\n// Sorts array 'a' using the selection sort algorithm.\n\n// Finds the position of a miminum value in non-empty subarray 'a' between positions \n// 'from' (inclusive) and 'to' (exclusive)"
vc-helpers: ''
vc-spec: |-
  method findMin(a: array<real>, from: nat, to: nat) returns(index: nat)
    requires 0 <= from < to <= a.Length
    ensures from <= index < to
    ensures forall k :: from <= k < to ==> a[k] >= a[index]
vc-code: |-
  {
    assume false;
  }
vc-postamble: ''
