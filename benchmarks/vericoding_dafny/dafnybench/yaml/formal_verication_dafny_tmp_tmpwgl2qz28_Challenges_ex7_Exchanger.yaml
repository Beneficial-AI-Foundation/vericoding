vc-preamble: |-
  // see pdf 'ex6 & 7 documentation' for excercise question


  datatype Bases = A | C | G | T

  //swaps two sequence indexes
vc-helpers: ''
vc-spec: |-
  method Exchanger(s: seq<Bases>, x:nat, y:nat) returns (t: seq<Bases>)
  requires 0 < |s| && x < |s| && y < |s|
  ensures |t| == |s|
  ensures forall b:nat :: 0 <= b < |s| && b != x && b != y ==> t[b] == s[b]
  ensures t[x] == s[y] && s[x] == t[y]
  ensures multiset(s) == multiset(t)
vc-code: |-
  {
    assume false;
  }
vc-postamble: "//idea from Rustan Leino video \"Basics of specification and verification: Lecture 3, the Dutch National Flag algorithm\"\n//modified for 4 elements\npredicate below(first: Bases, second: Bases)\n{\n    first == second ||\n    first == A || \n    (first == C && (second ==  G || second == T)) || \n    (first == G && second == T) ||\n    second == T\n}\n\n//checks if a sequence is in base order\npredicate bordered(s:seq<Bases>)\n{\n    forall j, k :: 0 <= j < k < |s| ==> below(s[j], s[k])\n}"
