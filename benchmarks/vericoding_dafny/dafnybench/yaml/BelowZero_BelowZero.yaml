vc-preamble: "/* \nHumanEvalX 3\nYou're given a list of deposit and withdrawal operations on a bank account that starts with zero balance. \nYour task is to detect if at any point the balance of account falls below zero, and at that point function \nshould return True. Otherwise it should return False.\n*/\n\nfunction sum(s: seq<int>, n: nat): int\n    requires n <= |s|\n{\n    if |s| == 0 || n == 0 then\n        0\n    else\n        s[0] + sum(s[1..], n-1)\n}"
vc-helpers: ''
vc-spec: |-
  method BelowZero(ops: seq<int>) returns (result: bool)
      ensures result <==> exists n: nat :: n <= |ops| && sum(ops, n) < 0
vc-code: |-
  {
    assume false;
  }
vc-postamble: ''
