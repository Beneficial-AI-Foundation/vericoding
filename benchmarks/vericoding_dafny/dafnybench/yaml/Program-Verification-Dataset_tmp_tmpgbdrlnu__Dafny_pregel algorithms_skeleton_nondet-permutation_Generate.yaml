vc-preamble: "module Permutation\n{\n   predicate distinct'(a: array<int>, n: nat)\n       requires a.Length == n\n       reads a\n   {\n       forall i, j :: 0 <= i < j < n ==> a[i] != a[j]\n   }\n\n   predicate distinct_prefix(a: array<int>, k: nat)\n       requires a != null && k <= a.Length\n       reads a\n   {\n       forall i, j :: 0 <= i < j < k ==> a[i] != a[j]\n   }\n\n   predicate distinct(a: array<int>)\n       requires a != null\n       reads a\n   {\n       distinct'(a, a.Length)\n   }\n\n  predicate isValid(a: array<int>, n: nat)\n   requires a != null && a.Length == n\n   reads a\n   {    \n       distinct(a)\n       && (forall i :: 0 <= i < a.Length ==> 0 <= a[i] < n)\n       && (forall i :: 0 <= i < n ==> i in a[..])\n   }"
vc-helpers: ''
vc-spec: |-
  method Generate(n: int) returns (perm: array<int>)
          requires n >= 0
          ensures perm != null
          ensures perm.Length == n
          ensures fresh(perm)
          ensures isValid(perm, n)
vc-code: |-
  {
    assume false;
  }
vc-postamble: '}'
