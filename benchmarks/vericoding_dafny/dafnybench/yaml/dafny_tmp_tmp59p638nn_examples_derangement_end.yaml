vc-preamble: |-
  predicate derangement(s: seq<nat>) {
      forall i :: 0 <= i < |s| ==> s[i] != i
  }

  predicate permutation(s: seq<nat>) {
      forall i :: 0 <= i < |s| ==> i in s
  }

  function multisetRange(n: nat): multiset<nat> {
      multiset(seq(n, i => i))
  }

  predicate distinct<A(==)>(s: seq<A>) {
      forall x,y :: x != y && 0 <= x <= y < |s| ==> s[x] != s[y]
  }

vc-helpers: |-

vc-spec: |-
  method end(links: seq<nat>)
      requires |links| > 0
      requires permutation(links)
      requires derangement(links)
      requires distinct(links)

vc-code: |-
  {
    assume false;
  }

vc-postamble: |-

