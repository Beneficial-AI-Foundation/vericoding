vc-preamble: |-
  type T = int // example
  
   // Partitions a nonempty array 'a', by reordering the elements in the array,
  // so that elements smaller than a chosen pivot are placed to the left of the
  // pivot, and values greater or equal than the pivot are placed to the right of 
  // the pivot. Returns the pivot position.

vc-helpers: |-
  // <vc-helpers>
  // </vc-helpers>

vc-spec: |-
  // <vc-spec>
  method partition(a: array<T>) returns(pivotPos: int) 
      requires a.Length > 0
      ensures 0 <= pivotPos < a.Length
      ensures forall i :: 0 <= i < pivotPos ==> a[i] < a[pivotPos]
      ensures forall i :: pivotPos < i < a.Length ==> a[i] >= a[pivotPos]
      ensures multiset(a[..]) == multiset(old(a[..]))
      modifies a
  // </vc-spec>

vc-code: |-
  // <vc-code>
  {
    assume false;
  }
  // </vc-code>

vc-postamble: |-
  

