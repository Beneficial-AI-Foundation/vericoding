vc-description: |-
  This task requires writing a Verus method that finds the length of the longest strictly increasing subsequence from a given list of integers.
  
  -----Input-----
  The input consists of a list of integers called nums
  
  -----Output-----
  The output is an integer:
  Returns a number representing the length of the longest strictly increasing subsequence found in the input list.

vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-

vc-spec: |-
  fn longest_increasing_subsequence(nums: &Vec<i32>) -> (result: i32)
      ensures
          result >= 0,
          result <= nums.len() as i32,

vc-code: |-
  {
      assume(false);
      unreached()
  }

vc-postamble: |-
  }
  fn main() {}

