vc-description: |-
  This task requires writing a Verus method that checks whether a given string is a palindrome. A palindrome is a string that reads the same forwards and backwards. The function should ignore whitespace, punctuation, and capitalization when checking for palindromes.
  
  -----Input-----
  The input consists of:
  s: A string to be checked.
  
  -----Output-----
  The output is a boolean:
  Returns true if the input string is a palindrome when non-alphabetic characters are removed and letters are treated case-insensitively, and false otherwise.

vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {
  
  // Check if a character is an uppercase alphabet letter
  spec fn is_upper_alpha(c: char) -> bool {
      'A' <= c && c <= 'Z'
  }
  
  // Check if a character is a lowercase alphabet letter  
  spec fn is_lower_alpha(c: char) -> bool {
      'a' <= c && c <= 'z'
  }
  
  // Determine if a character is alphabetic
  spec fn is_alpha(c: char) -> bool {
      is_upper_alpha(c) || is_lower_alpha(c)
  }
  
  // Convert a single character to lowercase (simplified for Verus)
  spec fn to_lower(c: char) -> char {
      if is_upper_alpha(c) {
          // Simplified: assume conversion works for spec purposes
          c // This would be the lowercase version in practice
      } else {
          c
      }
  }
  
  // Normalize a character: keep only lowercase letters
  spec fn normalize_char(c: char) -> Option<char> {
      if is_alpha(c) {
          Some(to_lower(c))
      } else {
          None
      }
  }
  
  // Normalize a string into a sequence of lowercase alphabetic characters
  spec fn normalize_string(s: &str) -> Seq<char> {
      s@.fold_left(Seq::empty(), |acc: Seq<char>, c: char|
          match normalize_char(c) {
              Some(c_norm) => acc.push(c_norm),
              None => acc,
          }
      )
  }

vc-helpers: |-

vc-spec: |-
  fn is_clean_palindrome(s: &str) -> (result: bool)
      ensures 
          result == (normalize_string(s) == normalize_string(s).reverse()),

vc-code: |-
  {
      // impl-start
      assume(false);
      false
      // impl-end
  }

vc-postamble: |-
  }
  fn main() {}

