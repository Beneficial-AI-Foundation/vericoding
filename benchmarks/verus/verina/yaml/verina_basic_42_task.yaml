vc-description: |-
  This task requires writing a Verus method that counts the number of digit characters within a given string. A digit is any character between '0' and '9'. The method should determine how many such digit characters appear in the input.
  
  Input:
  The input consists of:
  s: A string.
  
  Output:
  The output is a natural number (usize):
  Returns a non-negative count representing the number of digit characters found in the input string.
  
  Note:
  There are no additional preconditions; the method works for any provided string.

vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-
  spec fn is_digit(c: char) -> bool {
      '0' <= c && c <= '9'
  }

vc-spec: |-
  fn count_digits(s: &str) -> (result: usize)
      ensures
          result >= 0,

vc-code: |-
  {
      // impl-start
      assume(false);
      0
      // impl-end
  }

vc-postamble: |-
  }
  fn main() {
      /* 
      -- Invalid Inputs
      []
      -- Tests
      [
          {
              "input": {
                  "s": "123abc456"
              },
              "expected": 6,
              "unexpected": [
                  5,
                  7,
                  0
              ]
          },
          {
              "input": {
                  "s": "no digits here!"
              },
              "expected": 0,
              "unexpected": [
                  1,
                  2,
                  3
              ]
          },
          {
              "input": {
                  "s": "1234567890"
              },
              "expected": 10,
              "unexpected": [
                  9,
                  11,
                  0
              ]
          },
          {
              "input": {
                  "s": ""
              },
              "expected": 0,
              "unexpected": [
                  1,
                  2,
                  10
              ]
          },
          {
              "input": {
                  "s": "a1b2c3"
              },
              "expected": 3,
              "unexpected": [
                  2,
                  4,
                  5
              ]
          },
          {
              "input": {
                  "s": "0"
              },
              "expected": 1,
              "unexpected": [
                  0,
                  2,
                  10
              ]
          },
          {
              "input": {
                  "s": "abc"
              },
              "expected": 0,
              "unexpected": [
                  1,
                  8,
                  9
              ]
          }
      ]
      */
  }

