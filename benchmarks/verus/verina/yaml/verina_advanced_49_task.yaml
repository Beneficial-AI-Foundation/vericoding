vc-description: |-
  Implement a Verus function that merges two ascendingly sorted lists of integers into one single sorted list (ascending). The resulting list must contain all elements from both input lists, preserving their ascending order.
  
  Input:
  The input consists of two lists of integers:
  arr1: A sorted list of integers (ascending)
  arr2: Another sorted list of integers (ascending)
  
  Output:
  The output is a list of integers:
  Returns a new list containing all elements from arr1 and arr2, sorted in ascending order.
  
  /* 
      -- Invalid Inputs
      [
          {
              "input": {
                  "arr1": "[3, 2, 1]",
                  "arr2": "[6, 5, 4]"
              }
          }
      ]
      -- Tests
      [
          {
              "input": {
                  "arr1": "[1, 3, 5]",
                  "arr2": "[2, 4, 6]"
              },
              "expected": "[1, 2, 3, 4, 5, 6]",
              "unexpected": [
                  "[1, 3, 5]",
                  "[2, 4, 6]",
                  "[1, 3, 2, 4, 5, 6]"
              ]
          },
          {
              "input": {
                  "arr1": "[]",
                  "arr2": "[]"
              },
              "expected": "[]",
              "unexpected": [
                  "[0]",
                  "[999]"
              ]
          },
          {
              "input": {
                  "arr1": "[-2, 0, 1]",
                  "arr2": "[-3, -1]"
              },
              "expected": "[-3, -2, -1, 0, 1]",
              "unexpected": [
                  "[-3, -1]",
                  "[0, 1]",
                  "[-2, 0, 1]"
              ]
          },
          {
              "input": {
                  "arr1": "[10, 20, 30]",
                  "arr2": "[5, 25, 35]"
              },
              "expected": "[5, 10, 20, 25, 30, 35]",
              "unexpected": [
                  "[10, 20, 30]",
                  "[5, 25, 35]",
                  "[10, 20, 25, 30, 35]"
              ]
          },
          {
              "input": {
                  "arr1": "[1, 2, 2]",
                  "arr2": "[2, 3, 3]"
              },
              "expected": "[1, 2, 2, 2, 3, 3]",
              "unexpected": [
                  "[1, 2, 3]",
                  "[2, 2, 2, 3, 3]"
              ]
          }
      ]
      */

vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-

vc-spec: |-
  fn merge_sorted_lists(arr1: &Vec<i32>, arr2: &Vec<i32>) -> (result: Vec<i32>)
      requires 
          forall|i: int, j: int| 0 <= i < j < arr1.len() ==> arr1[i] <= arr1[j],
          forall|i: int, j: int| 0 <= i < j < arr2.len() ==> arr2[i] <= arr2[j],
      ensures
          forall|i: int, j: int| 0 <= i < j < result.len() ==> result[i] <= result[j],
          result.len() == arr1.len() + arr2.len(),

vc-code: |-
  {
      assume(false);
      unreached()
  }

vc-postamble: |-
  }
  fn main() {}

