vc-description: |-
  This task involves determining whether every character in a provided string is a digit. The objective is to check if all characters fall within the standard digit range, returning true if they do and false otherwise.
  
  -----Input-----
  The input consists of:
  • s: A string whose characters will be analyzed to determine if they are all digits.
  
  -----Output-----
  The output is a boolean value:
  • true if every character in the string is a digit;
  • false if at least one character is not a digit (note that the empty string returns true).
  
  -----Note-----
  It is assumed that the input is a well-formed string. The function uses an iterator to examine every character.
vc-preamble: |-
  use vstd::prelude::*;

  verus! {
vc-helpers: |-
  spec fn is_digit(c: char) -> bool {
      c >= '0' && c <= '9'
  }
vc-spec: |-
  fn all_digits(s: &str) -> (result: bool)
      requires true,
      ensures
          result == (forall|i: int| 0 <= i < s.unicode_len() ==> is_digit(s.get_char(i))),
vc-code: |-
  {
      // impl-start
      assume(false);
      false
      // impl-end
  }

  proof fn all_digits_spec_satisfied(s: &str)
      ensures all_digits(s) == (forall|i: int| 0 <= i < s.unicode_len() ==> is_digit(s.get_char(i)))
  {
      assume(false); // TODO: Remove this line and implement the proof
  }
vc-postamble: |-

  }
  fn main() {}