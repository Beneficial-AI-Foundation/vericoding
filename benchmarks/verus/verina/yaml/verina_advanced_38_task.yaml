vc-description: |-
  This task requires implementing a Verus method that, given a list of intervals, returns the maximum amount that can be spanned after we removed one of the intervals
  You may assume you'll receive at least one interval
  
  Input: The input consists of a list of ordered pairs of intervals.
  Output: The output is an integer: Return the largest span that is possible after removing one of the intervals.

vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-

vc-spec: |-
  fn max_coverage_after_removing_one(intervals: &Vec<(usize, usize)>) -> (result: usize)
      requires intervals.len() > 0,
      ensures 
          result <= intervals.len() * 1000,

vc-code: |-
  {
      // impl-start
      assume(false);
      0
      // impl-end
  }

vc-postamble: |-
  }
  fn main() {}

