vc-description: |-
  -----Description-----
  The problem asks you to construct a new list by adding an extra number to the end of an existing list of numbers. The focus is on understanding what the final list should look like when a given number is included as the last element.
  
  -----Input-----
  The input consists of:
  • a: An array of integers.
  • b: An integer to be appended to the array.
  
  -----Output-----
  The output is an array of integers which represents the original array with the element b added at the end. That is, the output array's list representation equals a.toList concatenated with [b].
  
  -----Note-----
  There are no special preconditions; the method is expected to work correctly for any array of integers and any integer b.

vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-

vc-spec: |-
  fn append(a: &Vec<i8>, b: i8) -> (result: Vec<i8>)
      ensures
          result.len() == a.len() + 1,
          forall|i: int| 0 <= i < a.len() ==> result[i] as int == a[i] as int,
          result[a.len() as int] as int == b as int,

vc-code: |-
  {
      assume(false);
      unreached()
  }

vc-postamble: |-
  }
  fn main() {}