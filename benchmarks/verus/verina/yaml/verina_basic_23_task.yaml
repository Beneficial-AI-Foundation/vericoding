vc-description: |-
  This task requires writing a Verus method that calculates the difference between the maximum and minimum values in an array of integers. In other words, the method should determine the highest and lowest numbers in the array and return the result of subtracting the minimum from the maximum.
  
  -----Input-----
  The input consists of:
  a: An array of integers.
  
  -----Output-----
  The output is an integer:
  Returns the difference between the largest and the smallest values in the input array.
  
  -----Note-----
  The input array is assumed to be non-empty.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

vc-helpers: |-

vc-spec: |-
  fn difference_min_max(a: &Vec<i32>) -> (result: i32)
      requires a.len() > 0,
      ensures ({
          let max_val = a.fold_left(a[0], |acc, x| if x > acc { x } else { acc });
          let min_val = a.fold_left(a[0], |acc, x| if x < acc { x } else { acc });
          result == max_val - min_val
      }),

vc-code: |-
  {
      // impl-start
      assume(false);
      0
      // impl-end
  }

vc-postamble: |-

  }
  fn main() {}