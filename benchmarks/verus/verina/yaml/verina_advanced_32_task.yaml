vc-description: |-
  This test implements a function in Verus that finds the length of the longest increasing subsequence in a list of integers. A subsequence is a sequence that can be derived from another sequence by deleting some or no elements without changing the order of the remaining elements. An increasing subsequence is one in which the elements are in strictly increasing order.
  
  Input: numbers: A list of integers.
  
  Output: A natural number representing the length of the longest increasing subsequence in the input list. If the list is empty, the function returns 0.

vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-

vc-spec: |-
  fn longest_increasing_subsequence(numbers: Vec<i32>) -> (result: usize)
      ensures
          result <= numbers.len(),

vc-code: |-
  {
      assume(false);
      unreached()
  }

vc-postamble: |-
  }
  fn main() {}

