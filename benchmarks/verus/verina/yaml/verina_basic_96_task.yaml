vc-description: |-
  This task requires swapping two integer values. Given two integers as input, the objective is to produce an output where their order is reversed: the first element of the output corresponds to the second input and the second element corresponds to the first input.
  
  Input:
  The input consists of two integers:
  • X: An integer value.
  • Y: Another integer value.
  
  Output:
  The output is a tuple (i32, i32) where:
  • The first element is equal to Y.
  • The second element is equal to X.
  
  Note:
  There are no additional preconditions for this task. The function simply returns a swapped tuple of its two input integers.
  
  // Invalid Inputs
  
  // []
  
  // Tests
  
  // [
  
  //     {
  
  //         "input": {
  
  //             "X": 3,
  
  //             "Y": 4
  
  //         },
  
  //         "expected": "(4, 3)",
  
  //         "unexpected": [
  
  //             "(3, 4)",
  
  //             "(3, 3)"
  
  //         ]
  
  //     },
  
  //     {
  
  //         "input": {
  
  //             "X": -10,
  
  //             "Y": 20
  
  //         },
  
  //         "expected": "(20, -10)",
  
  //         "unexpected": [
  
  //             "(20, -20)",
  
  //             "(-10, 20)"
  
  //         ]
  
  //     },
  
  //     {
  
  //         "input": {
  
  //             "X": 0,
  
  //             "Y": 0
  
  //         },
  
  //         "expected": "(0, 0)",
  
  //         "unexpected": [
  
  //             "(0, 1)",
  
  //             "(1, 0)"
  
  //         ]
  
  //     },
  
  //     {
  
  //         "input": {
  
  //             "X": 123,
  
  //             "Y": -456
  
  //         },
  
  //         "expected": "(-456, 123)",
  
  //         "unexpected": [
  
  //             "(123, -456)",
  
  //             "(-123, 456)"
  
  //         ]
  
  //     },
  
  //     {
  
  //         "input": {
  
  //             "X": -1,
  
  //             "Y": -2
  
  //         },
  
  //         "expected": "(-2, -1)",
  
  //         "unexpected": [
  
  //             "(-1, -2)",
  
  //             "(-2, 2)"
  
  //         ]
  
  //     }
  
  // ]

vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-

vc-spec: |-
  fn swap_simultaneous(x: i32, y: i32) -> (result: (i32, i32))
      ensures
          result.0 == y,
          result.1 == x,
          x != y ==> result.0 != x && result.1 != y,

vc-code: |-
  {
      assume(false);
      unreached();
  }

vc-postamble: |-
  }
  fn main() {}

