vc-description: |-
  /*
  This task requires writing a Verus method that computes the sum of the digits of a non-negative integer. The method should process each digit of the input number and return the total sum. The output is guaranteed to be a non-negative natural number.
  
  -----Input-----
  The input consists of:
  n: A non-negative integer.
  
  -----Output-----
  The output is a natural number:
  Returns the sum of the digits of the input integer.
  
  -----Note-----
  The input is assumed to be a valid non-negative integer.
  */
vc-preamble: |-
  use vstd::prelude::*;

  verus! {

vc-helpers: |-

vc-spec: |-
  spec fn sum_of_digits(n: nat) -> nat;

vc-code: |-
  proof fn sum_of_digits_spec_satisfied(n: nat)
      ensures sum_of_digits(n) >= 0,
  {
      // impl-start
      assume(false); // TODO: Remove this line and implement the proof
      // impl-end
  }

vc-postamble: |-

  }
  fn main() {}