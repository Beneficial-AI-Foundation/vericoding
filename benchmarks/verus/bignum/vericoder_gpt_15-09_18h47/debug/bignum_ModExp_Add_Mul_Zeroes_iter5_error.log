=== Verification Error - Iteration 5 ===
File: /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/files/bignum_ModExp_Add_Mul_Zeroes.rs
Time: 2025-09-15 21:05:00

Full Error Output:
--------------------------------------------------------------------------------
Verification failed: verification results:: 4 verified, 2 errors
warning: using ==> in `assert forall` does not currently assume the antecedent in the body; consider using `implies` instead of `==>`
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_gpt_15-09_18h47/bignum_ModExp_Add_Mul_Zeroes_impl.rs:61:5
   |
61 |     assert forall |i: int|
   |     ^^^^^^
   |
   = help: If you didn't mean to assume the antecedent, we're very curious to hear why! To tell us, please open an issue on the Verus issue tracker on github with the title `Don't always make assert forall assume the antecedent`. If no one opens such an issue, we'll soon change the behavior of Verus to always assume the antecedent of the outermost implication

note: function body check: not all errors may have been reported; rerun with a higher value for --multiple-errors to find other potential errors in this function
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_gpt_15-09_18h47/bignum_ModExp_Add_Mul_Zeroes_impl.rs:53:7
   |
53 | proof fn lemma_validbit_push(s: Seq<char>, c: char)
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

note: recommendation not met
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_gpt_15-09_18h47/bignum_ModExp_Add_Mul_Zeroes_impl.rs:66:20
   |
66 |             assert(t.index(i) == s.index(i));
   |                    ^^^^^^^^^^
   |
  ::: /Users/sergiu.bursuc/verus/vstd/seq.rs:55:13
   |
55 |             0 <= i < self.len(),
   |             ------------------- recommendation not met

error: assertion failed
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_gpt_15-09_18h47/bignum_ModExp_Add_Mul_Zeroes_impl.rs:66:20
   |
66 |             assert(t.index(i) == s.index(i));
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^ assertion failed

note: recommendation not met
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_gpt_15-09_18h47/bignum_ModExp_Add_Mul_Zeroes_impl.rs:66:34
   |
66 |             assert(t.index(i) == s.index(i));
   |                                  ^^^^^^^^^^
   |
  ::: /Users/sergiu.bursuc/verus/vstd/seq.rs:55:13
   |
55 |             0 <= i < self.len(),
   |             ------------------- recommendation not met

error: assertion failed
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_gpt_15-09_18h47/bignum_ModExp_Add_Mul_Zeroes_impl.rs:68:20
   |
68 |             assert(i == s.len() as int);
   |                    ^^^^^^^^^^^^^^^^^^^ assertion failed

error: postcondition not satisfied
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_gpt_15-09_18h47/bignum_ModExp_Add_Mul_Zeroes_impl.rs:78:33
   |
78 |   ensures ValidBitString(res@), Str2Int(res@) == Exp_int(Str2Int(sx@), Str2Int(sy@)) % Str2Int(sz@)
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ failed this postcondition
...
86 |     res
   |     --- at the end of the function body

error: aborting due to 3 previous errors; 1 warning emitted


--------------------------------------------------------------------------------

Additional Output:
verification results:: 4 verified, 2 errors
warning: using ==> in `assert forall` does not currently assume the antecedent in the body; consider using `implies` instead of `==>`
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_gpt_15-09_18h47/bignum_ModExp_Add_Mul_Zeroes_impl.rs:61:5
   |
61 |     assert forall |i: int|
   |     ^^^^^^
   |
   = help: If you didn't mean to assume the antecedent, we're very curious to hear why! To tell us, please open an issue on the Verus issue tracker on github with the title `Don't always make assert forall assume the antecedent`. If no one opens such an issue, we'll soon change the behavior of Verus to always assume the antecedent of the outermost implication

note: function body check: not all errors may have been reported; rerun with a higher value for --multiple-errors to find other potential errors in this function
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_gpt_15-09_18h47/bignum_ModExp_Add_Mul_Zeroes_impl.rs:53:7
   |
53 | proof fn lemma_validbit_push(s: Seq<char>, c: char)
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

note: recommendation not met
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_gpt_15-09_18h47/bignum_ModExp_Add_Mul_Zeroes_impl.rs:66:20
   |
66 |             assert(t.index(i) == s.index(i));
   |                    ^^^^^^^^^^
   |
  ::: /Users/sergiu.bursuc/verus/vstd/seq.rs:55:13
   |
55 |             0 <= i < self.len(),
   |             ------------------- recommendation not met

error: assertion failed
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_gpt_15-09_18h47/bignum_ModExp_Add_Mul_Zeroes_impl.rs:66:20
   |
66 |             assert(t.index(i) == s.index(i));
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^ assertion failed

note: recommendation not met
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_gpt_15-09_18h47/bignum_ModExp_Add_Mul_Zeroes_impl.rs:66:34
   |
66 |             assert(t.index(i) == s.index(i));
   |                                  ^^^^^^^^^^
   |
  ::: /Users/sergiu.bursuc/verus/vstd/seq.rs:55:13
   |
55 |             0 <= i < self.len(),
   |             ------------------- recommendation not met

error: assertion failed
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_gpt_15-09_18h47/bignum_ModExp_Add_Mul_Zeroes_impl.rs:68:20
   |
68 |             assert(i == s.len() as int);
   |                    ^^^^^^^^^^^^^^^^^^^ assertion failed

error: postcondition not satisfied
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_gpt_15-09_18h47/bignum_ModExp_Add_Mul_Zeroes_impl.rs:78:33
   |
78 |   ensures ValidBitString(res@), Str2Int(res@) == Exp_int(Str2Int(sx@), Str2Int(sy@)) % Str2Int(sz@)
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ failed this postcondition
...
86 |     res
   |     --- at the end of the function body

error: aborting due to 3 previous errors; 1 warning emitted

