=== Verification Error - Iteration 10 ===
File: /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/files/bignum_ModExp_Add_Zeroes.rs
Time: 2025-09-15 18:47:55

Full Error Output:
--------------------------------------------------------------------------------
Verification failed: verification results:: 7 verified, 5 errors
error: postcondition not satisfied
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_claude-sonnet_15-09_18h46/bignum_ModExp_Add_Zeroes_impl.rs:39:13
   |
39 |       ensures ModExp_Helper(base, exp, modulus) == Exp_int(base, exp) % modulus
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ failed this postcondition
...
42 | /     if exp == 0 {
43 | |     } else if exp % 2 == 0 {
44 | |         lemma_mod_exp_correct(base, exp / 2, modulus);
45 | |     } else {
46 | |         lemma_mod_exp_correct(base, (exp - 1) as nat, modulus);
47 | |     }
   | |_____- at the end of the function body

note: while loop: not all errors may have been reported; rerun with a higher value for --multiple-errors to find other potential errors in this function
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_claude-sonnet_15-09_18h46/bignum_ModExp_Add_Zeroes_impl.rs:56:5
   |
56 |     while i < s.len()
   |     ^^^^^^^^^^^^^^^^^

error: possible arithmetic underflow/overflow
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_claude-sonnet_15-09_18h46/bignum_ModExp_Add_Zeroes_impl.rs:62:18
   |
62 |         result = result * 2;
   |                  ^^^^^^^^^^

error: possible arithmetic underflow/overflow
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_claude-sonnet_15-09_18h46/bignum_ModExp_Add_Zeroes_impl.rs:64:22
   |
64 |             result = result + 1;
   |                      ^^^^^^^^^^

note: while loop: not all errors may have been reported; rerun with a higher value for --multiple-errors to find other potential errors in this function
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_claude-sonnet_15-09_18h46/bignum_ModExp_Add_Zeroes_impl.rs:97:9
   |
97 |         while i < len
   |         ^^^^^^^^^^^^^

error: invariant not satisfied at end of loop body
   --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_claude-sonnet_15-09_18h46/bignum_ModExp_Add_Zeroes_impl.rs:100:17
    |
100 |                 ValidBitString(reversed@)
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^

error: precondition not satisfied
   --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_claude-sonnet_15-09_18h46/bignum_ModExp_Add_Zeroes_impl.rs:103:27
    |
103 |             reversed.push(result[len - 1 - i]);
    |                           ^^^^^^^^^^^^^^^^^^^
    |
   ::: /Users/sergiu.bursuc/verus/vstd/std_specs/vec.rs:48:9
    |
48  |         i < vec.view().len(),
    |         -------------------- failed precondition

note: while loop: not all errors may have been reported; rerun with a higher value for --multiple-errors to find other potential errors in this function
   --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_claude-sonnet_15-09_18h46/bignum_ModExp_Add_Zeroes_impl.rs:135:5
    |
135 |     while exp > 0
    |     ^^^^^^^^^^^^^

note: function body check: not all errors may have been reported; rerun with a higher value for --multiple-errors to find other potential errors in this function
   --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_claude-sonnet_15-09_18h46/bignum_ModExp_Add_Zeroes_impl.rs:114:6
    |
114 | exec fn ModExp_Add_Zeroes(sx: &[char], sy: &[char], sz: &[char]) -> (res: Vec<char>)
    |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: possible division by zero
   --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_claude-sonnet_15-09_18h46/bignum_ModExp_Add_Zeroes_impl.rs:132:20
    |
132 |     let mut base = base_val % mod_val;
    |                    ^^^^^^^^^^^^^^^^^^

error: invariant not satisfied before loop
   --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_claude-sonnet_15-09_18h46/bignum_ModExp_Add_Zeroes_impl.rs:137:13
    |
137 |             mod_val > 1
    |             ^^^^^^^^^^^

error: possible arithmetic underflow/overflow
   --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_claude-sonnet_15-09_18h46/bignum_ModExp_Add_Zeroes_impl.rs:141:22
    |
141 |             result = (result * base) % mod_val;
    |                      ^^^^^^^^^^^^^^^

error: possible arithmetic underflow/overflow
   --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_claude-sonnet_15-09_18h46/bignum_ModExp_Add_Zeroes_impl.rs:143:16
    |
143 |         base = (base * base) % mod_val;
    |                ^^^^^^^^^^^^^

error: aborting due to 9 previous errors


--------------------------------------------------------------------------------

Additional Output:
verification results:: 7 verified, 5 errors
error: postcondition not satisfied
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_claude-sonnet_15-09_18h46/bignum_ModExp_Add_Zeroes_impl.rs:39:13
   |
39 |       ensures ModExp_Helper(base, exp, modulus) == Exp_int(base, exp) % modulus
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ failed this postcondition
...
42 | /     if exp == 0 {
43 | |     } else if exp % 2 == 0 {
44 | |         lemma_mod_exp_correct(base, exp / 2, modulus);
45 | |     } else {
46 | |         lemma_mod_exp_correct(base, (exp - 1) as nat, modulus);
47 | |     }
   | |_____- at the end of the function body

note: while loop: not all errors may have been reported; rerun with a higher value for --multiple-errors to find other potential errors in this function
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_claude-sonnet_15-09_18h46/bignum_ModExp_Add_Zeroes_impl.rs:56:5
   |
56 |     while i < s.len()
   |     ^^^^^^^^^^^^^^^^^

error: possible arithmetic underflow/overflow
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_claude-sonnet_15-09_18h46/bignum_ModExp_Add_Zeroes_impl.rs:62:18
   |
62 |         result = result * 2;
   |                  ^^^^^^^^^^

error: possible arithmetic underflow/overflow
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_claude-sonnet_15-09_18h46/bignum_ModExp_Add_Zeroes_impl.rs:64:22
   |
64 |             result = result + 1;
   |                      ^^^^^^^^^^

note: while loop: not all errors may have been reported; rerun with a higher value for --multiple-errors to find other potential errors in this function
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_claude-sonnet_15-09_18h46/bignum_ModExp_Add_Zeroes_impl.rs:97:9
   |
97 |         while i < len
   |         ^^^^^^^^^^^^^

error: invariant not satisfied at end of loop body
   --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_claude-sonnet_15-09_18h46/bignum_ModExp_Add_Zeroes_impl.rs:100:17
    |
100 |                 ValidBitString(reversed@)
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^

error: precondition not satisfied
   --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_claude-sonnet_15-09_18h46/bignum_ModExp_Add_Zeroes_impl.rs:103:27
    |
103 |             reversed.push(result[len - 1 - i]);
    |                           ^^^^^^^^^^^^^^^^^^^
    |
   ::: /Users/sergiu.bursuc/verus/vstd/std_specs/vec.rs:48:9
    |
48  |         i < vec.view().len(),
    |         -------------------- failed precondition

note: while loop: not all errors may have been reported; rerun with a higher value for --multiple-errors to find other potential errors in this function
   --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_claude-sonnet_15-09_18h46/bignum_ModExp_Add_Zeroes_impl.rs:135:5
    |
135 |     while exp > 0
    |     ^^^^^^^^^^^^^

note: function body check: not all errors may have been reported; rerun with a higher value for --multiple-errors to find other potential errors in this function
   --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_claude-sonnet_15-09_18h46/bignum_ModExp_Add_Zeroes_impl.rs:114:6
    |
114 | exec fn ModExp_Add_Zeroes(sx: &[char], sy: &[char], sz: &[char]) -> (res: Vec<char>)
    |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: possible division by zero
   --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_claude-sonnet_15-09_18h46/bignum_ModExp_Add_Zeroes_impl.rs:132:20
    |
132 |     let mut base = base_val % mod_val;
    |                    ^^^^^^^^^^^^^^^^^^

error: invariant not satisfied before loop
   --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_claude-sonnet_15-09_18h46/bignum_ModExp_Add_Zeroes_impl.rs:137:13
    |
137 |             mod_val > 1
    |             ^^^^^^^^^^^

error: possible arithmetic underflow/overflow
   --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_claude-sonnet_15-09_18h46/bignum_ModExp_Add_Zeroes_impl.rs:141:22
    |
141 |             result = (result * base) % mod_val;
    |                      ^^^^^^^^^^^^^^^

error: possible arithmetic underflow/overflow
   --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_claude-sonnet_15-09_18h46/bignum_ModExp_Add_Zeroes_impl.rs:143:16
    |
143 |         base = (base * base) % mod_val;
    |                ^^^^^^^^^^^^^

error: aborting due to 9 previous errors

