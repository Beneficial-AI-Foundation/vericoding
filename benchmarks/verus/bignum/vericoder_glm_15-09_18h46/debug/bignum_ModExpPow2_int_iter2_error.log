=== Verification Error - Iteration 2 ===
File: /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/files/bignum_ModExpPow2_int.rs
Time: 2025-09-15 20:38:28

Full Error Output:
--------------------------------------------------------------------------------
Verification failed: verification results:: 2 verified, 2 errors
error: assertion failed
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_glm_15-09_18h46/bignum_ModExpPow2_int_impl.rs:24:16
   |
24 |         assert(x * Exp_int(x, (y - 1) as nat) * Exp_int(x, k) == x * Exp_int(x, (y - 1 + k) as nat));
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ assertion failed

note: function body check: not all errors may have been reported; rerun with a higher value for --multiple-errors to find other potential errors in this function
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_glm_15-09_18h46/bignum_ModExpPow2_int_impl.rs:37:6
   |
37 | exec fn ModExpPow2_int(x: u64, y: u64, n: u64, z: u64) -> (res: u64)
   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: assertion failed
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_glm_15-09_18h46/bignum_ModExpPow2_int_impl.rs:50:16
   |
50 |         assert((result as nat) == Exp_int(x as nat, 1u64 as nat) % (z as nat));
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ assertion failed

error: possible arithmetic underflow/overflow
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_glm_15-09_18h46/bignum_ModExpPow2_int_impl.rs:59:28
   |
59 |         let half_exp_dbl = (half_exp as u128 * half_exp as u128) % (z as u128);
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: assertion failed
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_glm_15-09_18h46/bignum_ModExpPow2_int_impl.rs:61:16
   |
61 |         assert((result as nat) == ((half_exp as nat) * (half_exp as nat)) % (z as nat));
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ assertion failed

error: aborting due to 4 previous errors


--------------------------------------------------------------------------------

Additional Output:
verification results:: 2 verified, 2 errors
error: assertion failed
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_glm_15-09_18h46/bignum_ModExpPow2_int_impl.rs:24:16
   |
24 |         assert(x * Exp_int(x, (y - 1) as nat) * Exp_int(x, k) == x * Exp_int(x, (y - 1 + k) as nat));
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ assertion failed

note: function body check: not all errors may have been reported; rerun with a higher value for --multiple-errors to find other potential errors in this function
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_glm_15-09_18h46/bignum_ModExpPow2_int_impl.rs:37:6
   |
37 | exec fn ModExpPow2_int(x: u64, y: u64, n: u64, z: u64) -> (res: u64)
   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: assertion failed
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_glm_15-09_18h46/bignum_ModExpPow2_int_impl.rs:50:16
   |
50 |         assert((result as nat) == Exp_int(x as nat, 1u64 as nat) % (z as nat));
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ assertion failed

error: possible arithmetic underflow/overflow
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_glm_15-09_18h46/bignum_ModExpPow2_int_impl.rs:59:28
   |
59 |         let half_exp_dbl = (half_exp as u128 * half_exp as u128) % (z as u128);
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: assertion failed
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_glm_15-09_18h46/bignum_ModExpPow2_int_impl.rs:61:16
   |
61 |         assert((result as nat) == ((half_exp as nat) * (half_exp as nat)) % (z as nat));
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ assertion failed

error: aborting due to 4 previous errors

