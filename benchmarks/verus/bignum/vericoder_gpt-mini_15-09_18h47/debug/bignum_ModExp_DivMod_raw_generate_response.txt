=== Raw LLM Generate Response ===
Length: 1085 characters
--------------------------------------------------------------------------------
["fn slice_to_nat(s: &[char]) -> nat\nensures\n    result == Str2Int(s@),\n{\n    let mut r: nat = 0;\n    let mut i: usize = 0;\n    while i < s.len()\n        invariant\n            r == Str2Int(s@.subrange(0, i as int)),\n        decreases s.len() - i\n    {\n        let b: nat = if s[i] == '1' { 1 } else { 0 };\n        r = 2 * r + b;\n        i += 1;\n    }\n    r\n}\n\nfn nat_to_vec(n: nat) -> Vec<char>\n    ensures\n        ValidBitString(result@),\n        Str2Int(result@) == n,\n    decreases n\n{\n    if n == 0 {\n        Vec::new()\n    } else {\n        let mut v = nat_to_vec(n / 2);\n        let bit: char = if n % 2 == 1 { '1' } else { '0' };\n        v.push(bit);\n        v\n    }\n}", "{\n    let x: nat = slice_to_nat(sx);\n    let mut y: nat = slice_to_nat(sy);\n    let m: nat = slice_to_nat(sz);\n    let y0: nat = y;\n    let mut res: nat = 1;\n    while y > 0\n        invariant\n            res < m,\n            res == Exp_int(x, y0 - y) % m,\n        decreases y\n    {\n        res = (res * x) % m;\n        y = y - 1;\n    }\n    nat_to_vec(res)\n}"]
--------------------------------------------------------------------------------
