=== Verification Error - Iteration 2 ===
File: /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/files/bignum_ModExpPow2_Add.rs
Time: 2025-09-15 19:00:59

Full Error Output:
--------------------------------------------------------------------------------
Verification failed: verification results:: 7 verified, 6 errors
note: function body check: not all errors may have been reported; rerun with a higher value for --multiple-errors to find other potential errors in this function
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_gpt-mini_15-09_18h47/bignum_ModExpPow2_Add_impl.rs:24:6
   |
24 | exec fn Add(s1: &[char], s2: &[char]) -> (res: Vec<char>)
   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: postcondition not satisfied
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_gpt-mini_15-09_18h47/bignum_ModExpPow2_Add_impl.rs:26:11
   |
26 |   ensures ValidBitString(res@), Str2Int(res@) == Str2Int(s1@) + Str2Int(s2@)
   |           ^^^^^^^^^^^^^^^^^^^^ failed this postcondition
...
64 |     res
   |     --- at the end of the function body

note: recommendation not met
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_gpt-mini_15-09_18h47/bignum_ModExpPow2_Add_impl.rs:26:33
   |
12 |   recommends ValidBitString(s)
   |              ----------------- recommendation not met
...
26 |   ensures ValidBitString(res@), Str2Int(res@) == Str2Int(s1@) + Str2Int(s2@)
   |                                 ^^^^^^^^^^^^^

error: postcondition not satisfied
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_gpt-mini_15-09_18h47/bignum_ModExpPow2_Add_impl.rs:26:33
   |
26 |   ensures ValidBitString(res@), Str2Int(res@) == Str2Int(s1@) + Str2Int(s2@)
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ failed this postcondition
...
64 |     res
   |     --- at the end of the function body

error: possible arithmetic underflow/overflow
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_gpt-mini_15-09_18h47/bignum_ModExpPow2_Add_impl.rs:43:19
   |
43 |         let sum = b1 + b2 + carry;
   |                   ^^^^^^^^^^^^^^^

note: while loop: not all errors may have been reported; rerun with a higher value for --multiple-errors to find other potential errors in this function
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_gpt-mini_15-09_18h47/bignum_ModExpPow2_Add_impl.rs:84:5
   |
84 |     while idx < sz.len()
   |     ^^^^^^^^^^^^^^^^^^^^

note: while loop: not all errors may have been reported; rerun with a higher value for --multiple-errors to find other potential errors in this function
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_gpt-mini_15-09_18h47/bignum_ModExpPow2_Add_impl.rs:96:5
   |
96 |     while i < sx.len()
   |     ^^^^^^^^^^^^^^^^^^

note: while loop: not all errors may have been reported; rerun with a higher value for --multiple-errors to find other potential errors in this function
   --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_gpt-mini_15-09_18h47/bignum_ModExpPow2_Add_impl.rs:126:9
    |
126 |         while t > 0
    |         ^^^^^^^^^^^

note: function body check: not all errors may have been reported; rerun with a higher value for --multiple-errors to find other potential errors in this function
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_gpt-mini_15-09_18h47/bignum_ModExpPow2_Add_impl.rs:69:6
   |
69 | exec fn ModExpPow2(sx: &[char], sy: &[char], n: int, sz: &[char]) -> (res: Vec<char>)
   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

note: recommendation not met
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_gpt-mini_15-09_18h47/bignum_ModExpPow2_Add_impl.rs:76:5
   |
12 |   recommends ValidBitString(s)
   |              ----------------- recommendation not met
...
76 |     Str2Int(res@) == Exp_int(Str2Int(sx@), Str2Int(sy@)) % Str2Int(sz@)
   |     ^^^^^^^^^^^^^

error: possible arithmetic underflow/overflow
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_gpt-mini_15-09_18h47/bignum_ModExpPow2_Add_impl.rs:90:13
   |
90 |         m = 2 * m + bit;
   |             ^^^^^

error: possible arithmetic underflow/overflow
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_gpt-mini_15-09_18h47/bignum_ModExpPow2_Add_impl.rs:90:13
   |
90 |         m = 2 * m + bit;
   |             ^^^^^^^^^^^

error: possible division by zero
   --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_gpt-mini_15-09_18h47/bignum_ModExpPow2_Add_impl.rs:102:20
    |
102 |         base_mod = (2 * base_mod + bit) % m;
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^

error: possible arithmetic underflow/overflow
   --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_gpt-mini_15-09_18h47/bignum_ModExpPow2_Add_impl.rs:102:21
    |
102 |         base_mod = (2 * base_mod + bit) % m;
    |                     ^^^^^^^^^^^^

error: possible division by zero
   --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_gpt-mini_15-09_18h47/bignum_ModExpPow2_Add_impl.rs:121:22
    |
121 |         result_int = 1 % m;
    |                      ^^^^^

error: possible division by zero
   --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_gpt-mini_15-09_18h47/bignum_ModExpPow2_Add_impl.rs:123:28
    |
123 |         let mut r: usize = base_mod % m;
    |                            ^^^^^^^^^^^^

error: possible arithmetic underflow/overflow
   --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_gpt-mini_15-09_18h47/bignum_ModExpPow2_Add_impl.rs:131:17
    |
131 |             r = (r * r) % m;
    |                 ^^^^^^^

error: possible division by zero
   --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_gpt-mini_15-09_18h47/bignum_ModExpPow2_Add_impl.rs:131:17
    |
131 |             r = (r * r) % m;
    |                 ^^^^^^^^^^^

error: aborting due to 11 previous errors


--------------------------------------------------------------------------------

Additional Output:
verification results:: 7 verified, 6 errors
note: function body check: not all errors may have been reported; rerun with a higher value for --multiple-errors to find other potential errors in this function
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_gpt-mini_15-09_18h47/bignum_ModExpPow2_Add_impl.rs:24:6
   |
24 | exec fn Add(s1: &[char], s2: &[char]) -> (res: Vec<char>)
   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: postcondition not satisfied
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_gpt-mini_15-09_18h47/bignum_ModExpPow2_Add_impl.rs:26:11
   |
26 |   ensures ValidBitString(res@), Str2Int(res@) == Str2Int(s1@) + Str2Int(s2@)
   |           ^^^^^^^^^^^^^^^^^^^^ failed this postcondition
...
64 |     res
   |     --- at the end of the function body

note: recommendation not met
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_gpt-mini_15-09_18h47/bignum_ModExpPow2_Add_impl.rs:26:33
   |
12 |   recommends ValidBitString(s)
   |              ----------------- recommendation not met
...
26 |   ensures ValidBitString(res@), Str2Int(res@) == Str2Int(s1@) + Str2Int(s2@)
   |                                 ^^^^^^^^^^^^^

error: postcondition not satisfied
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_gpt-mini_15-09_18h47/bignum_ModExpPow2_Add_impl.rs:26:33
   |
26 |   ensures ValidBitString(res@), Str2Int(res@) == Str2Int(s1@) + Str2Int(s2@)
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ failed this postcondition
...
64 |     res
   |     --- at the end of the function body

error: possible arithmetic underflow/overflow
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_gpt-mini_15-09_18h47/bignum_ModExpPow2_Add_impl.rs:43:19
   |
43 |         let sum = b1 + b2 + carry;
   |                   ^^^^^^^^^^^^^^^

note: while loop: not all errors may have been reported; rerun with a higher value for --multiple-errors to find other potential errors in this function
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_gpt-mini_15-09_18h47/bignum_ModExpPow2_Add_impl.rs:84:5
   |
84 |     while idx < sz.len()
   |     ^^^^^^^^^^^^^^^^^^^^

note: while loop: not all errors may have been reported; rerun with a higher value for --multiple-errors to find other potential errors in this function
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_gpt-mini_15-09_18h47/bignum_ModExpPow2_Add_impl.rs:96:5
   |
96 |     while i < sx.len()
   |     ^^^^^^^^^^^^^^^^^^

note: while loop: not all errors may have been reported; rerun with a higher value for --multiple-errors to find other potential errors in this function
   --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_gpt-mini_15-09_18h47/bignum_ModExpPow2_Add_impl.rs:126:9
    |
126 |         while t > 0
    |         ^^^^^^^^^^^

note: function body check: not all errors may have been reported; rerun with a higher value for --multiple-errors to find other potential errors in this function
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_gpt-mini_15-09_18h47/bignum_ModExpPow2_Add_impl.rs:69:6
   |
69 | exec fn ModExpPow2(sx: &[char], sy: &[char], n: int, sz: &[char]) -> (res: Vec<char>)
   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

note: recommendation not met
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_gpt-mini_15-09_18h47/bignum_ModExpPow2_Add_impl.rs:76:5
   |
12 |   recommends ValidBitString(s)
   |              ----------------- recommendation not met
...
76 |     Str2Int(res@) == Exp_int(Str2Int(sx@), Str2Int(sy@)) % Str2Int(sz@)
   |     ^^^^^^^^^^^^^

error: possible arithmetic underflow/overflow
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_gpt-mini_15-09_18h47/bignum_ModExpPow2_Add_impl.rs:90:13
   |
90 |         m = 2 * m + bit;
   |             ^^^^^

error: possible arithmetic underflow/overflow
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_gpt-mini_15-09_18h47/bignum_ModExpPow2_Add_impl.rs:90:13
   |
90 |         m = 2 * m + bit;
   |             ^^^^^^^^^^^

error: possible division by zero
   --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_gpt-mini_15-09_18h47/bignum_ModExpPow2_Add_impl.rs:102:20
    |
102 |         base_mod = (2 * base_mod + bit) % m;
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^

error: possible arithmetic underflow/overflow
   --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_gpt-mini_15-09_18h47/bignum_ModExpPow2_Add_impl.rs:102:21
    |
102 |         base_mod = (2 * base_mod + bit) % m;
    |                     ^^^^^^^^^^^^

error: possible division by zero
   --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_gpt-mini_15-09_18h47/bignum_ModExpPow2_Add_impl.rs:121:22
    |
121 |         result_int = 1 % m;
    |                      ^^^^^

error: possible division by zero
   --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_gpt-mini_15-09_18h47/bignum_ModExpPow2_Add_impl.rs:123:28
    |
123 |         let mut r: usize = base_mod % m;
    |                            ^^^^^^^^^^^^

error: possible arithmetic underflow/overflow
   --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_gpt-mini_15-09_18h47/bignum_ModExpPow2_Add_impl.rs:131:17
    |
131 |             r = (r * r) % m;
    |                 ^^^^^^^

error: possible division by zero
   --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_gpt-mini_15-09_18h47/bignum_ModExpPow2_Add_impl.rs:131:17
    |
131 |             r = (r * r) % m;
    |                 ^^^^^^^^^^^

error: aborting due to 11 previous errors

