=== Verification Error - Iteration 9 ===
File: /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/files/bignum_ModExp_DivMod_ModExpPow2.rs
Time: 2025-09-15 19:06:15

Full Error Output:
--------------------------------------------------------------------------------
Verification failed: verification results:: 5 verified, 6 errors
error: possible arithmetic underflow/overflow
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_grok-code_15-09_18h47/bignum_ModExp_DivMod_ModExpPow2_impl.rs:35:9
   |
35 |         num_bits += 1u64;
   |         ^^^^^^^^^^^^^^^^

error: possible bit shift underflow/overflow
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_grok-code_15-09_18h47/bignum_ModExp_DivMod_ModExpPow2_impl.rs:46:19
   |
46 |         let bit = (x >> i) & 1u64;
   |                   ^^^^^^^^

note: while loop: not all errors may have been reported; rerun with a higher value for --multiple-errors to find other potential errors in this function
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_grok-code_15-09_18h47/bignum_ModExp_DivMod_ModExpPow2_impl.rs:56:5
   |
56 |     while i < s.len()
   |     ^^^^^^^^^^^^^^^^^

error: possible arithmetic underflow/overflow
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_grok-code_15-09_18h47/bignum_ModExp_DivMod_ModExpPow2_impl.rs:60:18
   |
60 |         result = result * 2u64 + if s[i] == '1' { 1u64 } else { 0u64 };
   |                  ^^^^^^^^^^^^^

error: possible arithmetic underflow/overflow
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_grok-code_15-09_18h47/bignum_ModExp_DivMod_ModExpPow2_impl.rs:60:18
   |
60 |         result = result * 2u64 + if s[i] == '1' { 1u64 } else { 0u64 };
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

note: while loop: not all errors may have been reported; rerun with a higher value for --multiple-errors to find other potential errors in this function
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_grok-code_15-09_18h47/bignum_ModExp_DivMod_ModExpPow2_impl.rs:74:9
   |
74 |         loop
   |         ^^^^

error: possible division by zero
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_grok-code_15-09_18h47/bignum_ModExp_DivMod_ModExpPow2_impl.rs:72:33
   |
72 |         let mut base_pow: u64 = base % modulus;
   |                                 ^^^^^^^^^^^^^^

error: possible division by zero
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_grok-code_15-09_18h47/bignum_ModExp_DivMod_ModExpPow2_impl.rs:79:27
   |
79 |                 result = ((((result as u128) * (base_pow as u128)) % (modulus as u128)) as u64);
   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

note: recommendation not met: value may be out of range of the target type (use `#[verifier::truncate]` on the cast to silence this warning)
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_grok-code_15-09_18h47/bignum_ModExp_DivMod_ModExpPow2_impl.rs:79:27
   |
79 |                 result = ((((result as u128) * (base_pow as u128)) % (modulus as u128)) as u64);
   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: possible arithmetic underflow/overflow
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_grok-code_15-09_18h47/bignum_ModExp_DivMod_ModExpPow2_impl.rs:79:28
   |
79 |                 result = ((((result as u128) * (base_pow as u128)) % (modulus as u128)) as u64);
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

note: recommendation not met: value may be out of range of the target type (use `#[verifier::truncate]` on the cast to silence this warning)
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_grok-code_15-09_18h47/bignum_ModExp_DivMod_ModExpPow2_impl.rs:81:25
   |
81 |             base_pow = ((((base_pow as u128) * (base_pow as u128)) % (modulus as u128)) as u64);
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

note: function body check: not all errors may have been reported; rerun with a higher value for --multiple-errors to find other potential errors in this function
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_grok-code_15-09_18h47/bignum_ModExp_DivMod_ModExpPow2_impl.rs:93:6
   |
93 | exec fn ModExp_DivMod_ModExpPow2(sx: &[char], sy: &[char], sz: &[char]) -> (res: Vec<char>)
   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: postcondition not satisfied
   --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_grok-code_15-09_18h47/bignum_ModExp_DivMod_ModExpPow2_impl.rs:95:11
    |
95  |   ensures ValidBitString(res@), Str2Int(res@) == Exp_int(Str2Int(sx@), Str2Int(sy@)) % Str2Int(sz@)
    |           ^^^^^^^^^^^^^^^^^^^^ failed this postcondition
...
103 |     Int2Str(res_int)
    |     ---------------- at the end of the function body

note: recommendation not met
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_grok-code_15-09_18h47/bignum_ModExp_DivMod_ModExpPow2_impl.rs:95:33
   |
12 | recommends ValidBitString(s)
   |            ----------------- recommendation not met
...
95 |   ensures ValidBitString(res@), Str2Int(res@) == Exp_int(Str2Int(sx@), Str2Int(sy@)) % Str2Int(sz@)
   |                                 ^^^^^^^^^^^^^

error: postcondition not satisfied
   --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_grok-code_15-09_18h47/bignum_ModExp_DivMod_ModExpPow2_impl.rs:95:33
    |
95  |   ensures ValidBitString(res@), Str2Int(res@) == Exp_int(Str2Int(sx@), Str2Int(sy@)) % Str2Int(sz@)
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ failed this postcondition
...
103 |     Int2Str(res_int)
    |     ---------------- at the end of the function body

error: aborting due to 9 previous errors


--------------------------------------------------------------------------------

Additional Output:
verification results:: 5 verified, 6 errors
error: possible arithmetic underflow/overflow
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_grok-code_15-09_18h47/bignum_ModExp_DivMod_ModExpPow2_impl.rs:35:9
   |
35 |         num_bits += 1u64;
   |         ^^^^^^^^^^^^^^^^

error: possible bit shift underflow/overflow
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_grok-code_15-09_18h47/bignum_ModExp_DivMod_ModExpPow2_impl.rs:46:19
   |
46 |         let bit = (x >> i) & 1u64;
   |                   ^^^^^^^^

note: while loop: not all errors may have been reported; rerun with a higher value for --multiple-errors to find other potential errors in this function
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_grok-code_15-09_18h47/bignum_ModExp_DivMod_ModExpPow2_impl.rs:56:5
   |
56 |     while i < s.len()
   |     ^^^^^^^^^^^^^^^^^

error: possible arithmetic underflow/overflow
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_grok-code_15-09_18h47/bignum_ModExp_DivMod_ModExpPow2_impl.rs:60:18
   |
60 |         result = result * 2u64 + if s[i] == '1' { 1u64 } else { 0u64 };
   |                  ^^^^^^^^^^^^^

error: possible arithmetic underflow/overflow
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_grok-code_15-09_18h47/bignum_ModExp_DivMod_ModExpPow2_impl.rs:60:18
   |
60 |         result = result * 2u64 + if s[i] == '1' { 1u64 } else { 0u64 };
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

note: while loop: not all errors may have been reported; rerun with a higher value for --multiple-errors to find other potential errors in this function
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_grok-code_15-09_18h47/bignum_ModExp_DivMod_ModExpPow2_impl.rs:74:9
   |
74 |         loop
   |         ^^^^

error: possible division by zero
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_grok-code_15-09_18h47/bignum_ModExp_DivMod_ModExpPow2_impl.rs:72:33
   |
72 |         let mut base_pow: u64 = base % modulus;
   |                                 ^^^^^^^^^^^^^^

error: possible division by zero
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_grok-code_15-09_18h47/bignum_ModExp_DivMod_ModExpPow2_impl.rs:79:27
   |
79 |                 result = ((((result as u128) * (base_pow as u128)) % (modulus as u128)) as u64);
   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

note: recommendation not met: value may be out of range of the target type (use `#[verifier::truncate]` on the cast to silence this warning)
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_grok-code_15-09_18h47/bignum_ModExp_DivMod_ModExpPow2_impl.rs:79:27
   |
79 |                 result = ((((result as u128) * (base_pow as u128)) % (modulus as u128)) as u64);
   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: possible arithmetic underflow/overflow
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_grok-code_15-09_18h47/bignum_ModExp_DivMod_ModExpPow2_impl.rs:79:28
   |
79 |                 result = ((((result as u128) * (base_pow as u128)) % (modulus as u128)) as u64);
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

note: recommendation not met: value may be out of range of the target type (use `#[verifier::truncate]` on the cast to silence this warning)
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_grok-code_15-09_18h47/bignum_ModExp_DivMod_ModExpPow2_impl.rs:81:25
   |
81 |             base_pow = ((((base_pow as u128) * (base_pow as u128)) % (modulus as u128)) as u64);
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

note: function body check: not all errors may have been reported; rerun with a higher value for --multiple-errors to find other potential errors in this function
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_grok-code_15-09_18h47/bignum_ModExp_DivMod_ModExpPow2_impl.rs:93:6
   |
93 | exec fn ModExp_DivMod_ModExpPow2(sx: &[char], sy: &[char], sz: &[char]) -> (res: Vec<char>)
   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: postcondition not satisfied
   --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_grok-code_15-09_18h47/bignum_ModExp_DivMod_ModExpPow2_impl.rs:95:11
    |
95  |   ensures ValidBitString(res@), Str2Int(res@) == Exp_int(Str2Int(sx@), Str2Int(sy@)) % Str2Int(sz@)
    |           ^^^^^^^^^^^^^^^^^^^^ failed this postcondition
...
103 |     Int2Str(res_int)
    |     ---------------- at the end of the function body

note: recommendation not met
  --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_grok-code_15-09_18h47/bignum_ModExp_DivMod_ModExpPow2_impl.rs:95:33
   |
12 | recommends ValidBitString(s)
   |            ----------------- recommendation not met
...
95 |   ensures ValidBitString(res@), Str2Int(res@) == Exp_int(Str2Int(sx@), Str2Int(sy@)) % Str2Int(sz@)
   |                                 ^^^^^^^^^^^^^

error: postcondition not satisfied
   --> /Users/sergiu.bursuc/baif/vericoding/benchmarks/verus/bignum/vericoder_grok-code_15-09_18h47/bignum_ModExp_DivMod_ModExpPow2_impl.rs:95:33
    |
95  |   ensures ValidBitString(res@), Str2Int(res@) == Exp_int(Str2Int(sx@), Str2Int(sy@)) % Str2Int(sz@)
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ failed this postcondition
...
103 |     Int2Str(res_int)
    |     ---------------- at the end of the function body

error: aborting due to 9 previous errors

