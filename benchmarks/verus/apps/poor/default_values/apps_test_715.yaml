vc-description: |-
  Given a multiple-choice question with four options (A, B, C, D), predict a child's choice.
  Calculate the length of each option's description (excluding prefix "A.", "B.", etc.).
  A choice is "great" if its description is either at least twice shorter than all others
  OR at least twice longer than all others. If exactly one choice is great, select it.
  Otherwise, select choice C.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {
  spec fn valid_result(result: &str) -> bool {
      result == "A" || result == "B" || result == "C" || result == "D"
  }

  spec fn choice_from_index(index: int) -> &'static str
      recommends 0 <= index <= 3
  {
      if index == 0 { "A" }
      else if index == 1 { "B" }
      else if index == 2 { "C" }
      else { "D" }
  }

  spec fn split_lines(s: Seq<char>) -> Seq<Seq<char>> {
      Seq::empty()
  }

  spec fn sort_lengths_with_indices(lengths: Seq<int>) -> Seq<(int, int)>
      recommends lengths.len() == 4
  {
      Seq::empty()
  }

vc-helpers: |

vc-spec: |-
  fn solve(input: Seq<char>) -> (result: &'static str)
      requires input.len() > 0
      ensures valid_result(result)

vc-code: |-
  {
      // impl-start
      assume(false);
      "C"
      // impl-end
  }

vc-postamble: |2-

  }

  fn main() {}
