vc-description: |-
  Given n commentary boxes and m delegations, make the number of boxes divisible by m at minimum cost.
  You can build a box for cost a or demolish a box for cost b.
  Find the minimum cost to make n divisible by m.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {
  spec fn valid_input(n: int, m: int, a: int, b: int) -> bool {
      n >= 1 && m >= 1 && a >= 1 && b >= 1
  }

  spec fn min_cost_to_divisible(n: int, m: int, a: int, b: int) -> int {
      let k = n % m;
      if k * b < (m - k) * a { k * b } else { (m - k) * a }
  }

vc-helpers: |

vc-spec: |-
  fn solve(n: i8, m: i8, a: i8, b: i8) -> (result: i8)
      requires 
          valid_input(n as int, m as int, a as int, b as int)
      ensures 
          result as int == min_cost_to_divisible(n as int, m as int, a as int, b as int),
          result as int >= 0

vc-code: |-
  {
      assume(false);
      unreached()
  }

vc-postamble: |2-

  }

  fn main() {}