vc-description: |-
  Given `a` initial candles and the ability to create 1 new candle from `b` burnt-out candles,
  determine the maximum number of hours the room can be lit. Each candle burns for exactly 1 hour.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

  spec fn valid_input(a: int, b: int) -> bool {
    a >= 1 && a <= 1000 && b >= 2 && b <= 1000
  }
  
  spec fn total_burning_hours(a: int, b: int) -> int
    decreases a via a_decreases
  {
    if a <= 0 { 0 }
    else if a < b { a }
    else { a + total_burning_hours(a / b, b) }
  }

  #[verifier::decreases_by]
  proof fn a_decreases(a: int, b: int) {
    assume(false);
  }

vc-helpers: |-

vc-spec: |-
  fn solve(a: int, b: int) -> (result: int)
    requires 
      valid_input(a, b)
    ensures 
      result >= a,
      result == total_burning_hours(a, b)

vc-code: |-
  {
    assume(false);
    unreached()
  }

vc-postamble: |-

  }

  fn main() {}