vc-description: |-
  Find the sugar water mixture with maximum density given constraints on water and sugar operations.
  Operations: add 100A or 100B grams water, add C or D grams sugar.
  E grams sugar can dissolve per 100 grams water. Beaker capacity is F grams.
  Maximize density = (100 Ã— sugar_mass) / (water_mass + sugar_mass).

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

  spec fn valid_input(a: int, b: int, c: int, d: int, e: int, f: int) -> bool {
      1 <= a < b <= 30 &&
      1 <= c < d <= 30 &&
      1 <= e <= 100 &&
      100 * a <= f <= 3000
  }
  
  spec fn valid_solution(a: int, b: int, c: int, d: int, e: int, f: int, total_mass: int, sugar_mass: int) -> bool {
      total_mass > 0 && sugar_mass >= 0 &&
      total_mass <= f &&
      sugar_mass <= total_mass
  }
  
  spec fn density(total_mass: int, sugar_mass: int) -> int
      recommends total_mass >= 0 && sugar_mass >= 0
  {
      if total_mass > 0 { (100 * sugar_mass) / total_mass } else { 0 }
  }

vc-helpers: |-

vc-spec: |-
  fn solve(a: int, b: int, c: int, d: int, e: int, f: int) -> (result: (int, int))
      requires valid_input(a, b, c, d, e, f)
      ensures ({
          let (total_mass, sugar_mass) = result;
          valid_solution(a, b, c, d, e, f, total_mass, sugar_mass) &&
          total_mass >= 0 && sugar_mass >= 0 &&
          total_mass <= f &&
          sugar_mass <= total_mass &&
          (exists|water_units: int| water_units > 0 && total_mass == #[trigger] (water_units * 100) + sugar_mass) &&
          (exists|water_units: int| water_units > 0 && sugar_mass <= #[trigger] (water_units * e)) &&
          (exists|i1: int, j1: int, i2: int, j2: int| 
              i1 >= 0 && j1 >= 0 && i2 >= 0 && j2 >= 0 &&
              i1 <= 30int / a && j1 <= 30int / b &&
              i2 <= 3000int / c && j2 <= 3000int / d &&
              total_mass == #[trigger] ((a * i1 + b * j1) * 100 + (c * i2 + d * j2)) &&
              sugar_mass == #[trigger] (c * i2 + d * j2) &&
              a * i1 + b * j1 > 0) &&
          total_mass > 0
      })

vc-code: |-
  {
      assume(false);
      unreached()
  }

vc-postamble: |-

  }

  fn main() {}