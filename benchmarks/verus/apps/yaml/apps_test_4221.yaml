vc-description: |-
  Convert a singular noun string containing only lowercase English letters to plural form.
  If the string does not end with 's', append 's'.
  If the string ends with 's', append 'es'.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

  spec fn valid_input(s: Seq<char>) -> bool {
      s.len() > 0 && forall|i: int| 0 <= i < s.len() ==> 'a' <= s[i] && s[i] <= 'z'
  }
  
  spec fn correct_plural(s: Seq<char>, result: Seq<char>) -> bool {
      if s.len() > 0 && s[s.len() - 1] == 's' {
          result == s + seq!['e', 's']
      } else {
          result == s + seq!['s']
      }
  }

vc-helpers: |-

vc-spec: |-
  fn solve(s: &Vec<char>) -> (result: Vec<char>)
      requires valid_input(s@)
      ensures correct_plural(s@, result@)

vc-code: |-
  {
      assume(false);
      unreached()
  }

vc-postamble: |-

  }

  fn main() {}