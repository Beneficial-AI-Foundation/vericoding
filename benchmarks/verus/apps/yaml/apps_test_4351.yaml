vc-description: |-
  Given a three-digit positive integer N (100 ≤ N ≤ 999), determine if it is palindromic
  (reads the same forwards and backwards in decimal notation).

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

  spec fn valid_input(n: int) -> bool {
    100 <= n <= 999
  }
  
  spec fn is_palindromic(n: int) -> bool
    recommends valid_input(n)
  {
    let hundreds = n / 100;
    let units = n % 10;
    hundreds == units
  }

vc-helpers: |-

vc-spec: |-
  fn solve(stdin_input: &str) -> (result: String)
    requires stdin_input@.len() > 0

vc-code: |-
  {
    // impl-start
    assume(false);
    "".to_string()
    // impl-end
  }

vc-postamble: |-

  }

  fn main() {}