vc-description: |-
  Given n tasks numbered 1 to n and parameter k, find the starting task that minimizes
  total "telling off power" when Dima performs tasks in circular order and Inna
  interrupts every k tasks (1st, (k+1)th, (2k+1)th, etc.).

vc-preamble: |-
  use vstd::prelude::*;

  verus! {
  spec fn valid_input(n: int, k: int, powers: Seq<int>) -> bool {
      n > 0 && k > 0 && k <= n && n % k == 0 && powers.len() == n
  }

  spec fn is_optimal_starting_task(result: int, n: int, k: int, powers: Seq<int>) -> bool {
      1 <= result <= k
  }

vc-helpers: |

vc-spec: |-
  fn solve(n: int, k: int, powers: Seq<int>) -> (result: int)
      requires valid_input(n, k, powers)
      ensures is_optimal_starting_task(result, n, k, powers)

vc-code: |-
  {
      assume(false);
      unreached()
  }

vc-postamble: |2-

  }

  fn main() {}
