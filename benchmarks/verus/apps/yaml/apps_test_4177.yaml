vc-description: |-
  Given a string S consisting of lowercase English letters, replace every character with 'x' and output the result.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {
  spec fn valid_input(s: Seq<char>) -> bool {
      s.len() >= 1 && s.len() <= 100 && forall|i: int| 0 <= i < s.len() ==> 'a' <= s[i] && s[i] <= 'z'
  }

  spec fn valid_output(s: Seq<char>, result: Seq<char>) -> bool {
      result.len() == s.len() && forall|i: int| 0 <= i < result.len() ==> result[i] == 'x'
  }

vc-helpers: |

vc-spec: |-
  fn solve(s: Seq<char>) -> (result: Seq<char>)
      requires valid_input(s)
      ensures valid_output(s, result)

vc-code: |-
  {
      assume(false);
      unreached()
  }

vc-postamble: |2-

  }

  fn main() {}
