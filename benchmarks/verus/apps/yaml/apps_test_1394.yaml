vc-description: |-
  Given a string t, find a string s such that when you create s' by removing all 'a' 
  characters from s (keeping other characters in order) and concatenate s and s' to 
  form t = s + s', output the unique string s if it exists, otherwise output ":(".

vc-preamble: |-
  use vstd::prelude::*;

  verus! {
      spec fn count_as(s: Seq<char>) -> int
          decreases s.len()
      {
          if s.len() == 0 {
              0
          } else if s[0] == 'a' {
              1 + count_as(s.subrange(1, s.len() as int))
          } else {
              count_as(s.subrange(1, s.len() as int))
          }
      }
      
      spec fn remove_as(s: Seq<char>) -> Seq<char>
          decreases s.len()
      {
          if s.len() == 0 {
              seq![]
          } else if s[0] == 'a' {
              remove_as(s.subrange(1, s.len() as int))
          } else {
              seq![s[0]].add(remove_as(s.subrange(1, s.len() as int)))
          }
      }

vc-helpers: |-

vc-spec: |-
      fn solve(t: Vec<char>) -> (result: Vec<char>)
          requires t@.len() >= 1

vc-code: |-
      {
          assume(false);
          unreached()
      }

vc-postamble: |-

  }

  fn main() {}