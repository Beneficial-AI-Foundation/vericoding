vc-description: |-
  Given a monster with health H and attack damage A, find the minimum number of attacks needed to reduce the monster's health to 0 or below.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

vc-helpers: |-
  spec fn valid_input(h: int, a: int) -> bool {
      h >= 1 && a >= 1
  }
  
  spec fn is_minimum_attacks(attacks: int, h: int, a: int) -> bool {
      attacks >= 1 &&
      attacks * a >= h &&
      (attacks - 1) * a < h
  }
  
  spec fn ceil_div(h: int, a: int) -> int
      recommends a > 0
  {
      (h + a - 1) / a
  }

vc-spec: |-
  fn solve(h: int, a: int) -> (attacks: int)
      requires 
          valid_input(h, a)
      ensures 
          is_minimum_attacks(attacks, h, a),
          attacks == ceil_div(h, a)

vc-code: |-
  {
      // impl-start
      assume(false);
      unreached()
      // impl-end
  }

vc-postamble: |-

  }

  fn main() {}