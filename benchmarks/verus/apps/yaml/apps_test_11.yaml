vc-description: |-
  Given n tiles numbered 1 to n, paint tiles according to rules:
  - Tile can be painted Red if divisible by a (gives p chocolates)
  - Tile can be painted Blue if divisible by b (gives q chocolates)  
  - If divisible by both a and b, choose the color giving more chocolates
  Find the maximum total chocolates possible.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

  spec fn valid_input(n: int, a: int, b: int, p: int, q: int) -> bool {
    n > 0 && a > 0 && b > 0 && p > 0 && q > 0
  }
  
  spec fn gcd(a: int, b: int) -> int
    recommends a > 0 && b >= 0
    decreases b when b >= 0
  {
    if b == 0 { a } else { gcd(b, a % b) }
  }

vc-helpers: |-

vc-spec: |-
  fn solve(n: int, a: int, b: int, p: int, q: int) -> (result: int)
    requires valid_input(n, a, b, p, q)
    ensures result >= 0

vc-code: |-
  {
    assume(false);
    unreached()
  }

vc-postamble: |-

  }

  fn main() {}