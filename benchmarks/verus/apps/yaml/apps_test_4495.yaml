vc-description: |-
  Given nonnegative integers a and b (where a â‰¤ b) and a positive integer x,
  count how many integers in the range [a, b] inclusive are divisible by x.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

vc-helpers: |-
  spec fn valid_input(a: int, b: int, x: int) -> bool {
      a >= 0 && b >= a && x > 0
  }
  
  spec fn count_divisible_in_range(a: int, b: int, x: int) -> int
      recommends valid_input(a, b, x)
  {
      if a == 0 {
          b / x + 1
      } else {
          b / x - (a - 1) / x
      }
  }

vc-spec: |-
  fn count_divisible(a: int, b: int, x: int) -> (count: int)
      requires valid_input(a, b, x)
      ensures count == count_divisible_in_range(a, b, x)
      ensures count >= 0

vc-code: |-
  {
      // impl-start
      assume(false);
      0
      // impl-end
  }

vc-postamble: |-

  }

  fn main() {}