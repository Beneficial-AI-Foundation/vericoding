vc-description: |-
  Given a string containing only 'L', 'R', 'U', 'D' characters, determine if it is "easily playable".
  A string is easily playable if odd positions (1-indexed) contain no 'L' and even positions contain no 'R'.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {
  spec fn valid_input(s: Seq<char>) -> bool {
      1 <= s.len() <= 100 && forall|i: int| 0 <= i < s.len() ==> s[i] == 'L' || s[i] == 'R' || s[i] == 'U' || s[i] == 'D'
  }

  spec fn easily_playable(s: Seq<char>) -> bool {
      (forall|i: int| 0 <= i < s.len() && i % 2 == 0 ==> s[i] != 'L') &&
      (forall|i: int| 0 <= i < s.len() && i % 2 == 1 ==> s[i] != 'R')
  }

vc-helpers: |

vc-spec: |-
  fn solve(s: Seq<char>) -> (result: String)
      requires valid_input(s)
      ensures result@ == seq!['Y', 'e', 's'] <==> easily_playable(s)

vc-code: |-
  {
      assume(false);
      "No".to_string()
  }

vc-postamble: |2-

  }

  fn main() {}
