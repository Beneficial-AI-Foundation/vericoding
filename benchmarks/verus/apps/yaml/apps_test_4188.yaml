vc-description: |-
  Given 16 facts with numerical claims, determine whether each fact is true (1) or false (0) in reality.
  Each fact is numbered from 1 to 16 based on order of appearance. Input n specifies which fact to check.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {
  spec fn valid_input(n: int) -> bool {
      1 <= n <= 16
  }

  spec fn fact_truth_values() -> Seq<int> {
      seq![1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0]
  }

  spec fn valid_output(result: int) -> bool {
      result == 0 || result == 1
  }

  spec fn expected_output(n: int) -> int
      recommends valid_input(n)
  {
      fact_truth_values()[n - 1]
  }

vc-helpers: |

vc-spec: |-
  fn solve(n: i8) -> (result: i8)
      requires 
          valid_input(n as int)
      ensures 
          valid_output(result as int),
          result as int == expected_output(n as int)

vc-code: |-
  {
      assume(false);
      unreached()
  }

vc-postamble: |2-

  }

  fn main() {}