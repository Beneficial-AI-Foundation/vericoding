vc-description: |-
  Given 16 facts with numerical claims, determine whether each fact is true (1) or false (0) in reality.
  Each fact is numbered from 1 to 16 based on order of appearance. Input n specifies which fact to check.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

vc-helpers: |-
  spec fn valid_input(n: int) -> bool {
      1 <= n <= 16
  }
  
  spec fn fact_truth_values() -> Seq<int> {
      seq![1int, 0int, 0int, 1int, 0int, 1int, 0int, 1int, 1int, 1int, 0int, 0int, 1int, 0int, 1int, 0int]
  }
  
  spec fn valid_output(result: int) -> bool {
      result == 0 || result == 1
  }
  
  spec fn expected_output(n: int) -> int
      recommends valid_input(n)
  {
      fact_truth_values()[n - 1]
  }

vc-spec: |-
  fn solve(n: int) -> (result: int)
      requires
          valid_input(n),
      ensures
          valid_output(result),
          result == expected_output(n),

vc-code: |-
  {
      assume(false);
      0int
  }

vc-postamble: |-

  }

  fn main() {}