vc-description: |-
  Given N strings, count the number of distinct strings.
  Input: A sequence of strings (length >= 1)
  Output: Integer representing the count of distinct strings

vc-preamble: |-
  use vstd::prelude::*;

  verus! {
  spec fn distinct_strings(strings: Seq<String>) -> Set<String> {
      Set::new(|s: String| exists|i: int| 0 <= i < strings.len() && strings[i] == s)
  }

  spec fn valid_input(strings: Seq<String>) -> bool {
      strings.len() >= 1
  }

vc-helpers: |

vc-spec: |-
  fn solve(strings: Seq<String>) -> (count: int)
      requires 
          valid_input(strings)
      ensures 
          count >= 1,
          count <= strings.len(),
          count == distinct_strings(strings).len()

vc-code: |-
  {
      assume(false);
      unreached()
  }

vc-postamble: |2-

  }

  fn main() {}
