vc-description: |-
  Given two joysticks with initial charge levels a1 and a2 percent, determine the maximum number of minutes a game can last.
  Each minute, exactly one joystick must be connected to a charger (gains 1% charge) while the other loses 2% charge.
  Game continues while both joysticks have positive charge (> 0%). If a joystick has exactly 1% charge at the start of a minute,
  it must be charged to avoid reaching 0%. Find the maximum number of minutes before at least one joystick reaches 0% charge.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

  spec fn count_valid_minutes(a: int, b: int) -> int
      recommends a >= 0 && b >= 0
      decreases a + b
  {
      if a <= 0 || b <= 0 {
          0
      } else if a == 1 && b == 1 {
          0
      } else {
          (if a > 1 || b > 1 { 1 as int } else { 0 as int }) + 
          count_valid_minutes(
              if a < b { a + 1 } else { a - 2 }, 
              if a < b { b - 2 } else { b + 1 }
          )
      }
  }

vc-helpers: |-

vc-spec: |-
  fn solve(a1: int, a2: int) -> (result: int)
      requires 
          a1 >= 1 && a2 >= 1,
      ensures 
          result >= 0,
          result == count_valid_minutes(a1, a2),
          (a1 == 1 && a2 == 1) ==> result == 0,

vc-code: |-
  {
      assume(false);
      unreached()
  }

vc-postamble: |-

  }

  fn main() {}