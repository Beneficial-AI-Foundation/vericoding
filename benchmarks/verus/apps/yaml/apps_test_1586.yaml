vc-description: |-
  Given a non-negative integer N, compute the double factorial f(N) where f(n) = 1 if n < 2,
  and f(n) = n × f(n-2) if n ≥ 2. Find the number of trailing zeros in the decimal representation of f(N).
  Trailing zeros are produced by factors of 10, which come from pairs of prime factors 2 and 5.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {
  spec fn valid_input(n: int) -> bool {
      n >= 0
  }

  spec fn factors_in_factorial(n: int, p: int) -> int {
      0
  }

  spec fn factors_in_double_factorial(n: int, p: int) -> int {
      0
  }

  spec fn valid_result(n: int, result: int) -> bool {
      n >= 0 ==> (
          result >= 0 &&
          result == if factors_in_double_factorial(n, 2) < factors_in_double_factorial(n, 5) {
              factors_in_double_factorial(n, 2)
          } else {
              factors_in_double_factorial(n, 5)
          }
      )
  }

vc-helpers: |

vc-spec: |-
  fn solve(n: int) -> (result: int)
      requires valid_input(n)
      ensures valid_result(n, result)

vc-code: |-
  {
      assume(false);
      unreached()
  }

vc-postamble: |2-

  }

  fn main() {}
