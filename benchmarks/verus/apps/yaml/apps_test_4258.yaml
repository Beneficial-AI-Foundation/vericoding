vc-description: |-
  A machine produces B biscuits at regular intervals of A seconds, starting at time A seconds.
  Productions occur at times A, 2A, 3A, 4A, ... seconds after activation.
  Calculate the total number of biscuits produced within the first T + 0.5 seconds.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

vc-helpers: |-
  spec fn valid_input(a: int, b: int, t: int) -> bool {
      1 <= a <= 20 && 1 <= b <= 20 && 1 <= t <= 20
  }
  
  spec fn production_count(a: int, t: int) -> int {
      if a > 0 { t / a } else { 0 }
  }
  
  spec fn total_biscuits(a: int, b: int, t: int) -> int {
      if a > 0 { b * production_count(a, t) } else { 0 }
  }

vc-spec: |-
  fn solve(a: int, b: int, t: int) -> (result: int)
      requires valid_input(a, b, t)
      ensures result == total_biscuits(a, b, t)

vc-code: |-
  {
      assume(false);
      unreached()
  }

vc-postamble: |-

  }

  fn main() {}