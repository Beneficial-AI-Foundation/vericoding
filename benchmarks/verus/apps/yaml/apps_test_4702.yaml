vc-description: |-
  Given an integer x where 0 ≤ x ≤ 1 represented as a string, output the logical NOT of x.
  If x = 0, output 1. If x = 1, output 0.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

vc-helpers: |-
  spec fn valid_input(input: Seq<char>) -> bool {
      input.len() > 0 && 
      (input[0] == '0' || input[0] == '1') && 
      (input.len() == 1 || (input.len() > 1 && input[1] == '\n'))
  }
  
  spec fn logical_not(digit: char) -> Seq<char>
      recommends digit == '0' || digit == '1'
  {
      if digit == '0' { seq!['1', '\n'] } else { seq!['0', '\n'] }
  }
  
  spec fn correct_output(input: Seq<char>, output: Seq<char>) -> bool
      recommends valid_input(input)
  {
      output == logical_not(input[0])
  }

vc-spec: |-
  fn solve(input: String) -> (output: String)
      requires valid_input(input@)
      ensures correct_output(input@, output@)

vc-code: |-
  {
      assume(false);
      unreached()
  }

vc-postamble: |-

  }

  fn main() {}