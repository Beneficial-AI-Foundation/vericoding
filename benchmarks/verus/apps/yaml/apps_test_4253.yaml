vc-description: |-
  Calculate the area of a regular dodecagon inscribed in a circle of radius r.
  The area formula is 3r². Input is an integer r (1 ≤ r ≤ 100).
  Output is the integer area.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {
  spec fn valid_input(r: int) -> bool {
      1 <= r <= 100
  }

  spec fn dodecagon_area(r: int) -> int {
      3 * r * r
  }

  spec fn int_to_string(n: int) -> Seq<char>
      decreases n
  {
      if n == 0 {
          seq!['0']
      } else if n < 10 {
          seq![('0' as int + n) as char]
      } else {
          int_to_string(n / 10) + int_to_string(n % 10)
      }
  }

  spec fn string_to_int(s: Seq<char>) -> int
      decreases s.len()
  {
      if s.len() == 1 {
          (s[0] as int) - ('0' as int)
      } else if s.len() > 1 {
          string_to_int(s.subrange(0, s.len() - 1)) * 10 + ((s[s.len() - 1] as int) - ('0' as int))
      } else {
          0
      }
  }

vc-helpers: |

vc-spec: |-
  fn solve(stdin_input: &str) -> (output: String)

vc-code: |-
  {
      // impl-start
      assume(false);
      unreached()
      // impl-end
  }

vc-postamble: |2-

  }

  fn main() {}
