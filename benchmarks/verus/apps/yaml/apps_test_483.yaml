vc-description: |-
  Given n particles on a line at distinct even-integer positions, where each particle moves 
  left (L) or right (R) at speed 1 unit per microsecond, find the time of the first collision 
  between any two particles, or return -1 if no collision occurs.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

vc-helpers: |-
  spec fn valid_input(n: int, directions: Seq<char>, positions: Seq<int>) -> bool {
      n >= 1 &&
      directions.len() == n &&
      positions.len() == n &&
      (forall|i: int| 0 <= i < n ==> directions[i] == 'R' || directions[i] == 'L') &&
      (forall|i: int| 0 <= i < n ==> positions[i] % 2 == 0 && positions[i] >= 0) &&
      (forall|i: int, j: int| 0 <= i < j < n ==> positions[i] < positions[j])
  }
  
  spec fn has_collision(directions: Seq<char>, positions: Seq<int>) -> bool
      recommends directions.len() == positions.len()
  {
      exists|i: int| 0 <= i < directions.len()-1 && directions[i] == 'R' && directions[i+1] == 'L'
  }
  
  spec fn collision_time(i: int, positions: Seq<int>) -> int
      recommends 0 <= i < positions.len()-1
  {
      (positions[i+1] - positions[i]) / 2
  }
  
  spec fn is_minimal_collision_time(result: int, directions: Seq<char>, positions: Seq<int>) -> bool
      recommends directions.len() == positions.len()
  {
      (forall|i: int| 0 <= i < directions.len()-1 && directions[i] == 'R' && directions[i+1] == 'L' ==> 
          collision_time(i, positions) >= result) &&
      (exists|i: int| 0 <= i < directions.len()-1 && directions[i] == 'R' && directions[i+1] == 'L' && 
          collision_time(i, positions) == result)
  }

vc-spec: |-
  fn solve(n: int, directions: Seq<char>, positions: Seq<int>) -> (result: int)
      requires 
          valid_input(n, directions, positions)
      ensures 
          result == -1 || result >= 0,
          result != -1 ==> has_collision(directions, positions),
          result == -1 ==> !has_collision(directions, positions),
          result != -1 ==> is_minimal_collision_time(result, directions, positions)

vc-code: |-
  {
      assume(false);
      (-1) as int
  }

vc-postamble: |-

  }

  fn main() {}