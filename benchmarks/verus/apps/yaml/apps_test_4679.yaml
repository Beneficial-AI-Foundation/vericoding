vc-description: |-
  Three players (Alice, Bob, Charlie) play a card game with decks of cards labeled 'a', 'b', or 'c'.
  Alice starts first. On each turn, if current player's deck is empty, they win the game.
  Otherwise, discard the top card; the letter determines next player ('a'→Alice, 'b'→Bob, 'c'→Charlie).
  Given initial decks as strings, determine the winner.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {
  spec fn valid_deck(deck: Seq<char>) -> bool {
      forall|i: int| 0 <= i < deck.len() ==> (deck[i] == 'a' || deck[i] == 'b' || deck[i] == 'c')
  }

  spec fn valid_input(a: Seq<char>, b: Seq<char>, c: Seq<char>) -> bool {
      valid_deck(a) && valid_deck(b) && valid_deck(c)
  }

  spec fn valid_winner(winner: char) -> bool {
      winner == 'A' || winner == 'B' || winner == 'C'
  }

vc-helpers: |

vc-spec: |-
  fn solve(a: Seq<char>, b: Seq<char>, c: Seq<char>) -> (result: char)
      requires valid_input(a, b, c)
      ensures valid_winner(result)

vc-code: |-
  {
      assume(false);
      'A'
  }

vc-postamble: |2-

  }

  fn main() {}
