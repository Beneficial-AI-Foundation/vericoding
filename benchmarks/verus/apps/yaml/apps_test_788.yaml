vc-description: |-
  Calculate a score from a string starting with 'A' followed by exactly 6 digits.
  Score formula: sum of all 6 digits + 9 * count of zero digits + 1

vc-preamble: |-
  use vstd::prelude::*;

  verus! {
  spec fn valid_input(s: Seq<char>) -> bool {
      s.len() == 7 && s[0] == 'A' && forall|i: int| 1 <= i < 7 ==> #[trigger] s[i] >= '0' && #[trigger] s[i] <= '9'
  }

  spec fn digit_sum(s: Seq<char>, start: int, end: int) -> int
      decreases end - start when 0 <= start <= end <= s.len()
  {
      if start >= end {
          0
      } else {
          (s[start] as int - '0' as int) + digit_sum(s, start + 1, end)
      }
  }

  spec fn zero_count(s: Seq<char>, start: int, end: int) -> int
      decreases end - start when 0 <= start <= end <= s.len()
  {
      if start >= end {
          0
      } else {
          (if s[start] == '0' { 1nat } else { 0nat }) as int + zero_count(s, start + 1, end)
      }
  }

vc-helpers: |

vc-spec: |-
  fn solve(s: Vec<char>) -> (result: i8)
      requires valid_input(s@)
      ensures result as int == digit_sum(s@, 1, 7) + 9 * zero_count(s@, 1, 7) + 1

vc-code: |-
  {
      assume(false);
      unreached()
  }

vc-postamble: |2-

  }

  fn main() {}