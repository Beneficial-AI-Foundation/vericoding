vc-description: |-
  Given a 4-digit security code, determine if it is "hard to enter". A code is hard to enter
  if it contains any two consecutive digits that are same. Output "Bad" if the code is 
  hard to enter, "Good" otherwise.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

vc-helpers: |-
  spec fn is_hard_to_enter(s: &str) -> bool
      recommends s.len() == 4
  {
      s@.index(0) == s@.index(1) || s@.index(1) == s@.index(2) || s@.index(2) == s@.index(3)
  }

vc-spec: |-
  fn solve(s: &str) -> (result: String)
      requires s.len() == 4,
      ensures result@ == "Bad" <==> is_hard_to_enter(s),
      ensures result@ == "Good" <==> !is_hard_to_enter(s),

vc-code: |-
  {
      assume(false);
      unreached()
  }

vc-postamble: |-

  }

  fn main() {}