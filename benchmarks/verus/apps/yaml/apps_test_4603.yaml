vc-description: |-
  Given costs of ordinary and unlimited tickets for train and bus travel,
  find the minimum total fare by choosing the cheaper option for each mode.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {
  spec fn valid_input(a: int, b: int, c: int, d: int) -> bool {
      1 <= a <= 1000 && 1 <= b <= 1000 && 1 <= c <= 1000 && 1 <= d <= 1000
  }

  spec fn min_total_fare(a: int, b: int, c: int, d: int) -> int {
      (if a < b { a } else { b }) + (if c < d { c } else { d })
  }

vc-helpers: |

vc-spec: |-
  fn solve(a: int, b: int, c: int, d: int) -> (result: int)
      requires valid_input(a, b, c, d)
      ensures result == min_total_fare(a, b, c, d)

vc-code: |-
  {
      assume(false);
      unreached()
  }

vc-postamble: |2-

  }

  fn main() {}
