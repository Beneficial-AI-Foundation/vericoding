vc-description: |-
  Given two integers A and B where A = X + Y and B = X - Y, find the original integers X and Y.
  The inputs are constrained to be between -100 and 100, and unique integer solutions are guaranteed to exist.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

vc-helpers: |-
  spec fn valid_input(a: int, b: int) -> bool {
      -100 <= a <= 100 && -100 <= b <= 100 && (a + b) % 2 == 0 && (a - b) % 2 == 0
  }
  
  spec fn correct_solution(a: int, b: int, x: int, y: int) -> bool {
      a == x + y && b == x - y
  }

vc-spec: |-
  fn solve(a: int, b: int) -> (result: (int, int))
      requires valid_input(a, b)
      ensures correct_solution(a, b, result.0, result.1)

vc-code: |-
  {
      assume(false);
      unreached()
  }

vc-postamble: |-

  }

  fn main() {}