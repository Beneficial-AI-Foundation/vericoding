vc-description: |-
  Given three bell prices a, b, and c (in yen), find the minimum cost to purchase exactly two bells of different types.
  Constraints: 1 ≤ a, b, c ≤ 10000 (integers)

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

  spec fn valid_input(a: int, b: int, c: int) -> bool {
      1 <= a <= 10000 && 1 <= b <= 10000 && 1 <= c <= 10000
  }
  
  spec fn min_of_three(x: int, y: int, z: int) -> int {
      if x <= y && x <= z { x }
      else if y <= z { y }
      else { z }
  }
  
  spec fn correct_result(a: int, b: int, c: int) -> int {
      min_of_three(a + b, a + c, b + c)
  }

vc-helpers: |-

vc-spec: |-
  fn solve(a: int, b: int, c: int) -> (result: int)
      requires valid_input(a, b, c)
      ensures result == correct_result(a, b, c)

vc-code: |-
  {
      assume(false);
      unreached()
  }

vc-postamble: |-

  }

  fn main() {}