vc-description: |-
  Two players take turns removing exactly k consecutive sticks from either end of a row of n sticks.
  The first player moves first. The game ends when fewer than k sticks remain.
  Determine if the first player wins by making strictly more moves than the second player.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

  spec fn valid_input(n: int, k: int) -> bool {
      k >= 1 && n >= 1 && k <= n
  }
  
  spec fn total_moves(n: int, k: int) -> int
      requires valid_input(n, k)
  {
      n / k
  }
  
  spec fn first_player_wins(n: int, k: int) -> bool
      requires valid_input(n, k)
  {
      total_moves(n, k) % 2 == 1
  }

vc-helpers: |-

vc-spec: |-
  fn solve(n: int, k: int) -> (result: String)
      requires 
          valid_input(n, k),
      ensures 
          first_player_wins(n, k) ==> result == "YES",
          !first_player_wins(n, k) ==> result == "NO"

vc-code: |-
  {
      assume(false);
      unreached()
  }

vc-postamble: |-

  }

  fn main() {}