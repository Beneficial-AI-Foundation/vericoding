vc-description: |-
  Given a lowercase English letter (not 'z'), output the next letter in alphabetical order.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

vc-helpers: |-
  spec fn valid_input(input: Seq<char>) -> bool {
      input.len() > 0 && 'a' <= input[0] <= 'y'
  }
  
  spec fn next_char(c: char) -> char
      recommends 'a' <= c <= 'y'
  {
      ((c as u8) + 1) as char
  }
  
  spec fn valid_output(input: Seq<char>, output: Seq<char>) -> bool
      recommends valid_input(input)
  {
      output.len() == 2 &&
      output[0] == next_char(input[0]) &&
      output[1] == '\n' &&
      'b' <= output[0] <= 'z'
  }

vc-spec: |-
  fn solve(input: Seq<char>) -> (output: Seq<char>)
      requires valid_input(input)
      ensures valid_output(input, output)

vc-code: |-
  {
      assume(false);
      unreached()
  }

vc-postamble: |-

  }

  fn main() {}