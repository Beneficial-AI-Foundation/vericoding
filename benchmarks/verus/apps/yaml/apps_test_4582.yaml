vc-description: |-
  Given two characters representing AtCoDeer's honesty status and claim about TopCoDeer,
  determine whether TopCoDeer is actually honest or dishonest.
  An honest player tells the truth, a dishonest player lies.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {
  spec fn valid_input(input: Seq<char>) -> bool {
      input.len() >= 3 &&
      input[1] == ' ' &&
      (input[0] == 'H' || input[0] == 'D') &&
      (input[2] == 'H' || input[2] == 'D') &&
      (input.len() == 3 || (input.len() > 3 && input[3] == '\n'))
  }

  spec fn correct_output(input: Seq<char>) -> Seq<char> {
      if (input[0] == 'H' && input[2] == 'H') || (input[0] == 'D' && input[2] == 'D') {
          seq!['H', '\n']
      } else {
          seq!['D', '\n']
      }
  }

vc-helpers: |

vc-spec: |-
  fn solve(input: Vec<char>) -> (result: Vec<char>)
      requires valid_input(input@)
      ensures result@ == correct_output(input@)

vc-code: |-
  {
      assume(false);
      unreached()
  }

vc-postamble: |2-

  }

  fn main() {}