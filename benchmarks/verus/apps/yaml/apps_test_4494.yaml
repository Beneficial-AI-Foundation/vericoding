vc-description: |-
  Given the type of contest held last week ("ABC" or "ARC"), determine the type 
  of contest to be held this week. Contests alternate between these two types.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

  spec fn valid_input(input: Seq<char>) -> bool {
      input.len() > 0 && 
      ({
          let s = if input[input.len()-1] == '\n' { 
              input.subrange(0, input.len() - 1)
          } else { 
              input
          };
          s == "ABC"@ || s == "ARC"@
      })
  }
  
  spec fn normalize_input(input: Seq<char>) -> Seq<char>
      recommends input.len() > 0
  {
      if input[input.len()-1] == '\n' { 
          input.subrange(0, input.len() - 1)
      } else { 
          input
      }
  }
  
  spec fn expected_output(input: Seq<char>) -> Seq<char>
      recommends valid_input(input)
  {
      let s = normalize_input(input);
      if s == "ABC"@ { "ARC\n"@ } else { "ABC\n"@ }
  }

vc-helpers: |-

vc-spec: |-
  fn solve(input: String) -> (result: String)
      requires valid_input(input@)
      ensures result@ == expected_output(input@)

vc-code: |-
  {
      // impl-start
      assume(false);
      unreached()
      // impl-end
  }

vc-postamble: |-

  }

  fn main() {}