vc-description: |-
  Two athletes Willman and Bolt compete in a race with step lengths w and b meters respectively.
  The race distance L is chosen uniformly at random from integers 1 to t (inclusive).
  Each athlete can take at most floor(L/step_length) steps, traveling floor(L/step_length) * step_length distance.
  They tie when they travel the same total distance: floor(L/w) * w = floor(L/b) * b.
  Find the probability that they tie, expressed as an irreducible fraction.

vc-preamble: |-
  use vstd::prelude::*;
  use vstd::arithmetic::div_mod::*;
  
  verus! {

vc-helpers: |-
  spec fn valid_input(t: int, w: int, b: int) -> bool {
    t > 0 && w > 0 && b > 0
  }
  
  spec fn valid_fraction(numerator: int, denominator: int) -> bool {
    numerator >= 0 && denominator > 0 && numerator <= denominator
  }
  
  spec fn is_irreducible_fraction(numerator: int, denominator: int) -> bool 
    recommends valid_fraction(numerator, denominator)
  {
    gcd(numerator, denominator) == 1
  }

vc-spec: |-
  fn solve(t: int, w: int, b: int) -> (result: (int, int))
    requires valid_input(t, w, b)
    ensures 
      valid_fraction(result.0, result.1) &&
      is_irreducible_fraction(result.0, result.1)

vc-code: |-
  {
    assume(false);
    unreached()
  }

vc-postamble: |-

  }
  
  fn main() {}