vc-description: |-
  Given an integer a, count the number of times the digit '1' appears in its octal (base-8) representation.
  Input: A single integer a where 0 ≤ a ≤ 1,000,000
  Output: A single integer representing the count of digit '1' in the octal representation of a

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

  spec fn count_ones_in_octal(a: int) -> int
      decreases a when a >= 0
  {
      if a == 0 {
          0int
      } else {
          (if a % 8 == 1 { 1int } else { 0int }) + count_ones_in_octal(a / 8)
      }
  }

vc-helpers: |-

vc-spec: |-
  fn solve(a: i8) -> (count: i8)
      requires 
          a >= 0,
      ensures 
          count >= 0,
          count as int == count_ones_in_octal(a as int),

vc-code: |-
  {
      assume(false);
      unreached()
  }

vc-postamble: |-

  }

  fn main() {}