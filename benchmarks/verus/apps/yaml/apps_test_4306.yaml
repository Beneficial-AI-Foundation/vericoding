vc-description: |-
  Given two time intervals [A, B) and [C, D), find the length of their intersection.
  Alice holds a button from time A to time B (exclusive).
  Bob holds a button from time C to time D (exclusive).
  Calculate how many seconds both are holding their buttons simultaneously.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {
  spec fn valid_input(a: int, b: int, c: int, d: int) -> bool {
      0 <= a < b <= 100 && 0 <= c < d <= 100
  }

  spec fn min(x: int, y: int) -> int {
      if x < y { x } else { y }
  }

  spec fn max(x: int, y: int) -> int {
      if x > y { x } else { y }
  }

  spec fn interval_overlap_length(a: int, b: int, c: int, d: int) -> int {
      if min(b, d) - max(a, c) > 0 { min(b, d) - max(a, c) } else { 0 }
  }

vc-helpers: |

vc-spec: |-
  fn solve(a: i8, b: i8, c: i8, d: i8) -> (result: i8)
      requires
          valid_input(a as int, b as int, c as int, d as int),
      ensures
          result >= 0,
          result as int == interval_overlap_length(a as int, b as int, c as int, d as int),
          result <= 100,

vc-code: |-
  {
      assume(false);
      unreached()
  }

vc-postamble: |2-

  }

  fn main() {}