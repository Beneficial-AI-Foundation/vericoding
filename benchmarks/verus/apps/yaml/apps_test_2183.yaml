vc-description: |-
  Given three brothers numbered 1, 2, and 3, exactly two brothers arrived on time 
  for a meeting and one brother was late. Given the numbers of the two brothers who 
  arrived on time, determine the number of the brother who was late.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

vc-helpers: |-
  spec fn valid_brother_numbers(a: int, b: int) -> bool {
      1 <= a <= 3 && 1 <= b <= 3 && a != b
  }
  
  spec fn late_brother(a: int, b: int) -> int
      recommends valid_brother_numbers(a, b)
  {
      6 - a - b
  }
  
  spec fn is_valid_result(a: int, b: int, result: int) -> bool {
      valid_brother_numbers(a, b) ==> 
          (1 <= result <= 3 && result != a && result != b)
  }

vc-spec: |-
  fn solve(a: int, b: int) -> (result: int)
      requires 
          valid_brother_numbers(a, b)
      ensures 
          is_valid_result(a, b, result) &&
          result == late_brother(a, b)

vc-code: |-
  {
      assume(false);
      unreached()
  }

vc-postamble: |-

  }

  fn main() {}