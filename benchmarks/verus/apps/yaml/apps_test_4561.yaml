vc-description: |-
  Given three integers X, A, and B where X is the maximum number of days past 
  best-by date that won't cause stomachache, A is the number of days before 
  best-by date when food was bought, and B is the number of days after purchase 
  when food was eaten. Determine if eating the food results in "delicious", 
  "safe", or "dangerous" outcome.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

vc-helpers: |-
  spec fn valid_outcome(outcome: &str) -> bool {
      outcome == "delicious" || outcome == "safe" || outcome == "dangerous"
  }
  
  spec fn days_past_best_by(a: int, b: int) -> int {
      b - a
  }
  
  spec fn expected_outcome(x: int, a: int, b: int) -> &'static str {
      let days_past = days_past_best_by(a, b);
      if days_past <= 0 {
          "delicious"
      } else if days_past <= x {
          "safe"
      } else {
          "dangerous"
      }
  }

vc-spec: |-
  fn determine_food_safety(x: int, a: int, b: int) -> (outcome: &'static str)
      requires 
          x >= 0,
      ensures 
          outcome == expected_outcome(x, a, b),
          valid_outcome(outcome),

vc-code: |-
  {
      assume(false);
      unreached()
  }

vc-postamble: |-

  }

  fn main() {}