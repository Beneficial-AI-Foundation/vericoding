vc-description: |-
  Given a 4-digit integer N, determine if it is "good". 
  A 4-digit integer is "good" if it contains three or more consecutive identical digits.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

vc-helpers: |-
      spec fn valid_input(n: int) -> bool {
          1000 <= n <= 9999
      }
      
      spec fn extract_digits(n: int) -> (int, int, int, int)
          recommends valid_input(n)
      {
          let d1 = n / 1000;
          let d2 = (n / 100) % 10;
          let d3 = (n / 10) % 10;
          let d4 = n % 10;
          (d1, d2, d3, d4)
      }
      
      spec fn is_good(n: int) -> bool
          recommends valid_input(n)
      {
          let (d1, d2, d3, d4) = extract_digits(n);
          (d1 == d2 && d2 == d3) || (d2 == d3 && d3 == d4)
      }

vc-spec: |-
      fn solve(n: int) -> (result: String)
          requires valid_input(n)
          ensures result == "Yes" || result == "No"
          ensures (result == "Yes") <==> is_good(n)

vc-code: |-
      {
          assume(false);
          String::new()
      }

vc-postamble: |-

  }

  fn main() {}