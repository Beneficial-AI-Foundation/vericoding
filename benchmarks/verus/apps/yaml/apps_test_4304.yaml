vc-description: |-
  Given uncovered heights of two adjacent towers after snowfall, find the snow depth.
  Towers have triangular number heights: 1, 3, 6, 10, ... (i-th tower height = i*(i+1)/2).
  Snow covers uniformly to same depth everywhere.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

  spec fn valid_input(a: int, b: int) -> bool {
    a >= 1 && b > a && b < 499500
  }
  
  spec fn valid_snow_depth(a: int, b: int, depth: int) -> bool {
    depth >= 1 &&
    ((b - a) * (b - a) - (a + b)) >= 2 &&
    ((b - a) * (b - a) - (a + b)) % 2 == 0
  }
  
  spec fn snow_depth_formula(a: int, b: int) -> int
    recommends valid_input(a, b) && valid_snow_depth(a, b, ((b - a) * (b - a) - (a + b)) / 2)
  {
    ((b - a) * (b - a) - (a + b)) / 2
  }

vc-helpers: |-

vc-spec: |-
  fn solve(a: int, b: int) -> (result: int)
    requires valid_input(a, b) && valid_snow_depth(a, b, ((b - a) * (b - a) - (a + b)) / 2)
    ensures result >= 1 && result == snow_depth_formula(a, b)

vc-code: |-
  {
    assume(false);
    unreached()
  }

vc-postamble: |-

  }

  fn main() {}