vc-description: |-
  Given an n×n grid where each cell (i,j) contains (i² + j²) candies, count how many cells have a number of candies divisible by m.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {
  spec fn count_cells_divisible_by_m(n: int, m: int) -> int
  {
      if 1 <= n && 1 <= m {
          0 /* placeholder for set cardinality */
      } else {
          0
      }
  }

  spec fn valid_input(n: int, m: int) -> bool {
      1 <= n && 1 <= m && m <= 1000
  }

vc-helpers: |

vc-spec: |-
  fn solve(n: i8, m: i8) -> (result: i8)
    requires 
      valid_input(n as int, m as int),
    ensures 
      result >= 0,
      result as int == count_cells_divisible_by_m(n as int, m as int),

vc-code: |-
  {
      assume(false);
      0
  }

vc-postamble: |2-

  }

  fn main() {}