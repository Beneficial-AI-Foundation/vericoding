vc-description: |-
  Given four integers A, B, C, and D, find the count of integers in the range [A, B] (inclusive) 
  that are divisible by neither C nor D.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

  spec fn valid_input(a: int, b: int, c: int, d: int) -> bool {
    a >= 1 && b >= a && c >= 1 && d >= 1
  }

  spec fn not_divisible_by_either(x: int, c: int, d: int) -> bool
    recommends c > 0 && d > 0
  {
    x % c != 0 && x % d != 0
  }

  spec fn count_not_divisible(a: int, b: int, c: int, d: int) -> int
    recommends valid_input(a, b, c, d)
  {
    /* Count of integers in range [a, b] not divisible by either c or d */
    (Set::new(|x: int| a <= x <= b && not_divisible_by_either(x, c, d))).len() as int
  }
  spec fn f(n: int, c: int, d: int) -> int {
    /* Helper function f referenced in postcondition */
    0 as int  /* Placeholder specification */
  }

vc-helpers: |

vc-spec: |-
  fn solve(a: int, b: int, c: int, d: int) -> (result: int)
    requires
        valid_input(a, b, c, d),
    ensures
        result >= 0,
        result == f(b, c, d) - f(a - 1, c, d),

vc-code: |-
  {
    assume(false);
    unreached()
  }

vc-postamble: |2-

  }

  fn main() {}
