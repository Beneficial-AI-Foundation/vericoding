vc-preamble: |-
  use vstd::prelude::*;

  verus! {

  // pure-end

  spec fn spec_sum(s: Seq<u32>) -> (ret:int) {
      s.fold_left(0, |x: int, y| x + y)
  }
  // pure-end

vc-helpers: |-


vc-description: |-
  docstring: Implement will it fly.

vc-spec: |-
  fn will_it_fly(qs: &Vec<u32>, w: u32) -> (ret: bool)
      // post-conditions-start
      ensures
          ret <==> qs@ =~= qs@.reverse() && spec_sum(qs@) <= w,
      // post-conditions-end

vc-code: |-
  {
      // impl-start
      assume(false);
      false
      // impl-end
  }

vc-postamble: |-

  }
  fn main() {}
