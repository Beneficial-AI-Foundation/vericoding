vc-description: |-
  function_signature: fn sort_seq(s: Vec<i8>) -> (sorted: Vec<i8>)

  Sort elements. Ensures: the result is sorted according to the ordering relation;
  returns the correct size/count; returns a sorted permutation of the input.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

  spec fn number_to_name(n: int) -> &'static str {
    if n == 1 { "One" }
    else if n == 2 { "Two" }
    else if n == 3 { "Three" }
    else if n == 4 { "Four" }
    else if n == 5 { "Five" }
    else if n == 6 { "Six" }
    else if n == 7 { "Seven" }
    else if n == 8 { "Eight" }
    else if n == 9 { "Nine" }
    else { "Unknown" }
  }

vc-helpers: |-

vc-spec: |-
  fn sort_seq(s: Vec<i8>) -> (sorted: Vec<i8>)
    ensures 
      forall|i: int, j: int| 0 <= i < j < sorted.len() ==> sorted[i] as int <= sorted[j] as int &&
      sorted.len() == s.len() &&
      s@.to_multiset() == sorted@.to_multiset()

vc-code: |-
  {
      assume(false);
      unreached()
  }

vc-postamble: |-

  }

  fn main() {}