vc-description: |-

vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {
  
  spec fn three_distinct_spec(s: Seq<char>, i: int) -> (ret:bool)
      recommends
          0 < i && i + 1 < s.len(),
  {
      (s[i - 1] != s[i]) && (s[i] != s[i + 1]) && (s[i] != s[i + 1])
  }
  spec fn happy_spec(s: Seq<char>) -> (ret:bool) {
      s.len() >= 3 && (forall|i: int| 0 < i && i + 1 < s.len() ==> three_distinct_spec(s, i))
  }

vc-helpers: |-

vc-spec: |-
  #[verifier::loop_isolation(false)]
  fn is_happy(s: &Vec<char>) -> (happy: bool)
  
      ensures
          happy <==> happy_spec(s@),

vc-code: |-
  {
      assume(false);
      unreached();
  }

vc-postamble: |-
  }
  fn main() {}

