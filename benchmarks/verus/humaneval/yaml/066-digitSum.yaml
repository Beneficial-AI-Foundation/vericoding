vc-description: |-

vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {
  
  spec fn is_upper_case(c: char) -> (ret:bool) {
      c >= 'A' && c <= 'Z'
  }
  
  spec fn count_uppercase_sum(seq: Seq<char>) -> (ret:int)
      decreases seq.len(),
  {
      if seq.len() == 0 {
          0
      } else {
          count_uppercase_sum(seq.drop_last()) + if is_upper_case(seq.last()) {
              seq.last() as int
          } else {
              0 as int
          }
      }
  }

vc-helpers: |-

vc-spec: |-
  fn digit_sum(text: &[char]) -> (sum: u128)
  
      ensures
          count_uppercase_sum(text@) == sum,

vc-code: |-
  {
      assume(false);
      unreached();
  }

vc-postamble: |-
  }
  fn main() {}

