vc-description: |-

vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {
  
  spec fn spec_bracketing_helper(brackets: Seq<char>) -> (result:(int, bool)) {
      brackets.fold_left(
          (0, true),
          |p: (int, bool), c|
              {
                  let (x, b) = p;
                  match (c) {
                      '<' => (x + 1, b),
                      '>' => (x - 1, b && x - 1 >= 0),
                      _ => (x, b),
                  }
              },
      )
  }
  
  spec fn spec_bracketing(brackets: Seq<char>) -> (result:bool) {
      let p = spec_bracketing_helper(brackets);
      p.1 && p.0 == 0
  }

vc-helpers: |-

vc-spec: |-
  fn correct_bracketing(brackets: &str) -> (ret: bool)
  
      requires
          brackets@.len() <= i32::MAX,
          -brackets@.len() >= i32::MIN,
  
      ensures
          ret <==> spec_bracketing(brackets@),

vc-code: |-
  {
      assume(false);
      unreached()
  }

vc-postamble: |-
  }
  fn main() {}

