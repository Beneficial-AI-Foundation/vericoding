vc-description: |-
  function_signature: fn count(a: Seq<int>, x: int) -> (cnt: int)

  Count occurrences. Ensures: returns the correct count; returns the correct count.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

  spec fn count_rec(a: Seq<int>, x: int) -> int
      decreases a.len()
  {
      if a.len() == 0 {
          0
      } else {
          count_rec(a.subrange(1, a.len() as int), x) + (if a[0] == x { 1 as int } else { 0 as int })
      }
  }

vc-helpers: |-

vc-spec: |-
  fn count(a: Vec<i8>, x: i8) -> (cnt: i8)
      ensures 
          cnt as int == count_rec(a@.map(|i: int, v: i8| v as int), x as int)

vc-code: |-
  {
      // impl-start
      assume(false);
      unreached()
      // impl-end
  }

vc-postamble: |-

  }

  fn main() {}