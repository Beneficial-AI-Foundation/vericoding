vc-description: |-
  function_signature: def remove_vowels(string: str) -> Nat

  Write a function vowels_count which takes a string representing a word as input
  and returns the number of vowels in the string. Vowels in this case are 'a', 'e',
  'i', 'o', 'u'. Here, 'y' is also a vowel, but only when it is at the end
  of the given word.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

  spec fn is_vowel(c: char) -> bool
  {
    c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U'
  }

vc-helpers: |-

vc-spec: |-
  fn vowel_count(s: &Vec<char>) -> (count: u8)
    ensures
      count as nat >= 0,
      /* TODO: Translate set comprehension for vowel counting */

vc-code: |-
  {
      assume(false);
      0
  }

vc-postamble: |-

  }

  fn main() {}