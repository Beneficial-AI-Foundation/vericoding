vc-description: |-
  /--
  function_signature: "def below_threshold(numbers: List[Int], threshold: Int) -> bool"
  docstring: Return True if all numbers in the list l are below threshold t, and False otherwise.
  test_cases:
    - input: [[1, 2, 4, 10], 100]
      expected_output: True
    - input: [[1, 20, 4, 10], 5]
      expected_output: False
  -/

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

vc-helpers: |-

vc-spec: |-
  fn below_threshold(l: &[i32], t: i32) -> (result: bool)
      // post-conditions-start
      ensures
          result == forall|i: int| 0 <= i < l.len() ==> l[i] < t,
      // post-conditions-end

vc-code: |-
  {
      // impl-start
      assume(false);
      false
      // impl-end
  }

vc-postamble: |-

  }
  fn main() {}
