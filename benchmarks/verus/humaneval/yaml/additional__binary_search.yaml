vc-description: |-
  /--
  function_signature: "fn binary_search(arr: &[i32], target: i32) -> (result: Option<usize>)"
  docstring: Perform binary search on a sorted array to find the position where an element should be inserted.
  -/
vc-preamble: |-
  use vstd::prelude::*;

  verus! {

vc-helpers: |-

vc-spec: |-
  #[verifier::loop_isolation(false)]
  fn binary_search(arr: &[i32], target: i32) -> (result: Option<usize>)
      // pre-conditions-start
      requires
          forall|i: int, j: int| 0 <= i && i < j && j < arr.len() ==> arr[i] <= arr[j],
      // pre-conditions-end
      // post-conditions-start
      ensures
          match result {
              Some(index) => arr[index as int] == target && arr.len() > 0 && index < arr.len(),
              None => forall|i: int| 0 <= i && i < arr.len() ==> arr[i] != target,
          },
      // post-conditions-end

vc-code: |-
  {
      // impl-start
      assume(false);
      None
      // impl-end
  }

vc-postamble: |-

  fn main() {}
  }
