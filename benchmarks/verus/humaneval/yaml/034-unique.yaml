vc-description: |-

vc-preamble: |-
  use vstd::calc;
  use vstd::prelude::*;
  use vstd::seq_lib::lemma_multiset_commutative;
  use vstd::seq_lib::lemma_seq_contains_after_push;
  
  verus! {

vc-helpers: |-

vc-spec: |-
  fn unique(s: Vec<i32>) -> (result: Vec<i32>)
  
      ensures
          forall|i: int, j: int| 0 <= i < j < result.len() ==> result[i] < result[j],
          forall|i: int| #![auto] 0 <= i < result.len() ==> s@.contains(result[i]),
          forall|i: int| #![trigger s[i]] 0 <= i < s.len() ==> result@.contains(s[i]),

vc-code: |-
  {
      assume(false);
      unreached()
  }

vc-postamble: |-
  }
  fn main() {}

