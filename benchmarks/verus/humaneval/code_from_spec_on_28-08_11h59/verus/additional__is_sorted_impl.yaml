vc-description: |-
  /--
  function_signature: "fn is_sorted(lst: &[i32]) -> (result: bool)"
  docstring: Sort elements according to specified criteria.
  -/

vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-


vc-spec: |-
  #[verifier::loop_isolation(false)]
  fn is_sorted(lst: &[i32]) -> (result: bool)
      // pre-conditions-start
      requires
          lst.len() >= 1,
      // pre-conditions-end
      // post-conditions-start
      ensures
          result <== forall|i: int, j: int| 0 <= i && i < j && j < lst.len() ==> lst[i] <= lst[j],
          !result ==> exists|i: int, j: int| 0 <= i && i < j && j < lst.len() && lst[i] > lst[j],
      // post-conditions-end

vc-code: |-
  {
      let mut i = 0;
      while i < lst.len() - 1
          invariant
              0 <= i <= lst.len() - 1,
              forall|k: int, l: int| 0 <= k && k < l && l < i + 1 ==> lst[k] <= lst[l],
          decreases lst.len() - 1 - i
      {
          if lst[i] > lst[i + 1] {
              return false;
          }
          i += 1;
      }
      true
  }

vc-postamble: |-
  
  fn main() {}
  }

