vc-description: |-
  /--
  function_signature: "fn max_array(nums: &[i32]) -> (idx: usize)"
  docstring: Find the maximum value or element.
  -/

vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-
  // </vc-helpers>

vc-spec: |-
  fn max_array(nums: &[i32]) -> (idx: usize)
      // pre-conditions-start
      requires
          nums.len() >= 1,
      // pre-conditions-end
      // post-conditions-start
      ensures
          0 <= idx && idx < nums.len(),
          forall|i: int| 0 <= i && i < nums.len() ==> nums[i] <= nums[idx as int],
      // post-conditions-end

vc-code: |-
  {
      let mut max_idx = 0;
      let mut i = 1;
      
      while i < nums.len()
          invariant
              0 <= max_idx < nums.len(),
              1 <= i <= nums.len(),
              forall|j: int| 0 <= j < i ==> nums[j] <= nums[max_idx as int],
          decreases nums.len() - i
      {
          if nums[i] > nums[max_idx] {
              max_idx = i;
          }
          i += 1;
      }
      
      max_idx
  }

vc-postamble: |-
  
  fn main() {}
  }

