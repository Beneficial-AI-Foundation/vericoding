vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-


vc-description: |-
  function_signature: "fn replace_chars(s: &[char], old: char, new: char) -> (result: Vec<char>)"
  docstring: Implement replace chars functionality.

vc-spec: |-
  fn replace_chars(s: &[char], old: char, new: char) -> (result: Vec<char>)
      ensures
          result@.len() == s@.len(),
          forall|i: int| 0 <= i < s@.len() ==> 
              result@[i] == if s@[i] == old { new } else { s@[i] }

vc-code: |-
  {
      let mut result = Vec::new();
      let mut i = 0;
      
      /* code modified by LLM (iteration 2): added decreases clause to fix verification error */
      while i < s.len()
          invariant
              0 <= i <= s.len(),
              result@.len() == i,
              forall|j: int| 0 <= j < i ==> 
                  result@[j] == if s@[j] == old { new } else { s@[j] }
          decreases s.len() - i
      {
          if s[i] == old {
              result.push(new);
          } else {
              result.push(s[i]);
          }
          i += 1;
      }
      
      result
  }

vc-postamble: |-
  
  fn main() {}
  }

