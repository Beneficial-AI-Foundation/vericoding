vc-description: |-
  Harish has decided to go to Arya's hotel this morning. We all know he is crazy for masala dosas. And as usual he is always hungry. He decided to order all the masala dosas at once. But then he realised that he did not have enough money to buy all of them. So he decided to share the amount with his friend Ozil. But both of them are fans of even numbers. Both of them says they want to eat even number of dosas. Ozil is ready to put the share if and only if , he is sure that he can get even number of dosas. So given N number of dosas can you please help Harish to decide, if he will be able to get all the dosas at once from the hotel.

  -----Input-----
  The first line of input contains an integer T which denotes the number of test files. Next T lines contains an integer N where N is the total number of dosas.

  -----Output-----
  Print "YES" if both can get even number of dosas. If it is not possible print "NO".

  -----Constraints-----
  - 1 ≤ T ≤ 10^6
  - 1 ≤ N ≤ 10^18

  -----Subtasks-----
  Subtask #1 : (20 points)
  - 1 ≤ T ≤ 10
  - 1 ≤ N≤ 100

  Subtask 2 : (80 points) 

  - 1 ≤ T ≤ 10^6
  - 1 ≤ N≤ 10^18

  -----Example-----
  Input:
  2 
  16 
  27
  Output:
  YES
  NO
vc-preamble: |-
  use vstd::prelude::*;

  verus! {
vc-helpers: |-

vc-spec: |-
  fn can_split_dosas_evenly(n: u64) -> (result: String)
      ensures
          result@ === seq!['Y', 'E', 'S'] || result@ === seq!['N', 'O'],
          result@ === (if n % 2 == 0 { seq!['Y', 'E', 'S'] } else { seq!['N', 'O'] }),
          (n % 2 == 0) ==> result@ === seq!['Y', 'E', 'S'],
          (n % 2 != 0) ==> result@ === seq!['N', 'O']
vc-code: |-
  {
      // impl-start
      assume(false);
      unreached()
      // impl-end
  }
vc-postamble: |-

  }
  fn main() {
      // Apps difficulty: interview
      // Assurance level: unguarded
      //
      // Example test cases:
      // assert(can_split_dosas_evenly(16)@ === seq!['Y', 'E', 'S']);
      // assert(can_split_dosas_evenly(27)@ === seq!['N', 'O']);
      // assert(can_split_dosas_evenly(100)@ === seq!['Y', 'E', 'S']);
  }