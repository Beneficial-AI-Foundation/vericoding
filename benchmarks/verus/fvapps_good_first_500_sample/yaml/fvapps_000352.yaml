vc-description: |-
  Given a rectangle of size n x m, find the minimum number of integer-sided squares that tile the rectangle.

  Example 1:

  Input: n = 2, m = 3
  Output: 3
  Explanation: 3 squares are necessary to cover the rectangle.
  2 (squares of 1x1)
  1 (square of 2x2)
  Example 2:

  Input: n = 5, m = 8
  Output: 5

  Example 3:

  Input: n = 11, m = 13
  Output: 6

  Constraints:

  1 <= n <= 13
  1 <= m <= 13

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

vc-helpers: |-

vc-spec: |-
  fn tile_rectangle(n: u32, m: u32) -> (result: u32)
      requires 
          n > 0,
          m > 0,
      ensures
          result >= 1,
          result <= n * m,

vc-code: |-
  {
      // impl-start
      assume(false);
      unreached()
      // impl-end
  }

vc-postamble: |-
  }

  fn main() {
      // Apps difficulty: interview
      // Assurance level: guarded

      // info: 3
      // assert(tile_rectangle(2, 3) == 3);

      // info: 5
      // assert(tile_rectangle(5, 8) == 5);

      // info: 6
      // assert(tile_rectangle(11, 13) == 6);
  }