vc-description: |-
  Yesterday, Chef found K empty boxes in the cooler and decided to fill them with apples. He ordered N apples, where N is a multiple of K. Now, he just needs to hire someone who will distribute the apples into the boxes with professional passion. 
  Only two candidates passed all the interviews for the box filling job. In one minute, each candidate can put K apples into boxes, but they do it in different ways: the first candidate puts exactly one apple in each box, while the second one chooses a random box with the smallest number of apples and puts K apples in it.
  Chef is wondering if the final distribution of apples can even depend on which candidate he hires. Can you answer that question?
  Note: The boxes are distinguishable (labeled), while the apples are not. Therefore, two distributions of apples are different if there is a box such that the number of apples in it when the first candidate finishes working can be different from the number of apples in it when the second candidate finishes working.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

vc-helpers: |-

vc-spec: |-
  fn solve_apple_distribution(n: u64, k: u64) -> (result: bool)
      requires 
          n > 0,
          k > 0,
          n % k == 0

vc-code: |-
  {
      // impl-start
      assume(false);
      false
      // impl-end
  }

vc-postamble: |-

  }
  fn main() {
      // let result1 = solve_apple_distribution(5, 1);
      // println!("{}", result1); // Should return false (NO)
      
      // let result2 = solve_apple_distribution(4, 2);
      // println!("{}", result2); // Should return false (NO)
      
      // let result3 = solve_apple_distribution(10, 10);
      // println!("{}", result3); // Should return true (YES)
  }