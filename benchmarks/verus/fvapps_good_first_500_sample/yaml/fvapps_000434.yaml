vc-description: |-
  n passengers board an airplane with exactly n seats. The first passenger has lost the ticket and picks a seat randomly. But after that, the rest of passengers will:

  Take their own seat if it is still available, 
  Pick other seats randomly when they find their seat occupied 

  What is the probability that the n-th person can get his own seat?

  Example 1:
  Input: n = 1
  Output: 1.00000
  Explanation: The first person can only get the first seat.
  Example 2:
  Input: n = 2
  Output: 0.50000
  Explanation: The second person has a probability of 0.5 to get the second seat (when first person gets the first seat).

  Constraints:

  1 <= n <= 10^5

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

vc-helpers: |-

vc-spec: |-
  spec fn nth_person_gets_nth_seat(n: nat) -> int {
      if n == 1 {
          1
      } else if n > 1 {
          0
      } else {
          0
      }
  }

  proof fn prob_bounds(n: nat)
      requires n > 0,
      ensures 
          0 <= nth_person_gets_nth_seat(n) && nth_person_gets_nth_seat(n) <= 1,
  {
      assume(false);
  }

  proof fn non_first_person_prob(n: nat)
      requires n > 1,
      ensures nth_person_gets_nth_seat(n) == 0,
  {
      assume(false);
  }

  proof fn first_person_prob()
      ensures nth_person_gets_nth_seat(1) == 1,
  {
      assume(false);
  }

vc-code: |-

vc-postamble: |-

  }
  fn main() {
      // Apps difficulty: interview
      // Assurance level: unguarded

      // #guard_msgs in
      // #eval nth_person_gets_nth_seat 1

      // #guard_msgs in
      // #eval nth_person_gets_nth_seat 2

      // #guard_msgs in
      // #eval nth_person_gets_nth_seat 100
  }