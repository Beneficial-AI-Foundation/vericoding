vc-description: |-
  If Give an integer N . Write a program to obtain the sum of the first and last digits of this number.

  -----Input-----

  The first line contains an integer T, the total number of test cases. Then follow T lines, each line contains an integer N. 

  -----Output-----
  For each test case, display the sum of first and last digits of N in a new line.

  -----Constraints-----
  - 1 ≤ T ≤ 1000
  - 1 ≤ N ≤ 1000000

  -----Example-----
  Input
  3 
  1234
  124894
  242323

  Output
  5
  5
  5

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

vc-helpers: |-

vc-spec: |-
  fn sum_first_last_digit(n: nat) -> (result: nat)
      requires n > 0,
      ensures 
          result >= 0 && result <= 18,
          n <= 9 ==> result == n + n

vc-code: |-
  {
      // impl-start
      assume(false);
      unreached()
      // impl-end
  }

vc-postamble: |-

  }

  fn main() {
      // Apps difficulty: interview
      // Assurance level: guarded

      // println!("{}", sum_first_last_digit(1234));
      // println!("{}", sum_first_last_digit(124894));
      // println!("{}", sum_first_last_digit(242323));
  }