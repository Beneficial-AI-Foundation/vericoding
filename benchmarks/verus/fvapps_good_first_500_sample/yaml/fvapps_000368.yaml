vc-description: |-
  A positive integer is magical if it is divisible by either A or B.
  Return the N-th magical number.  Since the answer may be very large, return it modulo 10^9 + 7.

  Example 1:
  Input: N = 1, A = 2, B = 3
  Output: 2

  Example 2:
  Input: N = 4, A = 2, B = 3
  Output: 6

  Example 3:
  Input: N = 5, A = 2, B = 4
  Output: 10

  Example 4:
  Input: N = 3, A = 6, B = 4
  Output: 8

  Note:

  1 <= N <= 10^9
  2 <= A <= 40000
  2 <= B <= 40000

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

vc-helpers: |-

vc-spec: |-
  const MOD: u32 = 1000000007;

  fn nth_magical_number(n: u32, a: u32, b: u32) -> (result: u32)
      requires 
          n > 0,
          a > 0,
          b > 0,
          n <= 1000000000,
          a >= 2 && a <= 40000,
          b >= 2 && b <= 40000,
      ensures 
          result < MOD,

vc-code: |-
  {
      // impl-start
      assume(false);
      unreached()
      // impl-end
  }

vc-postamble: |-

  }
  fn main() {
      // Apps difficulty: interview
      // Assurance level: guarded

      // println!("{}", nth_magical_number(1, 2, 3)); // Expected: 2
      // println!("{}", nth_magical_number(4, 2, 3)); // Expected: 6
      // println!("{}", nth_magical_number(5, 2, 4)); // Expected: 10
  }