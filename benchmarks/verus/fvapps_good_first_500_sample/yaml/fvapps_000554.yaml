vc-description: |-
  Sandu, a teacher in Chefland introduced his students to a new sequence i.e.
  0,1,0,1,2,0,1,2,3,0,1,2,3,4........
  The Sequence starts from 0 and increases by one till i(initially i equals to 1), then repeat itself with i changed to i+1
  Students being curious about the sequence asks the Nth element of the sequence. Help Sandu to answer the Students

  -----Input:-----
  - The first-line will contain T, the number of test cases. Then the test case follows. 
  - Each test case contains a single numbers N.

  -----Output:-----
  Print the Nth element of the sequence

  -----Constraints-----
  - 1 ≤ T ≤ 1000
  - 1 ≤ N  ≤ 10^18

  -----Sample Input:-----
  5
  8
  9
  20
  32
  109

  -----Sample Output:-----
  2
  3
  5
  4
  4

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

vc-helpers: |-

vc-spec: |-
  fn find_nth_sequence_element(n: nat) -> (result: nat)
      requires n > 0,
      ensures result < n

vc-code: |-
  {
      // impl-start
      assume(false);
      unreached()
      // impl-end
  }

vc-postamble: |-

  }
  fn main() {
      // #eval find_nth_sequence_element 8
      // #eval find_nth_sequence_element 9
      // #eval find_nth_sequence_element 20
  }