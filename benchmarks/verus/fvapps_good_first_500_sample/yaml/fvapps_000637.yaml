vc-description: |-
  Write a program to obtain a number N and increment its value by 1 if the number is divisible by 4 otherwise decrement its value by 1.

  -----Input:-----
  - First line will contain a number N.

  -----Output:-----
  Output a single line, the new value of the number.

  -----Constraints-----
  - 0 ≤ N ≤ 1000

  -----Sample Input:-----
  5

  -----Sample Output:-----
  4

  -----EXPLANATION:-----
  Since 5 is not divisible by 4 hence, its value is decreased by 1.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

vc-helpers: |-

vc-spec: |-
  fn increment_or_decrement(n: i32) -> (result: i32)
      requires 0 <= n <= 1000,
      ensures 
          (n % 4 == 0) ==> (result == n + 1),
          (n % 4 != 0) ==> (result == n - 1),
          (result - n == 1) || (result - n == -1),

vc-code: |-
  {
      // impl-start
      assume(false);
      unreached()
      // impl-end
  }

vc-postamble: |-

  }

  fn main() {
      // #guard_msgs in
      // #eval increment_or_decrement 5

      // #guard_msgs in  
      // #eval increment_or_decrement 8

      // #guard_msgs in
      // #eval increment_or_decrement 3
  }