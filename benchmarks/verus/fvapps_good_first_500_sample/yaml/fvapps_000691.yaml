vc-description: |-
  Blob is a computer science student. He recently got an internship from Chef's enterprise. Along with the programming he has various other skills too like graphic designing, digital marketing and social media management. Looking at his skills Chef has provided him different tasks A[1…N] which have their own scores. Blog wants to maximize the value of the expression A[d]-A[c]+A[b]-A[a] such that d>c>b>a.

  Can you help him in this?

  -----Input:-----
  - The first line contain the integer N
  - The second line contains N space separated integers representing A[1], A[2] … A[N]

  -----Output:-----
  The maximum score that is possible

  -----Constraints-----
  - 4 ≤ N ≤ 10^4
  - 0 ≤ A[i] ≤ 10^5

  -----Sample Input:-----
  6

  3 9 10 1 30 40

  -----Sample Output:-----
  46

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

vc-helpers: |-

vc-spec: |-
  fn maxval(arr: Vec<i32>) -> (result: i32)
      requires arr.len() >= 4,
      ensures 
          exists|a: int, b: int, c: int, d: int| 
              0 <= a < b && b < c && c < d && d < arr.len() &&
              result == arr[d] - arr[c] + arr[b] - arr[a],

vc-code: |-
  {
      // impl-start
      assume(false);
      unreached()
      // impl-end
  }

vc-postamble: |-

  }

  fn main() {}