vc-description: |-
  Given an array of citations (each citation is a non-negative integer) of a researcher, write a function to compute the researcher's h-index.

  According to the definition of h-index on Wikipedia: "A scientist has index h if h of his/her N papers have at least h citations each, and the other N âˆ’ h papers have no more than h citations each."

  Example:

  Input: citations = [3,0,6,1,5]
  Output: 3 
  Explanation: [3,0,6,1,5] means the researcher has 5 papers in total and each of them had 
               received 3, 0, 6, 1, 5 citations respectively. 
               Since the researcher has 3 papers with at least 3 citations each and the remaining 
               two with no more than 3 citations each, her h-index is 3.

  Note: If there are several possible values for h, the maximum one is taken as the h-index.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

vc-helpers: |-

vc-spec: |-
  spec fn count_at_least(citations: Seq<usize>, h: usize) -> usize {
      citations.filter(|x: usize| *x >= h).len()
  }

  spec fn count_at_most(citations: Seq<usize>, h: usize) -> usize {
      citations.filter(|x: usize| *x <= h).len()
  }

  spec fn is_valid_h_index(citations: Seq<usize>, h: usize) -> bool {
      count_at_least(citations, h) >= h &&
      count_at_most(citations, h) >= citations.len() - h
  }

  fn h_index(citations: Vec<usize>) -> (result: usize)
      ensures 
          is_valid_h_index(citations@, result),
          forall|h: usize| h > result ==> !is_valid_h_index(citations@, h),
          citations.len() == 0 ==> result == 0

vc-code: |-
  {
      // impl-start
      assume(false);
      0
      // impl-end
  }

vc-postamble: |-

  }
  fn main() {
      // let citations1 = vec![3, 0, 6, 1, 5];
      // let result1 = h_index(citations1);
      // println!("h-index of [3,0,6,1,5]: {}", result1);
      
      // let citations2 = vec![0];
      // let result2 = h_index(citations2);
      // println!("h-index of [0]: {}", result2);
      
      // let citations3 = vec![100];
      // let result3 = h_index(citations3);
      // println!("h-index of [100]: {}", result3);
  }