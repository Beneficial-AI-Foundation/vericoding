vc-description: |-
  Given a list of integers representing bank account operations (positive for deposits, negative for withdrawals), determine if the account balance ever drops below zero. The account starts with a balance of zero.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

vc-helpers: |-
  spec fn sum_prefix(ops: Seq<int>, len: nat) -> int
    recommends len <= ops.len()
    decreases len
  {
    if len == 0 { 0 }
    else { sum_prefix(ops, (len - 1) as nat) + ops[len - 1] }
  }

vc-spec: |-
  fn below_zero(operations: Seq<int>) -> (result: bool)
    ensures result <==> (exists|i: int| 0 < i <= operations.len() && #[trigger] sum_prefix(operations, i as nat) < 0)

vc-code: |-
  {
      assume(false);
      false
  }

vc-postamble: |-

  }

  fn main() {}