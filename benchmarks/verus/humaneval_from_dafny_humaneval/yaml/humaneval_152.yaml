vc-description: |-
  This verification task involves implementing a function that compares
  two arrays of equal length representing actual game scores and guessed scores. The
  implementation should calculate how far off each guess was from the actual result
  by computing the absolute difference between corresponding elements.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

  spec fn valid_input(game: Seq<int>, guess: Seq<int>) -> bool {
      game.len() == guess.len()
  }

  spec fn valid_output(game: Seq<int>, guess: Seq<int>, result: Seq<int>) -> bool {
      game.len() == guess.len() ==> (
          && result.len() == game.len()
          && (forall|i: int| 0 <= i < game.len() ==> result[i] == abs_value(game[i] - guess[i]))
          && (forall|i: int| 0 <= i < result.len() ==> result[i] >= 0)
      )
  }

vc-helpers: |-
  spec fn abs_value(x: int) -> int {
      if x >= 0 { x } else { -x }
  }

vc-spec: |-
  fn compare(game: Vec<i8>, guess: Vec<i8>) -> (result: Vec<i8>)
      requires valid_input(game@.map_values(|x: i8| x as int), guess@.map_values(|x: i8| x as int))
      ensures valid_output(game@.map_values(|x: i8| x as int), guess@.map_values(|x: i8| x as int), result@.map_values(|x: i8| x as int))

vc-code: |-
  {
      assume(false);
      unreached()
  }

vc-postamble: |-

  }

  fn main() {}