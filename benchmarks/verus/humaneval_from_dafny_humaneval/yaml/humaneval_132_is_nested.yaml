vc-description: |-
  function_signature: fn is_nested(string: &str) -> bool

  Create a function that takes a string as input which contains only parentheses.
  The function should return True if and only if there is a valid subsequence of parentheses
  where at least one parenthesis in the subsequence is nested.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

vc-helpers: |-

vc-spec: |-
  fn is_nested(s: Seq<int>) -> (res: bool)
      ensures res == exists|x: int, y: int, z: int, w: int| 0 <= x < y < z < w < s.len() && s[x] == 0 && s[y] == 0 && s[z] == 1 && s[w] == 1

vc-code: |-
  {
      assume(false);
      unreached()
  }

vc-postamble: |-

  }

  fn main() {}