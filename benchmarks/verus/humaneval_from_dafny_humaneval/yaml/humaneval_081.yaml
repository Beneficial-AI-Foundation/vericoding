vc-description: |-
  Convert a list of numerical GPA values to corresponding letter grades
  using a specified grading scale. The grading scale maps GPA ranges to letter grades
  from A+ (4.0) down to E (0.0).

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

  spec fn get_letter_grade(gpa: int) -> Seq<char> {
      if gpa == 40 { seq!['A', '+'] }
      else if gpa > 37 { seq!['A'] }
      else if gpa > 33 { seq!['A', '-'] }
      else if gpa > 30 { seq!['B', '+'] }
      else if gpa > 27 { seq!['B'] }
      else if gpa > 23 { seq!['B', '-'] }
      else if gpa > 20 { seq!['C', '+'] }
      else if gpa > 17 { seq!['C'] }
      else if gpa > 13 { seq!['C', '-'] }
      else if gpa > 10 { seq!['D', '+'] }
      else if gpa > 7 { seq!['D'] }
      else if gpa > 0 { seq!['D', '-'] }
      else { seq!['E'] }
  }

  spec fn valid_letter_grades(grades: Seq<String>) -> bool {
      forall|i: int| 0 <= i < grades.len() ==> {
          let grade = #[trigger] grades[i]@;
          grade == seq!['A', '+'] || grade == seq!['A'] || grade == seq!['A', '-'] ||
          grade == seq!['B', '+'] || grade == seq!['B'] || grade == seq!['B', '-'] ||
          grade == seq!['C', '+'] || grade == seq!['C'] || grade == seq!['C', '-'] ||
          grade == seq!['D', '+'] || grade == seq!['D'] || grade == seq!['D', '-'] ||
          grade == seq!['E']
      }
  }

vc-helpers: |-

vc-spec: |-
  fn numerical_letter_grade(grades: Seq<int>) -> (letter_grades: Vec<String>)
      ensures 
          letter_grades.len() == grades.len() &&
          (forall|i: int| 0 <= i < grades.len() ==> 
              #[trigger] letter_grades[i]@ == get_letter_grade(grades[i])) &&
          valid_letter_grades(letter_grades@)

vc-code: |-
  {
      assume(false);
      Vec::new()
  }

vc-postamble: |-

  }

  fn main() {}