vc-description: |-
  function_signature: fn order_by_points(nums: Vec<int>) -> Vec<int>
  Write a function which sorts the given list of integers in ascending order according to the sum of their digits. Note: if there are several items with similar sum of their digits, order them based on their index in original list.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

  spec fn digits_sum_pos(n: int) -> int
    decreases n
  {
    if n >= 0 {
      if n < 10 { n } else { digits_sum_pos(n / 10) + n % 10 }
    } else {
      0
    }
  }

  spec fn digits_sum(n: int) -> int {
    if n < 0 { digits_sum_pos(-n) } else { digits_sum_pos(n) }
  }

vc-helpers: |-

vc-spec: |-
  fn order_by_points(s: Seq<int>) -> (sorted: Seq<int>)
    ensures 
        forall|i: int, j: int| 0 <= i < j < sorted.len() ==> digits_sum(sorted[i]) <= digits_sum(sorted[j]),
        sorted.len() == s.len(),
        s.to_multiset() == sorted.to_multiset()

vc-code: |-
  {
      assume(false);
      unreached()
  }

vc-postamble: |-

  }

  fn main() {}