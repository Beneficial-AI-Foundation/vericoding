vc-description: |-
  function_signature: fn sort_third(a: &Seq<int>) -> (sorted_even: Seq<int>)

  Sort elements. Requires: requires size of a > 0. Ensures: returns the correct
  size/count; the result is sorted according to the ordering relation; the result
  is sorted according to the ordering relation; returns a sorted permutation of the
  input.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

vc-helpers: |-

vc-spec: |-
  fn sort_third(a: &Seq<int>) -> (sorted_even: Seq<int>)
      requires a.len() > 0
      ensures 
          sorted_even.len() == a.len(),
          forall|i: int, j: int| 0 <= i < j < sorted_even.len() && i % 3 == 0 && j % 3 == 0 ==>
              sorted_even[i] <= sorted_even[j],
          forall|i: int| 0 <= i < a.len() && i % 3 != 0 ==> sorted_even[i] == a[i],
          a.to_multiset() == sorted_even.to_multiset()

vc-code: |-
  {
      assume(false);
      unreached()
  }

vc-postamble: |-

  }

  fn main() {}