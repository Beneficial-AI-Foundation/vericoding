vc-description: |-
  This verification task involves implementing a method to determine
  if the last character of a string is an alphabetical character that stands alone
  (not part of a word). A "word" is defined as a group of characters separated by
  spaces. The method should return true if the last character is a letter AND is not
  part of a word, false otherwise. A standalone letter is either the entire string
  (single character) or a letter preceded by a space.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

  spec fn is_alpha(c: char) -> bool {
      ('a' <= c && c <= 'z') || ('A' <= c && c <= 'Z')
  }

  spec fn valid_last_char_is_standalone_letter(txt: Seq<char>) -> bool {
      txt.len() > 0 && is_alpha(txt[txt.len() - 1]) && (txt.len() == 1 || txt[txt.len() - 2] == ' ')
  }

vc-helpers: |-

vc-spec: |-
  fn check_if_last_char_is_a_letter(txt: Seq<char>) -> (result: bool)
      ensures result == valid_last_char_is_standalone_letter(txt)

vc-code: |-
  {
      assume(false);
      false
  }

vc-postamble: |-

  }

  fn main() {}