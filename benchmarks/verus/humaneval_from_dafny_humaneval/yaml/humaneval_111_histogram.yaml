vc-description: |-
  function_signature: def histogram(s : str) -> Dict[str, int]

  Given a string representing a space separated lowercase letters, return a dictionary
  of the letter with the most repetition and containing the corresponding count. If
  several letters have the same occurrence, return all of them.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

  type BiggestMap = Map<int, int>;

vc-helpers: |-

vc-spec: |-
  fn count(a: Seq<int>) -> (biggest: BiggestMap)
    ensures forall|i: int| 0 <= i < a.len() && biggest.dom().contains(a[i]) ==>
      #[trigger] biggest[a[i]] == Set::new(|j: int| 0 <= j < a.len() && a[j] == a[i]).len()

vc-code: |-
  {
      assume(false);
      unreached()
  }

vc-postamble: |-

  }

  fn main() {}