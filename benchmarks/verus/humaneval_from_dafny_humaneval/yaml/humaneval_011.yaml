vc-description: |-
  This task implements a bitwise XOR operation on two binary strings
  of equal length. Given two strings containing only '0' and '1' characters, the method
  should return a new string where each position contains '0' if the corresponding
  characters in the input strings are the same, and '1' if they are different.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

  spec fn is_binary_string(s: Seq<char>) -> bool {
      forall|i: int| 0 <= i < s.len() ==> s[i] == '0' || s[i] == '1'
  }

vc-helpers: |-

vc-spec: |-
  fn string_xor(a: Seq<char>, b: Seq<char>) -> (result: Seq<char>)
      requires 
          a.len() == b.len(),
          is_binary_string(a),
          is_binary_string(b),
      ensures 
          result.len() == a.len(),
          is_binary_string(result),
          forall|i: int| 0 <= i < a.len() ==> 
              (a[i] == b[i] ==> result[i] == '0') &&
              (a[i] != b[i] ==> result[i] == '1'),

vc-code: |-
  {
      assume(false);
      unreached()
  }

vc-postamble: |-

  }

  fn main() {}