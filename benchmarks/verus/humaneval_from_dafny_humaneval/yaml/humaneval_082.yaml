vc-description: |-
  This task verifies a function that determines whether a string's length
  is a prime number. A prime number is defined as an integer greater than or equal
  to 2 that has no divisors other than 1 and itself.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

  spec fn is_prime_number(n: int) -> bool {
      n >= 2 && (forall|k: int| 2 <= k < n ==> #[trigger] (n % k) != 0)
  }

vc-helpers: |-
  proof fn is_prime(n: usize) -> (result: bool)
      requires n < usize::MAX,
      ensures result <==> is_prime_number(n as int)
  {
      assume(false);
      true
  }

vc-spec: |-
  fn prime_length(s: Seq<char>) -> (result: bool)
      ensures result <==> is_prime_number(s.len() as int)

vc-code: |-
  {
      assume(false);
      unreached()
  }

vc-postamble: |-

  }

  fn main() {}