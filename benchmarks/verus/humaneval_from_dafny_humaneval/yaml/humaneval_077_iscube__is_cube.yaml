vc-description: |-
  function_signature: fn is_cube(n: nat) -> (r: bool)

  Check if condition holds. Ensures: if true, then there exists an integer r such
  that N = rÂ³; if false, then no integer r satisfies N = rÂ³.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

vc-helpers: |-
  spec fn cube(n: int) -> int {
      n * n * n
  }

vc-spec: |-
  fn is_cube(n: u8) -> (r: bool)
      ensures r == exists|k: int| 0 <= k <= n as int && n as int == cube(k)

vc-code: |-
  {
      assume(false);
      false
  }

vc-postamble: |-

  }

  fn main() {}