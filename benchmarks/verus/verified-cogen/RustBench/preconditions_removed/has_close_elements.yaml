vc-description: |-

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

  spec fn abs_spec(i: int) -> int {
      if i < 0 { -i } else { i }
  }

vc-helpers: |-
  fn abs(i: i32) -> (res: i32)
      requires
          i != i32::MIN,
      ensures
          i < 0 ==> res == -i,
          i >= 0 ==> res == i
  {
      if i < 0 { -i } else { i }
  }

vc-spec: |-
  #[verifier::loop_isolation(false)]
  fn has_close_elements(numbers: &[i32], threshold: i32) -> (flag: bool)
      ensures
          flag == exists|i: int, j: int| 0 <= i && 0 <= j && i < numbers.len() && j < numbers.len() && i != j && abs_spec(numbers[i] - numbers[j]) < threshold

vc-code: |-
  {
      // impl-start
      assume(false);
      false
      // impl-end
  }

vc-postamble: |-

  fn main() {}
  }