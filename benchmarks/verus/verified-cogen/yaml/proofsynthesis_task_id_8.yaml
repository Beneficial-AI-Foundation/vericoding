vc-description: |-

vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-

vc-spec: |-
  fn square_nums(nums: &Vec<i32>) -> (squared: Vec<i32>)
      // pre-conditions-start
      requires
          forall|k: int|
              0 <= k < nums.len() ==> (0 <= #[trigger] nums[k] * #[trigger] nums[k] < i32::MAX),
      // pre-conditions-end
      // post-conditions-start
      ensures
          nums.len() == squared.len(),
          forall|k: int| 0 <= k < nums.len() ==> (#[trigger] squared[k] == nums[k] * nums[k]),
      // post-conditions-end

vc-code: |-
  {
      assume(false);
      unreached();
  }

vc-postamble: |-
  } // verus!
  
  fn main() {}

