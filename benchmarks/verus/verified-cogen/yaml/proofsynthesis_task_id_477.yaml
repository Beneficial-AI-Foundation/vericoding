vc-description: |-

vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {
  
  spec fn is_upper_case(c: char) -> (result:bool) {
      c >= 'A' && c <= 'Z'
  }
  // pure-end
  // pure-end
  
  spec fn shift32_spec(c: char) -> (result:char) {
      ((c as u8) + 32) as char
  }
  // pure-end

vc-helpers: |-

vc-spec: |-
  fn to_lowercase(str1: &Vec<char>) -> (result: Vec<char>)
      // post-conditions-start
      ensures
          str1@.len() == result@.len(),
          forall|i: int|
              0 <= i < str1.len() ==> result[i] == (if is_upper_case(#[trigger] str1[i]) {
                  shift32_spec(str1[i])
              } else {
                  str1[i]
              }),
      // post-conditions-end

vc-code: |-
  {
      assume(false);
      vec![]
  }

vc-postamble: |-
  } // verus!
  
  fn main() {}

