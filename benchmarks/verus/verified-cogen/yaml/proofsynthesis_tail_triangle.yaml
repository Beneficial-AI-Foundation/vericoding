vc-description: |-

vc-preamble: |-
  use vstd::prelude::*;
  
  verus!{
  
  spec fn triangle(n: nat) -> (result: nat)
      decreases n
  {
      if n == 0 {
          0
      } else {
          n + triangle((n - 1) as nat)
      }
  }
  // pure-end

vc-helpers: |-

vc-spec: |-
  fn tail_triangle(n: u32, idx: u32, sum: &mut u32)
      // pre-conditions-start
      requires
          idx <= n,
          *old(sum) == triangle(idx as nat),
          triangle(n as nat) < 0x1_0000_0000,
      // pre-conditions-end
      // post-conditions-start
      ensures
          *sum == triangle(n as nat),
      // post-conditions-end

vc-code: |-
  {
      assume(false);
      ()
  }

vc-postamble: |-
  }
  
  fn main() {}

