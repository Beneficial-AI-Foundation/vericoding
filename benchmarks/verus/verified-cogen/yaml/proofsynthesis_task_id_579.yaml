vc-description: |-

vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-

vc-spec: |-
  fn find_dissimilar(arr1: &Vec<i32>, arr2: &Vec<i32>) -> (result: Vec<i32>)
      // post-conditions-start
      ensures
          forall|i: int|
              0 <= i < arr1.len() ==> (!arr2@.contains(#[trigger] arr1[i]) ==> result@.contains(
                  arr1[i],
              )),
          forall|i: int|
              0 <= i < arr2.len() ==> (!arr1@.contains(#[trigger] arr2[i]) ==> result@.contains(
                  arr2[i],
              )),
          forall|i: int, j: int|
              0 <= i < j < result.len() ==> #[trigger] result[i] != #[trigger] result[j],
      // post-conditions-end

vc-code: |-
  {
      assume(false);
      vec![]
  }

vc-postamble: |-
  } // verus!
  
  fn main() {}

