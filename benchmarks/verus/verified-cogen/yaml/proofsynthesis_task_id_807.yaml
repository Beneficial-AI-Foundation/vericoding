vc-description: |-

vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {
  
  spec fn check_find_first_odd(arr: &Vec<u32>, index: Option<usize>) -> (result: bool)
  {
      if let Some(idx) = index {
          &&& arr@.take(idx as int) == arr@.take(idx as int).filter(|x: u32| x % 2 == 0)
          &&& arr[idx as int] % 2 != 0
      } else {
          forall|k: int| 0 <= k < arr.len() ==> (arr[k] % 2 == 0)
      }
  }
  // pure-end

vc-helpers: |-

vc-spec: |-
  fn find_first_odd(arr: &Vec<u32>) -> (index: Option<usize>)
      // post-conditions-start
      ensures check_find_first_odd(arr, index),
      // post-conditions-end

vc-code: |-
  {
      assume(false);
      None
  }

vc-postamble: |-
  } // verus!
  
  fn main() {}

