vc-description: |-

vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-

vc-spec: |-
  fn cube_element(nums: &Vec<i32>) -> (cubed: Vec<i32>)
      // pre-conditions-start
      requires
          forall|k: int|
              0 <= k < nums.len() ==> (i32::MIN <= #[trigger] nums[k] * #[trigger] nums[k]
                  <= i32::MAX),
          forall|k: int|
              0 <= k < nums.len() ==> (i32::MIN <= #[trigger] nums[k] * #[trigger] nums[k]
                  * #[trigger] nums[k] <= i32::MAX),
      // pre-conditions-end
      // post-conditions-start
      ensures
          forall|i: int|
              0 <= i < nums.len() ==> cubed[i] == #[trigger] nums[i] * #[trigger] nums[i]
                  * #[trigger] nums[i],
      // post-conditions-end

vc-code: |-
  {
      // impl-start
      assume(false);
      vec![]
      // impl-end
  }

vc-postamble: |-
  } // verus!
  
  fn main() {}

