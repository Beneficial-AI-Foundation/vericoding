vc-description: |-
  Calculate the absolute value element-wise for a vector of integers.
  
  Specification: absolute computes the absolute value of each element with the following mathematical properties:
  1. Basic definition: |x| = x if x ≥ 0, otherwise -x
  2. Non-negativity: |x| ≥ 0 for all x
  3. Zero preservation: |x| = 0 if and only if x = 0
  4. Idempotence: ||x|| = |x|
  5. Multiplicativity: |x * y| = |x| * |y|

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

vc-helpers: |-

vc-spec: |-
  spec fn abs_spec(x: int) -> int {
      if x >= 0 { x } else { -x }
  }

  fn absolute(x: Vec<i32>) -> (result: Vec<i32>)
      ensures 
          result.len() == x.len(),
          forall|i: int| 0 <= i < result.len() ==> result[i] == abs_spec(x[i] as int),
          forall|i: int| 0 <= i < result.len() ==> result[i] >= 0,
          forall|i: int| 0 <= i < result.len() ==> (result[i] == 0 <==> x[i] == 0)

vc-code: |-
  {
      // impl-start
      assume(false);
      Vec::new()
      // impl-end
  }

vc-postamble: |-

  }
  fn main() {}