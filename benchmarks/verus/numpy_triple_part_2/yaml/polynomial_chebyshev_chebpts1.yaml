vc-description: |-
  numpy.polynomial.chebyshev.chebpts1: Chebyshev points of the first kind.

  The Chebyshev points of the first kind are the points cos(π*(k + 0.5)/n)
  for k in range(n), which are the roots of the Chebyshev polynomial T_n(x).
  These points are particularly useful for polynomial interpolation as they
  minimize the Runge phenomenon.

  The implementation uses the identity sin(x) = cos(π/2 - x) to compute
  the values using sine instead of cosine.

  Specification: chebpts1 returns a vector of n Chebyshev points of the first kind.

  The k-th point (0-indexed) is cos(π*(k + 0.5)/n), which equals
  sin(π*(n - k - 0.5)/n) by the complementary angle identity.

  Precondition: n > 0 (at least one point must be generated)
  Postcondition: 
  1. For all indices k, result[k] = cos(π*(k + 0.5)/n)
  2. The points are in descending order: for all i < j, result[i] > result[j]
  3. All points lie in the interval [-1, 1]
  4. The points are symmetric about 0: result[k] = -result[n-1-k] for all k

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

vc-helpers: |-

vc-spec: |-
  spec fn chebyshev_point_value(k: int, n: int) -> int { arbitrary() }

  fn chebpts1(n: usize) -> (result: Vec<i32>)
      requires n > 0,
      ensures 
          result.len() == n,
          forall|k: int| 0 <= k < n ==> #[trigger] result[k] == chebyshev_point_value(k, n as int),
          forall|k: int| 0 <= k < n ==> -1000 <= #[trigger] result[k] <= 1000,

vc-code: |-
  {
      // impl-start
      assume(false);
      unreached()
      // impl-end
  }

vc-postamble: |-

  }
  fn main() {}