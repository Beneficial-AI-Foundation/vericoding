vc-description: |-
  Modified Bessel function of the first kind, order 0.

  Computes the Modified Bessel function of the first kind, order 0, element-wise.
  This is a special function that arises in many mathematical contexts including
  solutions to differential equations and probability theory.

  The function is defined by the infinite series:
  i0(x) = sum((x/2)^(2k) / (k!)^2, k=0..inf)

  Returns an array of the same shape as x, containing the i0 values of each element.

  Specification: numpy.i0 returns a vector where each element is the Modified
  Bessel function of the first kind, order 0, of the corresponding element in x.

  Mathematical properties:
  1. i0(0) = 1 (by definition, the series starts with 1)
  2. i0(x) > 0 for all real x (positive function)
  3. i0(x) = i0(-x) (even function)
  4. i0(x) is monotonically increasing for x ≥ 0
  5. For large x, i0(x) ≈ exp(|x|) / sqrt(2π|x|) (asymptotic behavior)

  Precondition: True (no special preconditions for i0)
  Postcondition: For all indices i, result[i] = i0(x[i]) with the mathematical properties above

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

vc-helpers: |-

vc-spec: |-
  fn i0(x: Vec<i8>) -> (result: Vec<i8>)
      requires true,
      ensures 
          result@.len() == x@.len(),
          forall|i: int| 0 <= i < result@.len() ==> {
              /* Basic function evaluation - i0(x) > 0 for all x (positive function) */
              result@[i] as int > 0 &&
              /* Zero case: i0(0) = 1 */
              (x@[i] as int == 0 ==> result@[i] as int == 1) &&
              /* Even function: i0(x) = i0(-x) */
              (forall|j: int| 0 <= j < x@.len() && x@[j] as int == -(x@[i] as int) ==> result@[j] as int == result@[i] as int) &&
              /* Monotonicity for non-negative values */
              (forall|j: int| 0 <= j < x@.len() && x@[i] as int >= 0 && x@[j] as int >= 0 && x@[i] as int <= x@[j] as int ==> result@[i] as int <= result@[j] as int)
          }

vc-code: |-
  {
      // impl-start
      assume(false);
      unreached()
      // impl-end
  }

vc-postamble: |-

  }
  fn main() {}