vc-description: |-
  Convert a Hermite series to a polynomial.
  Converts coefficients of a Hermite series (ordered from lowest to highest degree)
  to coefficients of the equivalent standard polynomial (ordered from lowest to highest degree).

  The Hermite polynomials H_n(x) satisfy the recurrence relation:
  H_{n+1}(x) = 2x * H_n(x) - 2n * H_{n-1}(x)
  with H_0(x) = 1 and H_1(x) = 2x

  This function performs the inverse transformation, converting from Hermite basis to standard basis.
vc-preamble: |-
  use vstd::prelude::*;

  verus! {
vc-helpers: |-

vc-spec: |-
  fn herm2poly(c: Vec<i32>) -> (result: Vec<i32>)
      requires c.len() > 0,
      ensures
          result.len() == c.len(),
          /* Sanity checks */
          c.len() == 1 ==> result == c,
          c.len() == 2 ==> result[0] == c[0] && result[1] == 2 * c[1],
          /* Example from documentation: herm2poly([1, 2.75, 0.5, 0.375]) approximated with integers */
          (c.len() == 4 && c[0] == 1 && c[1] == 3 && c[2] == 1 && c[3] == 0) ==>
              (result[0] == 0 && result[1] == 1 && result[2] == 2 && result[3] == 3)
vc-code: |-
  {
      // impl-start
      assume(false);
      unreached()
      // impl-end
  }
vc-postamble: |-

  }
  fn main() {}