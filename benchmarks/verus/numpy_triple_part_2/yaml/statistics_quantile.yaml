vc-description: |-
  Compute the q-th quantile of the data in a vector

  Specification: quantile returns a value that has the property that 
  approximately q proportion of the data is less than or equal to it

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

vc-helpers: |-

vc-spec: |-
  fn quantile(a: Vec<i32>, q: i32) -> (result: i32)
      requires 
          a.len() > 0,
          0 <= q && q <= 100,
      ensures
          /* The result is within the range of the input data */
          (exists|i: int| 0 <= i < a.len() && a[i] <= result) &&
          (exists|i: int| 0 <= i < a.len() && result <= a[i]) &&
          /* For 0-quantile, result should be <= minimum */
          (q == 0 ==> forall|i: int| 0 <= i < a.len() ==> result <= a[i]) &&
          /* For 100-quantile, result should be >= maximum */
          (q == 100 ==> forall|i: int| 0 <= i < a.len() ==> a[i] <= result)

vc-code: |-
  {
      // impl-start
      assume(false);
      0
      // impl-end
  }

vc-postamble: |-

  }
  fn main() {}