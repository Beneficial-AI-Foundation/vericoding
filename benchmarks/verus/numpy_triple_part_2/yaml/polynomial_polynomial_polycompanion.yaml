vc-description: |-
  Return the companion matrix of a polynomial.

  The companion matrix C for a polynomial p(x) = c[0] + c[1]*x + ... + c[n]*x^n
  is an (n√ón) matrix where the characteristic polynomial is p(x).

  For a polynomial of degree n, the companion matrix has the form:
  - First (n-1) rows: [0, 0, ..., 0, 1, 0, ..., 0] (identity shifted)
  - Last row: [-c[0]/c[n], -c[1]/c[n], ..., -c[n-1]/c[n]]

  The companion matrix is used to find roots of the polynomial as eigenvalues.
vc-preamble: |-
  use vstd::prelude::*;

  verus! {
vc-helpers: |-

vc-spec: |-
  fn polycompanion(c: Vec<i8>) -> (result: Vec<Vec<i8>>)
      requires 
          c.len() >= 2,
          c[c.len() - 1] != 0,
      ensures
          result.len() == c.len() - 1,
          forall|i: int| 0 <= i < result.len() ==> result[i].len() == c.len() - 1,
          forall|i: int, j: int| 
              0 <= i < result.len() && 0 <= j < result[i].len() ==>
              (if i + 1 == j && i < c.len() - 2 {
                  result[i][j] as int == 1
              } else if i == c.len() - 2 {
                  result[i][j] as int * c[c.len() - 1] as int == -c[j] as int
              } else {
                  result[i][j] as int == 0
              })
vc-code: |-
  {
      // impl-start
      assume(false);
      unreached()
      // impl-end
  }
vc-postamble: |-

  }
  fn main() {}