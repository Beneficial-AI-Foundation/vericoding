vc-description: |-
  Move axes of an array to new positions.

  Move axes in a 1D vector (simplified version).
  For 1D arrays, moveaxis with source=0 and destination=0 returns the array unchanged.
  This captures the core mathematical property that moving an axis to itself is identity.

  Specification: moveaxis preserves all elements and their values.
  For 1D arrays, moveaxis is always the identity function since there's only one axis.
  This specification captures several mathematical properties:
  1. Element preservation: all values remain unchanged
  2. Size preservation: the shape is maintained
  3. Identity property: moving axis 0 to position 0 is identity
  4. Order preservation: for 1D arrays, element order is maintained

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

vc-helpers: |-

vc-spec: |-
  fn moveaxis(a: Vec<f32>, source: usize, dest: usize) -> (result: Vec<f32>)
      ensures
          /* Core property: moveaxis on 1D array is identity */
          forall|i: int| 0 <= i < a.len() ==> result[i] == a[i],
          /* Sanity check: size is preserved */
          result.len() == a.len(),
          /* Mathematical property: for 1D arrays, result equals input */
          result@ == a@,

vc-code: |-
  {
      // impl-start
      assume(false);
      unreached()
      // impl-end
  }

vc-postamble: |-

  }
  fn main() {}