vc-description: |-
  Return evenly spaced values within a given interval [start, stop) with given step.
  Specification: arange generates evenly spaced values from start to stop (exclusive) with given step.
  Each element at index i has value start + i * step, and all values are within bounds.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

vc-helpers: |-

vc-spec: |-
  fn arange(start: i32, stop: i32, step: i32, n: usize) -> (result: Vec<i32>)
      requires step != 0,
      ensures
          result.len() == n,
          n == 0 ==> ((step > 0 && start >= stop) || (step < 0 && start <= stop)),
          n > 0 ==> (
              forall|i: int| 0 <= i < n ==> result[i as int] == start + i * step
          ),
          n > 0 && step > 0 ==> (
              start < stop &&
              forall|i: int| 0 <= i < n ==> result[i as int] < stop
          ),
          n > 0 && step < 0 ==> (
              start > stop &&
              forall|i: int| 0 <= i < n ==> result[i as int] > stop
          ),

vc-code: |-
  {
      // impl-start
      assume(false);
      unreached()
      // impl-end
  }

vc-postamble: |-

  }
  fn main() {}