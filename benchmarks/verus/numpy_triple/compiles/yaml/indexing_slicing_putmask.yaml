vc-description: |-
  Changes elements of an array based on conditional and input values.
  
  This function modifies the target array in-place, setting elements to values
  from the values array where the corresponding mask element is True.
  If values is smaller than the target array, it will repeat cyclically.
  
  Parameters:
  - a: Target array to modify
  - mask: Boolean mask array with same shape as a
  - values: Values to put into a where mask is True
  - m: Size of values array (must be positive for repetition)
  
  Specification: putmask changes elements of an array based on conditional and input values.
  
  This comprehensive specification captures:
  1. Elements are changed only where mask is True
  2. Elements are unchanged where mask is False  
  3. Values are taken from the values array with cyclic repetition
  4. The values array must be non-empty (m > 0)
  5. The result has the same size as the input array
  6. The mask and target array must have the same size

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

vc-helpers: |-

vc-spec: |-
  fn putmask(a: &Vec<f32>, mask: &Vec<bool>, values: &Vec<f32>) -> (result: Vec<f32>)
      requires
          a.len() == mask.len(),
          values.len() > 0,
      ensures
          result.len() == a.len(),
          forall|i: int| 0 <= i < a.len() ==> mask[i] == true ==> result[i] == values[i % values.len() as int],
          forall|i: int| 0 <= i < a.len() ==> mask[i] == false ==> result[i] == a[i],

vc-code: |-
  {
      // impl-start
      assume(false);
      Vec::new()
      // impl-end
  }

vc-postamble: |-

  }
  fn main() {}