vc-description: |-
  Multiply a Chebyshev series by x.
  This function multiplies a Chebyshev polynomial represented by its coefficients by x.
  The operation is based on the recurrence relation:
  - xT₀(x) = T₁(x)
  - xTₙ(x) = (Tₙ₊₁(x) + Tₙ₋₁(x))/2 for n ≥ 1

  Specification: chebmulx correctly multiplies a Chebyshev polynomial by x.
  
  Given coefficients c = [c₀, c₁, ..., cₙ₋₁] representing the polynomial
  P(x) = c₀T₀(x) + c₁T₁(x) + ... + cₙ₋₁Tₙ₋₁(x),
  this function computes coefficients for xP(x).
  
  The implementation follows from the Chebyshev recurrence relations:
  - xT₀(x) = T₁(x)
  - xTₙ(x) = (Tₙ₊₁(x) + Tₙ₋₁(x))/2 for n ≥ 1
  
  The algorithm redistributes coefficients according to these relations,
  resulting in a polynomial with degree increased by 1.
vc-preamble: |-
  use vstd::prelude::*;

  verus! {
vc-helpers: |-

vc-spec: |-
  fn chebmulx(c: &Vec<f64>) -> (result: Vec<f64>)
      ensures
          result.len() == c.len() + 1,
          /* The operation follows Chebyshev recurrence relations:
             - xT₀(x) = T₁(x) 
             - xTₙ(x) = (Tₙ₊₁(x) + Tₙ₋₁(x))/2 for n ≥ 1 */
          /* Linearity property: chebmulx is a linear operation */
          true, // Simplified linearity property placeholder
vc-code: |-
  {
      // impl-start
      assume(false);
      Vec::new()
      // impl-end
  }
vc-postamble: |-

  }
  fn main() {}