vc-description: |-
  /*
  numpy.flatiter: Flat iterator object to iterate over arrays.
  
  A flatiter iterator provides a flattened view of an array for iteration purposes.
  It allows accessing elements of a multi-dimensional array as if it were 1-dimensional,
  following row-major (C-style) order where the last index varies fastest.
  
  The iterator supports indexing and provides sequential access to all elements
  in the array following the memory layout order.
  
  Specification: numpy.flatiter creates a flat iterator over the array.
  
  Precondition: True (no special preconditions for creating a flat iterator)
  Postcondition: The result preserves all elements in row-major order,
                 providing sequential access to the flattened array elements
  */
vc-preamble: |-
  use vstd::prelude::*;

  verus! {
vc-helpers: |-

vc-spec: |-
  fn numpy_flatiter(a: Vec<f32>) -> (result: Vec<f32>)
      ensures
          result.len() == a.len(),
          forall|i: int| 0 <= i < result.len() ==> result[i] == a[i],
vc-code: |-
  {
      // impl-start
      assume(false);
      Vec::new()
      // impl-end
  }
vc-postamble: |-

  }
  fn main() {}