vc-description: |-
  Compute the q-th percentile of the data along the specified axis, ignoring NaN values.
  Returns the q-th percentile of the array elements.
  If all values are NaN, returns NaN.
  The percentile q must be between 0 and 100 inclusive.
  
  Specification: nanpercentile computes the q-th percentile of non-NaN values in the array.
  The result is NaN if all values are NaN, otherwise it's the q-th percentile of the finite values.
  The percentile is computed by sorting the non-NaN values and finding the value at the position
  corresponding to the percentile q (between 0 and 100).
vc-preamble: |-
  use vstd::prelude::*;

  verus! {
vc-helpers: |-

vc-spec: |-
  spec fn vec_sum(a: Seq<i32>) -> int 
      decreases a.len()
  {
      if a.len() == 0 {
          0
      } else {
          a[0] + vec_sum(a.skip(1))
      }
  }

  fn nanpercentile(a: Vec<i8>, q: i8) -> (result: i8)
      requires 0 <= q <= 100,
      ensures
          /* Case 1: Empty array returns 0 */
          a.len() == 0 ==> result == 0,
          /* Case 2: Non-empty array */
          a.len() > 0 ==> {
              /* Result is within bounds of input values */
              (forall|i: int| 0 <= i < a.len() ==> a[i] as int <= result as int || result as int <= a[i] as int) &&
              /* For single element, result equals that element */
              (a.len() == 1 ==> result == a[0])
          }
vc-code: |-
  {
      // impl-start
      assume(false);
      unreached()
      // impl-end
  }
vc-postamble: |-

  }
  fn main() {}