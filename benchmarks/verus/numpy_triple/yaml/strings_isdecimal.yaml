vc-description: |-
  For each element, return True if there are only decimal characters in the element.
  
  For each element, return True if there are only decimal characters in the element
  
  Specification: isdecimal returns True for each element if all characters in the string 
  are decimal characters (including digit characters and all characters that can be used 
  to form decimal-radix numbers), and False otherwise.
  
  A decimal character is one that can be used to form decimal-radix numbers. This includes:
  - ASCII digits (0-9)  
  - Unicode decimal characters (e.g., Arabic-Indic digits like U+0660)
  - Does NOT include superscript/subscript digits or other numeric characters
  
  Note: For simplicity, we use c.isDigit which covers decimal characters in most practical cases.
  
  Key properties:
  - Empty strings return False
  - Strings with only decimal characters return True
  - Strings with non-decimal characters return False
  - Mixed decimal/non-decimal characters return False

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

vc-helpers: |-

vc-spec: |-
  spec fn is_decimal_char(c: char) -> bool {
      ('0' <= c && c <= '9')
  }

  spec fn all_chars_decimal(s: Seq<char>) -> bool
      decreases s.len()
  {
      if s.len() == 0 {
          true
      } else {
          is_decimal_char(s[0]) && all_chars_decimal(s.skip(1))
      }
  }

  fn isdecimal(a: Vec<String>) -> (result: Vec<bool>)
      ensures 
          result.len() == a.len(),
          forall|i: int| 0 <= i < a.len() as int ==> {
              &&& (result[i] == true <==> (a[i]@.len() > 0 && all_chars_decimal(a[i]@)))
              &&& (a[i]@ == Seq::<char>::empty() ==> result[i] == false)
          }

vc-code: |-
  {
      // impl-start
      assume(false);
      unreached()
      // impl-end
  }

vc-postamble: |-

  }
  fn main() {}