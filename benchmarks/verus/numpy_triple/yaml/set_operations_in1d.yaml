vc-description: |-
  Test whether each element of a 1-D array is also present in a second array.
  Returns a boolean array the same length as ar1 that is True where an element 
  of ar1 is in ar2 and False otherwise.
  
  Specification: in1d tests membership of each element of ar1 in ar2.
  The result is a boolean vector of the same length as ar1, where each element
  indicates whether the corresponding element of ar1 is present in ar2.

vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-

vc-spec: |-
  fn in1d<T: PartialEq>(ar1: Vec<T>, ar2: Vec<T>) -> (result: Vec<bool>)
      ensures 
          result.len() == ar1.len(),
          forall|i: int| 0 <= i < ar1.len() ==> 
              result[i] == exists|j: int| 0 <= j < ar2.len() && ar1[i] == ar2[j]

vc-code: |-
  {
      // impl-start
      assume(false);
      Vec::new()
      // impl-end
  }

vc-postamble: |-
  }
  fn main() {}

