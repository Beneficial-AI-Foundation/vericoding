vc-description: |-
  numpy.strings.partition: Partition each element in a around sep.
  
  Partitions each string in the input vector at the first occurrence of the separator.
  Returns a 3-tuple of vectors: (before_separator, separator, after_separator).
  
  For each element in the input array, splits the element at the first occurrence
  of the separator, and returns three vectors containing the part before the separator,
  the separator itself, and the part after the separator. If the separator is not found,
  the first vector contains the whole string, and the second and third vectors contain
  empty strings.
  
  From NumPy documentation:
  - Parameters: a (array_like with StringDType), sep (array_like with StringDType)
  - Returns: 3-tuple of ndarrays with StringDType
  
  Mathematical Properties:
  1. Partition semantics: For each string s, if sep occurs at position i, then:
     - before = s[0:i]
     - separator = sep (if found) or "" (if not found)
     - after = s[i+len(sep):] (if found) or "" (if not found)
  2. Completeness: before ++ separator ++ after = original string (when sep is found)
  3. First occurrence: Only splits at the first occurrence of sep
  4. Not found case: If sep not in string, returns (original_string, "", "")
  5. Preserves vector length: All three result vectors have the same length as input
  
  Specification: numpy.strings.partition returns a 3-tuple of vectors where each
  element is partitioned around the first occurrence of the separator.
  
  Mathematical Properties:
  1. Partition correctness: For each index i, the result satisfies partition semantics
  2. Completeness: When separator is found, concatenation reconstructs original string
  3. First occurrence: Only the first occurrence of separator is used for partitioning
  4. Not found case: When separator is not found, returns (original, "", "")
  5. Preserves vector length: All result vectors have the same length as input
  6. Separator consistency: The separator part contains the actual separator or empty string
  
  Precondition: True (no special preconditions for string partitioning)
  Postcondition: For all indices i, the partition satisfies the partition semantics
  
  /* Fundamental partition property: parts reconstruct original string */
  
  /* Separator correctness: either the separator or empty string */
  
  /* Case 2: Separator not found - before contains whole string, others empty */
  
  /* Length preservation: total length is preserved */

vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-

vc-spec: |-
  fn partition(a: Vec<String>, sep: String) -> (result: (Vec<String>, Vec<String>, Vec<String>))
      ensures
          result.0.len() == a.len() && result.1.len() == a.len() && result.2.len() == a.len(),
          forall|i: int| 0 <= i < a.len() ==> {
              let original = #[trigger] a[i]@;
              let before_i = result.0[i]@;
              let sep_i = result.1[i]@;
              let after_i = result.2[i]@;
  
              before_i + sep_i + after_i == original &&
  
              (sep_i == sep@ || sep_i.len() == 0) &&
  
              (sep_i.len() == 0 ==> after_i.len() == 0 && before_i == original) &&
  
              original.len() == before_i.len() + sep_i.len() + after_i.len()
          }

vc-code: |-
  {
      assume(false);
      unreached()
  }

vc-postamble: |-
  }
  fn main() {}

