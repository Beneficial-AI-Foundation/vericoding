vc-description: |-
  Subtract one Chebyshev series from another component-wise.
  The input vectors c1 and c2 represent Chebyshev series coefficients
  ordered from lowest to highest degree term.

  Specification: chebsub performs component-wise subtraction of two Chebyshev series.
  
  The specification includes:
  1. The basic property that each coefficient in the result is the difference
     of the corresponding coefficients in c1 and c2
  2. Anti-commutativity: chebsub(c1, c2) = -chebsub(c2, c1)
  3. Identity property: subtracting a series from itself yields zero
  4. Associativity with addition: (c1 - c2) + c2 = c1
vc-preamble: |-
  use vstd::prelude::*;

  verus! {
vc-helpers: |-

vc-spec: |-
  fn chebsub(c1: Vec<f32>, c2: Vec<f32>) -> (result: Vec<f32>)
      requires c1.len() == c2.len(),
      ensures
          result.len() == c1.len(),
          forall|i: int| 0 <= i < result.len() ==> result[i] == c1[i] - c2[i],
          forall|i: int| 0 <= i < result.len() ==> chebsub(c2, c1)[i] == -result[i],
          forall|i: int| 0 <= i < result.len() ==> chebsub(c1, c1)[i] == 0.0,
vc-code: |-
  {
      // impl-start
      assume(false);
      Vec::new()
      // impl-end
  }
vc-postamble: |-

  }
  fn main() {}