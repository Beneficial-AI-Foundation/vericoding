vc-description: |-
  A power series class representing a polynomial with coefficients in order of increasing degree.
  
  The Polynomial structure encapsulates coefficients from lowest to highest degree,
  where coefficients[i] represents the coefficient of x^i. For example,
  coefficients [1, 2, 3] represents the polynomial 1 + 2*x + 3*x^2.
  
  The domain and window parameters support polynomial transformations by mapping
  the interval [domain[0], domain[1]] to [window[0], window[1]] through scaling
  and shifting.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

vc-helpers: |-

vc-spec: |-
  fn polynomial(coef: Vec<f32>, domain: Vec<f32>, window: Vec<f32>) -> (result: Vec<f32>)
      requires 
          domain.len() == 2,
          window.len() == 2,
          domain[0] != domain[1],
          window[0] != window[1],
      ensures 
          result.len() == coef.len(),
          forall|i: int| 0 <= i < result.len() ==> result[i] == coef[i],
          domain[1] - domain[0] != 0.0,
          window[1] - window[0] != 0.0,

vc-code: |-
  {
      // impl-start
      assume(false);
      Vec::new()
      // impl-end
  }

vc-postamble: |-

  }
  fn main() {}