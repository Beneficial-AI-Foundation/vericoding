vc-description: |-
  Return the scaled companion matrix of HermiteE series coefficients.
  The companion matrix is scaled for better eigenvalue estimates and
  symmetry properties when used with HermiteE basis polynomials.
vc-preamble: |-
  use vstd::prelude::*;

  verus! {
vc-helpers: |-

vc-spec: |-
  fn hermecompanion(c: Vec<f32>) -> (result: Vec<Vec<f32>>)
      requires 
          c.len() >= 2,
          c[c.len() - 1] != 0.0,
      ensures 
          result.len() == c.len() - 1,
          forall|i: int| 0 <= i < result.len() ==> result[i].len() == c.len() - 1,
          /* Matrix is symmetric (superdiagonal equals subdiagonal) */
          forall|i: int| 0 <= i < (c.len() - 2) as int ==> 
              result[i][(i + 1) as int] == result[(i + 1) as int][i],
          /* Superdiagonal elements are sqrt(i+1) for i = 0 to n-2 */
          forall|i: int| 0 <= i < (c.len() - 2) as int ==> 
              result[i][(i + 1) as int] == ((i + 1) as f32).sqrt(),
          /* Last column contains scaled coefficients */
          forall|i: int| 0 <= i < (c.len() - 1) as int ==> 
              result[i][(c.len() - 2) as int] == -(c[i] / c[c.len() - 1]),
          /* All other elements are zero */
          forall|i: int, j: int| 0 <= i < (c.len() - 1) as int && 0 <= j < (c.len() - 1) as int ==> 
              (j != i + 1 && j != (c.len() - 2) as int && i != j + 1) ==> result[i][j] == 0.0,
vc-code: |-
  {
      // impl-start
      assume(false);
      Vec::new()
      // impl-end
  }
vc-postamble: |-

  }
  fn main() {}