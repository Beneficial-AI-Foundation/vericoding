vc-description: |-
  numpy.spacing: Return the distance between x and the nearest adjacent number.
  
  For each element x in the input array, returns the distance to the nearest
  adjacent floating-point number. This is equivalent to the machine epsilon
  for the magnitude of x - it gives the smallest representable difference
  between floating-point numbers near x.
  
  For x = 1.0, spacing(1.0) equals the machine epsilon.
  Spacing of Â±inf and NaN is NaN.
  
  This function is crucial for understanding floating-point precision limits
  and is used in numerical analysis for error bounds and convergence testing.
vc-preamble: |-
  use vstd::prelude::*;

  verus! {
vc-helpers: |-

vc-spec: |-
  fn spacing(x: Vec<f32>) -> (result: Vec<f32>)
      requires x.len() > 0,
      ensures 
          result.len() == x.len(),
          forall|i: int| 0 <= i < x.len() ==> {
              &&& (!x[i].is_infinite() && !x[i].is_nan() ==> result[i] >= 0.0f32)
              &&& (x[i] == 1.0f32 ==> result[i] >= 0.0f32)
              &&& ((x[i].is_infinite() || x[i].is_nan()) ==> result[i].is_nan())
          }
vc-code: |-
  {
      // impl-start
      assume(false);
      Vec::new()
      // impl-end
  }
vc-postamble: |-

  }
  fn main() {}