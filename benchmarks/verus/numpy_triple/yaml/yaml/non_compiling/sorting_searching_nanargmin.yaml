vc-description: |-
  numpy.nanargmin: Return the indices of the minimum values in the specified axis ignoring NaNs.
  
  For all-NaN slices ValueError is raised. Warning: the results cannot be trusted 
  if a slice contains only NaNs and Infs.
  
  This function finds the index of the minimum value in a vector, ignoring NaN values.
  If all values are NaN, it should raise an error (represented as a precondition).
  
  Parameters:
  - a : Vector Float n - Input data vector
  
  Returns:
  - Fin n - Index of the minimum non-NaN value
  
  Specification: nanargmin returns the index of the minimum non-NaN value.
  
  Precondition: At least one element in the vector is not NaN
  Postcondition: 
  1. The returned index points to a non-NaN value
  2. All non-NaN values at other indices are greater than or equal to the value at the returned index
  3. If there are ties, returns the first occurrence (smallest index)

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

vc-helpers: |-

vc-spec: |-
  fn nanargmin(a: Vec<f32>) -> (result: usize)
      requires 
          a.len() > 0,
          exists|i: int| 0 <= i < a.len() && !a[i].is_nan(),
      ensures 
          result < a.len(),
          !a[result as int].is_nan(),
          forall|j: int| 0 <= j < a.len() && !a[j].is_nan() ==> a[result as int] <= a[j],
          forall|j: int| 0 <= j < result ==> a[j].is_nan() || a[j] > a[result as int]

vc-code: |-
  {
      // impl-start
      assume(false);
      0
      // impl-end
  }

vc-postamble: |-

  }
  fn main() {}