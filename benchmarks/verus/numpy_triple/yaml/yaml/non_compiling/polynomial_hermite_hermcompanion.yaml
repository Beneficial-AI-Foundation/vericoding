vc-description: |-
  /*
  Return the scaled companion matrix of Hermite polynomial coefficients.
  The companion matrix is symmetric when c represents a Hermite basis polynomial.
  
  Specification: hermcompanion produces a scaled companion matrix with specific properties.
  For a coefficient vector of length n+2, the result is an (n+1)Ã—(n+1) matrix where:
  1. The super-diagonal and sub-diagonal contain sqrt(k/2) for k = 1 to n
  2. The last column is adjusted by scaled coefficients
  3. The matrix is symmetric when c represents a Hermite basis polynomial
  */
vc-preamble: |-
  use vstd::prelude::*;

  verus! {

vc-helpers: |-

vc-spec: |-
  fn hermcompanion(c: Vec<f32>) -> (mat: Vec<Vec<f32>>)
      requires 
          c.len() >= 2,
          c[c.len() - 1] != 0.0,
      ensures
          mat.len() == c.len() - 1,
          forall|i: int| 0 <= i < mat.len() ==> mat[i].len() == c.len() - 1,
          /* Matrix has correct diagonal structure */
          forall|k: int| 0 <= k < (c.len() as int) - 2 ==> 
              mat[k][k + 1] == ((0.5 * (k + 1) as f32).sqrt()),
          forall|k: int| 0 <= k < (c.len() as int) - 2 ==> 
              mat[k + 1][k] == ((0.5 * (k + 1) as f32).sqrt()),
          /* All other entries except last column are zero */
          forall|i: int, j: int| 
              0 <= i < mat.len() && 0 <= j < mat.len() &&
              i + 1 != j && j + 1 != i && j != (c.len() as int) - 2 ==> 
              mat[i][j] == 0.0,

vc-code: |-
  {
      // impl-start
      assume(false);
      Vec::new()
      // impl-end
  }

vc-postamble: |-

  }
  fn main() {}