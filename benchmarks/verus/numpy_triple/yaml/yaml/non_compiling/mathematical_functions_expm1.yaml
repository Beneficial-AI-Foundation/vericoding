vc-description: |-
  /*
  Calculate exp(x) - 1 for all elements in the vector.
  This function provides greater precision than exp(x) - 1 for small values of x.
  
  Specification: expm1 computes exp(x) - 1 element-wise with enhanced numerical precision
  */
vc-preamble: |-
  use vstd::prelude::*;

  verus! {

vc-helpers: |-

vc-spec: |-
  fn expm1(x: Vec<f32>) -> (result: Vec<f32>)
      requires x.len() > 0,
      ensures
          result.len() == x.len(),
          forall|i: int| 0 <= i < x.len() ==> {
              /* Basic mathematical property: result equals exp(x) - 1 */
              result[i] == x[i].exp() - 1.0 &&
              /* Identity property: expm1(0) = 0 */
              (x[i] == 0.0 ==> result[i] == 0.0) &&
              /* Sign preservation for small values */
              (x[i].abs() <= 1.0 ==> (x[i] > 0.0 ==> result[i] > 0.0) && (x[i] < 0.0 ==> result[i] < 0.0)) &&
              /* Lower bound for positive values: expm1(x) > x for x > 0 */
              (x[i] > 0.0 ==> result[i] > x[i]) &&
              /* Upper bound for negative values: expm1(x) > -1 for all x */
              result[i] > -1.0
          }

vc-code: |-
  {
      // impl-start
      assume(false);
      Vec::new()
      // impl-end
  }

vc-postamble: |-

  }
  fn main() {}