vc-description: |-
  Returns a boolean array where two arrays are element-wise equal within a tolerance.
  For finite values, isclose uses the equation: absolute(a - b) <= (atol + rtol * absolute(b))
  where `b` is treated as the reference value.
  
  Specification: isclose returns a boolean array indicating element-wise closeness within tolerance

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

vc-helpers: |-

vc-spec: |-
  fn isclose(a: Vec<f32>, b: Vec<f32>, rtol: f32, atol: f32, equal_nan: bool) -> (result: Vec<bool>)
      requires 
          a.len() == b.len(),
          rtol >= 0.0,
          atol >= 0.0,
      ensures
          result.len() == a.len(),
          forall|i: int| 0 <= i < result.len() ==> {
              let a_val = a[i];
              let b_val = b[i];
              /* Core tolerance check for finite values */
              (a_val.is_finite() && b_val.is_finite()) ==> {
                  result[i] == ((a_val - b_val).abs() <= atol + rtol * b_val.abs())
              } &&
              /* Infinite values are equal if they match exactly */
              (!a_val.is_finite() || !b_val.is_finite()) ==> {
                  result[i] == (a_val == b_val)  
              } &&
              /* NaN handling depends on equal_nan parameter */
              (a_val.is_nan() && b_val.is_nan()) ==> {
                  result[i] == equal_nan
              }
          }

vc-code: |-
  {
      // impl-start
      assume(false);
      Vec::new()
      // impl-end
  }

vc-postamble: |-

  }
  fn main() {}