vc-description: |-
  The number of output arguments for a given ufunc.
  This corresponds to the nout attribute of NumPy ufuncs.
  
  Returns the number of output arguments of the ufunc.
  
  This specification captures the essential mathematical properties of the nout attribute:
  
  1. **Correctness**: The function returns exactly the nout_val field from the ufunc structure
  2. **Lower bound**: The result is always ≥ 1, since all ufuncs can produce at least one output
  3. **Type safety**: The result is a natural number representing a count
  4. **Determinism**: Given the same ufunc, nout always returns the same value
  
  Mathematical properties:
  - ∀ ufunc : UFunc, nout(ufunc) = ufunc.nout_val  
  - ∀ ufunc : UFunc, nout(ufunc) ≥ 1
  - nout is a pure function (no side effects)
  
  Examples from NumPy documentation:
  - add.nout = 1 (binary operation with single output)
  - modf.nout = 2 (returns fractional and integral parts)
  - divmod.nout = 2 (returns quotient and remainder)

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

  /* Represents a universal function (ufunc) type that captures basic metadata about 
     the number of inputs and outputs. In NumPy, this would be the ufunc object itself. */
  pub struct UFunc {
      /* Number of input arguments the ufunc accepts */
      pub nin: nat,
      /* Number of output arguments the ufunc produces */
      pub nout_val: nat,
  }

  impl UFunc {
      pub open spec fn wf(self) -> bool {
          self.nout_val >= 1
      }
  }

vc-helpers: |-

vc-spec: |-
  fn nout(ufunc: UFunc) -> (result: nat)
      requires ufunc.wf(),
      ensures 
          result == ufunc.nout_val,
          result >= 1

vc-code: |-
  {
      // impl-start
      assume(false);
      1
      // impl-end
  }

vc-postamble: |-

  }
  fn main() {}