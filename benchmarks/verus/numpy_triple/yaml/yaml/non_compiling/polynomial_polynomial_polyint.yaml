vc-description: |-
  Integrate a polynomial.
      
  Returns the polynomial coefficients integrated m times from lbnd.
  At each iteration the resulting series is multiplied by scl and 
  an integration constant k is added. The scaling factor is for use 
  in a linear change of variable.
      
  The input coefficients are ordered from low to high degree.
  For example, [1, 2, 3] represents 1 + 2*x + 3*xÂ².

  Specification: polyint integrates polynomial coefficients m times.
      
  The integration process:
  1. For each integration step i (from 0 to m-1):
     - Multiply all coefficients by scl
     - Integrate: coefficient at degree j becomes coefficient/(j+1) at degree j+1
     - Add integration constant k[i] adjusted for lower bound lbnd
  2. Result has m more coefficients than input (degree increases by m)
      
  Properties:
  - Integration increases polynomial degree by m
  - Each integration step preserves the polynomial structure
  - The derivative of the result (m times) gives back the original scaled by scl^m
  - Integration constants k determine the value of antiderivatives at lbnd

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

vc-helpers: |-

vc-spec: |-
  fn polyint(c: Vec<f32>, m: usize, k: Vec<f32>, lbnd: f32, scl: f32) -> (result: Vec<f32>)
      requires 
          m > 0 ==> scl != 0.0,
          k.len() == m,
      ensures
          result.len() == c.len() + m,
          m == 1 ==> {
              &&& (c.len() == 0 ==> result[0] == k[0])
              &&& (c.len() > 0 ==> {
                  &&& (forall|i: int| 0 <= i < c.len() ==> 
                          result[i + 1] == scl * c[i] / ((i + 1) as f32))
              })
          },
          m == 1 && c.len() > 0 ==> {
              &&& (k[0] == 0.0 && lbnd == 0.0 ==> result[0] == 0.0)
              &&& (k[0] == 3.0 && lbnd == 0.0 ==> result[0] == 3.0)
          },
          scl == 0.0 ==> (forall|i: int| m <= i < result.len() ==> result[i] == 0.0)

vc-code: |-
  {
      // impl-start
      assume(false);
      Vec::new()
      // impl-end
  }

vc-postamble: |-

  }
  fn main() {}