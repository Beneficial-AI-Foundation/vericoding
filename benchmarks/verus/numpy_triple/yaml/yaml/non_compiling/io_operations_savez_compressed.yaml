vc-description: |-
  Save several arrays into a single file in compressed .npz format.
  
  This function saves multiple arrays to a compressed archive file.
  Arrays are stored with either provided names or automatic names (arr_0, arr_1, etc.).
  The resulting file can be loaded back using numpy.load.
  
  Specification: savez_compressed saves arrays to a compressed archive file.
  
  The function should:
  1. Create a compressed .npz file at the specified path
  2. Store each array in the archive with proper naming
  3. Ensure the file is readable by compatible loading functions
  4. Handle filename extension automatically (.npz appended if not present)
vc-preamble: |-
  use vstd::prelude::*;

  verus! {
vc-helpers: |-

vc-spec: |-
  fn savez_compressed(filename: String, arrays: Vec<Vec<f32>>) -> (result: ())
      requires 
          filename.len() > 0,
          arrays.len() > 0,
      ensures
          /* File creation property: a compressed archive is created */
          exists|file_created: bool| file_created == true,
          /* Data preservation: each array is stored with proper naming */
          forall|i: int| 0 <= i < arrays.len() ==> 
              exists|array_name: String| 
                  array_name == format!("arr_{}", i) &&
                  exists|array_stored: bool| array_stored == true,
          /* Filename handling: .npz extension is ensured */
          exists|final_filename: String|
              final_filename == filename + ".npz" ||
              (filename.ends_with(".npz") && final_filename == filename)
vc-code: |-
  {
      // impl-start
      assume(false);
      ()
      // impl-end
  }
vc-postamble: |-

  }
  fn main() {}