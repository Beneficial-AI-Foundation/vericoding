vc-description: |-
  /*
  Compute the truth value of x1 OR x2 element-wise.
  
  Performs logical OR operation on corresponding elements of two boolean vectors.
  The function returns a vector where each element is the logical OR of the 
  corresponding elements from the input vectors.
  
  Specification: logical_or computes element-wise logical OR operation
  
  This specification captures the mathematical properties of logical OR:
  - Commutativity: a ∨ b = b ∨ a
  - Associativity: (a ∨ b) ∨ c = a ∨ (b ∨ c)
  - Identity with false: a ∨ false = a
  - Absorption with true: a ∨ true = true
  - Idempotent: a ∨ a = a
  - De Morgan's law: ¬(a ∨ b) = (¬a) ∧ (¬b)
  
  Sanity checks:
  - For empty vectors (n = 0), the result is empty by vacuous truth
  - logical_or([true, false], [false, false]) = [true, false]
  - logical_or([false, false], [false, false]) = [false, false]
  - logical_or([true, true], [false, true]) = [true, true]
  - The result is false only when both operands are false
  */
vc-preamble: |-
  use vstd::prelude::*;

  verus! {

vc-helpers: |-

vc-spec: |-
  fn logical_or(x1: Vec<bool>, x2: Vec<bool>) -> (result: Vec<bool>)
      requires x1.len() == x2.len(),
      ensures 
          result.len() == x1.len(),
          forall|i: int| 0 <= i < result.len() ==> result[i] == (x1[i] || x2[i]),
          /* Commutativity property */
          forall|i: int| 0 <= i < result.len() ==> (x1[i] || x2[i]) == (x2[i] || x1[i]),
          /* Identity with false */
          forall|i: int| 0 <= i < result.len() ==> (x1[i] || false) == x1[i],
          /* Absorption with true */
          forall|i: int| 0 <= i < result.len() ==> (x1[i] || true) == true,
          /* Idempotent property */
          forall|i: int| 0 <= i < result.len() ==> (x1[i] || x1[i]) == x1[i],
          /* Result is true if either operand is true */
          forall|i: int| 0 <= i < result.len() ==> (x1[i] == true || x2[i] == true) ==> result[i] == true,
          /* Result is false only when both operands are false */
          forall|i: int| 0 <= i < result.len() ==> (x1[i] == false && x2[i] == false) ==> result[i] == false,

vc-code: |-
  {
      // impl-start
      assume(false);
      Vec::new()
      // impl-end
  }

vc-postamble: |-

  }
  fn main() {}