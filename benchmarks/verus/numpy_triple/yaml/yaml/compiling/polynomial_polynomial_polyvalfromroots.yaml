vc-description: |-
  Evaluate a polynomial specified by its roots at points x.
  If `r` is of length `N`, this function returns the value p(x) = ‚àè(x - r_i)
  where the product is over all roots r_i in the roots vector.
  
  Specification: polyvalfromroots evaluates the polynomial with the given roots
  at each point in x. The polynomial is defined as the product of (x - r_i) for all roots r_i.
vc-preamble: |-
  use vstd::prelude::*;

  verus! {
vc-helpers: |-

vc-spec: |-
  spec fn poly_eval_at_point(x_val: int, roots: Seq<int>) -> int
      decreases roots.len()
  {
      if roots.len() == 0 {
          1
      } else {
          (x_val - roots[0]) * poly_eval_at_point(x_val, roots.subrange(1, roots.len() as int))
      }
  }

  fn polyvalfromroots(x: Vec<i32>, r: Vec<i32>) -> (result: Vec<i32>)
      ensures 
          result.len() == x.len(),
          forall|i: int| 0 <= i < result.len() ==> result[i] == poly_eval_at_point(x[i] as int, r@.map_values(|v: i32| v as int)),
vc-code: |-
  {
      // impl-start
      assume(false);
      Vec::new()
      // impl-end
  }
vc-postamble: |-

  }
  fn main() {}