vc-description: |-
  Changes elements of an array based on conditional and input values.
  
  This function modifies the target array in-place, setting elements to values
  from the values array where the corresponding mask element is True.
  If values is smaller than the target array, it will repeat cyclically.
  
  Parameters:
  - a: Target array to modify
  - mask: Boolean mask array with same shape as a
  - values: Values to put into a where mask is True
  - m: Size of values array (must be positive for repetition)

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

vc-helpers: |-

vc-spec: |-
  fn putmask(a: Vec<f32>, mask: Vec<bool>, values: Vec<f32>) -> (result: Vec<f32>)
      requires 
          a.len() == mask.len(),
          values.len() > 0,
      ensures
          result.len() == a.len(),
          forall|i: int| 0 <= i < a.len() ==> (
              mask[i] ==> exists|j: int| 0 <= j < values.len() && result[i] == values[j]
          ),
          forall|i: int| 0 <= i < a.len() ==> (
              mask[i] ==> result[i] == values[(i as int) % (values.len() as int)]
          ),
          forall|i: int| 0 <= i < a.len() ==> (
              !mask[i] ==> result[i] == a[i]
          ),

vc-code: |-
  {
      // impl-start
      assume(false);
      Vec::new()
      // impl-end
  }

vc-postamble: |-

  }
  fn main() {}