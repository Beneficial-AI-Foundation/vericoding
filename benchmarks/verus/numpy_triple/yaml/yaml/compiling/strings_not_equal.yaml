vc-description: |-
  /*
  numpy.strings.not_equal: Return (x1 != x2) element-wise for string arrays.
  
  Performs element-wise string inequality comparison between two vectors of strings.
  Returns a boolean vector indicating whether corresponding strings are not equal.
  
  This function compares strings lexicographically and returns True for each
  position where the strings are different, False where they are identical.
  
  Specification: numpy.strings.not_equal returns element-wise inequality comparison.
  
  Precondition: True (no special preconditions for string inequality)
  Postcondition: For all indices i, result[i] = (x1[i] != x2[i])
  
  Mathematical Properties:
  - Irreflexive: not_equal x x returns all False
  - Symmetric: not_equal x y = not_equal y x  
  - Negation of equality: not_equal x y = ¬(equal x y)
  - Decidable: String inequality is decidable for all strings
  - Type-safe: Result vector has same length as input vectors
  - Complementary: for any two strings s1 and s2, exactly one of (s1 = s2) or (s1 ≠ s2) holds
  */
vc-preamble: |-
  use vstd::prelude::*;

  verus! {

vc-helpers: |-

vc-spec: |-
  fn not_equal(x1: Vec<String>, x2: Vec<String>) -> (result: Vec<bool>)
      requires x1.len() == x2.len(),
      ensures 
          result.len() == x1.len(),
          forall|i: int| 0 <= i < result.len() ==> result[i] == (x1[i] != x2[i])

vc-code: |-
  {
      // impl-start
      assume(false);
      Vec::new()
      // impl-end
  }

vc-postamble: |-

  }
  fn main() {}