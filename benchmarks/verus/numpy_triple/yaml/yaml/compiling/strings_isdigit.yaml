vc-description: |-
  Returns true for each element if all characters in the string are digits, and there is at least one character, false otherwise

  numpy.strings.isdigit: Returns true for each element if all characters in the string are digits, and there is at least one character, false otherwise.

  Tests whether all characters in each string are digits.
  A string is considered to satisfy isdigit if:
  1. It contains at least one character (non-empty)
  2. All characters are digits (0-9)
  
  Empty strings return false.
  Strings with any non-digit characters return false.
  Strings with only digits return true.
  
  This follows the Python str.isdigit() behavior which returns False for empty strings
  and True only if all characters are numeric digits.

  Specification: numpy.strings.isdigit returns a vector where each element indicates
  whether the corresponding string element contains only digits and is non-empty.

  Precondition: True (no special preconditions)
  Postcondition: For all indices i, result[i] = true if and only if:
  1. The string a[i] is non-empty (not equal to empty string)
  2. All characters in a[i] are digits (satisfy Char.isDigit)
  
  Properties:
  - Empty strings return False
  - Strings with only numeric characters (0-9) return True
  - Strings with any non-numeric characters return False
  - Single digit characters return True

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

vc-helpers: |-

vc-spec: |-
  spec fn all_chars_digit(s: Seq<char>) -> bool;

  fn isdigit(a: Vec<String>) -> (result: Vec<bool>)
      ensures
          result.len() == a.len(),
          forall|i: int| 0 <= i < a.len() ==> result[i] == (a[i]@.len() > 0 && all_chars_digit(a[i]@))

vc-code: |-
  {
      // impl-start
      assume(false);
      Vec::new()
      // impl-end
  }

vc-postamble: |-

  }
  fn main() {}