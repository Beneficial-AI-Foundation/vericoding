vc-description: |-
  Return coordinate matrices from two coordinate vectors using 'xy' (Cartesian) indexing.
  For inputs of length m and n, returns two matrices of shape (n, m) where:
  - The first matrix has x values repeated along rows
  - The second matrix has y values repeated along columns
  
  Specification: meshgrid creates coordinate matrices where x values are repeated 
  along rows and y values are repeated along columns in 'xy' indexing mode

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

vc-helpers: |-

vc-spec: |-
  fn meshgrid(x: Vec<f32>, y: Vec<f32>) -> (result: (Vec<Vec<f32>>, Vec<Vec<f32>>))
      requires 
          x.len() > 0,
          y.len() > 0,
      ensures
          result.0.len() == y.len(),
          result.1.len() == y.len(),
          forall|i: int| 0 <= i < y.len() ==> result.0[i].len() == x.len(),
          forall|i: int| 0 <= i < y.len() ==> result.1[i].len() == x.len(),
          forall|i: int, j: int| 0 <= i < y.len() && 0 <= j < x.len() ==> result.0[i][j] == x[j],
          forall|i: int, j: int| 0 <= i < y.len() && 0 <= j < x.len() ==> result.1[i][j] == y[i],

vc-code: |-
  {
      // impl-start
      assume(false);
      (Vec::new(), Vec::new())
      // impl-end
  }

vc-postamble: |-

  }
  fn main() {}