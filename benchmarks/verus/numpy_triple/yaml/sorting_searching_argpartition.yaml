vc-description: |-
  Perform an indirect partition along the given axis.
  Returns an array of indices that partition the input array such that
  the kth element is in its final sorted position and all smaller
  elements are moved before it and all larger elements behind it.
  
  Specification: argpartition returns indices that correctly partition the array.
  The kth element is in its final sorted position, with all smaller elements
  before it and all larger elements after it.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

vc-helpers: |-

vc-spec: |-
  fn argpartition(a: Vec<i8>, kth: usize) -> (indices: Vec<usize>)
      requires 
          a.len() > 0,
          kth < a.len(),
      ensures
          /* The indices form a valid permutation of 0..n-1 */
          indices.len() == a.len(),
          /* Partition property: all elements before kth position are ≤ kth element */
          forall|i: int| 0 <= i < kth ==> a@[#[trigger] indices@[i] as int] <= a@[#[trigger] indices@[kth as int] as int],
          /* Partition property: all elements after kth position are ≥ kth element */
          forall|i: int| kth < i && i < indices.len() ==> a@[#[trigger] indices@[kth as int] as int] <= a@[#[trigger] indices@[i] as int],

vc-code: |-
  {
      // impl-start
      assume(false);
      unreached()
      // impl-end
  }

vc-postamble: |-

  }
  fn main() {}