vc-description: |-
  Shift the bits of an integer to the right element-wise. This operation is equivalent to dividing each element by 2^shift_amount using integer division. For negative inputs, the behavior follows arithmetic right shift with sign extension.

vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-

vc-spec: |-
  fn right_shift(x1: Vec<i32>, x2: Vec<i32>) -> (result: Vec<i32>)
      requires 
          x1.len() == x2.len(),
          forall|i: int| 0 <= i < x2.len() ==> x2[i] >= 0,
      ensures
          result.len() == x1.len(),
          forall|i: int| 0 <= i < result.len() ==> {
              &&& (x1[i] >= 0 ==> result[i] == x1[i] / (1i32 << x2[i]))
              &&& (x1[i] < 0 ==> result[i] == x1[i] >> x2[i])
              &&& (x2[i] == 0 ==> result[i] == x1[i])
              &&& (x1[i] > 0 ==> result[i] >= 0)
              &&& (x1[i] < 0 ==> result[i] <= 0)
              &&& (x1[i] == 0 ==> result[i] == 0)
          }

vc-code: |-
  {
      assume(false);
      Vec::new()
  }

vc-postamble: |-
  }
  fn main() {}

