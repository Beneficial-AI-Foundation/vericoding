vc-description: |-
  Machine limits for integer types - returns information about the given integer type including 
  the number of bits, minimum value, and maximum value.
  
  Specification: iinfo returns correct machine limits for integer types.
  The returned IntegerInfo structure contains:
  - bits: the number of bits used by the type
  - min: the minimum representable value (-(2^(bits-1)) for signed, 0 for unsigned)
  - max: the maximum representable value (2^(bits-1) - 1 for signed, 2^bits - 1 for unsigned)

vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-

vc-spec: |-
  #[derive(Clone, Copy, PartialEq, Eq)]
  pub enum IntegerType {
      Int8,
      Int16, 
      Int32,
      Int64,
      UInt8,
      UInt16,
      UInt32,
      UInt64,
  }
  
  pub struct IntegerInfo {
      pub bits: u32,
      pub min: i64,
      pub max: i64,
  }
  
  fn iinfo(int_type: IntegerType) -> (result: IntegerInfo)
      ensures match int_type {
          IntegerType::Int8 => 
              result.bits == 8 && result.min == -128 && result.max == 127,
          IntegerType::Int16 => 
              result.bits == 16 && result.min == -32768 && result.max == 32767,
          IntegerType::Int32 => 
              result.bits == 32 && result.min == -2147483648 && result.max == 2147483647,
          IntegerType::Int64 => 
              result.bits == 64 && result.min == -9223372036854775808 && result.max == 9223372036854775807,
          IntegerType::UInt8 => 
              result.bits == 8 && result.min == 0 && result.max == 255,
          IntegerType::UInt16 => 
              result.bits == 16 && result.min == 0 && result.max == 65535,
          IntegerType::UInt32 => 
              result.bits == 32 && result.min == 0 && result.max == 4294967295,
          IntegerType::UInt64 => 
              result.bits == 64 && result.min == 0 && result.max == 18446744073709551615,
      }

vc-code: |-
  {
      assume(false);
      unreached();
  }

vc-postamble: |-
  }
  fn main() {}

