vc-description: |-
  Generate a Vandermonde matrix with decreasing powers (default behavior).
  The Vandermonde matrix is a matrix with terms of a geometric progression in each row.
  For a 1D input vector x of length n and specified number of columns m,
  the output is an nÃ—m matrix where entry (i,j) = x[i]^(m-1-j)

  Specification: vander generates a Vandermonde matrix where each row contains
  powers of the corresponding element from the input vector.
  In the default decreasing mode, column j contains x^(m-1-j) for each element x.
  This means the first column has the highest powers and the last column has x^0 = 1.

vc-preamble: |-
  use vstd::prelude::*;

  verus! {
  spec fn pow_int(base: int, exp: nat) -> int
      decreases exp
  {
      if exp == 0 {
          1
      } else {
          base * pow_int(base, (exp - 1) as nat)
      }
  }

vc-helpers: |

vc-spec: |-
  fn vander(x: Vec<i8>, m: usize) -> (result: Vec<Vec<i8>>)
      requires 
          x@.len() > 0,
          m > 0,
      ensures
          result@.len() == x@.len(),
          forall|i: int| 0 <= i < result@.len() ==> result@[i]@.len() == m,
          forall|i: int, j: int| 0 <= i < result@.len() && 0 <= j < m ==> 
              result@[i]@[j] as int == pow_int(x@[i] as int, (m - 1 - j) as nat),

vc-code: |-
  {
      // impl-start
      assume(false);
      unreached()
      // impl-end
  }

vc-postamble: |2-

  }
  fn main() {}