vc-description: |-
  numpy.equal: Return (x1 == x2) element-wise.
  
  Performs element-wise comparison of two arrays and returns a boolean array
  of the same shape indicating where the corresponding elements are equal.
  
  For scalar inputs, returns a single boolean value. For array inputs of the
  same shape, returns an array of booleans. This function is the basis for
  the == operator when used with numpy arrays.
  
  Specification: numpy.equal returns a boolean vector where each element indicates
  whether the corresponding elements in x1 and x2 are equal.
  
  Precondition: True (arrays have the same shape by the type system)
  Postcondition: For all indices i, result[i] = (x1[i] == x2[i])
  
  This specification captures both the element-wise behavior and the mathematical
  property that equality comparison is performed at each position.
  
  Key Properties:
  1. Element-wise comparison: Each position is compared independently
  2. Boolean result: Returns true/false for each position 
  3. Reflexivity: equal(x, x) returns all true
  4. Symmetry: equal(x, y) = equal(y, x)
  5. Result shape matches input shape

vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-

vc-spec: |-
  fn numpy_equal<T>(x1: Vec<T>, x2: Vec<T>) -> (result: Vec<bool>)
      requires 
          x1.len() == x2.len(),
      ensures
          result.len() == x1.len(),
          forall|i: int| 0 <= i < result.len() ==> result[i] == (x1[i] == x2[i]),
          forall|i: int| 0 <= i < result.len() ==> (result[i] == true || result[i] == false),
          x1@ == x2@ ==> forall|i: int| 0 <= i < result.len() ==> result[i] == true

vc-code: |-
  {
      assume(false);
      unreached()
  }

vc-postamble: |-
  }
  fn main() {}