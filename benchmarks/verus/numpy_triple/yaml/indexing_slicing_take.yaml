vc-description: |-
  Take elements from a source array at specified indices.
  Given a source array 'arr' and a vector of indices 'indices',
  returns a new array containing the elements from 'arr' at the positions
  specified by 'indices'. The indices must be valid positions in the source array.
  
  This is a simplified 1D version of numpy.take with 'raise' mode,
  where all indices must be valid (in range [0, n-1]).
  
  Specification: take extracts elements from a source array at specified indices.
  
  Mathematical properties:
  1. The result has the same length as the indices array
  2. For each position i in the result, result[i] = arr[indices[i]]
  3. All indices must be valid (enforced by Fin type)
  4. The order of elements in the result follows the order of indices
  5. The same index can appear multiple times, resulting in duplicated elements
  
  The function implements: result[i] = arr.get (indices.get i)
  
  This captures the core behavior of numpy.take in 'raise' mode where indices
  must be in valid range. The use of Fin type ensures type safety and eliminates
  the need for runtime bounds checking. The result preserves the element type
  of the source array.

vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-

vc-spec: |-
  fn take(arr: Vec<f32>, indices: Vec<usize>) -> (result: Vec<f32>)
      requires
          forall|i: int| 0 <= i < indices.len() ==> indices[i] < arr.len(),
      ensures
          result.len() == indices.len(),
          forall|i: int| 0 <= i < indices.len() ==> result[i] == arr[indices[i] as int],

vc-code: |-
  {
      assume(false);
      unreached()
  }

vc-postamble: |-
  }
  fn main() {}

