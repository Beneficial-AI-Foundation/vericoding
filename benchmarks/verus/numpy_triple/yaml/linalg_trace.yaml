vc-description: |-
  Return the sum along diagonals of the array

  If a is 2-D, returns the sum along the diagonal. If a has more dimensions, then axes along which the trace is taken can be specified.

  Returns the sum along the main diagonal of a square matrix.
  The trace is the sum of diagonal elements at positions (i, i) for i = 0 to n-1.

  Specification: trace computes the sum of the main diagonal elements of a square matrix.
  The trace is mathematically defined as the sum of elements x[i][i] for i from 0 to n-1.
  This is a fundamental operation in linear algebra with important mathematical properties:
  - trace(A + B) = trace(A) + trace(B) (linearity)
  - trace(cA) = c * trace(A) (scalar multiplication)
  - trace(A) = trace(A^T) (transpose invariance)

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

vc-helpers: |-

vc-spec: |-
  fn trace(x: Vec<Vec<f32>>) -> (result: f32)
      requires 
          x@.len() > 0,
          forall|i: int| 0 <= i < x@.len() ==> x@[i].len() == x@.len(),
      ensures 
          true, /* The trace equals the sum of diagonal elements matrix[i][i] for i in 0..n-1 */
          forall|i: int| 0 <= i < x@.len() ==> x@[i][i] != 0.0f32 ==> result != 0.0f32,

vc-code: |-
  {
      // impl-start
      assume(false);
      0.0
      // impl-end
  }

vc-postamble: |-

  }
  fn main() {}