vc-description: |-
  Interpolate a function at the Chebyshev points of the first kind.

  Returns the Chebyshev series coefficients that interpolate the given function
  at the Chebyshev points of the first kind in the interval [-1, 1]. The resulting
  coefficients represent a polynomial of degree deg that interpolates the function
  at deg+1 Chebyshev points.

  The Chebyshev interpolation provides near-optimal polynomial approximation
  for continuous functions on [-1, 1], minimizing the Runge phenomenon and
  providing good convergence properties.
vc-preamble: |-
  use vstd::prelude::*;

  verus! {
vc-helpers: |-

vc-spec: |-
  spec fn is_constant_function(func: spec_fn(f64) -> f64) -> bool {
      forall|x: f64, y: f64| #[trigger] func(x) == #[trigger] func(y)
  }

  fn chebinterpolate(deg: usize, func: spec_fn(f64) -> f64) -> (coef: Vec<f64>)
      ensures 
          coef.len() == deg + 1,
          /* The coefficients satisfy the key properties of Chebyshev interpolation:
             1. The coefficient vector has the correct length (guaranteed by type)
             2. When the function is constant, all coefficients except the first are zero */
          is_constant_function(func) ==> (
              coef[0] == func(0.0) &&
              forall|i: int| 1 <= i < coef.len() ==> #[trigger] coef[i] == 0.0
          )
vc-code: |-
  {
      // impl-start
      assume(false);
      unreached()
      // impl-end
  }
vc-postamble: |-

  }
  fn main() {}