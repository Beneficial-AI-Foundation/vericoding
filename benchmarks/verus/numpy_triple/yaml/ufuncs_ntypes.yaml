vc-description: |-
  The number of supported input/output type combinations
  
  numpy.ufunc.ntypes: Returns the number of supported input/output type combinations
  for a universal function.
  
  The ntypes attribute represents the number of numerical NumPy types on which
  the ufunc can operate. This is a key characteristic that determines the
  type flexibility of different NumPy universal functions.
  
  For example:
  - np.add.ntypes returns around 22 (supports most numerical types)
  - np.exp.ntypes returns around 10 (fewer supported types)
  - np.remainder.ntypes returns around 16 (intermediate support)
  
  Specification: ntypes returns the count of supported type combinations
  for a ufunc, which must be a positive number for any valid ufunc.
  
  Precondition: The input represents valid type combinations for a ufunc
  Postcondition: The result is the exact count of type combinations,
                which is non-zero for any functional ufunc and equals
                the length of the type combinations vector.

vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-

vc-spec: |-
  fn ntypes(ufunc_type_combinations: Vec<String>) -> (result: usize)
      requires ufunc_type_combinations@.len() > 0,
      ensures 
          result == ufunc_type_combinations@.len(),
          result > 0

vc-code: |-
  {
      assume(false);
      unreached()
  }

vc-postamble: |-
  }
  fn main() {}