vc-description: |-
  numpy.reciprocal: Return the reciprocal of the argument, element-wise.
  
  Calculates 1/x for each element in the input array.
  This is equivalent to raising each element to the power of -1.
  
  The function requires that all elements are non-zero to avoid division by zero.
  For floating-point inputs, the reciprocal of zero would be infinity.
  
  Returns an array of the same shape as x, containing the reciprocals.
  
  Specification: numpy.reciprocal returns a vector where each element is the
  reciprocal (1/x) of the corresponding element in x.
  
  Precondition: All elements in x must be non-zero to avoid division by zero
  Postcondition: For all indices i, result[i] = 1 / x[i]
  
  Mathematical properties captured in the specification:
  - Basic reciprocal property: result[i] = 1 / x[i]
  - Domain restriction: x[i] â‰  0 for all i
  - Sign preservation: sign(result[i]) = sign(x[i])
  - Magnitude inversion: |result[i]| = 1 / |x[i]|
  
  Additional mathematical properties (provable from the spec):
  - reciprocal(reciprocal(x)) = x for all non-zero x
  - reciprocal(x * y) = reciprocal(x) * reciprocal(y) for non-zero x, y
  - reciprocal(1) = 1
  - reciprocal(-1) = -1
  - For x > 0: reciprocal(x) > 0
  - For x < 0: reciprocal(x) < 0

vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-

vc-spec: |-
  fn numpy_reciprocal(x: Vec<f32>) -> (result: Vec<f32>)
      requires 
          x.len() > 0,
          forall|i: int| 0 <= i < x.len() ==> x[i] != 0.0_f32,
      ensures
          result.len() == x.len(),

vc-code: |-
  {
      assume(false);
      unreached();
  }

vc-postamble: |-
  }
  fn main() {}

