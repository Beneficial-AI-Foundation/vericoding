vc-description: |-
  Generate a Chebyshev series with given roots.

  Returns the coefficients of the polynomial p(x) = (x - r₀) * (x - r₁) * ... * (x - rₙ)
  in Chebyshev form, where rₙ are the roots specified in the input.

  The output coefficients c satisfy: p(x) = c₀ + c₁ * T₁(x) + ... + cₙ * Tₙ(x)
  where Tₙ(x) is the n-th Chebyshev polynomial of the first kind.

  Specification: chebfromroots generates Chebyshev coefficients such that:
  1. The output has exactly n+1 coefficients where n is the number of roots
  2. The polynomial represented by these coefficients has the given roots
  3. When evaluated at any root rᵢ using Chebyshev basis, the result is zero
  4. The highest degree coefficient is non-zero (ensuring correct degree)

vc-preamble: |-
  use vstd::prelude::*;

  verus! {

vc-helpers: |-

vc-spec: |-
  fn chebfromroots(roots: Vec<f64>) -> (coeffs: Vec<f64>)
      ensures
          coeffs@.len() == roots@.len() + 1,
          roots@.len() > 0 ==> coeffs@[roots@.len() as int] != 0.0,

vc-code: |-
  {
      // impl-start
      assume(false);
      unreached()
      // impl-end
  }

vc-postamble: |-

  }
  fn main() {}