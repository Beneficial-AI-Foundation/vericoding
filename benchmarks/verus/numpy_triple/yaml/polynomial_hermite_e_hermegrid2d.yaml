vc-description: |-
  numpy.polynomial.hermite_e.hermegrid2d: Evaluate a 2-D HermiteE series on the Cartesian product of x and y.
  
  This function evaluates a 2-dimensional HermiteE polynomial series
  on the Cartesian product of coordinate vectors x and y.
  
  The evaluation follows the mathematical formula:
  p(a,b) = sum_{i,j} c[i,j] * He_i(a) * He_j(b)
  
  where He_i is the i-th probabilist's Hermite polynomial (HermiteE),
  and the points (a,b) are formed by taking all combinations of
  elements from x and y.
  
  The result is a matrix where result[i,j] contains the polynomial
  value at the point (x[i], y[j]).
  
  Specification: hermegrid2d evaluates a 2D HermiteE polynomial series 
  on the Cartesian product of x and y coordinates.
  
  The function computes p(a,b) = sum_{i,j} c[i,j] * He_i(a) * He_j(b)
  where He_i is the i-th probabilist's Hermite polynomial.

vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-

vc-spec: |-
  fn hermegrid2d(x: Vec<f32>, y: Vec<f32>, c: Vec<Vec<f32>>) -> (result: Vec<Vec<f32>>)
      ensures
          result.len() == x.len(),
          forall|i: int| 0 <= i < result.len() ==> result[i].len() == y.len(),
          forall|i: int, j: int| 0 <= i < result.len() && 0 <= j < result[i].len() ==> (
              (c.len() == 0 || (exists|k: int| 0 <= k < c.len() && c[k].len() == 0) ==> result[i][j] == 0.0f32)
          ),

vc-code: |-
  {
      assume(false);
      unreached();
  }

vc-postamble: |-
  }
  fn main() {}

