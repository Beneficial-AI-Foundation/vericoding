vc-description: |-
  numpy.unpackbits: Unpacks elements of a uint8 array into a binary-valued output array.
  
  Each element of the input array represents a bit-field that is unpacked into
  a binary-valued output array. By default, each uint8 value is unpacked into
  8 binary values (0 or 1) using big-endian bit order.
  
  This specification covers the basic 1D case with default parameters.
  For simplicity, we use Nat instead of UInt8, with the constraint that input values < 256.

vc-preamble: |-
  use vstd::prelude::*;
  use vstd::arithmetic::power::pow;
  
  verus! {

vc-helpers: |-

vc-spec: |-
  fn numpy_unpackbits(a: Vec<u8>) -> (result: Vec<u8>)
      requires forall|i: int| 0 <= i < a.len() ==> a[i] < 256,
      ensures 
          result.len() == a.len() * 8,
          forall|i: int, j: int| 0 <= i < a.len() && 0 <= j < 8 ==> 
              #[trigger] result[i * 8 + j] == ((a[i] as int) / pow(2, (7 - j) as nat)) % 2

vc-code: |-
  {
      assume(false);
      unreached();
  }

vc-postamble: |-
  }
  fn main() {}

