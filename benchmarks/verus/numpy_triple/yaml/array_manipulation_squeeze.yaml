vc-description: |-
  Squeeze a single-element vector to extract its value.
  This is a simplified 1D version of numpy.squeeze for vectors of size 1.
  
  Specification: squeeze extracts the single element from a size-1 vector.
  
  Mathematical properties:
  1. The result equals the first (and only) element of the input vector
  2. For any function f, squeeze preserves function application: f(squeeze(a)) = f(a[0])
  3. squeeze is the inverse of creating a single-element vector
  
  Sanity checks:
  - The input must be a vector of exactly size 1
  - The output type changes from Vector to the element type
  - This models numpy's behavior where squeeze([x]) returns x as a 0D array

vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-

vc-spec: |-
  spec fn squeeze<T>(a: Vec<T>) -> T
      recommends a.len() == 1
  {
      a[0]
  }
  
  fn squeeze_exec<T: Copy>(a: Vec<T>) -> (result: T)
      requires a.len() == 1,
      ensures 
          result == squeeze(a),
          result == a[0],
          forall|b: Vec<T>| b.len() == 1 && squeeze(a) == squeeze(b) ==> a[0] == b[0],
          forall|i: int| 0 <= i < a.len() ==> a[i] == result,

vc-code: |-
  {
      assume(false);
      unreached()
  }

vc-postamble: |-
  }
  fn main() {}

