vc-description: |-
  numpy.square: Return the element-wise square of the input.
  
  Computes x^2 element-wise. This is equivalent to x * x but may be
  more efficient for certain data types. The function squares each element
  of the input array and returns an array of the same shape.
  
  This is a universal function (ufunc) that operates element-wise on arrays.
  
  Specification: numpy.square returns a vector where each element is the
  square of the corresponding element in x.
  
  Precondition: True (no special preconditions for squaring)
  Postcondition: For all indices i, result[i] = x[i]^2
  
  Mathematical Properties:
  - Result is always non-negative: ∀ i, result[i] ≥ 0
  - Preserves zeros: x[i] = 0 → result[i] = 0
  - Monotonic for non-negative inputs: 0 ≤ x[i] ≤ x[j] → result[i] ≤ result[j]

vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {
  
  spec fn square_f64(x: f64) -> f64;

vc-helpers: |-

vc-spec: |-
  fn numpy_square(x: Vec<f64>) -> (result: Vec<f64>)
      ensures
          result.len() == x.len(),
          forall|i: int| 0 <= i < result.len() ==> result[i] == square_f64(x[i])

vc-code: |-
  {
      assume(false);
      unreached()
  }

vc-postamble: |-
  }
  fn main() {}

