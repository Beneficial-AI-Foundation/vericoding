vc-description: |-

vc-preamble: |-
  // RUN: /compile:0
  
  use vstd::prelude::*;
  
  verus! {
  
  // Predicate to check if outarr is the reverse of arr
  spec fn reversed(arr: Seq<char>, outarr: Seq<char>) -> bool {
      arr.len() == outarr.len() &&
      forall|k: int| 0 <= k < arr.len() ==> outarr[k] == arr[arr.len() - 1 - k]
  }

vc-helpers: |-
  // <vc-helpers>
  // </vc-helpers>

vc-spec: |-
  // <vc-spec>
  fn yarra(arr: &Vec<char>) -> (outarr: Vec<char>)
      requires arr.len() > 0
      ensures outarr.len() == arr.len() && reversed(arr@, outarr@)
  // </vc-spec>

vc-code: |-
  // <vc-code>
  {
      assume(false);
      Vec::new()
  }
  // </vc-code>

vc-postamble: |-
  fn main() {
  }
  
  }

