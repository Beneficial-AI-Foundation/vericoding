vc-description: |-

vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {
  
  spec fn min(a: int, b: int) -> int 
  {
      if a < b { a } else { b }
  }
  
  spec fn min_function(a: int, b: int) -> int 
  {
      if a < b { a } else { b }
  }

vc-helpers: |-
  // <vc-helpers>
  // </vc-helpers>

vc-spec: |-
  // <vc-spec>
  fn min_array(a: &Vec<i32>) -> (m: i32)
      requires a.len() > 0
      ensures forall|k: int| 0 <= k < a.len() ==> m <= a[k]
      ensures exists|k: int| 0 <= k < a.len() && m == a[k]
  // </vc-spec>

vc-code: |-
  // <vc-code>
  {
    assume(false);
    0
  }
  // </vc-code>

vc-postamble: |-
  
  fn main() {
  }
  
  }

