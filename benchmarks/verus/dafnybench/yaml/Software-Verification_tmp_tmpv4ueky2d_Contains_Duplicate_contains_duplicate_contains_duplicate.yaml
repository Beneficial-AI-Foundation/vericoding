vc-description: |-

vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {
  
  spec fn distinct(nums: Seq<int>) -> bool {
      forall|i: int, j: int| 0 <= i < j < nums.len() ==> nums[i] != nums[j]
  }

vc-helpers: |-

vc-spec: |-
  fn contains_duplicate(nums: Vec<i8>) -> (result: bool)
      requires
          1 <= nums@.len() <= 100000,
          forall|i: int| 0 <= i < nums@.len() ==> #[trigger] nums@[i] as int >= -1000000000 && nums@[i] as int <= 1000000000,
      ensures
          result <==> distinct(nums@.map(|_index, x: i8| x as int)),

vc-code: |-
  {
      assume(false);
      unreached()
  }

vc-postamble: |-
  }
  fn main() {}