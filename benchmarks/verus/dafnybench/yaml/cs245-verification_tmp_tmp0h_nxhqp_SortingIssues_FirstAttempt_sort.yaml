vc-description: |-
  // Sorting: 
  
  //        Pre/Post Condition Issues - An investigation 
  
  //                                      -- Stephanie McIntyre
  
  // Based on examples in class 
  
  // First Attempt at specifying requirements for sorting array A in incrementing order
  
  // We want our Hoare triple of (|Pre-Condition|) Code (|Post-Condition|) to hold iff A is properly sorted.
  
  // This is always true for usize, but kept for consistency
  
  // This states that A is sorted.
  
  //Can we write code that does not sort A that still satisfies the requirements? 
  
  //Consider the following program:

vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-

vc-spec: |-
  fn sort(A: &mut Vec<i8>, n: usize)
      requires 
          n == old(A).len(),
          n >= 0,
      ensures
          forall|i: int, j: int| 0 <= i <= j < n ==> A[i] as int <= A[j] as int,

vc-code: |-
  {
      assume(false);
      unreached()
  }

vc-postamble: |-
  }
  fn main() {}