vc-description: |-

vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {
  
  // Author of question: Snorri Agnarsson
  // Permalink of question: https://rise4fun.com/Dafny/0HRr
  
  // Author of solution:    Alexander Gu√∞mundsson
  // Permalink of solution: https://rise4fun.com/Dafny/8pxWd
  
  // Use the command
  //   verus LinearSearch-skeleton.rs
  // to compile the file.
  
  // When you have solved the problem put
  // the solution on the Verus web page,
  // generate a permalink and put it in
  // this file.

vc-helpers: |-

vc-spec: |-
  fn search_recursive(a: Seq<int>, i: usize, j: usize, x: int) -> (result: isize)
      requires 
          i <= j,
          j <= a.len(),
      ensures
          (i <= result && result < j as isize) || result == -1,
          result != -1 ==> a[result as int] == x,
          result != -1 ==> forall|r: int| result < r && r < j as int ==> a[r] != x,
          result == -1 ==> forall|r: int| i as int <= r && r < j as int ==> a[r] != x,
      decreases j - i,

vc-code: |-
  {
      assume(false);
      unreached();
  }

vc-postamble: |-
  fn main() {}
  
  }

