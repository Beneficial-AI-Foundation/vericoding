vc-description: |-

vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {
  
  spec fn abs(x: int) -> int {
      if x < 0 { -x } else { x }
  }

vc-helpers: |-
  // <vc-helpers>
  // </vc-helpers>

vc-spec: |-
  // <vc-spec>
  fn has_close_elements(numbers: Seq<int>, threshold: int) -> (result: bool)
      ensures
          result <==> exists|i: int, j: int|
              0 <= i < numbers.len() &&
              0 <= j < numbers.len() &&
              i != j &&
              abs(numbers[i] - numbers[j]) < threshold,
          result ==> numbers.len() > 1,
  // </vc-spec>

vc-code: |-
  // <vc-code>
  {
      assume(false);
      false
  }
  // </vc-code>

vc-postamble: |-
  fn main() {}
  
  }

