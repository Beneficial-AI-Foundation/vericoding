vc-description: |-

vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-

vc-spec: |-
  fn find_median(a: &[i8], b: &[i8]) -> (median: i8)
      requires 
          a.len() == b.len(),
          a.len() > 0,
          forall|i: int| #[trigger] a[i] == a[i] ==> (0 <= i < (a.len() - 1) as int ==> a[i] as int <= a[add(i, 1)] as int),
          forall|i: int| #[trigger] b[i] == b[i] ==> (0 <= i < (b.len() - 1) as int ==> b[i] as int <= b[add(i, 1)] as int),
      ensures 
          median as int == if a.len() % 2 == 0 { 
              (a[(a.len() / 2 - 1) as int] as int + b[0int] as int) / 2 
          } else { 
              a[(a.len() / 2) as int] as int
          }

vc-code: |-
  {
      assume(false);
      unreached()
  }

vc-postamble: |-
  }
  fn main() {}