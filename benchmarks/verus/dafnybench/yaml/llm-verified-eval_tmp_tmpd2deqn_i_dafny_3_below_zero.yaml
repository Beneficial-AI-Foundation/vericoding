vc-preamble: |-
  use vstd::prelude::*;

  verus! {

  spec fn sum(s: Seq<int>, n: nat) -> int
      recommends n <= s.len()
      decreases n
  {
      if s.len() == 0 || n == 0 {
          0
      } else {
          s[0] + sum(s.subrange(1, s.len() as int), (n - 1) as nat)
      }
  }

vc-helpers: |-
  // <vc-helpers>
  // </vc-helpers>

vc-spec: |-
  // <vc-spec>
  fn below_zero(ops: Seq<int>) -> (result: bool)
      ensures result <==> exists|n: nat| n <= ops.len() && sum(ops, n) < 0
  // </vc-spec>

vc-code: |-
  // <vc-code>
  {
    assume(false);
    false
  }
  // </vc-code>

vc-postamble: |-
  fn main() {
  }

  }