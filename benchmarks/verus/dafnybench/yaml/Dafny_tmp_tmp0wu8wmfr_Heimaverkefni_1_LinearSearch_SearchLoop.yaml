vc-description: |-
  // Author of question: Snorri Agnarsson
  
  // Permalink of question: https://rise4fun.com/Dafny/0HRr
  
  // Author of solution:    Alexander Gu√∞mundsson
  
  // Permalink of solution: https://rise4fun.com/Dafny/8pxWd
  
  // Use the command
  
  //   verus LinearSearch-skeleton.rs
  
  // to verify the file.
  
  // When you have solved the problem put
  
  // the solution on the Verus web page,
  
  // generate a permalink and put it in
  
  // this file.

vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {

vc-helpers: |-

vc-spec: |-
  fn search_loop(a: &Vec<i8>, i: usize, j: usize, x: i8) -> (k: i8)
      requires 
          i <= j <= a.len(),
      ensures 
          (i <= (k as int) < j) || k == -1,
          k != -1 ==> 0 <= (k as int) < a.len() && a[k as int] == x,
          k != -1 ==> forall|r: int| (k as int) < r < j && 0 <= r < a.len() ==> a[r] != x,
          k == -1 ==> forall|r: int| (i as int) <= r < (j as int) && 0 <= r < a.len() ==> a[r] != x,

vc-code: |-
  {
      assume(false);
      unreached()
  }

vc-postamble: |-
  }
  fn main() {}