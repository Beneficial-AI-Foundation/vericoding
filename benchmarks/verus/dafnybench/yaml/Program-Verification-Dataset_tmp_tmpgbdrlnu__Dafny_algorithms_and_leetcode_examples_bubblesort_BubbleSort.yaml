vc-description: |-

vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {
  
  //https://stackoverflow.com/questions/69364687/how-to-prove-time-complexity-of-bubble-sort-using-dafny
  spec fn n_choose_2(n: int) -> int
  {
      n * (n - 1) / 2
  }
  
  // sum of all integers in the range [lo, hi)
  // (inclusive of lo, exclusive of hi)
  spec fn sum_range(lo: int, hi: int) -> int
      decreases hi - lo
  {
      if lo >= hi { 0 }
      else { sum_range(lo, hi - 1) + hi - 1 }
  }
  
  // dafny proves this automatically by induction

vc-helpers: |-

vc-spec: |-
  fn bubble_sort(a: &mut Vec<i32>) -> (n: usize) 
      ensures n <= n_choose_2(a.len() as int) as usize

vc-code: |-
  {
      assume(false);
      0
  }

vc-postamble: |-
  fn main() {
  }
  
  }

