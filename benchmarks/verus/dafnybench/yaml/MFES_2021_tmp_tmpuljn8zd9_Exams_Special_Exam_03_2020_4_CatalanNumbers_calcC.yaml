vc-description: |-

vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {
  
  spec fn C(n: nat) -> nat
      decreases n
  {
      if n == 0 { 
          1nat 
      } else { 
          ((4 * (n as int) - 2) * (C((n - 1) as nat) as int) / ((n as int) + 1)) as nat
      }
  }

vc-helpers: |-
  // <vc-helpers>
  // </vc-helpers>

vc-spec: |-
  // <vc-spec>
  fn calcC(n: u64) -> (res: u64)
      ensures res == C(n as nat),
  // </vc-spec>

vc-code: |-
  // <vc-code>
  {
      assume(false);
      0  // Need to return a value
  }
  // </vc-code>

vc-postamble: |-
  fn main() {}
  
  }

