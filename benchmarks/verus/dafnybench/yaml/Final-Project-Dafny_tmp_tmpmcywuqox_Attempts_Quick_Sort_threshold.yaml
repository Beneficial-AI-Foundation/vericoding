vc-description: |-

vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {
  
  spec fn quick_sorted(seq: Seq<int>) -> bool {
      forall|idx_1: int, idx_2: int| 0 <= idx_1 < idx_2 < seq.len() ==> seq[idx_1] <= seq[idx_2]
  }

vc-helpers: |-

vc-spec: |-
  fn threshold(thres: i8, seq: Vec<i8>) -> (ret: (Vec<i8>, Vec<i8>))
      ensures 
          (forall|x: i8| ret.0@.contains(x) ==> x as int <= thres as int) &&
          (forall|x: i8| ret.1@.contains(x) ==> x as int >= thres as int) &&
          ret.0@.len() + ret.1@.len() == seq@.len() &&
          ret.0@.to_multiset().add(ret.1@.to_multiset()) == seq@.to_multiset()

vc-code: |-
  {
      assume(false);
      unreached()
  }

vc-postamble: |-
  }
  fn main() {}