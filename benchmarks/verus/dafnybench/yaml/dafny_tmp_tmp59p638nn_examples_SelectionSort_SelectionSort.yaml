vc-description: |-

vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {
  
  spec fn ordered(a: Seq<int>, left: int, right: int) -> bool {
      &&& 0 <= left <= right <= a.len()
      &&& forall |i: int| #![trigger a[i]] left < i < right ==> a[i-1] <= a[i]
  }

vc-helpers: |-

vc-spec: |-
  fn selection_sort(a: &mut Vec<i8>)
      ensures 
          ordered(a@.map(|i: int, x: i8| x as int), 0, a.len() as int),
          a.len() == old(a).len(),
          a@.map(|i: int, x: i8| x as int).to_multiset() =~= old(a)@.map(|i: int, x: i8| x as int).to_multiset(),

vc-code: |-
  {
      assume(false);
      unreached()
  }

vc-postamble: |-
  }
  fn main() {}