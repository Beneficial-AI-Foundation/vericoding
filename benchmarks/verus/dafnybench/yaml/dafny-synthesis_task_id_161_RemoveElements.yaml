vc-description: |-
  // Predicate to check if an element exists in an array
  
  // All elements in the output are in a and not in b
  
  // The elements in the output are all different

vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {
  
  spec fn in_array(a: &[i32], x: i32) -> bool {
      exists|i: int| 0 <= i < a.len() && a@.index(i) == x
  }

vc-helpers: |-

vc-spec: |-
  fn remove_elements(a: &[i32], b: &[i32]) -> (result: Vec<i32>)
  
      ensures 
          forall|x: i32| result@.contains(x) ==> in_array(a, x) && !in_array(b, x),
  
          forall|i: int, j: int| 0 <= i < j < result.len() ==> result@.index(i) != result@.index(j)

vc-code: |-
  {
      assume(false);
      unreached()
  }

vc-postamble: |-
  }
  fn main() {}