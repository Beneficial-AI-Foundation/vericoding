vc-description: |-

vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {
  
  spec fn power(base: int, exponent: int) -> int
      recommends exponent >= 0
      decreases exponent
  {
      if exponent <= 0 { 1 } else { base * power(base, exponent - 1) }
  }

vc-helpers: |-

vc-spec: |-
  fn power_of_list_elements(l: Vec<i32>, n: u32) -> (result: Vec<i32>)
      ensures 
          result.len() == l.len(),
          forall|i: int| #![auto] 0 <= i < l.len() ==> result[i] == power(l[i] as int, n as int),

vc-code: |-
  {
      assume(false);
      Vec::new()
  }

vc-postamble: |-
  fn main() {}
  
  }

