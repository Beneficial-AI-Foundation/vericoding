vc-preamble: |-
  use vstd::prelude::*;
  
  verus! {
  
  #[derive(PartialEq, Eq, Clone, Copy)]
  enum Color {
      Red,
      White,
      Blue,
  }
  
  spec fn below(c: Color, d: Color) -> bool {
      c == Color::Red || c == d || d == Color::Blue
  }

vc-helpers: |-
  // <vc-helpers>
  // </vc-helpers>

vc-spec: |-
  // <vc-spec>
  fn dutch_flag(a: &mut Vec<Color>)
      ensures 
          forall|i: int, j: int| 0 <= i < j < a.len() ==> below(a[i], a[j]),
          a@.to_multiset() == old(a)@.to_multiset(),
  // </vc-spec>

vc-code: |-
  // <vc-code>
  {
      assume(false);
  }
  // </vc-code>

vc-postamble: |-
  fn main() {}
  
  }