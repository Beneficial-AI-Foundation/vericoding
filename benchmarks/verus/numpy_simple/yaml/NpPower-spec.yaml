vc-description: |

vc-preamble: |-
  use vstd::prelude::*;

  verus! {
  spec fn int_pow(base: int, exp: nat) -> int
      decreases exp
  {
      if exp == 0 {
          1
      } else {
          base * int_pow(base, (exp - 1) as nat)
      }
  }

vc-helpers: |

vc-spec: |-
  fn power(a: Vec<i32>, b: Vec<u32>) -> (result: Vec<i32>)
      requires a.len() == b.len(),
      ensures 
          result.len() == a.len(),
          forall|i: int| 0 <= i < a.len() ==> result[i] == int_pow(a[i] as int, b[i] as nat),

vc-code: |-
  {
      // impl-start
      assume(false);
      unreached()
      // impl-end
  }

vc-postamble: |2-

  }
  fn main() {}
