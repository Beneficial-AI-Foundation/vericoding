vc-description: |-

vc-preamble: |-
  @[reducible, simp]
  def cubes_precond (len : Nat) : Prop := True

vc-helpers: |-

vc-definitions: |-
  def cubes (len : Nat) (h_precond : cubes_precond len) : Array Int :=
    sorry

vc-theorems: |-
  @[reducible, simp]
  def cubes_postcond (len : Nat) (result : Array Int) (h_precond : cubes_precond len) : Prop :=
    result.size = len ∧ (∀ i : Nat, i < len → result[i]! = i * i * i)
  
  theorem cubes_spec_satisfied (len : Nat) (h_precond : cubes_precond len) :
      cubes_postcond len (cubes len h_precond) h_precond := by
    sorry

vc-postamble: |-
  def main : IO Unit := pure ()

