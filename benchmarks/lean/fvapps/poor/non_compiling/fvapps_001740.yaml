vc-description: |-
  /-
  Implementing the class MajorityChecker, which has the following API:
  
  MajorityChecker(int[] arr) constructs an instance of MajorityChecker with the given array arr;
  int query(int left, int right, int threshold) has arguments such that:
  
  0 <= left <= right < arr.length representing a subarray of arr;
  2 * threshold > right - left + 1, ie. the threshold is always a strict majority of the length of the subarray
  
  Each query(...) returns the element in arr[left], arr[left+1], ..., arr[right] that occurs at least threshold times, or -1 if no such element exists.
  
  Example:
  MajorityChecker majorityChecker = new MajorityChecker([1,1,2,2,1,1]);
  majorityChecker.query(0,5,4); // returns 1
  majorityChecker.query(0,3,3); // returns -1
  majorityChecker.query(2,3,2); // returns 2
  
  Constraints:
  
  1 <= arr.length <= 20000
  1 <= arr[i] <= 20000
  For each query, 0 <= left <= right < len(arr)
  For each query, 2 * threshold > right - left + 1
  The number of queries is at most 10000
  -/

vc-preamble: |-

vc-helpers: |-

vc-definitions: |-
  def MajorityChecker.query (checker : MajorityChecker) (left right threshold : Nat) : Int :=
    sorry

vc-theorems: |-
  theorem queries_within_array_bounds 
    (arr : IntArray) 
    (left right threshold : Nat)
    (checker : MajorityChecker)
    (h1 : checker.arr = arr)
    (h2 : left ≤ right)
    (h3 : right < arr.length)
    (result : Int)
    (h4 : result = checker.query left right threshold)
    (h5 : result ≠ -1) :
    (List.countP (fun x => x = result) (List.take (right - left + 1) (List.drop left arr))) ≥ threshold := 
    sorry
  
  theorem monotonic_threshold 
    (arr : IntArray)
    (left right threshold1 threshold2 : Nat) 
    (checker : MajorityChecker)
    (h1 : checker.arr = arr)
    (h2 : left ≤ right)
    (h3 : right < arr.length)
    (h4 : threshold1 ≤ threshold2)
    (h5 : threshold2 ≤ right - left + 1)
    (result2 : Int)
    (h6 : result2 = checker.query left right threshold2)
    (h7 : result2 ≠ -1) :
    ∃ result1, 
      result1 = checker.query left right threshold1 ∧
      result1 ≠ -1 := 
    sorry

vc-postamble: |-
  -- Apps difficulty: interview
  -- Assurance level: unguarded

