vc-description: |-
  /-
  Given a binary string s and an integer k.
  Return True if every binary code of length k is a substring of s. Otherwise, return False.
  
  Example 1:
  Input: s = "00110110", k = 2
  Output: true
  Explanation: The binary codes of length 2 are "00", "01", "10" and "11". They can be all found as substrings at indicies 0, 1, 3 and 2 respectively.
  
  Example 2:
  Input: s = "00110", k = 2
  Output: true
  
  Example 3:
  Input: s = "0110", k = 1
  Output: true
  Explanation: The binary codes of length 1 are "0" and "1", it is clear that both exist as a substring. 
  
  Example 4:
  Input: s = "0110", k = 2
  Output: false
  Explanation: The binary code "00" is of length 2 and doesn't exist in the array.
  
  Example 5:
  Input: s = "0000000001011100", k = 4
  Output: false
  
  Constraints:
  
  1 <= s.length <= 5 * 10^5
  s consists of 0's and 1's only.
  1 <= k <= 20
  -/

vc-preamble: |-

vc-helpers: |-

vc-definitions: |-
  def has_all_codes (s : String) (k : Nat) : Bool := sorry
  
  theorem empty_string_always_false {k : Nat} (h : k ≥ 1) :
    has_all_codes "" k = false := sorry

vc-theorems: |-
  theorem binary_sequence_length_requirement {k : Nat} (h : k ≥ 1) (h2 : k ≤ 4) :
    ∀ s, s.length < 2^k + k - 1 → has_all_codes s k = false := sorry 
  
  theorem has_all_codes_returns_bool (s : String) (k : Nat) (h : k ≥ 1) :
    has_all_codes s k = true ∨ has_all_codes s k = false := sorry
  
  theorem complete_sequence_true {k : Nat} (h : k ≥ 1) (h2 : k ≤ 4) :
    let seq := String.mk (List.join (List.map (fun i => (toString i).data) (List.range (2^k))))
    has_all_codes (seq ++ (seq.take (k-1))) k = true := sorry
  
  theorem substring_property (s : String) (k : Nat) (h : k ≥ 1) :
    has_all_codes s k = true →
    (has_all_codes (s ++ "0") k = true ∧ has_all_codes ("0" ++ s) k = true) := sorry
  
  /-
  info: True
  -/
  -- #guard_msgs in
  -- #eval has_all_codes "00110110" 2
  
  /-
  info: False
  -/
  -- #guard_msgs in
  -- #eval has_all_codes "0110" 2
  
  /-
  info: True
  -/
  -- #guard_msgs in
  -- #eval has_all_codes "0110" 1

vc-postamble: |-
  -- Apps difficulty: interview
  -- Assurance level: unguarded

