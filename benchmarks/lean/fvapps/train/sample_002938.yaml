"vc-description": "The local transport authority is organizing an online picture contest.\n\
  Participants must take pictures of transport means in an original way, and then\
  \ post the picture on Instagram using a specific ```hashtag```.\n\nThe local transport\
  \ authority needs your help. They want you to take out the ```hashtag``` from the\
  \ posted message. Your task is to implement the function\n\n```python\ndef omit_hashtag(message,\
  \ hashtag):\n```\n\n## Examples \n\n```\n* (\"Sunny day! #lta #vvv\", \"#lta\")\
  \ -> \"Sunny day!  #vvv\" (notice the double space)\n* (\"#lta #picture_contest\"\
  , \"#lta\") -> \" #picture_contest\"\n```\n\n## Notes\n\n* When multiple occurences\
  \ of the hashtag are found, delete only the first one.\n\n* In C, you should modify\
  \ the ```message```, as the function returns a void type. In Python, you should\
  \ return the answer.\n\n* There can be erroneous messages where the hashtag isn't\
  \ present. The message should in this case stay untouched.\n\n* The hashtag only\
  \ consists of alphanumeric characters."
"vc-preamble": "import Imports.AllImports\n\ndef omit_hashtag (message : String) (hashtag\
  \ : String) : String := sorry \n\ndef String.count (s t : String) : Nat := sorry\
  \ \n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def String.containsSubstring (s t : String) : Bool := sorry\n\n\
  theorem omit_hashtag_length (message hashtag : String) : \n  String.length (omit_hashtag\
  \ message hashtag) ≤ String.length message := sorry\n"
"vc-theorems": "theorem omit_hashtag_unchanged (message hashtag : String) : \n  ¬(String.containsSubstring\
  \ message hashtag) → omit_hashtag message hashtag = message := sorry\n\n\ntheorem\
  \ omit_hashtag_count (message hashtag : String) (h1 : hashtag ≠ \"\") \n  (h2 :\
  \ String.count message hashtag > 1) : \n  String.count (omit_hashtag message hashtag)\
  \ hashtag = String.count message hashtag - 1 := sorry\n\n\ntheorem omit_empty_hashtag\
  \ (message : String) : \n  omit_hashtag message \"\" = message := sorry\n\n\ntheorem\
  \ omit_from_empty_message (hashtag : String) (h1 : hashtag ≠ \"\") : \n  omit_hashtag\
  \ \"\" hashtag = \"\" := sorry\n\n\ntheorem omit_hashtag_not_found (message hashtag\
  \ : String) \n  (h1 : message ≠ \"\") (h2 : hashtag ≠ \"\") :\n  ¬(String.containsSubstring\
  \ message hashtag) → omit_hashtag message hashtag = message := sorry\n\n/--\ninfo:\
  \ 'Sunny day!  #vvv'\n-/\n#guard_msgs in\n#eval omit_hashtag \"Sunny day! #lta #vvv\"\
  \ \"#lta\"\n\n/--\ninfo: ' #picture_contest'\n-/\n#guard_msgs in\n#eval omit_hashtag\
  \ \"#lta #picture_contest\" \"#lta\"\n\n/--\ninfo: ' #picture_contest #lta'\n-/\n\
  #guard_msgs in\n#eval omit_hashtag \"#lta #picture_contest #lta\" \"#lta\"\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
