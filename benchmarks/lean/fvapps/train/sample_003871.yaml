"vc-description": "A series or sequence of numbers is usually the product of a function\
  \ and can either be infinite or finite.\n\nIn this kata we will only consider finite\
  \ series and you are required to return a code according to the type of sequence:\n\
  \n|Code|Type|Example|\n|-|-|-|\n|`0`|`unordered`|`[3,5,8,1,14,3]`|\n|`1`|`strictly\
  \ increasing`|`[3,5,8,9,14,23]`|\n|`2`|`not decreasing`|`[3,5,8,8,14,14]`|\n|`3`|`strictly\
  \ decreasing`|`[14,9,8,5,3,1]`|\n|`4`|`not increasing`|`[14,14,8,8,5,3]`|\n|`5`|`constant`|`[8,8,8,8,8,8]`|\n\
  \nYou can expect all the inputs to be non-empty and completely numerical arrays/lists\
  \ - no need to validate the data; do not go for sloppy code, as rather large inputs\
  \ might be tested.\n\nTry to achieve a good solution that runs in linear time; also,\
  \ do it functionally, meaning you need to build a *pure* function or, in even poorer\
  \ words, do NOT modify the initial input!"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def sequence_classifier (arr : List Int) : Nat :=\n  sorry\n"
"vc-theorems": "theorem classifier_output_range {arr : List Int} (h : arr.length ≥\
  \ 2) :\n  let result := sequence_classifier arr\n  0 ≤ result ∧ result ≤ 5 :=\n\
  sorry\n\n\ntheorem constant_sequence {arr : List Int} (h : arr.length ≥ 2) :\n \
  \ let constant_arr := List.replicate arr.length (arr.get ⟨0, sorry⟩)\n  sequence_classifier\
  \ constant_arr = 5 :=\nsorry\n\n\n\n\n\n\ntheorem reverse_properties {arr : List\
  \ Int} (h : arr.length ≥ 2) :\n  let forward := sequence_classifier arr\n  let backward\
  \ := sequence_classifier arr.reverse\n  (forward = 1 → backward = 3) ∧\n  (forward\
  \ = 2 → backward = 4) ∧\n  (forward = 5 → backward = 5) :=\nsorry\n\n/--\ninfo:\
  \ 0\n-/\n#guard_msgs in\n#eval sequence_classifier [3, 5, 8, 1, 14, 3]\n\n/--\n\
  info: 1\n-/\n#guard_msgs in\n#eval sequence_classifier [3, 5, 8, 9, 14, 23]\n\n\
  /--\ninfo: 5\n-/\n#guard_msgs in\n#eval sequence_classifier [8, 8, 8, 8, 8, 8]\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded_and_plausible"
