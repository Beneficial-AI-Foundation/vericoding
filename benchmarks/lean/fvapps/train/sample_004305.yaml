"vc-description": "Let’s get to know our hero: Agent #134 - Mr. Slayer.\n\nHe was\
  \ sent by his CSV agency to Ancient Rome in order to resolve some important national\
  \ issues. However, something incredible has happened - the enemies have taken Julius\
  \ Caesar as a prisoner!!!\n\nCaesar, not a simple man as you know, managed to send\
  \ cryptic message with coordinates of his location hoping that somebody would break\
  \ the code. Here our agent of the secret service comes to the stage.\n\nBut he needs\
  \ your help!\n\n**Mission:**\n\nYou have to implement the function “Encode” of CaesarCrypto\
  \ class that codes or decodes text based on Caesar’s algorithm.the function receives\
  \ 2 parameters: an original text of any length of type “string” and a number of\
  \ type “int” that represents shifts;only letters in both cases must be encrypted;alphabet\
  \ contains only letters in this range: a-zA-Z;by encryption the letter can change\
  \ the case;shift could be either positive or negative (for left shift);If the input\
  \ text is empty, null or includes only whitespaces, return an empty string.\n\n\
  Time's ticking away. The life of Caesar is on the chopping block! Go for it!"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def caesar_crypto_encode (text : String) (shift : Int) : String\
  \ := sorry\n\ntheorem caesar_length_preservation (text : String) (shift : Int) :\n\
  \  String.length (caesar_crypto_encode text shift) ≤ String.length text := sorry\n"
"vc-theorems": "theorem caesar_length_strip (text : String) (shift : Int) :\n  String.length\
  \ (String.trim (caesar_crypto_encode text shift)) = String.length (caesar_crypto_encode\
  \ text shift) := sorry\n\n\ntheorem caesar_nonletters_preserved (text : String)\
  \ (shift : Int) (c : Char) :\n  ¬(c.isAlpha) ∧ c ≠ ' ' →\n  (String.contains (caesar_crypto_encode\
  \ text shift) c ↔ String.contains (String.trim text) c) := sorry\n\n\ntheorem caesar_shift_wrapping\
  \ (text : String) (shift : Int) :\n  caesar_crypto_encode text shift = caesar_crypto_encode\
  \ text (shift % 52) := sorry\n\n\ntheorem caesar_identity_shift (text : String)\
  \ :\n  caesar_crypto_encode text 0 = String.trim text ∨ text.all Char.isWhitespace\
  \ := sorry\n\n\ntheorem caesar_reverse_shift (text : String) (shift : Int) :\n \
  \ String.trim (caesar_crypto_encode (caesar_crypto_encode text shift) (-shift))\
  \ = String.trim text ∨ \n  text.all Char.isWhitespace := sorry\n\n\ntheorem caesar_empty_and_whitespace_1\
  \ :\n  caesar_crypto_encode \"\" 1 = \"\" := sorry\n\n\ntheorem caesar_empty_and_whitespace_2\
  \ :\n  caesar_crypto_encode \" \\t\\n\" 1 = \"\" := sorry\n\n/--\ninfo: 'eBIIL TLOIA!'\n\
  -/\n#guard_msgs in\n#eval caesar_crypto_encode \"Hello world!\" 127\n\n/--\ninfo:\
  \ ''\n-/\n#guard_msgs in\n#eval caesar_crypto_encode \"\" 10\n\n/--\ninfo: ''\n\
  -/\n#guard_msgs in\n#eval caesar_crypto_encode \"   \" 10\n\n/--\ninfo: 'Hello world!'\n\
  -/\n#guard_msgs in\n#eval caesar_crypto_encode \"Hello world!\" 0\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
