"vc-description": "There are 8 prison cells in a row, and each cell is either occupied\
  \ or vacant.\nEach day, whether the cell is occupied or vacant changes according\
  \ to the following rules:\n\nIf a cell has two adjacent neighbors that are both\
  \ occupied or both vacant, then the cell becomes occupied.\nOtherwise, it becomes\
  \ vacant.\n\n(Note that because the prison is a row, the first and the last cells\
  \ in the row can't have two adjacent neighbors.)\nWe describe the current state\
  \ of the prison in the following way: cells[i] == 1 if the i-th cell is occupied,\
  \ else cells[i] == 0.\nGiven the initial state of the prison, return the state of\
  \ the prison after N days (and N such changes described above.)\n \n\n\n\n\n\nExample\
  \ 1:\nInput: cells = [0,1,0,1,1,0,0,1], N = 7\nOutput: [0,0,1,1,0,0,0,0]\nExplanation:\
  \ \nThe following table summarizes the state of the prison on each day:\nDay 0:\
  \ [0, 1, 0, 1, 1, 0, 0, 1]\nDay 1: [0, 1, 1, 0, 0, 0, 0, 0]\nDay 2: [0, 0, 0, 0,\
  \ 1, 1, 1, 0]\nDay 3: [0, 1, 1, 0, 0, 1, 0, 0]\nDay 4: [0, 0, 0, 0, 0, 1, 0, 0]\n\
  Day 5: [0, 1, 1, 1, 0, 1, 0, 0]\nDay 6: [0, 0, 1, 0, 1, 1, 0, 0]\nDay 7: [0, 0,\
  \ 1, 1, 0, 0, 0, 0]\n\n\n\nExample 2:\nInput: cells = [1,0,0,1,0,0,1,0], N = 1000000000\n\
  Output: [0,0,1,1,1,1,1,0]\n\n \nNote:\n\ncells.length == 8\ncells[i] is in {0, 1}\n\
  1 <= N <= 10^9"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def prisonAfterNDays (cells : List Nat) (n : Nat) : List Nat :=\n\
  \  sorry\n"
"vc-theorems": "theorem prison_result_format \n  (cells : List Nat) (n : Nat) \n \
  \ (h1 : cells.length = 8)\n  (h2 : ∀ x ∈ cells, x = 0 ∨ x = 1) :\n  let result :=\
  \ prisonAfterNDays cells n\n  (result.length = 8) ∧ \n  (∀ x ∈ result, x = 0 ∨ x\
  \ = 1) :=\nsorry\n\n\ntheorem prison_endpoint_cells\n  (cells : List Nat)\n  (h1\
  \ : cells.length = 8)\n  (h2 : ∀ x ∈ cells, x = 0 ∨ x = 1) :\n  let result := prisonAfterNDays\
  \ cells 1\n  result.get ⟨0, sorry⟩ = 0 ∧ \n  result.get ⟨7, sorry⟩ = 0 :=\nsorry"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded"
