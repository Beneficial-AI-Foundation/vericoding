"vc-description": "_Based on [Project Euler problem 35](https://projecteuler.net/problem=35)_\n\
  \nA circular prime is a prime in which every circular permutation of that number\
  \ is also prime. Circular permutations are created by rotating the digits of the\
  \ number, for example: `197, 971, 719`. One-digit primes are circular primes by\
  \ definition.\n\nComplete the function that dertermines if a number is a circular\
  \ prime.\n\nThere are 100 random tests for numbers up to 10000."
"vc-preamble": "import Imports.AllImports\n\ndef sqrt (n : Nat) : Nat :=\n  sorry\n\
  \n\ndef circular_permutations (n : Nat) : List Nat :=\n  sorry\n\n\ndef is_prime\
  \ (n : Nat) : Bool :=\n  sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def circular_prime (n : Nat) : Bool :=\n  sorry\n"
"vc-theorems": "theorem circular_perms_length (n : Nat) (h : n > 0) : \n  List.length\
  \ (circular_permutations n) = String.length (toString n) :=\n  sorry\n\n\ntheorem\
  \ circular_perms_digit_count (n : Nat) (h : n > 0) :\n  ∀ p ∈ circular_permutations\
  \ n, \n    List.length (toString p).data = List.length (toString n).data :=\n  sorry\n\
  \n\ntheorem prime_basic_properties (n : Nat) :\n  is_prime n = true → \n    (n >\
  \ 1 ∧ \n     ∀ i, 2 ≤ i → i ≤ sqrt n → n % i ≠ 0) :=\n  sorry\n\n\ntheorem circular_prime_properties\
  \ (n : Nat) :\n  circular_prime n = true →\n    ∀ x ∈ circular_permutations n, is_prime\
  \ x = true :=\n  sorry\n\n\ntheorem circular_prime_symmetry (n : Nat) :\n  circular_prime\
  \ n = true →\n    ∀ p ∈ circular_permutations n, circular_prime p = true :=\n  sorry\n\
  \n/--\ninfo: True\n-/\n#guard_msgs in\n#eval circular_prime 197\n\n/--\ninfo: False\n\
  -/\n#guard_msgs in\n#eval circular_prime 179\n\n/--\ninfo: True\n-/\n#guard_msgs\
  \ in\n#eval circular_prime 7\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
