"vc-description": "Its Christmas time and Santa has started his ride to deliver gifts\
  \ to children waiting for him in a 1-dimentional city. All houses in this city are\
  \ on a number line numbered as 1, 2, 3… and so on. Santa wants to deliver to houses\
  \ from n to m, but he found that all the kids living at positions that are divisible\
  \ by a, a+d, a+2d, a+3d or a+4d are naughty and he does not want to deliver them\
  \ any gifts. Santa wants to know how many gifts he has to carry before leaving to\
  \ the city given that there is only one kid in a house. Help him out!\nFormally,\
  \ Given $m, n, a, d \\in \\mathbb{N}$ where $n < m$, find the number of $x \\in\
  \ \\{n, n+1, ..., m-1, m\\}$ such that $x$ is not divisible by $a$, $a+d$, $a+2d$,\
  \ $a+3d$ or $a+4d$\n\n-----Input-----\nThe first line is the number $t$, corresponding\
  \ to number of test cases\\\nThis is followed by $t$ lines of the format: $n$ $m$\
  \ $a$ $d$\n\n-----Output-----\nFor each test case, print a single number that is\
  \ the number of gifts Santa should pack.\n\n-----Constraints-----\n- $1 < m, n,\
  \ a \\leq 2^{32}$\n- $1 < d \\leq 2^{10}$\n\n-----Sample Input:-----\n1\n2 20 2\
  \ 1\n\n-----Sample Output:-----\n5\n\n-----Explanation:-----\nIn the range {2, 3,\
  \ 4, …, 19, 20}, only {7, 11, 13, 17, 19} are not divisible by 2, 3, 4, 5, or 6"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def count_santa_gifts (n m a d : Nat) : Nat :=\nsorry\n"
"vc-theorems": "theorem range_validity (n m a d : Nat) (h₁ : n > 0) (h₂ : m > 0) (h₃\
  \ : a > 0) (h₄ : d > 0) \n  (h₅ : n ≤ m) :\n  let result := count_santa_gifts n\
  \ m a d\n  result ≥ 0 ∧ result ≤ m - n + 1 :=\nsorry\n\n\ntheorem monotonicity (n\
  \ m a d : Nat) (h₁ : n > 0) (h₂ : m > 0) (h₃ : a > 0) (h₄ : d > 0)\n  (h₅ : n ≤\
  \ m) :\n  count_santa_gifts n m a d ≤ count_santa_gifts n (m+1) a d :=\nsorry\n\n\
  \ntheorem single_number (n a d : Nat) (h₁ : n > 0) (h₂ : a > 0) (h₃ : d > 0) :\n\
  \  let result := count_santa_gifts n n a d\n  result = 0 ∨ result = 1 :=\nsorry\n\
  \n/--\ninfo: 5\n-/\n#guard_msgs in\n#eval count_santa_gifts 2 20 2 1\n\n/--\ninfo:\
  \ 1\n-/\n#guard_msgs in\n#eval count_santa_gifts 1 5 2 1\n\n/--\ninfo: 1\n-/\n#guard_msgs\
  \ in\n#eval count_santa_gifts 3 7 2 1\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
