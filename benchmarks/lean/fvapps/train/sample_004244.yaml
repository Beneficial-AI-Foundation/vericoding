"vc-description": "Hello everyone.\n\nI have a simple challenge for you today. In\
  \ mathematics, the formula for finding the sum to infinity of a geometric sequence\
  \ is: \n\n\n\n**ONLY IF** `-1 < r < 1`\n\nwhere:\n\n* `a` is the first term of the\
  \ sequence\n* `r` is the common ratio of the sequence (calculated by dividing one\
  \ term in the sequence by the previous term)\n\nFor example: `1 + 0.5 + 0.25 + 0.125\
  \ + ... = 2`\n\nYour challenge is to calculate the sum to infinity of the given\
  \ sequence. The solution must be rounded to 3 decimal places.\n\nIf there are no\
  \ solutions, for example if `r` is out of the above boundaries, return `\"No Solutions\"\
  `.\n\nHope you enjoy, let me know of any issues or improvements!"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def sumToInfinity (sequence : List Float) : Option Float := sorry\n\
  \ntheorem geometric_sequence_properties {sequence : List Float}\n  (hlen : sequence.length\
  \ ≥ 4)\n  (hfirst : sequence.head! ≠ 0)\n  (hratio : ∀ i, i < sequence.length -\
  \ 1 →\n    (sequence.get! (i+1) / sequence.get! i).abs < 0.99) :\n  ∃ (result :\
  \ Float),\n    sumToInfinity sequence = some result ∧\n    ¬ result.isNaN := sorry\n"
"vc-theorems": "theorem invalid_ratio_no_solution {sequence : List Float}\n  (hlen\
  \ : sequence.length = 4)\n  (hfirst : sequence.head! ≠ 0)\n  (hratio : (sequence.get!\
  \ 1 / sequence.get! 0).abs ≥ 1) :\n  sumToInfinity sequence = none := sorry\n\n\n\
  theorem basic_convergence :\n  sumToInfinity [1, 0.5, 0.25, 0.125] = some 2.0 :=\
  \ sorry\n\n/--\ninfo: 2\n-/\n#guard_msgs in\n#eval sum_to_infinity [1, 0.5, 0.25,\
  \ 0.125]\n\n/--\ninfo: 416.667\n-/\n#guard_msgs in\n#eval sum_to_infinity [250,\
  \ 100, 40, 16]\n\n/--\ninfo: 26.25\n-/\n#guard_msgs in\n#eval sum_to_infinity [21,\
  \ 4.2, 0.84, 0.168]\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
