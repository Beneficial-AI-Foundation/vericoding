"vc-description": "Given an array of citations sorted in ascending order (each citation\
  \ is a non-negative integer) of a researcher, write a function to compute the researcher's\
  \ h-index.\n\nAccording to the definition of h-index on Wikipedia: \"A scientist\
  \ has index h if h of his/her N papers have at least h citations each, and the other N\
  \ − h papers have no more than h citations each.\"\n\nExample:\n\n\nInput: citations\
  \ = [0,1,3,5,6]\nOutput: 3 \nExplanation: [0,1,3,5,6] means the researcher has 5\
  \ papers in total and each of them had \n             received 0, 1, 3, 5, 6 citations\
  \ respectively. \n             Since the researcher has 3 papers with at least 3\
  \ citations each and the remaining \n             two with no more than 3 citations\
  \ each, her h-index is 3.\n\nNote:\n\nIf there are several possible values for h,\
  \ the maximum one is taken as the h-index.\n\nFollow up:\n\n\n       This is a follow\
  \ up problem to H-Index, where citations is now guaranteed to be sorted in ascending\
  \ order.\n       Could you solve it in logarithmic time complexity?"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def h_index (citations : List Nat) : Nat :=\n  sorry\n"
"vc-theorems": "theorem h_index_bounded_by_length {citations : List Nat} (h : citations\
  \ ≠ []) :\n  h_index citations ≤ citations.length :=\n  sorry\n\n\ntheorem h_index_nonnegative\
  \ (citations : List Nat) :\n  h_index citations ≥ 0 :=\n  sorry\n\n/--\ninfo: 3\n\
  -/\n#guard_msgs in\n#eval h_index [0, 1, 3, 5, 6]\n\n/--\ninfo: 0\n-/\n#guard_msgs\
  \ in\n#eval h_index [0]\n\n/--\ninfo: 3\n-/\n#guard_msgs in\n#eval h_index [5, 5,\
  \ 5]\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
