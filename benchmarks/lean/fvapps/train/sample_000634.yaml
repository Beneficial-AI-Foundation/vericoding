"vc-description": "You have a laser with P amount of energy in it. You are playing\
  \ a game where you have to use the laser to destroy some crystals, each with some\
  \ health of their own. Initially, you have 0 points.\nEach crystal has an associated\
  \ health. The health of the ith crystal is given by health[i]. You can perform one\
  \ of the two actions:\n- \nAt the cost of health[i] energy, you can destroy the\
  \ ith crystal and gain 1 point. You can only perform this action if your laser has\
  \ atleast health[i] energy in it.\n- \nAt the cost of 1 point, you can destroy the\
  \ ith crystal and refuel the laser's energy by an amount equal to health[i]. This\
  \ action can only be performed if you have atleast one point.\nNote: Each crystal\
  \ can only be destroyed once.\nDetermine the maximum number of points you can obtain\
  \ by destroying any number of crystals and performing either action as you wish.\n\
  \n-----Input:-----\n- First line will contain n, number of crystals. \n- Second\
  \ line will contain space separated integers, health of each crystal.\n- Third line\
  \ will contain an integer P, initial energy of the laser.\n\n-----Output:-----\n\
  Print the largest number of points we can have after destroying any number of crystals.\n\
  \n-----Constraints-----\n- health.length <= 1000\n- 0 <= health[i] < 10000\n- 0\
  \ <= P < 10000\n\n-----Subtasks-----\n- 40 points : 1 <= health.length <= 100\n\
  - 60 points : health.length > 100\n\n-----Sample Input 1:-----\n1\n200\n100\n\n\
  -----Sample Output 1:-----\n0\n\n-----Explanation:-----\nThe laser initially has\
  \ only 100 energy. Since the only crystal requires 200 energy to destroy, we cannot\
  \ perform any action here, and the game ends. The number of points is zero.\n\n\
  -----Sample Input 2:-----\n2\n100 200\n150\n\n-----Sample Output 2:-----\n1\n\n\
  -----Explanation:-----\nThe laser has 150 energy. We can consume 100 energy and\
  \ destroy the first crystal and gain 1 point. The remaining energy is 50, which\
  \ is not enough to destroy the other crystal. We end the game here as we have the\
  \ maximum possible points attainable."
"vc-preamble": "import Imports.AllImports\n\ndef game (n : Nat) (health : List Nat)\
  \ (laser_energy : Nat) : Nat :=\n  sorry\n\n\ndef listMin (l : List Nat) : Nat :=\n\
  \  sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def listSum (l : List Nat) : Nat :=\n  sorry\n"
"vc-theorems": "theorem game_result_non_negative (n : Nat) (health : List Nat) (laser_energy\
  \ : Nat) :\n  game n health laser_energy ≥ 0 := sorry\n\n\ntheorem game_result_bounded\
  \ (n : Nat) (health : List Nat) (laser_energy : Nat) :\n  game n health laser_energy\
  \ ≤ n := sorry\n\n\ntheorem game_empty_list (laser_energy : Nat) :\n  game 0 []\
  \ laser_energy = 0 := sorry \n\n\ntheorem game_zero_energy (n : Nat) (health : List\
  \ Nat) (h : health ≠ []) :\n  game n health 0 = 0 := sorry\n\n\ntheorem game_energy_threshold\
  \ (n : Nat) (health : List Nat) (laser_energy : Nat)\n  (h1 : health ≠ []) (h2 :\
  \ laser_energy < listMin health) :\n  game n health laser_energy = 0 := sorry\n\n\
  \ntheorem game_sufficient_energy (n : Nat) (health : List Nat) (h : health ≠ [])\
  \ :\n  game n health (2 * listSum health) = n := sorry"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
