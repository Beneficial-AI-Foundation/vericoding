"vc-description": "## Description\n\nWelcome, Warrior! In this kata, you will get\
  \ a message and you will need to get the frequency of each and every character!\n\
  \n## Explanation\n\nYour function will be called `char_freq`/`charFreq`/`CharFreq`\
  \ and you will get passed a string, you will then return a dictionary (object in\
  \ JavaScript) with as keys the characters, and as values how many times that character\
  \ is in the string. You can assume you will be given valid input. \n\n## Example\n\
  \n```python\nchar_freq(\"I like cats\") // Returns {'a': 1, ' ': 2, 'c': 1, 'e':\
  \ 1, 'I': 1, 'k': 1, 'l': 1, 'i': 1, 's': 1, 't': 1}\n```"
"vc-preamble": "import Imports.AllImports\n\ndef List.sum : List Nat → Nat\n  | []\
  \ => 0\n  | x::xs => x + sum xs\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def char_freq (s : String) : CharFreq := sorry\n\ntheorem char_freq_sum_equals_length\
  \ (s : String) :\n  let result := char_freq s\n  (List.map (fun c => (result.count\
  \ c)) s.data).sum = s.length := sorry\n"
"vc-theorems": "theorem char_freq_contains_all_chars (s : String) :\n  let result\
  \ := char_freq s\n  ∀ c, c ∈ s.data → result.count c > 0 := sorry\n\n\ntheorem char_freq_positive_counts\
  \ (s : String) :\n  let result := char_freq s\n  ∀ c, result.count c > 0 → c ∈ s.data\
  \ := sorry\n\n\ntheorem char_freq_accurate_counts (s : String) :\n  let result :=\
  \ char_freq s\n  ∀ c, (s.data.filter (λ x => x = c)).length = result.count c :=\
  \ sorry\n\n\ntheorem char_freq_max_exists (s : String) (h : s.length > 0) :\n  let\
  \ result := char_freq s\n  ∃ c ∈ s.data, ∀ d ∈ s.data, result.count c ≥ result.count\
  \ d := sorry\n\n\ntheorem char_freq_concatenation (s₁ s₂ : String) :\n  let result₁\
  \ := char_freq s₁\n  let result₂ := char_freq s₂\n  let result_combined := char_freq\
  \ (s₁ ++ s₂)\n  ∀ c, result_combined.count c = result₁.count c + result₂.count c\
  \ := sorry\n\n/--\ninfo: {'a': 1, ' ': 2, 'c': 1, 'e': 1, 'I': 1, 'k': 1, 'l': 1,\
  \ 'i': 1, 's': 1, 't': 1}\n-/\n#guard_msgs in\n#eval char_freq \"I like cats\"\n\
  \n/--\ninfo: {'H': 1, 'e': 1, 'l': 2, 'o': 1}\n-/\n#guard_msgs in\n#eval char_freq\
  \ \"Hello\"\n\n/--\ninfo: {'a': 3}\n-/\n#guard_msgs in\n#eval char_freq \"aaa\"\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
