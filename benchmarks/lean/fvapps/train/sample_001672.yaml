"vc-description": "### Please also check out other katas in [Domino Tiling series](https://www.codewars.com/collections/5d19554d13dba80026a74ff5)!\n\
  \n---\n\n# Task\n\nA domino is a rectangular block with `2` units wide and `1` unit\
  \ high. A domino can be placed on a grid in two ways: horizontal or vertical.\n\n\
  ```\n## or #\n      #\n```\n\nYou have infinitely many dominoes, and you want to\
  \ fill a board that is `2*N` units wide and `5` units high:\n\n```\n<---   2N  \
  \ --->\n################\n################\n################\n################\n\
  ################\n```\n\nThe task is to find **the number of ways** you can fill\
  \ the given grid with dominoes.\n\nSince the answer will be very large, please give\
  \ your answer **modulo 12345787**.\n\n# Examples\n\n```python\nfive_by_2n(1) ==\
  \ 8\nfive_by_2n(2) == 95\nfive_by_2n(3) == 1183\nfive_by_2n(5) == 185921\n\nfive_by_2n(10)\
  \ == 8228892\nfive_by_2n(20) == 9942990\nfive_by_2n(50) == 2308182\nfive_by_2n(100)\
  \ == 334896\n\nfive_by_2n(1000) == 6032838\nfive_by_2n(10000) == 2392948\n```\n\n\
  # Constraints\n\n`1 <= N <= 10000`\n\nAll inputs are valid integers.\n\n# Hint\n\
  \nThe reference solution uses eleven mutual recurrence equations."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def five_by_2n (n : Nat) : Nat :=\n  sorry\n"
"vc-theorems": "theorem five_by_2n_positive (n : Nat) : \n  n > 0 → five_by_2n n >\
  \ 0 :=\n  sorry\n\n\ntheorem five_by_2n_bounded (n : Nat) :\n  n > 0 → five_by_2n\
  \ n < 12345787 :=\n  sorry \n\n\ntheorem five_by_2n_deterministic (n : Nat) :\n\
  \  five_by_2n n = five_by_2n n :=\n  sorry\n\n\ntheorem five_by_2n_sequential (n\
  \ : Nat) :\n  n > 0 → True :=\n  sorry\n\n/--\ninfo: 8\n-/\n#guard_msgs in\n#eval\
  \ five_by_2n 1\n\n/--\ninfo: 95\n-/\n#guard_msgs in\n#eval five_by_2n 2\n\n/--\n\
  info: 1183\n-/\n#guard_msgs in\n#eval five_by_2n 3\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
