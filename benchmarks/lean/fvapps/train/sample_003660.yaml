"vc-description": "You're on your way to the market when you hear beautiful music\
  \ coming from a nearby street performer. The notes come together like you wouln't\
  \ believe as the musician puts together patterns of tunes. As you wonder what kind\
  \ of algorithm you could use to shift octaves by 8 pitches or something silly like\
  \ that, it dawns on you that you have been watching the musician for some 10 odd\
  \ minutes. You ask, \"How much do people normally tip for something like this?\"\
  \ The artist looks up. \"Its always gonna be about tree fiddy.\"\n\nIt was then\
  \ that you realize the musician was a 400 foot tall beast from the paleolithic era.\
  \ The Loch Ness Monster almost tricked you!\n\n\nThere are only 2 guaranteed ways\
  \ to tell if you are speaking to The Loch Ness Monster: A.) It is a 400 foot tall\
  \ beast from the paleolithic era B.) It will ask you for tree fiddy\n\nSince Nessie\
  \ is a master of disguise, the only way accurately tell is to look for the phrase\
  \ \"tree fiddy\". Since you are tired of being grifted by this monster, the time\
  \ has come to code a solution for finding The Loch Ness Monster.\nNote: It can also\
  \ be written as 3.50 or three fifty."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def is_lock_ness_monster : String → Bool := sorry\n\ntheorem is_lock_ness_monster_case_insensitive\
  \ (s : String) :\n  is_lock_ness_monster s = is_lock_ness_monster (s.toUpper) ∧\n\
  \  is_lock_ness_monster s = is_lock_ness_monster (s.toLower) :=\nsorry\n"
"vc-theorems": "theorem is_lock_ness_monster_contains_phrase (s : String) (phrase\
  \ : String) \n  (h : phrase = \"tree fiddy\" ∨ phrase = \"three fifty\" ∨ phrase\
  \ = \"3.50\") :\n  is_lock_ness_monster (s ++ phrase ++ s) = true :=\nsorry\n\n\n\
  theorem is_lock_ness_monster_no_substring (s : String) \n  (h : s.length > 0) :\n\
  \  (¬is_lock_ness_monster s) ↔ \n  (¬(s.data.asString.contains '3') ∧ \n   ¬(s.data.asString.contains\
  \ 't') ∧\n   ¬(s.data.asString.contains 'f')) :=\nsorry\n\n\ntheorem is_lock_ness_monster_empty\
  \ :\n  is_lock_ness_monster \"\" = false :=\nsorry\n\n\ntheorem is_lock_ness_monster_whitespace\
  \ (s : String)\n  (h : s = \" \" ∨ s = \"\\n\" ∨ s = \"\\t\") :\n  is_lock_ness_monster\
  \ s = false :=\nsorry\n\n/--\ninfo: True\n-/\n#guard_msgs in\n#eval is_lock_ness_monster\
  \ \"Your girlscout cookies are ready to ship. Your total comes to tree fiddy\"\n\
  \n/--\ninfo: False\n-/\n#guard_msgs in\n#eval is_lock_ness_monster \"Yo, I heard\
  \ you were on the lookout for Nessie. Let me know if you need assistance.\"\n\n\
  /--\ninfo: True\n-/\n#guard_msgs in\n#eval is_lock_ness_monster \"I\"m from Scottland.\
  \ I moved here to be with my family sir. Please, $3.50 would go a long way\"\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
