"vc-description": "Given an array of integers your solution should find the smallest\
  \ integer. \n\nFor example:\n\n- Given `[34, 15, 88, 2]` your solution will return\
  \ `2`\n- Given `[34, -345, -1, 100]` your solution will return `-345`\n\nYou can\
  \ assume, for the purpose of this kata, that the supplied array will not be empty."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def find_smallest_int (arr : List Int) : Int :=\nsorry\n"
"vc-theorems": "theorem find_smallest_int_membership \n  (arr : List Int)\n  (h :\
  \ arr ≠ []) :\n  find_smallest_int arr ∈ arr :=\nsorry\n\n\ntheorem find_smallest_int_is_minimum\n\
  \  (arr : List Int)\n  (h : arr ≠ []) :\n  ∀ x ∈ arr, find_smallest_int arr ≤ x\
  \ :=\nsorry\n\n/--\ninfo: 2\n-/\n#guard_msgs in\n#eval find_smallest_int [34, 15,\
  \ 88, 2]\n\n/--\ninfo: -345\n-/\n#guard_msgs in\n#eval find_smallest_int [34, -345,\
  \ -1, 100]\n\n/--\ninfo: -33\n-/\n#guard_msgs in\n#eval find_smallest_int [78, 56,\
  \ -2, 12, 8, -33]\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded_and_plausible"
