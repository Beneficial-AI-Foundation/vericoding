"vc-description": "##Task:\n\nYou have to write a function **pattern** which creates\
  \ the following pattern upto n number of rows. *If the Argument is 0 or a Negative\
  \ Integer then it should return \"\" i.e. empty string.*\n\n##Pattern:\n\n    (n)\n\
  \    (n)(n-1)\n    (n)(n-1)(n-2)\n    ................\n    .................\n\
  \    (n)(n-1)(n-2)....4\n    (n)(n-1)(n-2)....43\n    (n)(n-1)(n-2)....432\n   \
  \ (n)(n-1)(n-2)....4321\n    \n##Examples:\n\npattern(4):\n\n    4\n    43\n   \
  \ 432\n    4321\n    \npattern(6):\n \n    6\n    65\n    654\n    6543\n    65432\n\
  \    654321\n\n\n\n```Note: There are no blank spaces```\n\n```Hint: Use \\n in\
  \ string to jump to next line```"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def String.lines (s : String) : List String := sorry\ndef pattern\
  \ (n : Int) : String := sorry\n"
"vc-theorems": "theorem pattern_positive_input_line_count {n : Int} (h : n > 0) :\
  \ \n  (pattern n).lines.length = n := sorry\n\n\ntheorem pattern_negative_input_empty\
  \ {n : Int} (h : n ≤ 0) :\n  pattern n = \"\" := sorry\n\n\ntheorem pattern_each_line_starts_with_n\
  \ {n : Int} (h : n > 0) :\n  let lines := (pattern n).lines\n  ∀ line ∈ lines, line.get!\
  \ 0 = (Char.ofNat (n.toNat + 48)) := sorry\n\n\ntheorem pattern_last_line_is_descending\
  \ {n : Int} (h : n > 0) :\n  let lines := (pattern n).lines\n  let last := lines.getLast!\n\
  \  last = String.mk (List.range n.toNat |>.map (fun i => Char.ofNat (i + 49))) :=\
  \ sorry\n\n\ntheorem pattern_lines_start_with_same_digit {n : Int} (h : n > 0) :\n\
  \  let lines := (pattern n).lines\n  ∀ i : Nat, i + 1 < lines.length → \n    lines[i]!.get!\
  \ 0 = lines[i + 1]!.get! 0 := sorry\n\n/--\ninfo: '1'\n-/\n#guard_msgs in\n#eval\
  \ pattern 1\n\n/--\ninfo: '2\\n21'\n-/\n#guard_msgs in\n#eval pattern 2\n\n/--\n\
  info: expected\n-/\n#guard_msgs in\n#eval pattern 4\n\n/--\ninfo: ''\n-/\n#guard_msgs\
  \ in\n#eval pattern 0\n\n/--\ninfo: ''\n-/\n#guard_msgs in\n#eval pattern -1\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
