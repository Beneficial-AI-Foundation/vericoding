"vc-description": "In this kata you need to build a function to return either `true/True`\
  \ or `false/False` if a string can be seen as the repetition of a simpler/shorter\
  \ subpattern or not.\n\nFor example:\n\n```cpp,java\nhasSubpattern(\"a\") == false;\
  \ //no repeated pattern\nhasSubpattern(\"aaaa\") == true; //created repeating \"\
  a\"\nhasSubpattern(\"abcd\") == false; //no repeated pattern\nhasSubpattern(\"abababab\"\
  ) == true; //created repeating \"ab\"\nhasSubpattern(\"ababababa\") == false; //cannot\
  \ be entirely reproduced repeating a pattern\n```\n```python\nhas_subpattern(\"\
  a\") == False #no repeated pattern\nhas_subpattern(\"aaaa\") == True #created repeating\
  \ \"a\"\nhas_subpattern(\"abcd\") == False #no repeated pattern\nhas_subpattern(\"\
  abababab\") == True #created repeating \"ab\"\nhas_subpattern(\"ababababa\") ==\
  \ False #cannot be entirely reproduced repeating a pattern\n```\nStrings will never\
  \ be empty and can be composed of any character (just consider upper- and lowercase\
  \ letters as different entities) and can be pretty long (keep an eye on performances!).\n\
  \nIf you liked it, go for the [next kata](https://www.codewars.com/kata/string-subpattern-recognition-ii/)\
  \ of the series!"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def has_subpattern (s : String) : Bool := sorry\n\ntheorem single_char_no_pattern\
  \ (s : String) :\n  s.length = 1 → ¬(has_subpattern s) := sorry\n"
"vc-theorems": "theorem doubled_string_has_pattern (s : String) : \n  s.length > 0\
  \ → has_subpattern (s ++ s) := sorry\n\n\ntheorem pattern_preserved_by_repetition\
  \ (s : String) :\n  s.length > 0 → has_subpattern s → \n  (has_subpattern (s ++\
  \ s ++ s) ∧ has_subpattern (s ++ s ++ s ++ s)) := sorry\n\n\ntheorem pattern_length_divides_string_length\
  \ (s : String) :\n  s.length > 0 → has_subpattern s → \n  ∃ i : Nat, i > 0 ∧ i ≤\
  \ s.length ∧ s.length % i = 0 := sorry\n\n/--\ninfo: False\n-/\n#guard_msgs in\n\
  #eval has_subpattern \"a\"\n\n/--\ninfo: True\n-/\n#guard_msgs in\n#eval has_subpattern\
  \ \"aaaa\"\n\n/--\ninfo: True\n-/\n#guard_msgs in\n#eval has_subpattern \"abababab\"\
  \n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
