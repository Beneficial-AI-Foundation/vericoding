"vc-description": "This challenge extends the previous [repeater()](https://www.codewars.com/kata/thinkful-string-drills-repeater)\
  \ challenge. Just like last time, your job is to write a function that accepts a\
  \ string and a number as arguments. This time, however, you should format the string\
  \ you return like this:\n```python\n>>> repeater('yo', 3)\n'\"yo\" repeated 3 times\
  \ is: \"yoyoyo\"'\n>>> repeater('WuB', 6)\n'\"WuB\" repeated 6 times is: \"WuBWuBWuBWuBWuBWuB\"\
  '\n```"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def String.repeat (s : String) (n : Nat) : String := sorry\n\n\
  def repeater (s : String) (n : Nat) : String := sorry\n"
"vc-theorems": "theorem repeater_format_match (s : String) (n : Nat) (h : s.length\
  \ > 0) :\n  repeater s n = \"\\\"\" ++ s ++ \"\\\" repeated \" ++ toString n ++\
  \ \" times is: \\\"\" ++ (String.repeat s n) ++ \"\\\"\" := sorry\n\n\ntheorem repeater_length\
  \ (s : String) (n : Nat) (h : s.length > 0) :\n  (repeater s n).length = \n    s.length\
  \ * n + (\"\\\" repeated \" ++ toString n ++ \" times is: \\\"\\\"\").length :=\
  \ sorry\n\n\ntheorem repeater_zero_empty_result (s : String) :\n  âˆƒ (p : String),\
  \ repeater s 0 = p ++ \"\\\"\\\"\" := sorry"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded"
