"vc-description": "Given the values at the leaf nodes of a complete binary tree. The\
  \ total number of nodes in the binary tree, is also given. Sum of the values at\
  \ both the children of a node is equal to the value of the node itself. You can\
  \ add any value or subtract any value from a node. Print the minimum change(difference\
  \ made) in the sum of values of all the nodes in the tree, such that all the leaf\
  \ nodes have the same value.\n\nNote: If a value transfers from one node to another,\
  \ then that is not a change, but if an extra is needed to be added or subtracted\
  \ to the entire total value of the nodes, then that is a change.\n\nInput Description:\n\
  \nInput will contain an integer N, the number of nodes in the tree on a newline,\
  \ followed by N space separated integers representing the values at the leaf nodes\
  \ of the tree.\n\nOutput Description:\n\nPrint the required value on a newline.\n\
  \nConstraints:\n\n1<=N<=20000\n1<=Value at each node in the leaves<=1000\n\nExample\
  \ 1:\nInput:\n\n1\n\n50\nOutput:\n\n0\n\nExplanation: Since there is only one node,\
  \ it is a leaf node itself and no change needs to be made.\n\nExample 2:\nInput:\n\
  \n3\n\n200 800\nOutput:\n\n0 \n\nExplanation: There are two leaf nodes, and they\
  \ can be made to 500 500, since no change in the total was made so difference made\
  \ is 0. \n\nExample 3:\nInput:\n\n30\n\n29 33 2 3 4 5 6 7 8 9 10 11 12 13 14 15\
  \ 16 17\nOutput:\n\n6\n\nOutput: A total change of 6 needs to be changed to the\
  \ entire value of the nodes, to get the leaf nodes equal."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def abs (n : Int) : Int := sorry\ndef min_change_to_equal_leaves\
  \ (target : Int) (leaf_values : List Int) : Int := sorry\n\n\n"
"vc-theorems": "theorem min_change_empty_list {target : Int} (h : target ≥ 0) :\n\
  \  min_change_to_equal_leaves target [] = 0 := sorry\n\n\ntheorem min_change_single_leaf\
  \ {target : Int} (h : target ≥ 0) :\n  min_change_to_equal_leaves target [target]\
  \ = 0 := sorry\n\n/--\ninfo: 4\n-/\n#guard_msgs in\n#eval min_change_to_equal_leaves\
  \ 30 [26, 26, 36, 26]\n\n/--\ninfo: 0\n-/\n#guard_msgs in\n#eval min_change_to_equal_leaves\
  \ 10 [10, 10, 10]\n\n/--\ninfo: 2\n-/\n#guard_msgs in\n#eval min_change_to_equal_leaves\
  \ 6 [4, 8]\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
