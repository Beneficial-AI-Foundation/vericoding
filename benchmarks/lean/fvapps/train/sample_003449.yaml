"vc-description": "Working from left-to-right if no digit is exceeded by the digit\
  \ to its left it is called an increasing number; for example, 134468.\n\nSimilarly\
  \ if no digit is exceeded by the digit to its right it is called a decreasing number;\
  \ for example, 66420.\n\nWe shall call a positive integer that is neither increasing\
  \ nor decreasing a \"bouncy\" number; for example, 155349.\n\nClearly there cannot\
  \ be any bouncy numbers below one-hundred, but just over half of the numbers below\
  \ one-thousand (525) are bouncy. In fact, the least number for which the proportion\
  \ of bouncy numbers first reaches 50% is 538.\n\nSurprisingly, bouncy numbers become\
  \ more and more common and by the time we reach 21780 the proportion of bouncy numbers\
  \ is equal to 90%.\n\n#### Your Task\n\nComplete the bouncyRatio function.\n\nThe\
  \ input will be the target ratio.\n\nThe output should be the smallest number such\
  \ that the proportion of bouncy numbers reaches the target ratio.\n\nYou should\
  \ throw an Error for a ratio less than 0% or greater than 99%.\n\n**Source**\n\n\
  \  - https://projecteuler.net/problem=112\n  \n**Updates**\n\n  - 26/10/2015: Added\
  \ a higher precision test case."
"vc-preamble": "import Imports.AllImports\n\ndef isDigit (c : Char) : Bool := sorry\n\
  \ndef isBouncyStr (s : String) : Bool := sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def bouncyRatio (n : Float) : Float := sorry\n\ntheorem bouncy_sequence_property\
  \ {n : Nat} (h : n ≥ 100) (h2 : n ≤ 100000) :\n  isBouncyStr (toString n) = true\
  \ →\n  ∃ i j : String.Pos, i < j ∧ \n  ((toString n).get i < (toString n).get j)\
  \ ∧\n  ∃ k l : String.Pos, k < l ∧\n  ((toString n).get k > (toString n).get l)\
  \ := sorry\n"
"vc-theorems": "theorem bouncy_ratio_validation_zero :\n  ¬ ∃ x : Float, x = bouncyRatio\
  \ 0 := sorry\n\n\ntheorem bouncy_ratio_validation_one :\n  ¬ ∃ x : Float, x = bouncyRatio\
  \ 1 := sorry\n\n\ntheorem bouncy_ratio_validation_negative (n : Float) :\n  n <\
  \ 0 →\n  ¬ ∃ x : Float, x = bouncyRatio n := sorry\n\n\ntheorem bouncy_ratio_validation_above_one\
  \ (n : Float) :\n  n > 1 →\n  ¬ ∃ x : Float, x = bouncyRatio n := sorry\n\n/--\n\
  info: 538\n-/\n#guard_msgs in\n#eval bouncy_ratio 0.5\n\n/--\ninfo: 21780\n-/\n\
  #guard_msgs in\n#eval bouncy_ratio 0.9\n\n/--\ninfo: 3088\n-/\n#guard_msgs in\n\
  #eval bouncy_ratio 0.75\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
