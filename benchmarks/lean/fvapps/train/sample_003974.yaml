"vc-description": "# Task\n Given an array `arr` and a number `n`. Call a pair of\
  \ numbers from the array a `Perfect Pair` if their sum is equal to `n`.\n\n Find\
  \ all of the perfect pairs and return the sum of their **indices**. \n \n Note that\
  \ any element of the array can only be counted in one Perfect Pair. Also if there\
  \ are multiple correct answers, return the smallest one.\n\n# Example\n\n For `arr\
  \ = [1, 4, 2, 3, 0, 5] and n = 7`, the result should be `11`.\n \n Since the Perfect\
  \ Pairs are `(4, 3)` and `(2, 5)` with indices `1 + 3 + 2 + 5 = 11`.\n\n For `arr\
  \ = [1, 3, 2, 4] and n = 4`, the result should be `1`.\n \n Since the element at\
  \ `index 0` (i.e. 1) and the element at `index 1` (i.e. 3) form the only Perfect\
  \ Pair.\n\n# Input/Output\n\n\n - `[input]` integer array `arr`\n\n  array of non-negative\
  \ integers.\n\n\n - `[input]` integer `n`\n\n  positive integer\n\n\n - `[output]`\
  \ integer\n\n  sum of indices and 0 if no Perfect Pair exists."
"vc-preamble": "import Imports.AllImports\n\ndef pairwise_pairs : List Int → Int →\
  \ List (Int × Int)\n| xs, n => sorry \n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def pairwise : List Int → Int → Int \n| xs, n => sorry\n"
"vc-theorems": "theorem pairwise_nonnegative {arr : List Int} {n : Int} : \n  pairwise\
  \ arr n ≥ 0 := by sorry\n  \n\ntheorem pairwise_less_than_triangular {arr : List\
  \ Int} {n : Int} :\n  let max_triangular := (arr.length * (arr.length - 1)) / 2\n\
  \  pairwise arr n ≤ max_triangular := by sorry\n\n\ntheorem pairwise_indices_sum_correctly\
  \ {arr : List Int} {n : Int} :\n  let used_indices := List.map Prod.fst (pairwise_pairs\
  \ arr n) ++ List.map Prod.snd (pairwise_pairs arr n)\n  List.foldr (· + ·) 0 used_indices\
  \ = pairwise arr n := by sorry\n\n\ntheorem pairwise_indices_unique {arr : List\
  \ Int} {n : Int} :\n  let indices := List.map Prod.fst (pairwise_pairs arr n) ++\
  \ List.map Prod.snd (pairwise_pairs arr n)\n  List.Nodup indices := by sorry\n\n\
  \ntheorem pairwise_empty_zero {n : Int} :\n  pairwise [] n = 0 := by sorry"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded"
