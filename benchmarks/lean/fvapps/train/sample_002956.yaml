"vc-description": "Each number should be formatted that it is rounded to two decimal\
  \ places. You don't need to check whether the input is a valid number because only\
  \ valid numbers are used in the tests.\n```\nExample:    \n5.5589 is rounded 5.56\
  \   \n3.3424 is rounded 3.34\n```"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def twoDecimalPlaces (n : Float) : Float := sorry\n\ntheorem decimal_places_precision\
  \ (n : Float)\n  (h : ¬ n.isNaN ∧ ¬ n.isInf ∧ -1e10 ≤ n ∧ n ≤ 1e10) :\n  Float.abs\
  \ (n - twoDecimalPlaces n) < 0.01 := sorry\n"
"vc-theorems": "theorem decimal_places_bound (n : Float)  \n  (h : ¬ n.isNaN ∧ ¬ n.isInf\
  \ ∧ -1e10 ≤ n ∧ n ≤ 1e10) :\n  ∃ k : Int, twoDecimalPlaces n = Float.ofInt k / 100\
  \ := sorry\n\n/--\ninfo: 4.66\n-/\n#guard_msgs in\n#eval two_decimal_places 4.659725356\n\
  \n/--\ninfo: 173735326.38\n-/\n#guard_msgs in\n#eval two_decimal_places 173735326.37837327\n\
  \n/--\ninfo: 4.65\n-/\n#guard_msgs in\n#eval two_decimal_places 4.653725356\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
