"vc-description": "**This Kata is intended as a small challenge for my students**\n\
  \nCreate a function, called ``removeVowels`` (or ``remove_vowels``), that takes\
  \ a string argument and returns that same string with all vowels removed (vowels\
  \ are \"a\", \"e\", \"i\", \"o\", \"u\")."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def remove_vowels (s : String) : String := sorry\n\ndef isVowel\
  \ (c : Char) : Bool :=\n  c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u'\n"
"vc-theorems": "theorem remove_vowels_no_vowels (s : String) :\n  ∀ c, c ∈ (remove_vowels\
  \ s).data → ¬isVowel c := sorry\n\n\ntheorem remove_vowels_length (s : String) :\n\
  \  (remove_vowels s).length ≤ s.length := sorry\n\n\ntheorem remove_vowels_preserves_nonvowels\
  \ (s : String) :\n  remove_vowels s = String.mk (s.data.filter (λ c => ¬isVowel\
  \ c)) := sorry\n\n\ntheorem remove_vowels_identity (s : String) :\n  (∀ c ∈ s.data,\
  \ ¬isVowel c) → remove_vowels s = s := sorry\n\n/--\ninfo: 'drk'\n-/\n#guard_msgs\
  \ in\n#eval remove_vowels \"drake\"\n\n/--\ninfo: 'schlrstm'\n-/\n#guard_msgs in\n\
  #eval remove_vowels \"scholarstem\"\n\n/--\ninfo: 'hgh fvs!'\n-/\n#guard_msgs in\n\
  #eval remove_vowels \"high fives!\"\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
