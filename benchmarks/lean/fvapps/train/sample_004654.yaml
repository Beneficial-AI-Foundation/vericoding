"vc-description": "Write a function that will randomly upper and lower characters\
  \ in a string - `randomCase()` (`random_case()` for Python).\n\nA few examples:\n\
  \n```\nrandomCase(\"Lorem ipsum dolor sit amet, consectetur adipiscing elit\") ==\
  \ \"lOReM ipSum DOloR SiT AmeT, cOnsEcTEtuR aDiPiSciNG eLIt\"\n\nrandomCase(\"Donec\
  \ eleifend cursus lobortis\") == \"DONeC ElEifEnD CuRsuS LoBoRTIs\"\n```\n\nNote:\
  \ this function will work within the basic ASCII character set to make this kata\
  \ easier - so no need to make the function multibyte safe."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def randomCase (s : String) : String := sorry\n\ntheorem randomCase_length_preserved\
  \ (s : String) : \n  (randomCase s).length = s.length := sorry\n"
"vc-theorems": "theorem randomCase_chars_preserved (s : String) :\n  (randomCase s).toLower\
  \ = s.toLower := sorry\n\n\ntheorem randomCase_changes_some_chars (s : String) \n\
  \  (h : s.length ≥ 10) :\n  ∃ result, randomCase result ≠ s := sorry\n\n\ntheorem\
  \ randomCase_only_changes_case (s : String) (i : String.Pos) :\n  (s.get i).toLower\
  \ = ((randomCase s).get i).toLower := sorry"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
