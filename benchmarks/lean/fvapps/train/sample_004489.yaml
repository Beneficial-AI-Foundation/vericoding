"vc-description": "## Task\n In your favorite game, you must shoot a target with a\
  \ water-gun to gain points. Each target can be worth a different amount of points.\
  \ \n \n You are guaranteed to hit every target that you try to hit. You cannot hit\
  \ consecutive targets though because targets are only visible for one second (one\
  \ at a time) and it takes you a full second to reload your water-gun after shooting\
  \ (you start the game already loaded).\n\n Given an array `vals` with the order\
  \ of each target's point value, determine the maximum number of points that you\
  \ can win.\n\n## Example\n For `vals = [1, 2, 3, 4]`, the result should be `6`.\n\
  \ \n your optimal strategy would be to let the first one pass and shoot the second\
  \ one with value 2 and the 4th one with value 4 thus:\n\n `vals[1](2) + vals[3](4)\
  \ = 6`\n \n For `vals = [5, 5, 5, 5, 5]`, the result should be `15`.\n \n your optimal\
  \ strategy would be to shoot the 1st, 3rd and 5th value:\n \n `5 + 5 + 5 = 15`\n\
  \ \n You haven't shoot the 2nd, 4th value because you are reloading your water-gun\
  \ after shooting other values.\n \n Note that the value can be zero or negative,\
  \ don't shoot them ;-)\n \n For `vals = [0, 0, -1, -1]`, the result should be `0`.\n\
  \ \n For `vals = [5, -2, -9, -4]`, the result should be `5`.\n \n Shoot the first\
  \ one is enough.\n \n## Input/Output\n\n\n - `[input]` integer array `vals`\n\n\
  \  The point values (negative or non-negative) of the targets (in order of appearance).\n\
  \n\n - `[output]` an integer\n\n  The maximum number of points that you can score."
"vc-preamble": "import Imports.AllImports\n\ndef sum (l : List Int) : Int := sorry\n\
  def maximum? (l : List Int) : Option Int := sorry"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def filterWithIndex (l : List Int) (f : Nat → Int → Bool) : List\
  \ Int := sorry\ndef target_game (vals : List Int) : Int := sorry\n"
"vc-theorems": "theorem target_game_nonneg (vals : List Int) \n  (h : vals ≠ []) :\
  \ \n  target_game vals ≥ 0 := sorry\n\n/--\ninfo: 6\n-/\n#guard_msgs in\n#eval target_game\
  \ [1, 2, 3, 4]\n\n/--\ninfo: 15\n-/\n#guard_msgs in\n#eval target_game [5, 5, 5,\
  \ 5, 5]\n\n/--\ninfo: 5\n-/\n#guard_msgs in\n#eval target_game [5, -2, -9, -4]\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded_and_plausible"
