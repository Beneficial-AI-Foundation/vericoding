"vc-description": "# A History Lesson\n\nTetris is a puzzle video game originally\
  \ designed and programmed by Soviet Russian software engineer Alexey Pajitnov. The\
  \ first playable version was completed on June 6, 1984. Pajitnov derived its name\
  \ from combining the Greek numerical prefix tetra- (the falling pieces contain 4\
  \ segments) and tennis, Pajitnov's favorite sport.\n\n# About scoring system\n\n\
  The scoring formula is built on the idea that more difficult line clears should\
  \ be awarded more points. For example, a single line clear is worth `40` points,\
  \ clearing four lines at once (known as a Tetris) is worth `1200`.\n\nA level multiplier\
  \ is also used. The game starts at level `0`. The level increases every ten lines\
  \ you clear. Note that after increasing the level, the total number of cleared lines\
  \ is not reset.\n\nFor our task you can use this table:\n\n\n        .demo {\n \
  \   width:70%;\n                border:1px solid #C0C0C0;\n                border-collapse:collapse;\n\
  \                padding:5px;\n        }\n        .demo th {\n                border:1px\
  \ solid #C0C0C0;\n                padding:5px;\n        }\n        .demo td {\n\
  \                border:1px solid #C0C0C0;\n                padding:5px;\n     \
  \   }\n\n\n\nLevel\nPoints for 1 line\nPoints for 2 lines\nPoints for 3 lines\n\
  Points for 4 lines\n\n\n0\n40\n100\n300\n1200\n\n\n1\n80\n200\n600\n2400\n\n\n2\n\
  120\n300\n900\n3600\n\n\n3\n160\n400\n1200\n4800\n\n\n...\n\n\n7\n320\n800\n2400\n\
  9600\n\n\n...\nFor level n you must determine the formula by yourself using given\
  \ examples from the table.\n\n\n\n# Task\n\nCalculate the final score of the game\
  \ using original Nintendo scoring system\n\n# Input\n\nArray with cleaned lines.\
  \  \nExample: `[4, 2, 2, 3, 3, 4, 2]`  \nInput will always be valid: array of random\
  \ length (from `0` to `5000`) with numbers from `0` to `4`.\n\n# Ouput\n\nCalculated\
  \ final score.  \n`def get_score(arr) -> int: return 0`\n\n# Example\n```python\n\
  get_score([4, 2, 2, 3, 3, 4, 2]); # returns 4900\n```\nStep 1: `+1200` points for\
  \ 4 lines (current level `0`). Score: `0+1200=1200`;\\\nStep 2: `+100` for 2 lines.\
  \ Score: `1200+100=1300`;\\\nStep 3: `+100`. Score: `1300+100=1400`;\\\nStep 4:\
  \ `+300` for 3 lines (current level still `0`). Score: `1400+300=1700`.\\\nTotal\
  \ number of cleaned lines 11 (`4 + 2 + 2 + 3`), so level goes up to `1` (level ups\
  \ each 10 lines);\\\nStep 5: `+600` for 3 lines (current level `1`). Score: `1700+600=2300`;\\\
  \nStep 6: `+2400`. Score: `2300+2400=4700`;\\\nStep 7: `+200`. Total score: `4700+200=4900`\
  \ points.\n\n# Other  \n\nIf you like the idea: leave feedback, and there will be\
  \ more katas in the Tetris series.\n\n* 7 kyuTetris Series #1 — Scoring System\n\
  * 6 kyuTetris Series #2 — Primitive Gameplay\n* 6 kyuTetris Series #3 — Adding Rotation\
  \ (TBA)\n* 5 kyuTetris Series #4 — New Block Types (TBA)\n* 4 kyuTetris Series #5\
  \ — Complex Block Types (TBA?)"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def get_score (xs : List Nat) : Nat :=\n  sorry\n"
"vc-theorems": "theorem get_score_non_negative (xs : List Nat) \n  (h : ∀ x ∈ xs,\
  \ x ≤ 4) : \n  0 ≤ get_score xs := sorry\n\n\ntheorem score_monotonic_increasing\
  \ (arr : List Nat) \n  (h : ∀ x ∈ arr, x ≤ 4) (lines : Nat) (h2 : lines ≤ 4) :\n\
  \  get_score arr ≤ get_score (arr ++ [lines]) := sorry\n\n\ntheorem level_multiplier_effect\
  \ (arr : List Nat) \n  (h : arr ≠ []) (h2 : ∀ x ∈ arr, x ≤ 4) :\n  let first :=\
  \ arr.head h\n  get_score [first] ≤ get_score arr := sorry\n\n\ntheorem zero_lines_zero_score\
  \ (arr : List Nat)\n  (h : ∀ x ∈ arr, x = 0) :\n  get_score arr = 0 := sorry\n\n\
  \ntheorem score_deterministic (arr : List Nat)\n  (h : ∀ x ∈ arr, x ≤ 4) :\n  get_score\
  \ arr = get_score arr := sorry\n\n/--\ninfo: 1640\n-/\n#guard_msgs in\n#eval get_score\
  \ [0, 1, 2, 3, 4]\n\n/--\ninfo: 620\n-/\n#guard_msgs in\n#eval get_score [0, 1,\
  \ 1, 3, 0, 2, 1, 2]\n\n/--\ninfo: 3300\n-/\n#guard_msgs in\n#eval get_score [2,\
  \ 0, 4, 2, 2, 3, 0, 0, 3, 3]\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded"
