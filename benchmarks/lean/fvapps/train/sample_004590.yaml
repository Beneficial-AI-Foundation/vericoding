"vc-description": "Inspired by [Round to the next 5](/kata/55d1d6d5955ec6365400006d).\n\
  Warning! This kata contains spoilers on the mentioned one. Solve that one first!\n\
  \n# The Coins of Ter\nTer is a small country, located between Brelnam and the Orange\
  \ juice ocean. It uses many different coins and bills for payment. However, one\
  \ day, the leaders of Ter decide that there are too many small coins. Therefore,\
  \ they ban the small coins. But no one knows _which_ coins they'll ban, so they\
  \ ask you to provide a tool that can recalculate a price. After all, if one does\
  \ not have a 1 Terrek bill and can only give a 2 Terrek bill, one needs to adjust\
  \ the oddly priced items.\n\n# Task\nWrite a function `adjust`, that takes a two\
  \ integers: the lowest currency unit that's still allowed, and the price/debt that\
  \ needs to get adjusted. All prices are going up, and debts are remitted. The lowest\
  \ currency will always be positive.\n\nIn other words:`adjust` takes two integers,\
  \ `b` and `n`, and returns the smallest number `k`, such that `n <= k` and `k %\
  \ b == 0 `.\n\n# Examples\n```python\nadjust( 3, 0 ) ==  0\nadjust( 3, 1 ) ==  3\n\
  adjust( 3, -2) ==  0\nadjust( 3, -4) == -3\nadjust( 3, 3 ) ==  3\nadjust( 3, 6 )\
  \ ==  6\nadjust( 3, 7 ) ==  9\n```\n\n\nTranslator notice: Make sure that you provide\
  \ about the same random tests, so that a user can get feedback during \"Run tests\"\
  , and not only during \"Submit\"."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def adjust (coin price : Int) : Int := sorry\n\ntheorem adjust_multiple\
  \ (coin price : Int) (h : coin > 0) : \n  (adjust coin price) % coin = 0 := sorry\n"
"vc-theorems": "theorem adjust_greater_equal (coin price : Int) (h : coin > 0) :\n\
  \  adjust coin price â‰¥ price := sorry\n  \n\ntheorem adjust_minimal (coin price\
  \ : Int) (h : coin > 0) :\n  adjust coin price - coin < price := sorry\n  \n\ntheorem\
  \ adjust_idempotent (coin price : Int) (h : coin > 0) :\n  adjust coin (adjust coin\
  \ price) = adjust coin price := sorry\n\n/--\ninfo: 0\n-/\n#guard_msgs in\n#eval\
  \ adjust 3 0\n\n/--\ninfo: 3\n-/\n#guard_msgs in\n#eval adjust 3 1\n\n/--\ninfo:\
  \ 0\n-/\n#guard_msgs in\n#eval adjust 3 -2\n\n/--\ninfo: -3\n-/\n#guard_msgs in\n\
  #eval adjust 3 -4\n\n/--\ninfo: 3\n-/\n#guard_msgs in\n#eval adjust 3 3\n\n/--\n\
  info: 6\n-/\n#guard_msgs in\n#eval adjust 3 6\n\n/--\ninfo: 9\n-/\n#guard_msgs in\n\
  #eval adjust 3 7\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
