"vc-description": "=====Function Descriptions=====\nstart() & end()\n\nThese expressions\
  \ return the indices of the start and end of the substring matched by the group.\n\
  \nCode\n\n>>> import re\n>>> m = re.search(r'\\d+','1234')\n>>> m.end()\n4\n>>>\
  \ m.start()\n0\n\n=====Problem Statement=====\nYou are given a string S.\nYour task\
  \ is to find the indices of the start and end of string k in S.\n\n=====Input Format=====\n\
  The first line contains the string S.\nThe second line contains the string k.\n\n\
  =====Output Format=====\nPrint the tuple in this format: (start_index, end_index)\n\
  \nIf no match is found, print (-1, -1)."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def find_string_indices (s : String) (k : String) : List (Int ×\
  \ Int) := sorry\n\n-- Any result is a list of integer tuples"
"vc-theorems": "theorem find_string_indices_returns_valid_pairs (s k : String) \n\
  \  (h₁ : s.length > 0) (h₂ : k.length > 0) :\n  ∀ p ∈ (find_string_indices s k),\
  \ ∃ i j : Int, p = (i, j) := sorry\n\n-- For non-failure results, indices are valid\
  \ and contain substring\n\ntheorem find_string_indices_valid_matches (s k : String)\n\
  \  (h₁ : s.length > 0) (h₂ : k.length > 0)\n  (h₃ : find_string_indices s k ≠ [(-1,\
  \ -1)]) :\n  ∀ p ∈ (find_string_indices s k),\n    let i := p.1\n    let j := p.2\n\
  \    0 ≤ i ∧ i ≤ j ∧ j < s.length := sorry\n\n-- Results are ordered and non-overlapping\n\
  \ntheorem find_string_indices_ordered (s k : String)\n  (h₁ : s.length > 0) (h₂\
  \ : k.length > 0)\n  (h₃ : find_string_indices s k ≠ [(-1, -1)])\n  (i : Nat) (h₄\
  \ : i + 1 < (find_string_indices s k).length) :\n  let result := find_string_indices\
  \ s k\n  result[i]!.2 < result[i+1]!.1 := sorry\n\n-- First character match starts\
  \ at beginning\n\ntheorem find_string_indices_first_char (s : String)\n  (h : s.length\
  \ > 0) :\n  let result := find_string_indices s (String.mk [s.get 0])\n  result\
  \ ≠ [] → result[0]!.1 = 0 := sorry\n\n/--\ninfo: [(0, 1), (1, 2), (4, 5)]\n-/\n\
  #guard_msgs in\n#eval find_string_indices \"aaadaa\" \"aa\"\n\n/--\ninfo: [(-1,\
  \ -1)]\n-/\n#guard_msgs in\n#eval find_string_indices \"hello\" \"xyz\"\n\n/--\n\
  info: [(1, 3), (3, 5)]\n-/\n#guard_msgs in\n#eval find_string_indices \"banana\"\
  \ \"ana\"\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded"
