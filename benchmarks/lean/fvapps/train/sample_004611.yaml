"vc-description": "My third kata, write a function `check_generator` that examines\
  \ the status of a Python generator expression `gen` and returns `'Created'`, `'Started'`\
  \ or `'Finished'`. For example:\n\n`gen = (i for i in range(1))` >>> returns `'Created'`\
  \ (the generator has been initiated)\n\n`gen = (i for i in range(1)); next(gen,\
  \ None)` >>> returns `'Started'` (the generator has yielded a value)\n\n`gen = (i\
  \ for i in range(1)); next(gen, None); next(gen, None)` >>> returns `'Finished'`\
  \ (the generator has been exhuasted)\n\nFor an introduction to Python generators,\
  \ read: https://wiki.python.org/moin/Generators.\n\nPlease do vote and rank the\
  \ kata, and provide any feedback.\n\nHint: you can solve this if you know the right\
  \ module to use."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def check_generator {α : Type} (g : List α) : GeneratorState :=\n\
  \  sorry\n"
"vc-theorems": "theorem new_generator {α : Type} (xs : List α) :\n  check_generator\
  \ xs = GeneratorState.Created := by\n  sorry\n\n\ntheorem started_generator {α :\
  \ Type} (xs : List α) (h : xs ≠ []) :\n  check_generator (xs.tail) = GeneratorState.Started\
  \ := by\n  sorry\n\n\ntheorem finished_generator {α : Type} (xs : List α) :\n  check_generator\
  \ ([] : List α) = GeneratorState.Finished := by\n  sorry\n\n\ntheorem generator_sequence\
  \ {α : Type} (xs : List α) :\n  (check_generator xs = GeneratorState.Created) ∧\n\
  \  (xs ≠ [] → check_generator (xs.tail) = GeneratorState.Started) ∧\n  (check_generator\
  \ ([] : List α) = GeneratorState.Finished) := by\n  sorry\n\n\ntheorem range_generator\
  \ (n : Nat) :\n  (check_generator (List.range n) = GeneratorState.Created) ∧\n \
  \ (n > 0 → check_generator (List.range n).tail = GeneratorState.Started) ∧\n  (check_generator\
  \ ([] : List Nat) = GeneratorState.Finished) := by\n  sorry\n\n/--\ninfo: 'Created'\n\
  -/\n#guard_msgs in\n#eval check_generator (i for i in range(2))\n\n/--\ninfo: 'Started'\n\
  -/\n#guard_msgs in\n#eval check_generator (i for i in range(2))\n\n/--\ninfo: 'Finished'\n\
  -/\n#guard_msgs in\n#eval check_generator (i for i in range(2))\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
