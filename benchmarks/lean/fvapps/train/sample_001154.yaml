"vc-description": "Toby has found a game to entertain himself.The game is like this:\n\
  \nYou are in a coordinate system initially at (0,0) and you are given a sequence\
  \ of steps which lead to your destination.The steps are given in the form of directions:\
  \ ’U’ ,’D’ , ’L’ and ‘R’ for up, down, left and right respectively.If you are at\
  \ position (x,y) then:\n- U:move to (x,y+1)\n- D:move to (x,y-1)\n- L:move to (x-1,y)\n\
  - R:move to (x+1,y)\nThe sequence is provided as a string ‘s’ of characters where\
  \ $s_i$ $(1 \\leq i \\leq N)$ is one of the direction character as mentioned above.An\
  \ example of a sequence of steps is:   UULRUDR\n\nThe destination according to this\
  \ string is (1,2).\n\nYou want to remove maximum number of characters from the string\
  \ such that the resulting string leads to the same destination as before.\nFor example\
  \ in the example above we can remove characters at positions 1,3,4,6 and the resulting\
  \ path will be UUR which will lead to the same destination i.e (1,2).so we reduced\
  \ the number of steps by 4,and this is our score.\nYou need to get maximum score.\n\
  \n-----Input:-----\n- First line will contain $T$, number of testcases. Then the\
  \ testcases follow. \n- First line of each testcase contains a single integer $N$,size\
  \ of string. \n- Second line of testcase contains a string $s$ of size $N$.\n\n\
  -----Output:-----\nFor each testcase, output a single line containing the maximum\
  \ score possible.\n\n-----Constraints-----\n- $1 \\leq T \\leq 1000$\n- $1 \\leq\
  \ N \\leq 10^5$\n\n-----Sample Input:-----\n3\n\n7\n\nULUDLLU\n\n4\n\nRUUR\n\n4\n\
  \nLRLR   \n\n-----Sample Output:-----\n2\n\n0\n\n4    \n\n-----EXPLANATION:-----\n\
  - \ntest case 1:\nThe final destination after moving according to the sequence is\
  \ (-3,2).\n\nOne way is to remove characters at positions 3,4 and the resulting\
  \ string will be ULLLU and destination still remains (-3,2).\n- \ntest case 2: No\
  \ character can be removed in this case."
"vc-preamble": "import Imports.AllImports\n\ndef count_char (s : String) (c : Char)\
  \ : Nat := sorry\n\ndef max_removable_steps (n : Nat) (s : String) : Nat := sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def absDiff (x y : Nat) : Nat := \n  if x ≥ y then x - y else y\
  \ - x\n"
"vc-theorems": "theorem max_removable_steps_le_n {n : Nat} {s : String} :\n  n > 0\
  \ → max_removable_steps n s ≤ n := sorry\n\n\ntheorem max_removable_steps_empty\
  \ {n : Nat} :\n  n > 0 → max_removable_steps n \"\" = n := sorry\n\n/--\ninfo: 2\n\
  -/\n#guard_msgs in\n#eval max_removable_steps 7 \"ULUDLLU\"\n\n/--\ninfo: 0\n-/\n\
  #guard_msgs in\n#eval max_removable_steps 4 \"RUUR\"\n\n/--\ninfo: 4\n-/\n#guard_msgs\
  \ in\n#eval max_removable_steps 4 \"LRLR\"\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
