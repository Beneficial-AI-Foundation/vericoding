"vc-description": "Chef has a number N, Cheffina challenges the chef to check the\
  \ divisibility of all the permutation of N by 5. If any of the permutations is divisible\
  \ by 5 then print 1 else print 0.\n\n-----Input:-----\n- First-line will contain\
  \ $T$, the number of test cases. Then the test cases follow. \n- Each test case\
  \ contains a single line of input,$N$. \n\n-----Output:-----\nFor each test case,\
  \ output in a single line answer 1 or 0.\n\n-----Constraints-----\n- $1 \\leq T\
  \ \\leq 10^6$\n- $1 \\leq N \\leq 10^6$\n\n-----Sample Input:-----\n2\n19\n385\n\
  \n-----Sample Output:-----\n0\n1"
"vc-preamble": "import Imports.AllImports\n\ndef check_divisible_by_five : String\
  \ → Nat\n  | s => sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def contains_five_or_zero (s : String) : Bool :=\n  s.contains\
  \ '0' || s.contains '5'\n"
"vc-theorems": "theorem check_divisible_outputs_zero_or_one (s : String) :\n  (check_divisible_by_five\
  \ s = 0) ∨ (check_divisible_by_five s = 1) := sorry\n\n\n\n\ntheorem check_divisible_leading_zero\
  \ (s : String) :\n  check_divisible_by_five (\"0\" ++ s) = 1 := sorry\n\n/--\ninfo:\
  \ 0\n-/\n#guard_msgs in\n#eval check_divisible_by_five \"19\"\n\n/--\ninfo: 1\n\
  -/\n#guard_msgs in\n#eval check_divisible_by_five \"385\"\n\n/--\ninfo: 0\n-/\n\
  #guard_msgs in\n#eval check_divisible_by_five \"1234\"\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
