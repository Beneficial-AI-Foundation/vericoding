"vc-description": "There is a special square room with mirrors on each of the four walls. \
  \ Except for the southwest corner, there are receptors on each of the remaining\
  \ corners, numbered 0, 1, and 2.\nThe square room has walls of length p, and a laser\
  \ ray from the southwest corner first meets the east wall at a distance q from the\
  \ 0th receptor.\nReturn the number of the receptor that the ray meets first.  (It\
  \ is guaranteed that the ray will meet a receptor eventually.)\n \n\nExample 1:\n\
  Input: p = 2, q = 1\nOutput: 2\nExplanation: The ray meets receptor 2 the first\
  \ time it gets reflected back to the left wall.\n\n\nNote:\n\n1 <= p <= 1000\n0\
  \ <= q <= p"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def mirrorReflection (p q : Nat) : Nat :=\n  sorry\n"
"vc-theorems": "theorem mirror_reflection_range (p q : Nat) (hp : p > 0) (hq : q >\
  \ 0) :\n  let r := mirrorReflection p q\n  r = 0 ∨ r = 1 ∨ r = 2 :=\nsorry\n\n\n\
  theorem mirror_reflection_reduction (p q : Nat) (hp : p > 0) (hq : q > 0) :\n  let\
  \ p2 := p\n  let q2 := q\n  mirrorReflection p q = mirrorReflection p2 q2 :=\nsorry\n\
  \n\ntheorem mirror_reflection_even_odd (n : Nat) (hn : n > 0) :\n  mirrorReflection\
  \ (2*n) (2*n-1) = 2 :=\nsorry\n\n\ntheorem mirror_reflection_odd_even (n : Nat)\
  \ (hn : n > 0) :\n  mirrorReflection (2*n-1) (2*n) = 0 :=\nsorry\n\n\ntheorem mirror_reflection_both_odd\
  \ (n : Nat) (hn : n > 0) :\n  mirrorReflection (2*n-1) (2*n-1) = 1 :=\nsorry\n\n\
  /--\ninfo: 2\n-/\n#guard_msgs in\n#eval mirrorReflection 2 1\n\n/--\ninfo: 2\n-/\n\
  #guard_msgs in\n#eval mirrorReflection 4 2\n\n/--\ninfo: 1\n-/\n#guard_msgs in\n\
  #eval mirrorReflection 5 5\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
