"vc-description": "Given a list of positive integers, the adjacent integers will perform\
  \ the float division. For example, [2,3,4] -> 2 / 3 / 4.\n\nHowever, you can add\
  \ any number of parenthesis at any position to change the priority of operations.\
  \ You should find out how to add parenthesis to get the maximum result, and return\
  \ the corresponding expression in string format. Your expression should NOT contain\
  \ redundant parenthesis.\n\nExample:\n\nInput: [1000,100,10,2]\nOutput: \"1000/(100/10/2)\"\
  \nExplanation:\n1000/(100/10/2) = 1000/((100/10)/2) = 200\nHowever, the bold parenthesis\
  \ in \"1000/((100/10)/2)\" are redundant, since they don't influence the operation\
  \ priority. So you should return \"1000/(100/10/2)\". \n\nOther cases:\n1000/(100/10)/2\
  \ = 50\n1000/(100/(10/2)) = 50\n1000/100/10/2 = 0.5\n1000/100/(10/2) = 2\n\n\n\n\
  Note:\n\nThe length of the input array is [1, 10].\nElements in the given array\
  \ will be in range [2, 1000].\nThere is only one optimal division for each test\
  \ case."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def optimalDivision (nums: List Nat) : String := sorry\n\ntheorem\
  \ optimal_division_empty (nums: List Nat) :\n  nums = [] → optimalDivision nums\
  \ = \"\" := sorry\n"
"vc-theorems": "theorem optimal_division_single (n: Nat) :\n  optimalDivision [n]\
  \ = toString n := sorry\n\n\ntheorem optimal_division_two (n m: Nat) :\n  optimalDivision\
  \ [n, m] = toString n ++ \"/\" ++ toString m := sorry\n\n\n\n\ntheorem division_format_parts\
  \ (nums: List Nat) :\n  nums.length ≥ 3 →\n  let parts := (optimalDivision nums).splitOn\
  \ \"/\"\n  parts.length = nums.length ∧\n  parts[0]! = toString nums[0]! ∧ \n  parts[1]!.startsWith\
  \ \"(\" ∧\n  parts[parts.length - 1]!.endsWith \")\" := sorry\n\n\ntheorem first_number_preserved\
  \ (nums: List Nat) :\n  nums ≠ [] →\n  (optimalDivision nums).startsWith (toString\
  \ nums[0]!) := sorry"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
