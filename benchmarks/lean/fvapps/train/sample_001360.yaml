"vc-description": "Motu and Patlu are racing against each other on a circular track\
  \ of radius $R$. Initially they are at the same point on the track and will run\
  \ in same direction .The coach ordered them to run $X$ rounds of the circular field.\
  \ Patlu wants to know how many times they will meet after the race starts and  before\
  \ any of them finishes $X$ rounds. But he is busy in warm up so he wants you to\
  \ calculate this. You are given speed of both Motu and Patlu ($A$ and $B$). \n\n\
  -----Input:-----\n- First line will contain $T$, number of testcases. Then the testcases\
  \ follow. \n- Each testcase contains of a single line of input, four integers $X,\
  \ R, A, B$. \n\n-----Output:-----\nFor each testcase, output in a single line answer\
  \ the number of times whey will meet before any of them completes $X$ rounds.\n\n\
  -----Constraints-----\n- $1 \\leq T \\leq 1000$\n- $1 \\leq R \\leq 10^9$\n- $1\
  \ \\leq X \\leq 10^9$\n- $1 \\leq A \\leq 10^9$\n- $1 \\leq B \\leq 10^9$\n- Speed\
  \ of both are different\n\n-----Sample Input:-----\n2\n3 10 2 5\n2 20 5 10\n\n-----Sample\
  \ Output:-----\n1\n0"
"vc-preamble": "import Imports.AllImports\n\ndef solve_race_encounters (x : Int) (r\
  \ speed1 speed2 : Float) : Int :=\n  sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def abs (x : Float) : Float :=\n  sorry\n"
"vc-theorems": "theorem race_encounters_non_negative\n  (x : Int) (r speed1 speed2\
  \ : Float)\n  (h1 : x > 0)\n  (h2 : r > 0)\n  (h3 : speed1 > 0)\n  (h4 : speed2\
  \ > 0) \n  (h5 : Float.abs (speed1 - speed2) > 0.0001) :\n  solve_race_encounters\
  \ x r speed1 speed2 â‰¥ -1 :=\nsorry\n\n\ntheorem race_encounters_less_than_laps\n\
  \  (x : Int) (r speed1 speed2 : Float)\n  (h1 : x > 0)\n  (h2 : r > 0)\n  (h3 :\
  \ speed1 > 0)\n  (h4 : speed2 > 0)\n  (h5 : Float.abs (speed1 - speed2) > 0.0001)\
  \ :\n  solve_race_encounters x r speed1 speed2 < x :=\nsorry\n\n\ntheorem race_encounters_speed_symmetry\n\
  \  (x : Int) (r speed1 speed2 : Float)\n  (h1 : x > 0)\n  (h2 : r > 0)\n  (h3 :\
  \ speed1 > 0)\n  (h4 : speed2 > 0)\n  (h5 : Float.abs (speed1 - speed2) > 0.0001)\
  \ :\n  solve_race_encounters x r speed1 speed2 = solve_race_encounters x r speed2\
  \ speed1 :=\nsorry\n\n\ntheorem race_encounters_speed_scaling\n  (x : Int) (r speed1\
  \ speed2 : Float)\n  (h1 : x > 0)\n  (h2 : r > 0)\n  (h3 : speed1 > 0)\n  (h4 :\
  \ speed2 > 0)\n  (h5 : Float.abs (speed1 - speed2) > 0.0001) :\n  solve_race_encounters\
  \ x r speed1 speed2 = solve_race_encounters x r (2 * speed1) (2 * speed2) :=\nsorry\n\
  \n/--\ninfo: 1\n-/\n#guard_msgs in\n#eval solve_race_encounters 3 10 2 5\n\n/--\n\
  info: 0\n-/\n#guard_msgs in\n#eval solve_race_encounters 2 20 5 10\n\n/--\ninfo:\
  \ 1\n-/\n#guard_msgs in\n#eval solve_race_encounters 4 15 3 6\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded"
