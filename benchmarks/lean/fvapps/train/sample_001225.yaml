"vc-description": "There is a universal library, where there is a big waiting room\
  \ with seating capacity for maximum $m$ people, each of whom completes reading $n$\
  \ books sequentially. Reading each book requires one unit of time. \nUnfortunately,\
  \ reading service is provided sequentially. After all of the $m$ people enter the\
  \ library, the entrance gate is closed. There is only one reading table. So when\
  \ someone reads, others have to wait in the waiting room. \nAt first everybody chooses\
  \ $n$ books they want to read. It takes $x$ amount of time. People can choose books\
  \ simultaneously. Then they enter the waiting room. After reading $n$ books the\
  \ person leaves the library immediately. \nAs nothing is free, the cost of reading\
  \ is also not free. If a person stays in the library $t$ units of time then the\
  \ cost of reading is $\\left \\lfloor \\frac{t-n}{m} \\right \\rfloor$ units of\
  \ money. So, the $i^{th}$ person pays for time $x$ he needs to choose books and\
  \ the time $(i-1)*n$ he needs to wait for all the persons before him to complete\
  \ reading.\nNote: $\\left \\lfloor a \\right \\rfloor$ denotes the floor($a$).\n\
  \n-----Input-----\n- Each case contains three space-separated positive integers\
  \ $n$, $m$ and $x$ where $n, x \\leq 1000$ and $m \\leq 10^{15}$. \n- End of input\
  \ is determined by three zeros. \n- There are no more than 1000 test cases.\n\n\
  -----Output-----\n- For each case, output in a single line the total unit of money\
  \ the library gets in that day.\n\n-----Sample Input-----\n1 100 9\n11 2 10\n12\
  \ 2 11\n0 0 0\n\n-----Sample Output-----\n9\n15\n16\n\n-----Explanation:-----\n\
  Testcase 2: Here, $n=11$, $m=2$, $x=10$.\nFor 1st person, \n$t=21$ and he/she gives\
  \ $\\left \\lfloor \\frac{21-11}{2} \\right \\rfloor = 5$ units of money.\nFor 2nd\
  \ person,\n$t=32$ and he/she gives $\\left \\lfloor \\frac{32-11}{2} \\right \\\
  rfloor= 10$ units of money.\nSo, total units of money $= 5+10 = 15$"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def calculate_library_fees (fee_per_day : Int) (max_fee : Int)\
  \ (days_late : Int) : Int :=\n  sorry\n"
"vc-theorems": "theorem fee_never_negative\n  (fee_per_day : Int)\n  (max_fee : Int)\
  \ \n  (days_late : Int)\n  (h1 : fee_per_day ≥ 0)\n  (h2 : max_fee ≥ 0) :\n  calculate_library_fees\
  \ fee_per_day max_fee days_late ≥ 0 :=\n  sorry\n\n\ntheorem fee_never_exceeds_max\n\
  \  (fee_per_day : Int)\n  (max_fee : Int)\n  (days_late : Int) \n  (h1 : fee_per_day\
  \ ≥ 0)\n  (h2 : max_fee ≥ 0)\n  (h3 : days_late ≥ 0) :\n  calculate_library_fees\
  \ fee_per_day max_fee days_late ≤ max_fee :=\n  sorry\n\n\ntheorem zero_days_means_zero_fee\n\
  \  (fee_per_day : Int)\n  (max_fee : Int)\n  (h1 : fee_per_day ≥ 0)\n  (h2 : max_fee\
  \ ≥ 0) :\n  calculate_library_fees fee_per_day max_fee 0 = 0 :=\n  sorry\n\n\ntheorem\
  \ fee_scales_linearly\n  (fee_per_day : Int)\n  (max_fee : Int)\n  (days_late :\
  \ Int)\n  (h1 : fee_per_day > 0)\n  (h2 : max_fee > 0)\n  (h3 : days_late > 0) :\n\
  \  calculate_library_fees fee_per_day max_fee days_late = \n    min (days_late *\
  \ fee_per_day) max_fee :=\n  sorry\n\n/--\ninfo: 0\n-/\n#guard_msgs in\n#eval calculate_library_fees\
  \ 0 0 0\n\n/--\ninfo: 9\n-/\n#guard_msgs in\n#eval calculate_library_fees 1 10 9\n\
  \n/--\ninfo: 40\n-/\n#guard_msgs in\n#eval calculate_library_fees 2 100 20\n\n/--\n\
  info: 30\n-/\n#guard_msgs in\n#eval calculate_library_fees 5 30 10\n\n/--\ninfo:\
  \ 20\n-/\n#guard_msgs in\n#eval calculate_library_fees 10 50 2\n\n/--\ninfo: 15\n\
  -/\n#guard_msgs in\n#eval calculate_library_fees 3 15 7\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded"
