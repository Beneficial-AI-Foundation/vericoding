"vc-description": "__Function composition__ is a mathematical operation that mainly\
  \ presents itself in lambda calculus and computability. It is explained well [here](http://www.mathsisfun.com/sets/functions-composition.html),\
  \ but this is my explanation, in simple mathematical notation:\n\n```\nf3 = compose(\
  \ f1 f2 )\n   Is equivalent to...\nf3(a) = f1( f2( a ) )\n```\n\nYour task is to\
  \ create a `compose` function to carry out this task, which will be passed two functions\
  \ or lambdas. Ruby functions will be passed, and should return, either a proc or\
  \ a lambda. Remember that the resulting composed function may be passed multiple\
  \ arguments!\n\n```python\ncompose(f , g)(x)\n=> f( g( x ) )\n```\n\nThis kata is\
  \ not available in haskell; that would be too easy!"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def compose (f : β → γ) (g : α → β) : α → γ := sorry\n\ntheorem\
  \ numeric_composition (x : Int) :\n  let f := (fun x => x + 1)\n  let g := (fun\
  \ x => x * 2)\n  compose f g x = f (g x) := sorry\n"
"vc-theorems": "theorem string_composition (s : String) :\n  let f := (fun x => x\
  \ ++ \"!\")\n  let g := String.toUpper\n  compose f g s = f (g s) := sorry\n\n--\
  \ Simplified version without List.sum\n\ntheorem multiple_args (x : Int) :\n  let\
  \ f := (fun x => x + 1)\n  let g := (fun x => x)\n  compose f g x = f (g x) := sorry\n\
  \n\ntheorem type_preservation (x : Int) :\n  let f := (fun _ => Type)\n  let g :=\
  \ toString\n  compose f g x = f (g x) := sorry\n\n\ntheorem identity_composition\
  \ (x : Int) :\n  let f := (fun x => x)\n  let g := (fun x => x)\n  compose f g x\
  \ = x := sorry\n\n\ntheorem nested_composition (x : Int) :\n  let f := (fun x =>\
  \ x + 1)\n  let g := (fun x => x * 2)\n  let h := (fun x => x - 3)\n  compose (compose\
  \ f g) h x = f (g (h x)) := sorry\n\n/--\ninfo: 7\n-/\n#guard_msgs in\n#eval fn\
  \ 3\n\n/--\ninfo: 'HELLO!'\n-/\n#guard_msgs in\n#eval fn \"hello\"\n\n/--\ninfo:\
  \ 6\n-/\n#guard_msgs in\n#eval fn 1 2 3\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
