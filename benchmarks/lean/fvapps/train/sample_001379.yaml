"vc-description": "Chef wants you to distribute candies among $N$ kids who are sitting\
  \ in a circle. However, he wants to make some kids jealous of others. Thus, he wants\
  \ you to distribute candies in such a way that there is a difference of at least\
  \ $K$ candies between two adjacent kids. \nGiven the value of $N$ and $K$, you need\
  \ to find the minimum number of candies you need to satisfy the given conditions,\
  \ such that, each kid gets at least one candy.\n\n-----Input:-----\n- First line\
  \ will contain $T$, the number of testcases. Then the testcases follow. \n- The\
  \ only line of each testcase contains two space-separated integers $N$ and $K$.\
  \ \n\n-----Output:-----\nFor each test case, print a single line containing one\
  \ integer ― the number of candies you need.\n\n-----Constraints-----\n- $1 \\leq\
  \ T \\leq  10^6$\n- $2 \\leq  N \\leq  10^3$\n- $0 \\leq  K \\leq 10^4$ \n\n-----Sample\
  \ Input:-----\n1 \n2 1\n\n-----Sample Output:-----\n3\n\n-----EXPLANATION:-----\n\
  The minimum number of candies required is $3$. One kid needs to have $1$ candy and\
  \ the other needs to have $2$ candy to have a difference of $1$ candy between them."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def min_candies_required (n k : Nat) : Nat :=\n  sorry\n"
"vc-theorems": "theorem min_candies_at_least_n (n k : Nat) (h1: n > 0) (h2: k ≤ 1000)\
  \ : \n  min_candies_required n k ≥ n :=\nsorry\n\n\ntheorem min_candies_at_least_half_times_k\
  \ (n k : Nat) (h1: n > 0) (h2: k ≤ 1000) :\n  min_candies_required n k ≥ (n/2) *\
  \ k :=\nsorry\n\n\ntheorem min_candies_increases_with_k (n k : Nat) (h1: n > 1)\
  \ (h2: k > 0) (h3: k ≤ 1000) :\n  min_candies_required n k > min_candies_required\
  \ n (k-1) :=\nsorry\n\n\ntheorem min_candies_increases_with_n (n k : Nat) (h1: n\
  \ > 1) (h2: k ≤ 1000) :\n  min_candies_required n k ≥ min_candies_required (n-1)\
  \ k :=\nsorry\n\n\ntheorem min_candies_zero_diff (n : Nat) (h: n > 0) :\n  min_candies_required\
  \ n 0 = n :=\nsorry\n\n\ntheorem min_candies_odd_greater (n k : Nat) (h1: n > 1)\
  \ (h2: n % 2 = 1) (h3: k ≤ 1000) :\n  min_candies_required n k > min_candies_required\
  \ (n-1) k :=\nsorry\n\n/--\ninfo: 3\n-/\n#guard_msgs in\n#eval min_candies_required\
  \ 2 1\n\n/--\ninfo: 5\n-/\n#guard_msgs in\n#eval min_candies_required 3 2\n\n/--\n\
  info: 4\n-/\n#guard_msgs in\n#eval min_candies_required 4 0\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
