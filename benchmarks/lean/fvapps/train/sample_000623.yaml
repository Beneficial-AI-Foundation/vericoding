"vc-description": "Chef is the leader of Chef's Earth Defense Organization, and his\
  \ mission is to counter aliens which are threatening the earth. According to information\
  \ gathered by the organization, there are $N$ alien spaceships (numbered $1$ through\
  \ $N$) planning to invade the earth. The $i$-th spaceship will appear on the radar\
  \ at time $C_i$. Each spaceship needs $D$ time to reach earth once it appears on\
  \ the radar. \nChef's organization owns a huge laser cannon which can destroy one\
  \ spaceship in one shot. However, once the cannon is used once it needs some amount\
  \ of cool-down time in order to be used again (first shot doesn't require cool-down\
  \ time before it is used). This cool-down time, however, is configurable. It has\
  \ to be set before the first shot, and cannot be changed after that. If Chef sets\
  \ a lower cool-down time, that would increase the energy consumed by the cannon,\
  \ and vice-versa - the higher the cool-down time, the lower the energy consumed.\n\
  This might be a long battle, and Chef wants to use as little energy as possible.\
  \ So Chef wants to maximize the cool-down time while still being able to destroy\
  \ all spaceships before any of them arrive on earth. In particular, the $i$-th spaceship\
  \ should be shot between the times $C_i$ and $C_i + D$ (both end points inclusive).\n\
  \n-----Input:-----\n- The first line of input contains a single integer $T$ denoting\
  \ the number of test cases. The description of $T$ test cases follows.\n- The first\
  \ line of each test case contains two integers $N$ and $D$. \n- The second line\
  \ contains $N$ space-separated integers $C_1, C_2, \\ldots, C_N$.\n\n-----Output:-----\n\
  For each test case, print a single line containing one real number― the maximum\
  \ cool-down time possible. Your answer will be considered correct if the absolute\
  \ or relative error of the answer does not exceed $10^{-6}$.\n\n-----Constraints-----\n\
  - $1 \\leq T \\leq 1000$\n- $2 \\leq N \\leq 10^5$\n- $1 \\leq C_i \\leq 10^9$ for\
  \ each valid $i$\n- $1 \\leq D \\leq 10^9$\n- The sum of $N$ over all test cases\
  \ does not exceed $10^6$\n\n-----Subtasks-----\nSubtask #1 (50 points): \n- $N \\\
  le 1,000$\n- the sum of $N$ over all test cases does not exceed $10,000$\nSubtask\
  \ #2 (50 points): Original constraints\n\n-----Sample Input:-----\n2\n3 2\n3 2 3\n\
  2 1\n5 6\n\n-----Sample Output:-----\n1.5000000000\n2.0000000000"
"vc-preamble": "import Imports.AllImports\n\ndef solve_spaceship_cooldown (n d : Nat)\
  \ (arrivals : List Nat) : Float :=\n  sorry\n\n\ndef list_maximum (xs : List Nat)\
  \ : Nat :=\n  match xs with\n  | [] => 0\n  | x::xs => xs.foldl Nat.max x\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def list_minimum (xs : List Nat) : Nat :=\n  match xs with\n  |\
  \ [] => 0\n  | x::xs => xs.foldl Nat.min x\n\n-- Result should be non-negative"
"vc-theorems": "theorem spaceship_cooldown_nonnegative\n  (n d : Nat)\n  (arrivals\
  \ : List Nat)\n  (h : arrivals.length ≥ 2)\n  : solve_spaceship_cooldown n d arrivals\
  \ ≥ 0 := sorry\n\n-- Cooldown should not exceed max time window plus delay\n\ntheorem\
  \ spaceship_cooldown_upper_bound\n  (n d : Nat)\n  (arrivals : List Nat)\n  (h :\
  \ arrivals.length ≥ 2)\n  : solve_spaceship_cooldown n d arrivals ≤ \n    ((list_maximum\
  \ arrivals) - (list_minimum arrivals)).toFloat + d.toFloat := sorry\n\n-- Monotonicity\
  \ with respect to delay\n\ntheorem spaceship_cooldown_monotone_delay\n  (n d : Nat)\n\
  \  (arrivals : List Nat)\n  (h : arrivals.length ≥ 2)\n  : solve_spaceship_cooldown\
  \ n d arrivals ≤ solve_spaceship_cooldown n (d + 1) arrivals := sorry\n\n-- Known\
  \ values\n\ntheorem spaceship_cooldown_known_value1 :\n  solve_spaceship_cooldown\
  \ 3 2 [3, 2, 3] = 1.5 := sorry\n\n\ntheorem spaceship_cooldown_known_value2 :\n\
  \  solve_spaceship_cooldown 2 1 [5, 6] = 2.0 := sorry"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded"
