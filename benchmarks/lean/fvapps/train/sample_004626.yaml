"vc-description": "[XKCD 1609]( http://xkcd.com/1609/) provides us with the following\
  \ fun fact:\n\n![If anyone tries this on you, the best reply is a deadpan \"Oh yeah,\
  \ that's a common potato chip flavor in Canada.\"](http://imgs.xkcd.com/comics/food_combinations.png)\n\
  \n### Task:\n\nGiven an array containing a list of good foods, return a string containing\
  \ the assertion that any two of the individually good foods are really good when\
  \ combined.\n\neg: `\"You know what's actually really good? Pancakes and relish.\"\
  `\n\n### Examples:\n```python\nGood_foods = [\"Ice cream\", \"Ham\", \"Relish\"\
  , \"Pancakes\", \"Ketchup\", \"Cheese\", \"Eggs\", \"Cupcakes\", \"Sour cream\"\
  , \"Hot chocolate\", \"Avocado\", \"Skittles\"]\n\nactually_really_good( Good_foods\
  \ ) #  \"You know what's actually really good? Pancakes and relish.\"\n\nactually_really_good(\
  \ ['Peanut butter'] ) #  \"You know what's actually really good? Peanut butter and\
  \ more peanut butter.\"\n\nactually_really_good( [] ) #  \"You know what's actually\
  \ really good? Nothing!\"\n```\n\n### Notes:\nThere are many different valid combinations\
  \ of 2 foods it doesn't matter which one you choose.  \nBut there should be 2 different\
  \ foods listed **unless** there was only one food given in the input array.   \n\
  Capitalization should be correct, the first given food should be capitalized, but\
  \ the second should not.   \nThe input array should not be modified by the method.\
  \   \n\nThe test cases for this kata are fairly complicated, see if you can trick\
  \ them. (Then let me know about it in the discourse.)   \n\nThe original kata language\
  \ is *Ruby*\n\n### Bonus:\nIf you thought this kata was easy, try this one: [Testing\
  \ 'Food combinations'](http://www.codewars.com/kata/testing-food-combinations) in\
  \ which you get to write a method similar to the one the tests here use to check\
  \ that a result is valid and returns any errors it has."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def stringContains (s1 s2 : String) : Bool := sorry\n\ndef actually_really_good\
  \ (foods : List String) : String := sorry\n"
"vc-theorems": "theorem actually_really_good_prefix (foods : List String) :\n  String.startsWith\
  \ (actually_really_good foods) \"You know what's actually really good? \" := sorry\n\
  \n\ntheorem actually_really_good_empty_list :\n  actually_really_good [] = \"You\
  \ know what's actually really good? Nothing!\" := sorry\n\n\n\n\n\n\n\n\ntheorem\
  \ actually_really_good_handles_duplicates (food : String) :\n  actually_really_good\
  \ [food, food] = actually_really_good [food] := sorry\n\n/--\ninfo: \"You know what's\
  \ actually really good? Nothing!\"\n-/\n#guard_msgs in\n#eval actually_really_good\
  \ []\n\n/--\ninfo: \"You know what's actually really good? Peanut butter and more\
  \ peanut butter.\"\n-/\n#guard_msgs in\n#eval actually_really_good [\"Peanut butter\"\
  ]\n\n/--\ninfo: \"You know what's actually really good? Ice cream and ham.\"\n-/\n\
  #guard_msgs in\n#eval actually_really_good [\"Ice cream\", \"Ham\"]\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded_and_plausible"
