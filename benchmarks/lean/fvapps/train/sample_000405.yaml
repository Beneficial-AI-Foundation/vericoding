"vc-description": "We have two integer sequences A and B of the same non-zero length.\n\
  We are allowed to swap elements A[i] and B[i].  Note that both elements are in the\
  \ same index position in their respective sequences.\nAt the end of some number\
  \ of swaps, A and B are both strictly increasing.  (A sequence is strictly increasing\
  \ if and only if A[0] < A[1] < A[2] < ... < A[A.length - 1].)\nGiven A and B, return\
  \ the minimum number of swaps to make both sequences strictly increasing.  It is\
  \ guaranteed that the given input always makes it possible.\nExample:\nInput: A\
  \ = [1,3,5,4], B = [1,2,3,7]\nOutput: 1\nExplanation: \nSwap A[3] and B[3].  Then\
  \ the sequences are:\nA = [1, 3, 5, 7] and B = [1, 2, 3, 4]\nwhich are both strictly\
  \ increasing.\n\nNote:\n\nA, B are arrays with the same length, and that length\
  \ will be in the range [1, 1000].\nA[i], B[i] are integer values in the range [0,\
  \ 2000]."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def minSwapsToIncreasing (A B : List Int) : Nat := sorry \n\ndef\
  \ isIncreasing (arr : List Int) : Bool := sorry\n"
"vc-theorems": "theorem result_makes_increasing \n  (A B : List Int) \n  (h : A.length\
  \ = B.length)\n  (h2 : minSwapsToIncreasing A B < Nat.max A.length B.length) :\n\
  \  ∃ possibleA possibleB : List Int,\n  (possibleA.length = A.length) ∧ \n  (possibleB.length\
  \ = B.length) ∧\n  (isIncreasing possibleA ∨ isIncreasing possibleB) := sorry\n\n\
  \ntheorem length_one_arrays\n  (x : Int) :\n  minSwapsToIncreasing [x] [x] = 0 :=\
  \ sorry\n\n\ntheorem result_is_non_negative\n  (A B : List Int) \n  (h : A.length\
  \ = B.length) :\n  minSwapsToIncreasing A B ≥ 0 := sorry\n\n/--\ninfo: 1\n-/\n#guard_msgs\
  \ in\n#eval min_swaps_to_increasing [1, 3, 5, 4] [1, 2, 3, 7]\n\n/--\ninfo: 0\n\
  -/\n#guard_msgs in\n#eval min_swaps_to_increasing [1, 2, 3] [4, 5, 6]\n\n/--\ninfo:\
  \ 0\n-/\n#guard_msgs in\n#eval min_swaps_to_increasing [2] [1]\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
