"vc-description": "The i-th person has weight people[i], and each boat can carry a\
  \ maximum weight of limit.\nEach boat carries at most 2 people at the same time,\
  \ provided the sum of the weight of those people is at most limit.\nReturn the minimum\
  \ number of boats to carry every given person.  (It is guaranteed each person can\
  \ be carried by a boat.)\n \n\nExample 1:\nInput: people = [1,2], limit = 3\nOutput:\
  \ 1\nExplanation: 1 boat (1, 2)\n\n\nExample 2:\nInput: people = [3,2,2,1], limit\
  \ = 3\nOutput: 3\nExplanation: 3 boats (1, 2), (2) and (3)\n\n\nExample 3:\nInput:\
  \ people = [3,5,3,4], limit = 5\nOutput: 4\nExplanation: 4 boats (3), (3), (4),\
  \ (5)\nNote:\n\n1 <= people.length <= 50000\n1 <= people[i] <= limit <= 30000"
"vc-preamble": "import Imports.AllImports\n\ndef numRescueBoats (people : List Nat)\
  \ (limit : Nat) : Nat :=\n  sorry\n\n\ndef listMax (l : List Nat) : Nat :=\n  sorry\n\
  \n\ndef listMin (l : List Nat) : Nat :=\n  sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def listSort (l : List Nat) : List Nat :=\n  sorry\n"
"vc-theorems": "theorem rescue_boats_minimum (people : List Nat) (h : people ≠ [])\
  \ :\n  let limit := listMax people\n  numRescueBoats people limit ≥ (people.length\
  \ + 1) / 2 := by\n  sorry\n\n\ntheorem rescue_boats_maximum (people : List Nat)\
  \ (h : people ≠ []) :\n  let limit := listMax people\n  numRescueBoats people limit\
  \ ≤ people.length := by\n  sorry\n\n\ntheorem rescue_boats_deterministic (people\
  \ : List Nat) (h : people ≠ []) :\n  let limit := listMax people\n  numRescueBoats\
  \ people limit = numRescueBoats people limit := by\n  sorry\n\n\ntheorem single_person_per_boat\
  \ (weights : List Nat) (h : weights ≠ []) :\n  let min_limit := listMin weights\n\
  \  numRescueBoats weights min_limit = weights.length := by\n  sorry\n\n\ntheorem\
  \ sorted_same_result (people : List Nat) (limit : Nat) \n    (h1 : people.length\
  \ ≥ 2) (h2 : ∀ x ∈ people, x ≤ 100) (h3 : limit ≤ 100) :\n  numRescueBoats people\
  \ limit = numRescueBoats (listSort people) limit := by\n  sorry\n\n/--\ninfo: 1\n\
  -/\n#guard_msgs in\n#eval numRescueBoats [1, 2] 3\n\n/--\ninfo: 3\n-/\n#guard_msgs\
  \ in\n#eval numRescueBoats [3, 2, 2, 1] 3\n\n/--\ninfo: 4\n-/\n#guard_msgs in\n\
  #eval numRescueBoats [3, 5, 3, 4] 5\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
