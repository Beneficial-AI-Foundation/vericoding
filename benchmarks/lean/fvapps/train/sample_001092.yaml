"vc-description": "Chef’s girlfriend is angry with him because he forgot her birthday.\
  \ Chef decided to please her by gifting her a Love Graph. \nChef has $N$ vertices:\
  \ $V_1, V_2, \\dots, V_N$. Love Graph is an undirected multigraph with no self-loops\
  \ and can be constructed by performing the following operations:-\n- Choose an integer\
  \ $i$ ($1 \\leq i \\leq N$)\n- Choose another integer $j \\space \\space \\{ (i\
  \ \\neq j) \\text{ and } (1 \\leq j \\leq N) \\}$\n- Make an edge between $V_i$\
  \ and $V_j$\n- Set $i = j$\n- Repeat steps $2, 3$ and $4$ in order $M-1$ more times.\n\
  Find the number of ways in which Chef can construct a Love Graph. Since the answer\
  \ can be very large, compute it modulo $10^9+7$.\n\n-----Input-----\n- The first\
  \ line of the input contains a single integer $T$ denoting the number of test cases.\
  \ The description of $T$ test cases follows. \n- The first line of each test case\
  \ contains two space-separated integers $N$ and $M$.\n\n-----Output-----\nFor each\
  \ test case, print a single line containing one integer — the number of ways in\
  \ which Chef can construct a Love Graph modulo $10^9+7$.\n\n-----Constraints-----\n\
  - $1 \\leq T \\leq 10^5$\n- $2 \\leq N \\leq 10^9$\n- $1 \\leq M \\leq 10^{18}$\n\
  \n-----Subtasks-----\n- 30 points:\n- $1 \\leq T \\leq 100$\n- $2 \\leq N \\leq\
  \ 10$\n- $1 \\leq M \\leq 10$ \n- 70 points: original constraints\n\n-----Sample\
  \ Input-----\n1\n\n2 1   \n\n-----Sample Output-----\n2   \n\n-----Explanation-----\n\
  There are two ways of constructing Love Graph.\n\nIn first way, we pick Vertex 1\
  \ and then join with Vertex 2.\n\nIn second way, we pick Vertex 2 and then join\
  \ with Vertex 1."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def count_love_graphs (n m : Nat) : Nat := sorry\n\ntheorem count_love_graphs_mod\
  \ (n m : Nat) (h1 : n ≥ 1) (h2 : m ≥ 0) :\n  count_love_graphs n m < 1000000007\
  \ := sorry\n"
"vc-theorems": "theorem count_love_graphs_nonneg (n m : Nat) (h1 : n ≥ 1) (h2 : m\
  \ ≥ 0) :\n  count_love_graphs n m ≥ 0 := sorry\n\n\ntheorem count_love_graphs_base_case\
  \ (m : Nat) :\n  count_love_graphs 1 m = if m = 0 then 1 else 0 := sorry\n\n\ntheorem\
  \ count_love_graphs_single_edge (n : Nat) (h : n ≥ 2) :\n  count_love_graphs n 1\
  \ = (n * (n-1)) % 1000000007 := sorry\n\n\ntheorem count_love_graphs_small_values\
  \ :\n  count_love_graphs 2 1 = 2 ∧ \n  count_love_graphs 3 1 = 6 ∧ \n  count_love_graphs\
  \ 2 2 = 2 := sorry\n\n/--\ninfo: 2\n-/\n#guard_msgs in\n#eval count_love_graphs\
  \ 2 1\n\n/--\ninfo: 12\n-/\n#guard_msgs in\n#eval count_love_graphs 3 2\n\n/--\n\
  info: 12\n-/\n#guard_msgs in\n#eval count_love_graphs 4 1\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
