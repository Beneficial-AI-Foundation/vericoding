"vc-description": "Chef loves saving money and he trusts none other bank than State\
  \ Bank of Chefland. Unsurprisingly, the employees like giving a hard time to their\
  \ customers. But instead of asking them to stand them in long queues, they have\
  \ weird way of accepting money.\nChef did his homework and found that the bank only\
  \ accepts the money in coins such that the sum of the denomination with any previously\
  \ deposited coin OR itself can't be obtained by summing any two coins OR double\
  \ of any coin deposited before. Considering it all, he decided to start with $1$\
  \ Chefland rupee and he would keep choosing smallest possible denominations upto\
  \ $N$ coins. Since chef is busy with his cooking, can you find out the $N$ denomination\
  \ of coins chef would have to take to the bank? Also find the total sum of money\
  \ of those $N$ coins.\n\n-----Input:-----\n- First line has a single integer $T$\
  \ i.e. number of testcases.\n- $T$ lines followed, would have a single integer $N$\
  \ i.e. the number of coins the chef is taking.\n\n-----Output:-----\n- Output for\
  \ $i$-th testcase ($1 ≤ i ≤ T$) would have 2 lines.\n- First line would contain\
  \ $N$ integers i.e. the denomination of coins chef would deposit to the bank.\n\
  - Second line would contain a single integer i.e. the sum of all the coins chef\
  \ would deposit.\n\n-----Constraints:-----\n- $1 ≤ T ≤ 700$\n- $1 ≤ N ≤ 700$\n\n\
  -----Subtasks:-----\n- $20$ points: $1 ≤ T, N ≤ 80$\n- $70$ points: $1 ≤ T, N ≤\
  \ 500$\n- $10$ points: $1 ≤ T, N ≤ 700$ \n\n-----Sample Input:-----\n4\n1\n2\n3\n\
  4\n\n-----Sample Output:-----\n1\n1\n1 2\n3\n1 2 4\n7\n1 2 4 8\n15\n\n-----Explanation:-----\n\
  For testcase 1: First coin is stated to be 1, hence for $N$ = 1, 1 is the answer.\n\
  For testcase 2: Since chef chooses the lowest possible denomination for each $i$-th\
  \ coin upto $N$ coins, second coin would be 2. Only sum possible with N = 1 would\
  \ be 1+1 = 2. For N = 2, $\\{1+2,  2+2\\}$ $\\neq$ $2$.\nFor testcase 3: With first\
  \ two coins being 1 and 2, next coin couldn't be 3 because 3+1 = 2+2, but $\\{4+1,\
  \  4+2,  4+4\\}$ $\\neq$ $\\{1+1,  1+2,  2+2\\}$"
"vc-preamble": "import Imports.AllImports\n\ndef get_coins_and_sum (n: Nat) : List\
  \ Nat × Nat :=\n  sorry\n\n\ndef list_is_sorted {α: Type} (l: List α) (less_eq :\
  \ α → α → Prop) : Prop :=\n  ∀ i j, i < j → j < l.length → less_eq (l.get ⟨i, sorry⟩)\
  \ (l.get ⟨j, sorry⟩)\n\n\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def list_sum : List Nat → Nat \n  | [] => 0\n  | x :: xs => x +\
  \ list_sum xs\n\n\n"
"vc-theorems": "theorem coins_length_matches_input {n: Nat} (h: 1 ≤ n ∧ n ≤ 17):\n\
  \  (get_coins_and_sum n).fst.length = n :=\nsorry\n\n\ntheorem coins_are_positive\
  \ {n: Nat} (h: 1 ≤ n ∧ n ≤ 17):\n  ∀ x ∈ (get_coins_and_sum n).fst, 0 < x :=\nsorry"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
