"vc-description": "# Write this function\n\n![](http://i.imgur.com/mlbRlEm.png)\n\n\
  `for i from 1 to n`, do `i % m` and return the `sum`\n\n    f(n=10, m=5) // returns\
  \ 20 (1+2+3+4+0 + 1+2+3+4+0)\n\n*You'll need to get a little clever with performance,\
  \ since n can be a very large number*"
"vc-preamble": "import Imports.AllImports\n\ndef List.sum (l : List Nat) : Nat :=\n\
  \  match l with\n  | [] => 0\n  | x :: xs => x + List.sum xs\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def f (n m : Nat) : Nat := sorry\n\ntheorem result_non_negative\
  \ (n m : Nat) (hn : n > 0) (hm : m > 0) :\n  f n m ≥ 0 := sorry\n"
"vc-theorems": "theorem monotonic_increase (n delta m : Nat) \n  (hn : n > 0) (hd\
  \ : delta > 0) (hm : m > 0) :\n  f (n + delta) m ≥ f n m := sorry\n\n\n\n\ntheorem\
  \ base_case_one (m : Nat) (hm : m > 1) :\n  f 1 m = 1 % m := sorry\n\n/--\ninfo:\
  \ 20\n-/\n#guard_msgs in\n#eval f 10 5\n\n/--\ninfo: 6\n-/\n#guard_msgs in\n#eval\
  \ f 5 3\n\n/--\ninfo: 12\n-/\n#guard_msgs in\n#eval f 7 4\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded_and_plausible"
