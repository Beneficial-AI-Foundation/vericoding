"vc-description": "An even sequence has the following property: each maximal contiguous\
  \ subsequence which contains only equal integers (i.e. the same integer repeated\
  \ a number of times) has an even length. In particular, the empty sequence is even.\
  \ A subsequence is maximal if it is not contained in a larger contiguous subsequence\
  \ which contains only equal integers.\nChef was given an integer sequence $A_1,\
  \ A_2, \\ldots, A_N$ by his friend Mr. Z. He may perform the following operation\
  \ any number of times: either delete an element of the current sequence (if it is\
  \ non-empty) or insert an integer anywhere in the current sequence (possibly at\
  \ the beginning or at the end).\nFind the minimum number of operations needed to\
  \ make the sequence even.\n\n-----Input-----\n- The first line of the input contains\
  \ a single integer $T$ denoting the number of test cases. The description of $T$\
  \ test cases follows.\n- The first line of each test case contains a single integer\
  \ $N$.\n- The second line contains $N$ space-separated integers $A_1, A_2, \\ldots,\
  \ A_N$.\n\n-----Output-----\nFor each test case, print a single line containing\
  \ one integer — the minimum number of operations.\n\n-----Constraints-----\n- $1\
  \ \\leq T \\leq 10$\n- $1 \\leq N \\leq 2 \\cdot 10^5$\n- $1 \\leq A_i \\leq N$\
  \ for each valid $i$\n- the sum of $N$ over all test cases does not exceed $2 \\\
  cdot 10^6$\n\n-----Subtasks-----\nSubtask #1 (10 points): $N \\leq 18$\nSubtask\
  \ #2 (10 points): $A_i \\leq A_{i+1}$ for each valid $i$\nSubtask #3 (20 points):\
  \ $N \\leq 3,000$\nSubtask #4 (20 points): $A_i \\leq 26$ for each valid $i$\nSubtask\
  \ #5 (40 points): original constraints\n\n-----Example Input-----\n2\n4\n1 1 2 1\n\
  11\n2 2 2 10 2 10 1 1 5 3 5\n\n-----Example Output-----\n2\n3\n\n-----Explanation-----\n\
  Example case 1: Here are two ways to make the sequence even using $2$ operations:\n\
  - Delete the first element $1$ and the only element $2$, resulting in a sequence\
  \ $(1, 1)$, which is even.\n- Delete the last element $1$ and insert $2$ at the\
  \ end, resulting in a sequence $(1,1,2,2)$, which is even.\nIt can be proved that\
  \ one operation is not enough to make the initial sequence even."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def min_operations (n : Nat) (arr : List Nat) : Nat := sorry\n\n\
  -- Basic properties theorem"
"vc-theorems": "theorem min_operations_basic_properties {n : Nat} {arr : List Nat}\
  \ \n  (h1 : n > 0) \n  (h2 : arr.length > 0)\n  (h3 : ∀ x ∈ arr, x ≤ n) : \n  min_operations\
  \ n arr ≤ n := sorry\n\n-- Increasing sequence theorem\n\ntheorem min_operations_increasing_sequence\
  \ {n : Nat} {start : Nat}\n  (h1 : n > 0) \n  (h2 : start > 0) :\n  min_operations\
  \ n (List.range n |>.map (fun i => (start + i) % (n + 1))) ≤ n := sorry \n\n-- Known\
  \ cases theorems\n\ntheorem min_operations_case_4 :\n  min_operations 4 [1, 1, 2,\
  \ 1] = 2 := sorry\n\n\ntheorem min_operations_case_11 :\n  min_operations 11 [2,\
  \ 2, 2, 10, 2, 10, 1, 1, 5, 3, 5] = 3 := sorry\n\n/--\ninfo: 2\n-/\n#guard_msgs\
  \ in\n#eval min_operations 4 [1, 1, 2, 1]\n\n/--\ninfo: 3\n-/\n#guard_msgs in\n\
  #eval min_operations 11 [2, 2, 2, 10, 2, 10, 1, 1, 5, 3, 5]\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
