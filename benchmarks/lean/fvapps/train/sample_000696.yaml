"vc-description": "Recently Rocky had participated in coding competition and he is\
  \ sharing one of the problem with you which he was unable to solve. Help Rocky in\
  \ solving the problem.\nSuppose the alphabets are arranged in a row starting with\
  \ index 0$0$ from AtoZ$A to Z$.\nIf in a coded language  A=27$A=27$ and AND=65$AND=65$.\n\
  Help Rocky to find a suitable formula for finding all the value for given test cases?\n\
  (All alphabets are in Upper case only).\n\n-----Input:-----\nFirst line of the input\
  \ contains  string s$s$.\n\n-----Output:-----\nOutput the possible integer values\
  \ of the given string s$s$ according to the question . \n\n-----Constraints-----\n\
  - 1≤s≤100$1 \\leq s \\leq 100$\n\n-----Sample Input:-----\nA\n\nAND   \n\n-----Sample\
  \ Output:-----\n27\n\n65"
"vc-preamble": "import Imports.AllImports\n\ndef calculate_string_weight (s : String)\
  \ : Nat :=\n  sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def string_reverse (s : String) : String := \n  ⟨s.data.reverse⟩\n"
"vc-theorems": "theorem length_weight_relationship {s : String} \n  (h : ∀ c ∈ s.data,\
  \ 'A' ≤ c ∧ c ≤ 'Z') :\n  s.length ≤ calculate_string_weight s ∧ calculate_string_weight\
  \ s ≤ 27 * s.length :=\nsorry\n\n\ntheorem invariant_under_reversal {s : String}\n\
  \  (h : ∀ c ∈ s.data, 'A' ≤ c ∧ c ≤ 'Z') :\n  calculate_string_weight s = calculate_string_weight\
  \ (string_reverse s) :=\nsorry\n\n\ntheorem weight_additive {s1 s2 : String}\n \
  \ (h1 : ∀ c ∈ s1.data, 'A' ≤ c ∧ c ≤ 'Z')\n  (h2 : ∀ c ∈ s2.data, 'A' ≤ c ∧ c ≤\
  \ 'Z') :\n  calculate_string_weight (s1 ++ s2) = calculate_string_weight s1 + calculate_string_weight\
  \ s2 :=\nsorry\n\n\ntheorem a_highest_weight :\n  calculate_string_weight \"A\"\
  \ > calculate_string_weight \"Z\" :=\nsorry\n\n\ntheorem a_weight_27 :\n  calculate_string_weight\
  \ \"A\" = 27 :=\nsorry\n\n\ntheorem z_weight_2 :\n  calculate_string_weight \"Z\"\
  \ = 2 :=\nsorry\n\n/--\ninfo: 27\n-/\n#guard_msgs in\n#eval calculate_string_weight\
  \ \"A\"\n\n/--\ninfo: 65\n-/\n#guard_msgs in\n#eval calculate_string_weight \"AND\"\
  \n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
