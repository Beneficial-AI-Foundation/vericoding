"vc-description": "# Task\n Mirko has been moving up in the world of basketball. He\
  \ started as a mere spectator, but has already reached the coveted position of the\
  \ national team coach!\n\n Mirco is now facing a difficult task: selecting five\
  \ primary players for the upcoming match against Tajikistan. Since Mirko is incredibly\
  \ lazy, he doesn't bother remembering players' names, let alone their actual skills.\
  \ That's why he has settled on selecting five players who share the same first letter\
  \ of their surnames, so that he can remember them easier. If there are no five players\
  \ sharing the first letter of their surnames, Mirko will simply forfeit the game!\n\
  \n Your task is to find the first letters Mirko's players' surnames can begin with(In\
  \ alphabetical order), or return `\"forfeit\"` if Mirko can't gather a team.\n\n\
  # Input/Output\n\n\n - `[input]` string array `players`\n\n  Array of players' surnames,\
  \ consisting only of lowercase English letters.\n\n \n - `[output]` a string\n\n\
  \  A **sorted** string of possible first letters, or \"forfeit\" if it's impossible\
  \ to gather a team.\n\n\n# Example\n\nFor `players = [\"michael\",\"jordan\",\"\
  lebron\",\"james\",\"kobe\",\"bryant\"]`, the output should be `\"forfeit\"`.\n\n\
  \ For\n ```\n players = [\"babic\",\"keksic\",\"boric\",\"bukic\",\n           \
  \   \"sarmic\",\"balic\",\"kruzic\",\"hrenovkic\",\n              \"beslic\",\"\
  boksic\",\"krafnic\",\"pecivic\",\n              \"klavirkovic\",\"kukumaric\",\"\
  sunkic\",\"kolacic\",\n              \"kovacic\",\"prijestolonasljednikovic\"]\n\
  ```\nthe output should be \"bk\"."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def strange_coach (players : List String) : String := sorry\n\n\
  theorem strange_coach_sorted\n  (players : List String)\n  (h : strange_coach players\
  \ ≠ \"forfeit\")\n  (i j : Nat)\n  (hi : i < (strange_coach players).length)\n \
  \ (hj : j < (strange_coach players).length)\n  (hij : i < j) :\n  (strange_coach\
  \ players).data[i] ≤ (strange_coach players).data[j] := sorry\n"
"vc-theorems": "theorem strange_coach_unique_chars\n  (players : List String)\n  (h\
  \ : strange_coach players ≠ \"forfeit\")\n  (i j : Nat)\n  (hi : i < (strange_coach\
  \ players).length)\n  (hj : j < (strange_coach players).length)\n  (hij : i < j)\
  \ :\n  (strange_coach players).data[i] ≠ (strange_coach players).data[j] := sorry\n\
  \n\ntheorem strange_coach_forfeit_condition\n  (players : List String) :\n  strange_coach\
  \ players = \"forfeit\" ↔\n    ∀ c, (players.filter (λ p => p.get 0 = c)).length\
  \ < 5 := sorry\n\n\ntheorem strange_coach_letter_condition\n  (players : List String)\n\
  \  (h : strange_coach players ≠ \"forfeit\")\n  (c : Char) :\n  c ∈ (strange_coach\
  \ players).toList →\n    (players.filter (λ p => p.get 0 = c)).length ≥ 5 := sorry\n\
  \n\ntheorem strange_coach_complete\n  (players : List String)\n  (h : strange_coach\
  \ players ≠ \"forfeit\")\n  (c : Char) :\n  (players.filter (λ p => p.get 0 = c)).length\
  \ ≥ 5 →\n    c ∈ (strange_coach players).toList := sorry\n\n\ntheorem strange_coach_output_nonempty\n\
  \  (players : List String)\n  (h : players ≠ []) :\n  strange_coach players ≠ \"\
  \" := sorry\n\n\ntheorem strange_coach_output_string\n  (players : List String)\
  \ :\n  strange_coach players = \"forfeit\" ∨\n  (∀ c ∈ (strange_coach players).toList,\
  \ c.isAlpha) := sorry\n\n/--\ninfo: 'forfeit'\n-/\n#guard_msgs in\n#eval strange_coach\
  \ [\"michael\", \"jordan\", \"lebron\", \"james\", \"kobe\", \"bryant\"]\n\n/--\n\
  info: 'bk'\n-/\n#guard_msgs in\n#eval strange_coach [\"babic\", \"keksic\", \"boric\"\
  , \"bukic\", \"sarmic\", \"balic\", \"kruzic\", \"hrenovkic\", \"beslic\", \"boksic\"\
  , \"krafnic\", \"pecivic\", \"klavirkovic\", \"kukumaric\", \"sunkic\", \"kolacic\"\
  , \"kovacic\", \"prijestolonasljednikovic\"]\n\n/--\ninfo: 'b'\n-/\n#guard_msgs\
  \ in\n#eval strange_coach [\"jgztazpytubijfsmjz\", \"bokvgratzzdibku\", \"qineboilzoqdqivc\"\
  , \"bfctyltibtkbxq\", \"vioxcuhqhikxeqwekqkjo\", \"nrvsdhttr\", \"eiaoajuwxpwmyliqikzcchid\"\
  , \"bxrwawgor\", \"gbsqaxotzmblxttj\", \"kwchrcaconuwaivhvnyf\", \"neiemapiica\"\
  , \"bppao\", \"bxujiwivsjfbqrzygpdgkyz\", \"jnzrhhmcgcpffflpzwmqib\", \"jhozlevckrrwimdmyzc\"\
  , \"bomojotkqqditelsk\", \"ywmbheywzfyqjjs\", \"snwrclyjkbspysjftcmyak\", \"eelrsgkuhu\"\
  , \"dnyzsvqjjuqoc\"]\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
