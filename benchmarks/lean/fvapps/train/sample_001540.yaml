"vc-description": "Chef is playing a game with his brother Chefu. He asked Chefu to\
  \ choose a positive integer $N$, multiply it by a given integer $A$, then choose\
  \ a divisor of $N$ (possibly $N$ itself) and add it to the product. Let's denote\
  \ the resulting integer by $M$; more formally, $M = A \\cdot N + d$, where $d$ is\
  \ some divisor of $N$.\nChefu told Chef the value of $M$ and now, Chef should guess\
  \ $N$. Help him find all values of $N$ which Chefu could have chosen.\n\n-----Input-----\n\
  - The first line of the input contains a single integer $T$ denoting the number\
  \ of test cases. The description of $T$ test cases follows.\n- The first and only\
  \ line of each test case contains two space-separated integers $A$ and $M$.\n\n\
  -----Output-----\nFor each test case, print two lines. The first line should contain\
  \ a single integer $C$ denoting the number of possible values of $N$. The second\
  \ line should contain $C$ space-separated integers denoting all possible values\
  \ of $N$ in increasing order.\nIt is guaranteed that the sum of $C$ over all test\
  \ cases does not exceed $10^7$.\n\n-----Constraints-----\n- $1 \\le T \\le 100$\n\
  - $2 \\le M \\le 10^{10}$\n- $1 \\le A < M$\n\n-----Subtasks-----\nSubtask #1 (50\
  \ points):\n- $M \\le 10^6$\nSubtask #2 (50 points): original constraints\n\n-----Example\
  \ Input-----\n3\n3 35\n5 50\n4 65\n\n-----Example Output-----\n1\n10\n0\n\n3\n13\
  \ 15 16"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def divisors (n : Nat) : List Nat := sorry\n\ndef isSorted (as\
  \ : List Nat) : Prop :=\n  ∀ i j, i < j → j < as.length → as[i]! ≤ as[j]!\n"
"vc-theorems": "theorem divisors_properties (n : Nat)\n  (h : n > 0 ∧ n ≤ 10000) :\
  \ \n  let divs := divisors n\n  -- All divisors divide n evenly\n  ∀ d ∈ divs, n\
  \ % d = 0\n  -- List is sorted\n  ∧ isSorted divs\n  -- No duplicates \n  ∧ List.Nodup\
  \ divs\n  -- Product of divisor pairs equals n\n  ∧ ∀ d ∈ divs, d * d ≤ n → d *\
  \ (n / d) = n := sorry\n\n/--\ninfo: 1\n-/\n#guard_msgs in\n#eval len find_possible_n(a,\
  \ m)\n\n/--\ninfo: 0\n-/\n#guard_msgs in\n#eval len find_possible_n(a, m)\n\n/--\n\
  info: 3\n-/\n#guard_msgs in\n#eval len find_possible_n(a, m)\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
