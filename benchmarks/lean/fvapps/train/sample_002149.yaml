"vc-description": "Wabbit is trying to move a box containing food for the rest of\
  \ the zoo in the coordinate plane from the point $(x_1,y_1)$ to the point $(x_2,y_2)$.\n\
  \nHe has a rope, which he can use to pull the box. He can only pull the box if he\
  \ stands exactly $1$ unit away from the box in the direction of one of two coordinate\
  \ axes. He will pull the box to where he is standing before moving out of the way\
  \ in the same direction by $1$ unit.  [Image] \n\nFor example, if the box is at\
  \ the point $(1,2)$ and Wabbit is standing at the point $(2,2)$, he can pull the\
  \ box right by $1$ unit, with the box ending up at the point $(2,2)$ and Wabbit\
  \ ending at the point $(3,2)$.\n\nAlso, Wabbit can move $1$ unit to the right, left,\
  \ up, or down without pulling the box. In this case, it is not necessary for him\
  \ to be in exactly $1$ unit away from the box. If he wants to pull the box again,\
  \ he must return to a point next to the box. Also, Wabbit can't move to the point\
  \ where the box is located.\n\nWabbit can start at any point. It takes $1$ second\
  \ to travel $1$ unit right, left, up, or down, regardless of whether he pulls the\
  \ box while moving.\n\nDetermine the minimum amount of time he needs to move the\
  \ box from $(x_1,y_1)$ to $(x_2,y_2)$. Note that the point where Wabbit ends up\
  \ at does not matter.\n\n\n-----Input-----\n\nEach test contains multiple test cases.\
  \ The first line contains a single integer $t$ $(1 \\leq t \\leq 1000)$: the number\
  \ of test cases. The description of the test cases follows.\n\nEach of the next\
  \ $t$ lines contains four space-separated integers $x_1, y_1, x_2, y_2$ $(1 \\leq\
  \ x_1, y_1, x_2, y_2 \\leq 10^9)$, describing the next test case.\n\n\n-----Output-----\n\
  \nFor each test case, print a single integer: the minimum time in seconds Wabbit\
  \ needs to bring the box from $(x_1,y_1)$ to $(x_2,y_2)$.\n\n\n-----Example-----\n\
  Input\n2\n1 2 2 2\n1 1 2 2\n\nOutput\n1\n4\n\n\n\n-----Note-----\n\nIn the first\
  \ test case, the starting and the ending points of the box are $(1,2)$ and $(2,2)$\
  \ respectively. This is the same as the picture in the statement. Wabbit needs only\
  \ $1$ second to move as shown in the picture in the statement.\n\nIn the second\
  \ test case, Wabbit can start at the point $(2,1)$. He pulls the box to $(2,1)$\
  \ while moving to $(3,1)$. He then moves to $(3,2)$ and then to $(2,2)$ without\
  \ pulling the box. Then, he pulls the box to $(2,2)$ while moving to $(2,3)$. It\
  \ takes $4$ seconds."
"vc-preamble": "import Imports.AllImports\n\ndef abs (n : Int) : Int := \n  if n ≥\
  \ 0 then n else -n\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def solve_wabbit (x1 y1 x2 y2 : Int) : Int := sorry\n\ntheorem\
  \ wabbit_nonnegative (x1 y1 x2 y2 : Int) :\n  solve_wabbit x1 y1 x2 y2 ≥ 0 := sorry\n"
"vc-theorems": "theorem wabbit_same_point (x y : Int) :\n  solve_wabbit x y x y =\
  \ 0 := sorry\n\n\n\n\n\n\n\n\n\n\ntheorem wabbit_symmetry (x1 y1 x2 y2 : Int) :\n\
  \  solve_wabbit x1 y1 x2 y2 = solve_wabbit x2 y2 x1 y1 := sorry\n\n/--\ninfo: 1\n\
  -/\n#guard_msgs in\n#eval solve_wabbit 1 2 2 2\n\n/--\ninfo: 4\n-/\n#guard_msgs\
  \ in\n#eval solve_wabbit 1 1 2 2\n\n/--\ninfo: 0\n-/\n#guard_msgs in\n#eval solve_wabbit\
  \ 69 69 69 69\n\n/--\ninfo: 262146\n-/\n#guard_msgs in\n#eval solve_wabbit 1 1 131073\
  \ 131073\n"
"vc-postamble": "-- Apps difficulty: competition\n-- Assurance level: guarded_and_plausible"
