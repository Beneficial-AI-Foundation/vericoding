"vc-description": "# SpeedCode #2 - Array Madness\n\n## Objective\n\nGiven two **integer\
  \ arrays** ```a, b```, both of ```length >= 1```, create a program that returns\
  \ ```true``` if the **sum of the squares** of each element in ```a``` is **strictly\
  \ greater than** the **sum of the cubes** of each element in ```b```.\n\nE.g.\n\
  ```python\narray_madness([4, 5, 6], [1, 2, 3]) => True #because 4 ** 2 + 5 ** 2\
  \ + 6 ** 2 > 1 ** 3 + 2 ** 3 + 3 ** 3\n```\nGet your timer out.  Are you ready?\
  \  Ready, get set, GO!!!"
"vc-preamble": "import Imports.AllImports\n\ndef sumOfSquares (l : List Int) : Int\
  \ :=\n  sorry\n\n\ndef sumOfCubes (l : List Int) : Int :=\n  sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def array_madness (a b : List Int) : Bool :=\n  sorry\n"
"vc-theorems": "theorem array_madness_correct (a b : List Int) (h1 : a.length > 0)\
  \ (h2 : b.length > 0) :\n  array_madness a b = (sumOfSquares a > sumOfCubes b) :=\n\
  \  sorry\n\n\ntheorem small_numbers_property\n    (a b : List Int)\n    (h1 : a.length\
  \ > 0)\n    (h2 : b.length > 0)\n    (ha : ∀ x ∈ a, 0 ≤ x ∧ x ≤ 10)\n    (hb : ∀\
  \ x ∈ b, 1 ≤ x ∧ x ≤ 10)\n    (h : sumOfSquares a ≤ sumOfCubes b) :\n  array_madness\
  \ a b = false :=\n  sorry\n\n/--\ninfo: True\n-/\n#guard_msgs in\n#eval array_madness\
  \ [4, 5, 6] [1, 2, 3]\n\n/--\ninfo: False\n-/\n#guard_msgs in\n#eval array_madness\
  \ [1, 2] [2, 3]\n\n/--\ninfo: True\n-/\n#guard_msgs in\n#eval array_madness [5,\
  \ 6, 7] [1, 1, 1]\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
