"vc-description": "Given two numbers: 'left' and 'right' (1 <= 'left' <= 'right' <=\
  \ 200000000000000)\nreturn sum of all '1' occurencies in binary representations\
  \ of numbers between 'left' and 'right' (including both)\n\n``` \nExample:\ncountOnes\
  \ 4 7 should return 8, because:\n4(dec) = 100(bin), which adds 1 to the result.\n\
  5(dec) = 101(bin), which adds 2 to the result.\n6(dec) = 110(bin), which adds 2\
  \ to the result.\n7(dec) = 111(bin), which adds 3 to the result.\nSo finally result\
  \ equals 8.\n```\nWARNING: Segment may contain billion elements, to pass this kata,\
  \ your solution cannot iterate through all numbers in the segment!"
"vc-preamble": "import Imports.AllImports\n\ndef countOnes (a b : Nat) : Nat := sorry\n\
  \ndef toBinary (n : Nat) : List Nat := sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def countBinaryOnes (n : Nat) : Nat := sorry\n\ntheorem countOnes_non_negative\n\
  \  (a b : Nat)\n  (h1 : 0 < a) (h2 : a ≤ 10^6)\n  (h3 : 0 < b) (h4 : b ≤ 10^6) :\n\
  \  0 ≤ countOnes a b :=\nsorry"
"vc-theorems": "/--\ninfo: 8\n-/\n#guard_msgs in\n#eval countOnes 4 7\n\n/--\ninfo:\
  \ 2\n-/\n#guard_msgs in\n#eval countOnes 5 5\n\n/--\ninfo: 14846928141\n-/\n#guard_msgs\
  \ in\n#eval countOnes 1 1000000000\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
