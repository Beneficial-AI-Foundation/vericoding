"vc-description": "Every non-negative integer N has a binary representation.  For\
  \ example, 5 can be represented as \"101\" in binary, 11 as \"1011\" in binary,\
  \ and so on.  Note that except for N = 0, there are no leading zeroes in any binary\
  \ representation.\nThe complement of a binary representation is the number in binary\
  \ you get when changing every 1 to a 0 and 0 to a 1.  For example, the complement\
  \ of \"101\" in binary is \"010\" in binary.\nFor a given number N in base-10, return\
  \ the complement of it's binary representation as a base-10 integer.\n \n\n\n\n\
  Example 1:\nInput: 5\nOutput: 2\nExplanation: 5 is \"101\" in binary, with complement\
  \ \"010\" in binary, which is 2 in base-10.\n\n\nExample 2:\nInput: 7\nOutput: 0\n\
  Explanation: 7 is \"111\" in binary, with complement \"000\" in binary, which is\
  \ 0 in base-10.\n\n\nExample 3:\nInput: 10\nOutput: 5\nExplanation: 10 is \"1010\"\
  \ in binary, with complement \"0101\" in binary, which is 5 in base-10.\n\n \nNote:\n\
  \n0 <= N < 10^9\nThis question is the same as 476: https://leetcode.com/problems/number-complement/"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def bitwiseComplement (n : Nat) : Nat := sorry\n\ntheorem complement_range\
  \ (n : Nat) (h : n ≤ 10^9) : \n  let result := bitwiseComplement n\n  0 ≤ result\
  \ ∧ Nat.log2 result + 1 ≤ Nat.log2 n + 1 := sorry\n"
"vc-theorems": "theorem complement_bit_flip (n : Nat) (h : n ≤ 10^9) :\n  let result\
  \ := bitwiseComplement n\n  ∀ i : Nat, i < Nat.log2 n + 1 → \n    Nat.testBit n\
  \ i ≠ Nat.testBit result i := sorry\n\n\ntheorem complement_edge_cases :\n  bitwiseComplement\
  \ 0 = 1 ∧ \n  bitwiseComplement 1 = 0 ∧\n  bitwiseComplement 2 = 1 := sorry\n\n\
  /--\ninfo: 2\n-/\n#guard_msgs in\n#eval bitwiseComplement 5\n\n/--\ninfo: 0\n-/\n\
  #guard_msgs in\n#eval bitwiseComplement 7\n\n/--\ninfo: 5\n-/\n#guard_msgs in\n\
  #eval bitwiseComplement 10\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded_and_plausible"
