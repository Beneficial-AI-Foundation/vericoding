"vc-description": "Complete the function to find the count of the most frequent item\
  \ of an array. You can assume that input is an array of integers. For an empty array\
  \ return `0`\n\n## Example\n```python\ninput array: [3, -1, -1, -1, 2, 3, -1, 3,\
  \ -1, 2, 4, 9, 3]\nouptut: 5 \n```\nThe most frequent number in the array is `-1`\
  \ and it occurs `5` times."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def most_frequent_item_count (lst : List Int) : Nat := sorry\n\n\
  theorem most_frequent_item_count_nonneg (lst : List Int) :\n  most_frequent_item_count\
  \ lst ≥ 0 := sorry\n"
"vc-theorems": "theorem most_frequent_item_count_bounded (lst : List Int) :\n  most_frequent_item_count\
  \ lst ≤ lst.length := sorry\n\n\ntheorem most_frequent_item_count_upper_bound (lst\
  \ : List Int) (x : Int) :\n  x ∈ lst → (lst.count x) ≤ most_frequent_item_count\
  \ lst := sorry\n\n\ntheorem most_frequent_item_count_exists (lst : List Int) :\n\
  \  most_frequent_item_count lst > 0 →\n  ∃ x ∈ lst, lst.count x = most_frequent_item_count\
  \ lst := sorry\n\n\ntheorem most_frequent_item_count_nonempty (lst : List Int) :\n\
  \  lst ≠ [] → most_frequent_item_count lst ≥ 1 := sorry\n\n\ntheorem most_frequent_item_count_empty\
  \ :\n  most_frequent_item_count [] = 0 := sorry\n\n/--\ninfo: 2\n-/\n#guard_msgs\
  \ in\n#eval most_frequent_item_count [3, -1, -1]\n\n/--\ninfo: 5\n-/\n#guard_msgs\
  \ in\n#eval most_frequent_item_count [3, -1, -1, -1, 2, 3, -1, 3, -1, 2, 4, 9, 3]\n\
  \n/--\ninfo: 0\n-/\n#guard_msgs in\n#eval most_frequent_item_count []\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded_and_plausible"
