"vc-description": "German mathematician Christian Goldbach (1690-1764) [conjectured](https://en.wikipedia.org/wiki/Goldbach%27s_conjecture)\
  \ that every even number greater than 2 can be represented by the sum of two prime\
  \ numbers. For example, `10` can be represented as `3+7` or `5+5`.\n\nYour job is\
  \ to make the function return a list containing all unique possible representations\
  \ of `n` in an increasing order if `n` is an even integer; if `n` is odd, return\
  \ an empty list. Hence, the first addend must always be less than or equal to the\
  \ second to avoid duplicates.\n\nConstraints : `2 < n < 32000` and `n` is even\n\
  \n\n## Examples\n```\n26  -->  ['3+23', '7+19', '13+13']\n\n100 -->  ['3+97', '11+89',\
  \ '17+83', '29+71', '41+59', '47+53']\n\n7   -->  [] \n```"
"vc-preamble": "import Imports.AllImports\n\ndef goldbach_partitions : Nat → List\
  \ String := sorry\n\ndef is_prime : Nat → Bool := sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def Nat.is_even (n : Nat) : Bool := n % 2 == 0\n\ntheorem goldbach_odd_numbers_empty\
  \ (n : Nat) :\n  n % 2 = 1 → goldbach_partitions n = [] := sorry"
"vc-theorems": ""
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded_and_plausible"
