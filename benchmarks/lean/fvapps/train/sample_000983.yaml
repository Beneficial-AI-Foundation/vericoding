"vc-description": "A number K$K$ is said to be magical if it can be represented as\
  \ a power of 2 only.That is K$K$=2x$2^{x}$ for some natural number x$x$. \nGiven\
  \ a string of digits S$S$ of length N$N$, Let P be a valid arrangement of S.\nBy\
  \ valid arrangement we mean that it should not have any leading zeroes.\nFind the\
  \ sum of all such distinct Pi's, which, when treated as a number is magical.\nTwo\
  \ arrangements are said to be distinct, if there is atleast one index where they\
  \ differ. \nAs the sum can be very large, print the sum modulo 109+7$10^{9}+7$.\n\
  \n-----Input:-----\n-The first line of the input contains a single integer T$T$\
  \ denoting the number of test cases. \n-Only line of each test case contains a string\
  \ S$S$ of length N$N$, consisting only of digits between 0 to 9.\n\n-----Output:-----\n\
  For each test case, print a single integer denoting the sum of all such magical\
  \ Pi′s$Pi's$ modulo 109+7$10^{9}+7$.\nIf no such Pi$Pi$ exists print \"-1\".\n\n\
  -----Constraints-----\n- 1≤T≤1000$1 \\leq T \\leq 1000$\n- 2≤N≤1000$2 \\leq N \\\
  leq 1000$\n- String only consists of digits between 0 to 9, both inclusive.\n\n\
  -----Subtasks-----\n- 10 points : 1≤N≤5$1 \\leq N \\leq 5$\n- 40 points : 1≤N≤100$1\
  \ \\leq N \\leq 100$\n- 50 points : Original Constraints\n\n-----Sample Input:-----\n\
  2\n35566\n\n31\n\n-----Sample Output:-----\n65536\n\n-1\n\n-----EXPLANATION:-----\n\
  Only arrangement is 65536.\nNo arrangement of 31 gives us a power of two."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def MODULO : Nat := 1000000007\n\ndef solve_magical_power (s :\
  \ String) : Int :=\n  sorry\n"
"vc-theorems": "theorem output_format (s : String) : \n  let result := solve_magical_power\
  \ s\n  result = -1 ∨ result ≥ 0 :=\n  sorry\n\n\ntheorem modulo_constraint (s :\
  \ String) :\n  let result := solve_magical_power s \n  result = -1 ∨ (0 ≤ result\
  \ ∧ result < MODULO) :=\n  sorry\n\n\ntheorem empty_string :\n  solve_magical_power\
  \ \"\" = -1 :=\n  sorry\n\n\ntheorem non_numeric (s : String) :\n  (∀ c : Char,\
  \ c ∈ s.data → !c.isDigit) →\n  solve_magical_power s = -1 :=\n  sorry\n\n\ntheorem\
  \ permutation_property (s s' : String) :\n  s.data.length = s'.data.length →\n \
  \ (∀ c : Char, c ∈ s.data ↔ c ∈ s'.data) →\n  solve_magical_power s = solve_magical_power\
  \ s' :=\n  sorry\n\n/--\ninfo: 65536\n-/\n#guard_msgs in\n#eval solve_magical_power\
  \ \"35566\"\n\n/--\ninfo: -1\n-/\n#guard_msgs in\n#eval solve_magical_power \"31\"\
  \n\n/--\ninfo: 256\n-/\n#guard_msgs in\n#eval solve_magical_power \"256\"\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
