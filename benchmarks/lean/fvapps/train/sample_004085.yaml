"vc-description": "# Description:\n\n Replace the pair of exclamation marks and question\
  \ marks to spaces(from the left to the right). A pair of exclamation marks and question\
  \ marks must has the same number of \"!\" and \"?\". \n \n That is: \"!\" and \"\
  ?\" is a pair; \"!!\" and \"??\" is a pair; \"!!!\" and \"???\" is a pair; and so\
  \ on..\n\n# Examples\n\n```\nreplace(\"!!\") === \"!!\"\nreplace(\"!??\") === \"\
  !??\"\nreplace(\"!?\") === \"  \"\nreplace(\"!!??\") === \"    \"\nreplace(\"!!!????\"\
  ) === \"!!!????\"\nreplace(\"!??!!\") === \"!    \"\nreplace(\"!????!!!?\") ===\
  \ \" ????!!! \" \nreplace(\"!?!!??!!!?\") === \"      !!!?\"\n```"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def replace (s : String) : String := sorry\n\ndef countGroups (s\
  \ : String) : Nat := sorry\n"
"vc-theorems": "theorem replace_preserves_length {s : String} \n  (h : ∀ c ∈ s.data,\
  \ c = '!' ∨ c = '?') :\n  (replace s).length = s.length := sorry\n\n\ntheorem replace_uses_valid_chars\
  \ {s : String}\n  (h : ∀ c ∈ s.data, c = '!' ∨ c = '?') :\n  ∀ c ∈ (replace s).data,\
  \ c = '!' ∨ c = '?' ∨ c = ' ' := sorry \n\n\ntheorem replace_groups_monotonic {s\
  \ : String}\n  (h : ∀ c ∈ s.data, c = '!' ∨ c = '?') :\n  countGroups (replace s)\
  \ ≤ countGroups s := sorry\n\n/--\ninfo: '  ?  ?  ?!!?!!!  !!!  !!!  '\n-/\n#guard_msgs\
  \ in\n#eval replace \"!!?!!?!!?!!?!!!??!!!??!!!??\"\n\n/--\ninfo: '  !  !  !??!???\
  \  ???  ???  '\n-/\n#guard_msgs in\n#eval replace \"??!??!??!??!???!!???!!???!!\"\
  \n\n/--\ninfo: '?  ?  ?  ?!!!  !!!  !!!  !!!??!!!??'\n-/\n#guard_msgs in\n#eval\
  \ replace \"?!!?!!?!!?!!!??!!!??!!!??!!!??!!!??\"\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
