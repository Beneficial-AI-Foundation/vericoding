"vc-description": "Complete the function which takes two arguments and returns all\
  \ numbers which are divisible by the given divisor. First argument is an array of\
  \ `numbers` and the second is the `divisor`.\n\n## Example\n\n```python\ndivisible_by([1,\
  \ 2, 3, 4, 5, 6], 2) == [2, 4, 6]\n```"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def divisible_by (numbers : List Int) (divisor : Int) : List Int\
  \ :=\n  sorry\n"
"vc-theorems": "theorem divisible_by_contains_only_input_elements (numbers : List\
  \ Int) (divisor : Int) \n    (h : divisor ≠ 0) :\n  ∀ x, x ∈ divisible_by numbers\
  \ divisor → x ∈ numbers := by\n  sorry\n\n\ntheorem divisible_by_all_divisible (numbers\
  \ : List Int) (divisor : Int) \n    (h : divisor ≠ 0) :\n  ∀ x, x ∈ divisible_by\
  \ numbers divisor → x % divisor = 0 := by\n  sorry\n\n\ntheorem divisible_by_contains_all_divisible\
  \ (numbers : List Int) (divisor : Int)\n    (h : divisor ≠ 0) :\n  ∀ x, x ∈ numbers\
  \ → x % divisor = 0 → x ∈ divisible_by numbers divisor := by\n  sorry\n\n\ntheorem\
  \ divisible_by_length (numbers : List Int) (divisor : Int)\n    (h : divisor ≠ 0)\
  \ :\n  (divisible_by numbers divisor).length ≤ numbers.length := by\n  sorry\n\n\
  \ntheorem divisible_by_one (numbers : List Int) :\n  divisible_by numbers 1 = numbers\
  \ := by\n  sorry\n\n/--\ninfo: [2, 4, 6]\n-/\n#guard_msgs in\n#eval divisible_by\
  \ [1, 2, 3, 4, 5, 6] 2\n\n/--\ninfo: [3, 6]\n-/\n#guard_msgs in\n#eval divisible_by\
  \ [1, 2, 3, 4, 5, 6] 3\n\n/--\ninfo: []\n-/\n#guard_msgs in\n#eval divisible_by\
  \ [1, 3, 5] 2\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded"
