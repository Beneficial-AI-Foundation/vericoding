"vc-description": "My 5th kata, and 1st in a planned series of rock climbing themed\
  \ katas.\n\nIn rock climbing ([bouldering](https://en.wikipedia.org/wiki/Bouldering)\
  \ specifically), the V/Vermin (USA) climbing grades start at `'VB'` (the easiest\
  \ grade), and then go `'V0'`, `'V0+'`, `'V1'`, `'V2'`, `'V3'`, `'V4'`, `'V5'` etc.\
  \ up to `'V17'` (the hardest grade). You will be given a `list` (`lst`) of climbing\
  \ grades and you have to write a function (`sort_grades`) to `return` a `list` of\
  \ the grades sorted easiest to hardest.\n\nIf the input is an empty `list`, `return`\
  \ an empty `list`; otherwise the input will always be a valid `list` of one or more\
  \ grades.\n\nPlease do vote, rank, and provide any feedback on the kata."
"vc-preamble": "import Imports.AllImports\n\ndef GradeString : Type := String\nderiving\
  \ Inhabited\n\n\ndef grade_val (v : GradeString) : Int :=\n  sorry \n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def sort_grades (grades : List GradeString) : List GradeString\
  \ :=\n  sorry\n"
"vc-theorems": "theorem sort_preserves_size (grades : List GradeString) :\n  List.length\
  \ (sort_grades grades) = List.length grades :=\n  sorry\n\n\ntheorem sort_preserves_elements\
  \ (grades : List GradeString) (g : GradeString) :\n  g ∈ grades ↔ g ∈ sort_grades\
  \ grades :=\n  sorry\n\n\ntheorem sort_is_ordered (grades : List GradeString) :\n\
  \  ∀ i : Nat, i + 1 < List.length (sort_grades grades) →\n  grade_val (List.get!\
  \ (sort_grades grades) i) ≤ \n  grade_val (List.get! (sort_grades grades) (i + 1))\
  \ :=\n  sorry\n\n\ntheorem empty_list_sort :\n  sort_grades [] = [] :=\n  sorry\n\
  \n\ntheorem sort_idempotent (grades : List GradeString) :\n  sort_grades (sort_grades\
  \ grades) = sort_grades grades :=\n  sorry\n\n/--\ninfo: []\n-/\n#guard_msgs in\n\
  #eval sort_grades []\n\n/--\ninfo: ['VB', 'V0', 'V1', 'V3']\n-/\n#guard_msgs in\n\
  #eval sort_grades [\"V1\", \"VB\", \"V3\", \"V0\"]\n\n/--\ninfo: ['V0+', 'V1', 'V2']\n\
  -/\n#guard_msgs in\n#eval sort_grades [\"V0+\", \"V2\", \"V1\"]\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
