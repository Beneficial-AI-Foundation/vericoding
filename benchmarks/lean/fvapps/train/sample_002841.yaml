"vc-description": "Your task is to ___Reverse and Combine Words___. It's not too difficult,\
  \ but there are some things you have to consider...\n\n### So what to do?\n\n\n\
  Input: String containing different \"words\" separated by spaces\n\n```\n1. More\
  \ than one word? Reverse each word and combine first with second, third with fourth\
  \ and so on...\n   (odd number of words => last one stays alone, but has to be reversed\
  \ too)\n2. Start it again until there's only one word without spaces\n3. Return\
  \ your result...\n```\n\n### Some easy examples:\n```\nInput:  \"abc def\"\nOutput:\
  \ \"cbafed\"\n\nInput:  \"abc def ghi 123\"\nOutput: \"defabc123ghi\"\n\nInput:\
  \  \"abc def gh34 434ff 55_eri 123 343\"\nOutput: \"43hgff434cbafed343ire_55321\"\
  \n```\n\nI think it's clear?! First there are some static tests, later on random\
  \ tests too...\n\n### Hope you have fun! :-)"
"vc-preamble": "import Imports.AllImports\n\ndef reverseAndCombineText (text : String)\
  \ : String := sorry \n\n-- Result length should match total chars across merged\
  \ words"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def countChar (c : Char) (s : String) : Nat :=\n  (s.toList.filter\
  \ (· = c)).length\n"
"vc-theorems": "theorem output_length_matches_input_chars (text : String) : \n  String.length\
  \ (reverseAndCombineText text) = \n  String.length (String.replace text \" \" \"\
  \") := sorry\n\n-- All input chars should appear in output in same quantities\n\n\
  theorem chars_preserved (text : String) (c : Char) : \n  countChar c (String.replace\
  \ text \" \" \"\") = \n  countChar c (reverseAndCombineText text) := sorry\n\n--\
  \ Number of words should roughly halve each iteration\n\ntheorem halves_words_per_iteration\
  \ (text : String) :\n  let wordCount := (text.split (· = ' ')).length\n  let maxIterations\
  \ := if wordCount ≤ 1 then 0 \n                       else (wordCount - 1).log2\
  \ + 1\n  ∀ result : String, result = reverseAndCombineText text →\n  (result.split\
  \ (· = ' ')).length ≤ \n    if wordCount ≤ 1 then 1 else wordCount / (2 ^ maxIterations)\
  \ := sorry\n\n/--\ninfo: 'cbafed'\n-/\n#guard_msgs in\n#eval reverse_and_combine_text\
  \ \"abc def\"\n\n/--\ninfo: 'defabcjklghi'\n-/\n#guard_msgs in\n#eval reverse_and_combine_text\
  \ \"abc def ghi jkl\"\n\n/--\ninfo: 'trzwqfdstrteettr45hh4325543544hjhjh21lllll'\n\
  -/\n#guard_msgs in\n#eval reverse_and_combine_text \"234hh54 53455 sdfqwzrt rtteetrt\
  \ hjhjh lllll12  44\"\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
