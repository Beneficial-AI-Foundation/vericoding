"vc-description": "# Task\n You are given a binary string (a string consisting of\
  \ only '1' and '0'). The only operation that can be performed on it is a Flip operation.\
  \ \n \n It flips any binary character ( '0' to '1' and vice versa) and all characters\
  \ to the `right` of it.\n\n For example, applying the Flip operation to the 4th\
  \ character of string \"1001010\" produces the \"1000101\" string, since all characters\
  \ from the 4th to the 7th are flipped.\n\n Your task is to find the minimum number\
  \ of flips required to convert the binary string to string consisting of all '0'.\n\
  \n# Example\n\n For `s = \"0101\"`, the output should be `3`.\n\n It's possible\
  \ to convert the string in three steps:\n\n ```\n \"0101\" -> \"0010\"\n    ^^^\n\
  \ \"0010\" -> \"0001\"\n     ^^\n \"0001\" -> \"0000\"\n      ^\n ```\n\n# Input/Output\n\
  \n\n - `[input]` string `s`\n\n  A binary string.\n\n \n - `[output]` an integer\n\
  \n  The minimum number of flips required."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def bin_str (s : String) : Nat :=\n  sorry\n"
"vc-theorems": "theorem bin_str_nonnegative (s : String) (h : s.length > 0) :\n  bin_str\
  \ s ≥ 0 := sorry\n\n\ntheorem bin_str_ends_zero (s : String) (h : s.length > 0)\
  \ (h2 : s.data.getLast! = '0') :\n  bin_str s % 2 = 0 := sorry\n\n\ntheorem bin_str_ends_one\
  \ (s : String) (h : s.length > 0) (h2 : s.data.getLast! = '1') :\n  bin_str s %\
  \ 2 = 1 := sorry\n\n\ntheorem bin_str_upper_bound (s : String) (h : s.length > 0)\
  \ :\n  bin_str s ≤ 2 * s.length - 1 := sorry\n\n\n\n\ntheorem bin_str_n_zeros (n\
  \ : Nat) (h : n > 0) :\n  bin_str (String.mk (List.replicate n '0')) = 0 := sorry\n\
  \n\ntheorem bin_str_alternating (n : Nat) (h : n > 0) :\n  bin_str (String.mk (List.join\
  \ (List.replicate n ['1', '0']))) = 2 * n := sorry\n\n/--\ninfo: 3\n-/\n#guard_msgs\
  \ in\n#eval bin_str \"0101\"\n\n/--\ninfo: 2\n-/\n#guard_msgs in\n#eval bin_str\
  \ \"10000\"\n\n/--\ninfo: 0\n-/\n#guard_msgs in\n#eval bin_str \"0000000000\"\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded_and_plausible"
