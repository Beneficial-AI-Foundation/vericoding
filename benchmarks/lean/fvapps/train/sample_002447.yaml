"vc-description": "=====Function Descriptions=====\nany()\nThis expression returns\
  \ True if any element of the iterable is true. If the iterable is empty, it will\
  \ return False.\n\nCode\n>>> any([1>0,1==0,1<0])\nTrue\n>>> any([1<0,2<1,3<2])\n\
  False\n\nall()\nThis expression returns True if all of the elements of the iterable\
  \ are true. If the iterable is empty, it will return True.\n\nCode\n>>> all(['a'<'b','b'<'c'])\n\
  True\n>>> all(['a'<'b','c'<'b'])\nFalse\n\n=====Problem Statement=====\nYou are\
  \ given a space separated list of integers. If all the integers are positive, then\
  \ you need to check if any integer is a palindromic integer.\n\n=====Input Format=====\n\
  The first line contains an integer N. N is the total number of integers in the list.\
  \ The second line contains the space separated list of N integers.\n\n=====Constraints=====\n\
  0<N<100\n\n=====Output Format=====\nPrint True if all the conditions of the problem\
  \ statement are satisfied. Otherwise, print False."
"vc-preamble": "import Imports.AllImports\n\ndef isPalindrome (n : Nat) : Bool :=\n\
  \  sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def check_palindromic_positives (nums : List Int) : Bool :=\n \
  \ sorry\n"
"vc-theorems": "theorem palindromic_positives_negative_number\n  {nums : List Int}\n\
  \  (h : ∃ x ∈ nums, x ≤ 0) :\n  check_palindromic_positives nums = false :=\n  sorry\n\
  \n\ntheorem palindromic_positives_all_positive\n  {nums : List Int}\n  (h : ∀ x\
  \ ∈ nums, x > 0) :\n  check_palindromic_positives nums = \n    nums.any (fun x =>\
  \ isPalindrome x.toNat) :=\n  sorry\n\n\ntheorem single_digits_palindromic\n  {nums\
  \ : List Int}\n  (h1 : ∀ x ∈ nums, x > 0)\n  (h2 : ∀ x ∈ nums, x < 10) :\n  check_palindromic_positives\
  \ nums = true :=\n  sorry\n\n\ntheorem non_positive_false \n  {nums : List Int}\n\
  \  (h : ∀ x ∈ nums, x ≤ 0)\n  (h_nonempty : nums ≠ []) :\n  check_palindromic_positives\
  \ nums = false :=\n  sorry\n\n/--\ninfo: True\n-/\n#guard_msgs in\n#eval check_palindromic_positives\
  \ [12, 9, 61, 5, 14]\n\n/--\ninfo: False\n-/\n#guard_msgs in\n#eval check_palindromic_positives\
  \ [-1, 9, 61, 5, 14]\n\n/--\ninfo: False\n-/\n#guard_msgs in\n#eval check_palindromic_positives\
  \ [12, 34, 56, 78]\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
