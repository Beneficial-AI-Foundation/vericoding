"vc-description": "You're given a string of dominos. For each slot, there are 3 options:\n\
  \n  * \"|\" represents a standing domino\n\n  * \"/\" represents a knocked over\
  \ domino\n\n  * \" \" represents a space where there is no domino\n\nFor example:\
  \ \n\n```python\n\"||| ||||//| |/\"\n```\n\nWhat you must do is find the resulting\
  \ string if the first domino is pushed over. Now, tipping a domino will cause the\
  \ next domino to its right to fall over as well, but if a domino is already tipped\
  \ over, or there is a domino missing, the reaction will stop.\n\nSo in out example\
  \ above, the result would be:\n\n\"/// ||||//| |/\"\n\nsince the reaction would\
  \ stop as soon as it gets to a space."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def domino_reaction (s : String) : String := sorry\n\ntheorem domino_reaction_length\
  \ (s : String) : \n  (domino_reaction s).length = s.length := sorry\n"
"vc-theorems": "theorem domino_reaction_preserves_non_vertical (s : String) (i : String.Pos)\
  \ : \n  s.get i ≠ '|' → \n  (domino_reaction s).get i = s.get i := sorry\n\n\ntheorem\
  \ domino_reaction_preserves_after_non_vertical (s : String) (i : String.Pos) \n\
  \  (j : String.Pos) :\n  s.get i ≠ '|' →\n  i ≤ j →\n  (domino_reaction s).get j\
  \ = s.get j := sorry\n\n\ntheorem domino_reaction_valid_chars (s : String) :\n \
  \ ∀ c, c ∈ (domino_reaction s).data → \n  c = '|' ∨ c = '/' ∨ c = ' ' := sorry \n\
  \n\ntheorem domino_reaction_idempotent (s : String) :\n  domino_reaction (domino_reaction\
  \ s) = domino_reaction s := sorry"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded"
