"vc-description": "Array inversion indicates how far the array is from being sorted.\n\
  \nInversions are pairs of elements in array that are out of order.\n\n## Examples\n\
  \n```\n[1, 2, 3, 4]  =>  0 inversions\n[1, 3, 2, 4]  =>  1 inversion: 2 and 3\n\
  [4, 1, 2, 3]  =>  3 inversions: 4 and 1, 4 and 2, 4 and 3\n[4, 3, 2, 1]  =>  6 inversions:\
  \ 4 and 3, 4 and 2, 4 and 1, 3 and 2, 3 and 1, 2 and 1\n```\n\n## Goal\n\nThe goal\
  \ is to come up with a function that can calculate inversions for any arbitrary\
  \ array"
"vc-preamble": "import Imports.AllImports\n\ndef count_inversions (lst : List Int)\
  \ : Nat :=\n  sorry\n\n\ndef isSorted (l : List Int) : Prop :=\n  ∀ i j, i < j →\
  \ j < l.length → l[i]! ≤ l[j]!\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def swap (l : List Int) (i j : Nat) (h1 : i < l.length) (h2 : j\
  \ < l.length) : List Int :=\n  let arr := l.toArray\n  let tmp := arr[i]!\n  let\
  \ arr := arr.set! i arr[j]!\n  let arr := arr.set! j tmp\n  arr.toList\n"
"vc-theorems": "theorem empty_list_zero_inversions :\n  count_inversions [] = 0 :=\
  \ by\n  sorry\n\n\ntheorem sorted_list_zero_inversions {lst : List Int} :\n  isSorted\
  \ lst → count_inversions lst = 0 := by\n  sorry\n\n\ntheorem reversed_sorted_unique_inversions\
  \ {lst : List Int} (h1 : List.Nodup lst) (h2 : isSorted lst) :\n  count_inversions\
  \ (List.reverse lst) = (lst.length * (lst.length - 1)) / 2 := by\n  sorry\n\n\n\
  theorem single_swap_one_inversion {lst : List Int} (h1 : isSorted lst) (h2 : lst.length\
  \ ≥ 2)\n  (h3 : lst[0]! ≠ lst[1]!)\n  (h4 : 0 < lst.length) (h5 : 1 < lst.length)\
  \ :\n  count_inversions (swap lst 0 1 h4 h5) = 1 := by\n  sorry\n\n\ntheorem count_always_non_negative\
  \ (lst : List Int) :\n  count_inversions lst ≥ 0 := by\n  sorry\n\n/--\ninfo: 0\n\
  -/\n#guard_msgs in\n#eval count_inversions #[]\n\n/--\ninfo: 0\n-/\n#guard_msgs\
  \ in\n#eval count_inversions #[1, 2, 3]\n\n/--\ninfo: 1\n-/\n#guard_msgs in\n#eval\
  \ count_inversions #[2, 1, 3]\n\n/--\ninfo: 15\n-/\n#guard_msgs in\n#eval count_inversions\
  \ #[6, 5, 4, 3, 2, 1]\n\n/--\ninfo: 30\n-/\n#guard_msgs in\n#eval count_inversions\
  \ #[6, 5, 4, 3, 3, 3, 3, 2, 1]\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded"
