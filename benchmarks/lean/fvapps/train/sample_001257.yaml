"vc-description": "The chef has a number N, Cheffina challenges chef to form the largest\
  \ number X from the digits of N.\n\n-----Input:-----\n- First-line will contain\
  \ $T$, the number of test cases. Then the test cases follow. \n- Each test case\
  \ contains a single line of input, $N$. \n\n-----Output:-----\nFor each test case,\
  \ output in a single line answer.\n\n-----Constraints-----\n- $1 \\leq T \\leq 10^5$\n\
  - $1 \\leq N \\leq 10^6$\n\n-----Sample Input:-----\n2\n2\n212\n\n-----Sample Output:-----\n\
  2\n221"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def sorted (s : String) : String := sorry\n\ndef largest_digit_rearrangement\
  \ (n : Nat) : Nat := sorry\n\n\n"
"vc-theorems": "theorem not_less_than_input (n : Nat) :\n  largest_digit_rearrangement\
  \ n â‰¥ n := sorry\n\n\ntheorem rearrangement_idempotent (n : Nat) :\n  largest_digit_rearrangement\
  \ (largest_digit_rearrangement n) = largest_digit_rearrangement n := sorry\n\n\n\
  theorem preserves_length (n : Nat) :\n  (toString (largest_digit_rearrangement n)).length\
  \ = (toString n).length := sorry\n\n/--\ninfo: 2\n-/\n#guard_msgs in\n#eval largest_digit_rearrangement\
  \ 2\n\n/--\ninfo: 221\n-/\n#guard_msgs in\n#eval largest_digit_rearrangement 212\n\
  \n/--\ninfo: 4321\n-/\n#guard_msgs in\n#eval largest_digit_rearrangement 4321\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
