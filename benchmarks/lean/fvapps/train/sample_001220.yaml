"vc-description": "The chef was playing with numbers and he found that natural number\
  \ N can be obtained by sum various unique natural numbers, For challenging himself\
  \ chef wrote one problem statement, which he decided to solve in future.\nProblem\
  \ statement: N can be obtained as the sum of Kth power of integers in multiple ways,\
  \ find total number ways?\nAfter that Cheffina came and read what chef wrote in\
  \ the problem statement, for having some fun Cheffina made some changes in the problem\
  \ statement as.\nNew problem statement: N can be obtained as the sum of Kth power\
  \ of unique +ve integers in multiple ways, find total number ways?\nBut, the chef\
  \ is now confused, how to solve a new problem statement, help the chef to solve\
  \ this new problem statement.\n\n-----Input:-----\n- First-line will contain $T$,\
  \ the number of test cases. Then the test cases follow. \n- Each test case contains\
  \ a single line of input, two integers $N, K$. \n\n-----Output:-----\nFor each test\
  \ case, output in a single line answer to the problem statement.\n\n-----Constraints-----\n\
  - $1 \\leq T \\leq 10$\n- $1 \\leq N \\leq 1000$\n- $1 \\leq K \\leq 6$\n\n-----Sample\
  \ Input:-----\n2\n4 1\n38 2\n\n-----Sample Output:-----\n2\n1\n\n-----EXPLANATION:-----\n\
  For 1) 4 can be obtained by as [ 4^1 ], [1^1, 3^1], [2^1, 2^1]. (here ^ stands for\
  \ power)\nBut here [2^1, 2^1] is not the valid way because it is not made up of\
  \ unique +ve integers. \nFor 2) 38 can be obtained in the way which is [2^2, 3^2,\
  \ 5^2] = 4 + 9 + 25"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def count_sum_of_powers (N : Nat) (K : Nat) : Nat :=\n  sorry\n\
  \n-- Basic properties"
"vc-theorems": "theorem count_sum_of_powers_non_negative (N K : Nat) : \n  count_sum_of_powers\
  \ N K ≥ 0 :=\n  sorry\n\n\ntheorem count_sum_of_powers_zero_for_small_N (N K : Nat)\
  \ (h1 : K > 0) (h2 : N > 0) (h3 : N < 1^K) :\n  count_sum_of_powers N K = 0 :=\n\
  \  sorry\n\n\ntheorem count_sum_of_powers_zero_case (K : Nat) :\n  count_sum_of_powers\
  \ 0 K = 1 :=\n  sorry\n\n-- Square sums properties\n\ntheorem count_sum_squares_zero_for_impossible\
  \ (N : Nat) \n  (h : N = 2 ∨ N = 3 ∨ N = 6 ∨ N = 7 ∨ N = 8 ∨ N = 11 ∨ N = 12 ∨ N\
  \ = 15) :\n  count_sum_of_powers N 2 = 0 :=\n  sorry\n\n\ntheorem count_sum_squares_perfect_square\
  \ (N : Nat) (h : ∃ k, N = k * k) :\n  count_sum_of_powers N 2 ≥ 1 :=\n  sorry\n\n\
  -- Small input properties\n\ntheorem count_sum_powers_small_N (N K : Nat) (h : N\
  \ < 2^K) :\n  count_sum_of_powers N K ≤ 1 :=\n  sorry\n\n\ntheorem count_sum_powers_one_first_power\
  \ :\n  count_sum_of_powers 1 1 = 1 :=\n  sorry\n\n/--\ninfo: 2\n-/\n#guard_msgs\
  \ in\n#eval count_sum_of_powers 4 1\n\n/--\ninfo: 1\n-/\n#guard_msgs in\n#eval count_sum_of_powers\
  \ 38 2\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
