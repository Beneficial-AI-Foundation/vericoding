"vc-description": "Pavel made a photo of his favourite stars in the sky. His camera\
  \ takes a photo of all points of the sky that belong to some rectangle with sides\
  \ parallel to the coordinate axes.\n\nStrictly speaking, it makes a photo of all\
  \ points with coordinates $(x, y)$, such that $x_1 \\leq x \\leq x_2$ and $y_1 \\\
  leq y \\leq y_2$, where $(x_1, y_1)$ and $(x_2, y_2)$ are coordinates of the left\
  \ bottom and the right top corners of the rectangle being photographed. The area\
  \ of this rectangle can be zero.\n\nAfter taking the photo, Pavel wrote down coordinates\
  \ of $n$ of his favourite stars which appeared in the photo. These points are not\
  \ necessarily distinct, there can be multiple stars in the same point of the sky.\n\
  \nPavel has lost his camera recently and wants to buy a similar one. Specifically,\
  \ he wants to know the dimensions of the photo he took earlier. Unfortunately, the\
  \ photo is also lost. His notes are also of not much help; numbers are written in\
  \ random order all over his notepad, so it's impossible to tell which numbers specify\
  \ coordinates of which points.\n\nPavel asked you to help him to determine what\
  \ are the possible dimensions of the photo according to his notes. As there are\
  \ multiple possible answers, find the dimensions with the minimal possible area\
  \ of the rectangle.\n\n\n-----Input-----\n\nThe first line of the input contains\
  \ an only integer $n$ ($1 \\leq n \\leq 100\\,000$), the number of points in Pavel's\
  \ records.\n\nThe second line contains $2 \\cdot n$ integers $a_1$, $a_2$, ...,\
  \ $a_{2 \\cdot n}$ ($1 \\leq a_i \\leq 10^9$), coordinates, written by Pavel in\
  \ some order.\n\n\n-----Output-----\n\nPrint the only integer, the minimal area\
  \ of the rectangle which could have contained all points from Pavel's records.\n\
  \n\n-----Examples-----\nInput\n4\n4 1 3 2 3 2 1 3\n\nOutput\n1\nInput\n3\n5 8 5\
  \ 5 7 5\n\nOutput\n0\n\n\n-----Note-----\n\nIn the first sample stars in Pavel's\
  \ records can be $(1, 3)$, $(1, 3)$, $(2, 3)$, $(2, 4)$. In this case, the minimal\
  \ area of the rectangle, which contains all these points is $1$ (rectangle with\
  \ corners at $(1, 3)$ and $(2, 4)$)."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def min_photo_area (n : Nat) (coords : List Int) : Nat :=\n  sorry\n"
"vc-theorems": "theorem identical_coordinates (n : Nat) (h : 0 < n) (h2 : n ≤ 100)\
  \ : \n  min_photo_area n (List.replicate (2*n) 0) = 0 := by\n  sorry\n\n\ntheorem\
  \ repeated_value (n : Nat) (val : Int) (h : 0 < n) (h2 : n ≤ 10) (h3 : -100 ≤ val)\
  \ (h4 : val ≤ 100) :\n  min_photo_area n (List.replicate (2*n) val) = 0 := by\n\
  \  sorry\n\n\ntheorem edge_cases_1 :\n  min_photo_area 1 [1,1] = 0 := by\n  sorry\n\
  \n\ntheorem edge_cases_2 :\n  min_photo_area 2 [1,2,1,2] = 0 := by\n  sorry\n\n\n\
  theorem edge_cases_3 :\n  min_photo_area 3 [5,8,5,5,7,5] = 0 := by\n  sorry\n\n\n\
  theorem edge_cases_4 :\n  min_photo_area 4 [4,1,3,2,3,2,1,3] = 1 := by\n  sorry\n\
  \n\ntheorem ascending_coords (n : Nat) (h : 0 < n) (h2 : n ≤ 10) :\n  min_photo_area\
  \ n (List.map Int.ofNat (List.range (2*n))) ≥ 0 := by\n  sorry\n\n/--\ninfo: 1\n\
  -/\n#guard_msgs in\n#eval min_photo_area 4 [4, 1, 3, 2, 3, 2, 1, 3]\n\n/--\ninfo:\
  \ 0\n-/\n#guard_msgs in\n#eval min_photo_area 3 [5, 8, 5, 5, 7, 5]\n\n/--\ninfo:\
  \ 0\n-/\n#guard_msgs in\n#eval min_photo_area 1 [1, 1]\n"
"vc-postamble": "-- Apps difficulty: competition\n-- Assurance level: guarded"
