"vc-description": "Given three arrays of integers, return the sum of elements that\
  \ are common in all three arrays.\n\nFor example: \n\n```\ncommon([1,2,3],[5,3,2],[7,3,2])\
  \ = 5 because 2 & 3 are common in all 3 arrays\ncommon([1,2,2,3],[5,3,2,2],[7,3,2,2])\
  \ = 7 because 2,2 & 3 are common in the 3 arrays\n```\n\nMore examples in the test\
  \ cases. \n\nGood luck!"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def common (lst1 lst2 lst3 : List Int) : Int := sorry\n\ntheorem\
  \ common_disjoint (lst : List Int) : \n  lst ≠ [] → \n  let shifted1 := lst.map\
  \ (· + 10000)\n  let shifted2 := lst.map (· + 20000)\n  common lst shifted1 shifted2\
  \ = 0 := sorry"
"vc-theorems": ""
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded_and_plausible"
