"vc-description": "If we write out the digits of \"60\" as English words we get \"\
  sixzero\"; the number of letters in \"sixzero\" is seven. The number of letters\
  \ in \"seven\" is five. The number of letters in \"five\" is four. The number of\
  \ letters in \"four\" is four: we have reached a stable equilibrium.\n\nNote: for\
  \ integers larger than 9, write out the names of each digit in a single word (instead\
  \ of the proper name of the number in English). For example, write 12 as \"onetwo\"\
  \ (instead of twelve), and 999 as \"nineninenine\" (instead of nine hundred and\
  \ ninety-nine).\n\nFor any integer between 0 and 999, return an array showing the\
  \ path from that integer to a stable equilibrium:"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def convert_digit_to_word (n : Nat) : String := sorry\n\ndef numbers_of_letters\
  \ (n : Nat) : List String := sorry\n"
"vc-theorems": "theorem convert_digit_to_word_returns_valid_word \n  (n : Nat) (h\
  \ : n ≤ 9) : \n  convert_digit_to_word n ∈ [\"zero\", \"one\", \"two\", \"three\"\
  , \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"] := sorry\n\n-- Removed\
  \ the string type check since it's implicit in Lean's type system\n\ntheorem numbers_of_letters_returns_nonempty\n\
  \  (n : Nat) (h : n ≤ 999) : \n  numbers_of_letters n ≠ [] := sorry\n  \n\ntheorem\
  \ numbers_of_letters_ends_with_four\n  (n : Nat) (h : n ≤ 999) :\n  numbers_of_letters\
  \ n ≠ [] → \n  List.getLast (numbers_of_letters n) (by exact numbers_of_letters_returns_nonempty\
  \ n h) = \"four\" := sorry\n\n\ntheorem numbers_of_letters_length_bounded\n  (n\
  \ : Nat) (h : n ≤ 999) :\n  (numbers_of_letters n).length ≤ 10 := sorry\n\n\ntheorem\
  \ numbers_of_letters_first_element\n  (n : Nat) (h : n ≤ 999) :\n  numbers_of_letters\
  \ n ≠ [] → \n  (numbers_of_letters n).head! = convert_digit_to_word n := sorry\n\
  \n/--\ninfo: ['one', 'three', 'five', 'four']\n-/\n#guard_msgs in\n#eval numbers_of_letters\
  \ 1\n\n/--\ninfo: ['onetwo', 'six', 'three', 'five', 'four']\n-/\n#guard_msgs in\n\
  #eval numbers_of_letters 12\n\n/--\ninfo: ['nineninenine', 'onetwo', 'six', 'three',\
  \ 'five', 'four']\n-/\n#guard_msgs in\n#eval numbers_of_letters 999\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
