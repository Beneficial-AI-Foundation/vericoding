"vc-description": "ASC Week 1 Challenge 4 (Medium #1) \n\nWrite a function that converts\
  \ any sentence into a V  A  P  O  R  W  A  V  E sentence. a V  A  P  O  R  W  A\
  \  V  E sentence converts all the letters into uppercase, and adds 2 spaces between\
  \ each letter (or special character) to create this V  A  P  O  R  W  A  V  E effect.\n\
  \nExamples:\n```javascript \n  vaporcode(\"Lets go to the movies\") // output =>\
  \ \"L  E  T  S  G  O  T  O  T  H  E  M  O  V  I  E  S\"\n  vaporcode(\"Why isn't\
  \ my code working?\") // output => \"W  H  Y  I  S  N  '  T  M  Y  C  O  D  E  W\
  \  O  R  K  I  N  G  ?\"\n```\n```ruby \n  vaporcode(\"Lets go to the movies\")\
  \ # output => \"L  E  T  S  G  O  T  O  T  H  E  M  O  V  I  E  S\"\n  vaporcode(\"\
  Why isn't my code working?\") # output => \"W  H  Y  I  S  N  '  T  M  Y  C  O \
  \ D  E  W  O  R  K  I  N  G  ?\"\n```\n```python \n  vaporcode(\"Lets go to the\
  \ movies\") # output => \"L  E  T  S  G  O  T  O  T  H  E  M  O  V  I  E  S\"\n\
  \  vaporcode(\"Why isn't my code working?\") # output => \"W  H  Y  I  S  N  ' \
  \ T  M  Y  C  O  D  E  W  O  R  K  I  N  G  ?\"\n```\n```crystal \n  vaporcode(\"\
  Lets go to the movies\") # output => \"L  E  T  S  G  O  T  O  T  H  E  M  O  V\
  \  I  E  S\"\n  vaporcode(\"Why isn't my code working?\") # output => \"W  H  Y\
  \  I  S  N  '  T  M  Y  C  O  D  E  W  O  R  K  I  N  G  ?\"\n```\n```cpp \n  vaporcode(\"\
  Lets go to the movies\") // output => \"L  E  T  S  G  O  T  O  T  H  E  M  O  V\
  \  I  E  S\"\n  vaporcode(\"Why isn't my code working?\") // output => \"W  H  Y\
  \  I  S  N  '  T  M  Y  C  O  D  E  W  O  R  K  I  N  G  ?\"\n```\n```haskell \n\
  \  vaporcode \"Lets go to the movies\" \n  -- output => \"L  E  T  S  G  O  T  O\
  \  T  H  E  M  O  V  I  E  S\"\n  vaporcode \"Why isn't my code working?\" \n  --\
  \ output => \"W  H  Y  I  S  N  '  T  M  Y  C  O  D  E  W  O  R  K  I  N  G  ?\"\
  \n```"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def vaporcode (s : String) : String := sorry\n\ntheorem vaporcode_uppercase\
  \ (s : String) :\n  (vaporcode s).toUpper = vaporcode s := sorry\n"
"vc-theorems": "theorem vaporcode_no_consecutive_spaces (s : String) :\n  ¬ String.contains\
  \ (vaporcode s) ' ' := sorry \n\n\ntheorem vaporcode_preserves_nonspaces (s : String)\
  \ :\n  ((vaporcode s).replace \" \" \"\").length = (s.replace \" \" \"\").length\
  \ := sorry\n\n\ntheorem vaporcode_only_original_chars (s : String) (c : Char) :\n\
  \  c ∈ (vaporcode s).data → (c = ' ' ∨ c ∈ s.toUpper.data) := sorry\n\n\ntheorem\
  \ vaporcode_spacing (s : String) (h : s.length > 0) :\n  (String.splitOn (vaporcode\
  \ s) \"  \").length = (s.replace \" \" \"\").length := sorry\n\n\ntheorem vaporcode_empty\
  \ :\n  vaporcode \"\" = \"\" := sorry\n\n\ntheorem vaporcode_roundtrip (s : String)\
  \ :\n  ((vaporcode s).replace \" \" \"\").toUpper = (s.replace \" \" \"\").toUpper\
  \ := sorry\n\n/--\ninfo: expected1\n-/\n#guard_msgs in\n#eval vaporcode \"Lets go\
  \ to the movies\"\n\n/--\ninfo: expected2\n-/\n#guard_msgs in\n#eval vaporcode \"\
  Why isn\"t my code working?\"\n\n/--\ninfo: expected3\n-/\n#guard_msgs in\n#eval\
  \ vaporcode \"Hello World\"\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
