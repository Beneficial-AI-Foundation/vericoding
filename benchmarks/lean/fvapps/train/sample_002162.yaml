"vc-description": "Snuke is playing a puzzle game.\nIn this game, you are given a\
  \ rectangular board of dimensions R × C, filled with numbers. Each integer i from\
  \ 1 through N is written twice, at the coordinates (x_{i,1},y_{i,1}) and (x_{i,2},y_{i,2}).\n\
  The objective is to draw a curve connecting the pair of points where the same integer\
  \ is written, for every integer from 1 through N.\nHere, the curves may not go outside\
  \ the board or cross each other.\nDetermine whether this is possible.\n\n-----Constraints-----\n\
  \ - 1 ≤ R,C ≤ 10^8\n - 1 ≤ N ≤ 10^5\n - 0 ≤ x_{i,1},x_{i,2} ≤ R(1 ≤ i ≤ N)\n - 0\
  \ ≤ y_{i,1},y_{i,2} ≤ C(1 ≤ i ≤ N)\n - All given points are distinct.\n - All input\
  \ values are integers.\n\n-----Input-----\nInput is given from Standard Input in\
  \ the following format:\nR C N\nx_{1,1} y_{1,1} x_{1,2} y_{1,2}\n:\nx_{N,1} y_{N,1}\
  \ x_{N,2} y_{N,2}\n\n-----Output-----\nPrint YES if the objective is achievable;\
  \ print NO otherwise.\n\n-----Sample Input-----\n4 2 3\n0 1 3 1\n1 1 4 1\n2 0 2\
  \ 2\n\n-----Sample Output-----\nYES\n\n\nThe above figure shows a possible solution."
"vc-preamble": "import Imports.AllImports\n\ndef isOnPerimeter (p : Point) (R C :\
  \ Int) : Bool :=\n  sorry\n\n\ndef validPairs (p1 p2 : Point) (R C : Int) : Bool\
  \ :=\n  sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def canDrawCurves (R C N : Int) (pairs : List (Point × Point))\
  \ : String :=\n  sorry\n\n-- Theorem: Output is either YES or NO"
"vc-theorems": "theorem output_format (R C N : Int) (pairs : List (Point × Point))\
  \ :\n  (canDrawCurves R C N pairs = \"YES\") ∨ (canDrawCurves R C N pairs = \"NO\"\
  ) :=\n  sorry\n\n-- Theorem: Empty list of pairs always returns YES\n\ntheorem empty_pairs_is_yes\
  \ (R C : Int) :\n  canDrawCurves R C 0 [] = \"YES\" :=\n  sorry\n\n-- Theorem: Same\
  \ point pairs always return YES\n\ntheorem same_point_pairs (R C : Int) (p : Point)\
  \ :\n  isOnPerimeter p R C → canDrawCurves R C 1 [(p, p)] = \"YES\" :=\n  sorry\n\
  \n/--\ninfo: 'YES'\n-/\n#guard_msgs in\n#eval can_draw_curves 4 2 3 [[0, 1, 3, 1],\
  \ [1, 1, 4, 1], [2, 0, 2, 2]]\n\n/--\ninfo: 'NO'\n-/\n#guard_msgs in\n#eval can_draw_curves\
  \ 2 2 4 [[0, 0, 2, 2], [2, 0, 0, 1], [0, 2, 1, 2], [1, 1, 2, 1]]\n\n/--\ninfo: 'NO'\n\
  -/\n#guard_msgs in\n#eval can_draw_curves 1 1 2 [[0, 0, 1, 1], [1, 0, 0, 1]]\n"
"vc-postamble": "-- Apps difficulty: competition\n-- Assurance level: unguarded"
