"vc-description": "# Task\n Two integer numbers are added using the column addition\
  \ method. When using this method, some additions of digits produce non-zero carries\
  \ to the next positions. Your task is to calculate the number of non-zero carries\
  \ that will occur while adding the given numbers.\n\n The numbers are added in base\
  \ 10.\n\n# Example\n\n For `a = 543 and b = 3456,` the output should be `0`\n \n\
  \ For `a = 1927 and b = 6426`, the output should be `2`\n \n For `a = 9999 and b\
  \ = 1`, the output should be `4`\n \n \n# Input/Output\n\n\n - `[input]` integer\
  \ `a`\n\n  A positive integer.\n\n  Constraints: `1 ≤ a ≤ 10^7`\n\n\n - `[input]`\
  \ integer `b`\n\n  A positive integer.\n\n  Constraints: `1 ≤ b ≤ 10^7`\n\n \n -\
  \ `[output]` an integer"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def number_of_carries (a b : Nat) : Nat := sorry\n\ntheorem carries_non_negative\
  \ (a b : Nat) : \n  number_of_carries a b ≥ 0 := sorry\n"
"vc-theorems": "theorem carries_max_digits (a b : Nat) :\n  number_of_carries a b\
  \ ≤ String.length (toString (max a b)) := sorry\n\n\ntheorem carries_with_zero (x\
  \ : Nat) :\n  number_of_carries x 0 = 0 ∧ number_of_carries 0 x = 0 := sorry\n\n\
  \ntheorem single_digit_no_carry {d1 d2 : Nat} :\n  d1 ≤ 9 → d2 ≤ 9 → d1 + d2 < 10\
  \ → \n  number_of_carries d1 d2 = 0 := sorry\n\n\ntheorem identical_numbers (x :\
  \ Nat) :\n  number_of_carries x x = number_of_carries x x := sorry\n\n/--\ninfo:\
  \ 0\n-/\n#guard_msgs in\n#eval number_of_carries 543 3456\n\n/--\ninfo: 2\n-/\n\
  #guard_msgs in\n#eval number_of_carries 1927 6426\n\n/--\ninfo: 4\n-/\n#guard_msgs\
  \ in\n#eval number_of_carries 9999 1\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded_and_plausible"
