"vc-description": "Chef wants to make a feast. In order to do that, he needs a lot\
  \ of different ingredients. Each ingredient has a certain tastiness; the tastiness\
  \ of each ingredient may be any positive integer. Initially, for each tastiness\
  \ between $K$ and $K+N-1$ (inclusive), Chef has an infinite supply of ingredients\
  \ with this tastiness.\nThe ingredients have a special property: any two of them\
  \ can be mixed to create a new ingredient. If the original ingredients had tastiness\
  \ $x$ and $y$ (possibly $x = y$), the new ingredient has tastiness $x+y$. The ingredients\
  \ created this way may be used to mix other ingredients as well. Chef is free to\
  \ mix ingredients in any way he chooses any number of times.\nLet's call a tastiness\
  \ $v$ ($v > 0$) unreachable if there is no way to obtain an ingredient with tastiness\
  \ $v$; otherwise, tastiness $v$ is reachable. Chef wants to make ingredients with\
  \ all reachable values of tastiness and he would like to know the number of unreachable\
  \ values. Help him solve this problem. Since the answer may be large, compute it\
  \ modulo $1,000,000,007$ ($10^9+7$).\nNote that there is an infinite number of reachable\
  \ values of tastiness, but it can be proven that the number of unreachable values\
  \ is always finite for $N \\ge 2$.\n\n-----Input-----\n- The first line of the input\
  \ contains a single integer $T$ denoting the number of test cases. The description\
  \ of $T$ test cases follows.\n- The first and only line of each test case contains\
  \ two space-separated integers $N$ and $K$.\n\n-----Output-----\nFor each test case,\
  \ print a single line containing one integer â€” the number of unreachable values\
  \ of tastiness, modulo $1,000,000,007$.\n\n-----Constraints-----\n- $1 \\le T \\\
  le 10^5$\n- $2 \\le N \\le 10^{18}$\n- $1 \\le K \\le 10^{18}$\n\n-----Subtasks-----\n\
  Subtask #1 (20 points): $N = 2$\nSubtask #2 (80 points): original constraints\n\n\
  -----Example Input-----\n2\n2 1\n3 3\n\n-----Example Output-----\n0\n2\n\n-----Explanation-----\n\
  Example case 1: It is possible to obtain ingredients with all values of tastiness.\n\
  Example case 2: Ingredients with tastiness $1$ and $2$ cannot be made."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def MOD := 1000000007\n\ndef solve_feast (N K : Nat) : Nat :=\n\
  \  sorry\n\n\n"
"vc-theorems": "theorem solve_feast_base_case : \n  solve_feast 2 1 = 0 :=\nsorry\n\
  \n/--\ninfo: 0\n-/\n#guard_msgs in\n#eval solve_feast 2 1\n\n/--\ninfo: 2\n-/\n\
  #guard_msgs in\n#eval solve_feast 3 3\n\n/--\ninfo: 1\n-/\n#guard_msgs in\n#eval\
  \ solve_feast 2 2\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
