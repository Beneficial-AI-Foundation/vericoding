"vc-description": "Given a list of strings, you need to find the longest uncommon\
  \ subsequence among them. The longest uncommon subsequence is defined as the longest\
  \ subsequence of one of these strings and this subsequence should not be any subsequence\
  \ of the other strings.\n\n\n\nA subsequence is a sequence that can be derived from\
  \ one sequence by deleting some characters without changing the order of the remaining\
  \ elements. Trivially, any string is a subsequence of itself and an empty string\
  \ is a subsequence of any string.\n\n\n\nThe input will be a list of strings, and\
  \ the output needs to be the length of the longest uncommon subsequence. If the\
  \ longest uncommon subsequence doesn't exist, return -1.\n\n\nExample 1:\n\nInput:\
  \ \"aba\", \"cdc\", \"eae\"\nOutput: 3\n\n\n\nNote:\n\nAll the given strings' lengths\
  \ will not exceed 10.\nThe length of the given list will be in the range of [2,\
  \ 50]."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def find_longest_uncommon_subseq (strs : List String) : Int :=\
  \ sorry\n\ntheorem find_longest_uncommon_subseq_output_type_and_range\n  (strs :\
  \ List String)\n  (h : strs.length > 0) :\n  let result := find_longest_uncommon_subseq\
  \ strs\n  result = -1 ∨ result ≥ 0 := sorry\n"
"vc-theorems": "theorem find_longest_uncommon_subseq_bounded_by_max_length\n  (strs\
  \ : List String)\n  (h : strs.length > 0) :\n  find_longest_uncommon_subseq strs\
  \ ≤ (strs.map String.length).maximum?.getD 0 := sorry\n\n\n\n\ntheorem find_longest_uncommon_subseq_single_string\n\
  \  (s : String)\n  (strs : List String)\n  (h : strs = [s]) :\n  find_longest_uncommon_subseq\
  \ strs = s.length := sorry\n\n/--\ninfo: 3\n-/\n#guard_msgs in\n#eval find_longest_uncommon_subseq\
  \ [\"aba\", \"cdc\", \"eae\"]\n\n/--\ninfo: -1\n-/\n#guard_msgs in\n#eval find_longest_uncommon_subseq\
  \ [\"aaa\", \"aaa\", \"aa\"]\n\n/--\ninfo: -1\n-/\n#guard_msgs in\n#eval find_longest_uncommon_subseq\
  \ [\"aabb\", \"aabb\", \"ab\"]\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
