"vc-description": "Chef is a big fan of soccer! He loves soccer so much that he even\
  \ invented soccer for dogs! Here are the rules of soccer for dogs:\n- N$N$ dogs\
  \ (numbered 1$1$ through N$N$) stand in a line in such a way that for each valid\
  \ i$i$, dogs i$i$ and i+1$i + 1$ are adjacent.\n- Each dog has a skill level, which\
  \ is either 1$1$ or 2$2$.\n- At the beginning of the game, Chef passes a ball to\
  \ dog 1$1$ (dog 1$1$ receives the ball).\n- For each valid i$i$, if dog i$i$ has\
  \ skill level s$s$, this dog can pass the ball to any dog with number j$j$ such\
  \ that 1≤|i−j|≤s$1 \\le |i-j| \\le s$.\n- Each dog (including dog 1$1$) may receive\
  \ the ball at most once.\n- Whenever a dog receives the ball, it must either pass\
  \ it to another dog or finish the game by scoring a goal.\nWhile the dogs were playing,\
  \ Chef also created a game for developers. He defined the result of a game of soccer\
  \ for dogs as the sequence of dogs which received the ball in the order in which\
  \ they received it. The last dog in the sequence is the dog that decided to score\
  \ a goal; if a dog never received the ball, it does not appear in the sequence.\
  \ In the game for developers, you should find the number of possible results of\
  \ soccer for dogs.\nFind this number of possible results modulo 109+7$10^9 + 7$.\
  \ Two results of soccer for dogs (sequences of dogs' numbers) are considered different\
  \ if these sequences have different lengths or if there is a valid index i$i$ such\
  \ that the i$i$-th dog in one sequence is different from the i$i$-th dog in the\
  \ other sequence.\n\n-----Input-----\n- The first line of the input contains a single\
  \ integer T$T$ denoting the number of test cases. The description of T$T$ test cases\
  \ follows.\n- The first line of each test case contains a single integer N$N$.\n\
  - The second line contains N$N$ space-separated integers A1,A2,…,AN$A_1, A_2, \\\
  ldots, A_N$ denoting the skill levels of the dogs.\n\n-----Output-----\nFor each\
  \ test case, print a single line containing one integer - the number of different\
  \ results of soccer for dogs, modulo 109+7$10^9 + 7$.\n\n-----Constraints-----\n\
  - 1≤T≤10$1 \\le T \\le 10$\n- 1≤N≤105$1 \\le N \\le 10^5$\n- 1≤Ai≤2$1 \\le A_i \\\
  le 2$ for each valid i$i$\n\n-----Subtasks-----\nSubtask #1 (10 points): N≤10$N\
  \ \\le 10$\nSubtask #2 (30 points): N≤103$N \\le 10^3$\nSubtask #3 (60 points):\
  \ original constraints\n\n-----Example Input-----\n3\n4\n1 1 1 1\n3\n2 2 2\n4\n\
  1 2 1 1\n\n-----Example Output-----\n4\n5\n6\n\n-----Explanation-----\nExample case\
  \ 1: The following results are possible: 1$1$, [1,2]$[1, 2]$, [1,2,3]$[1, 2, 3]$,\
  \ [1,2,3,4]$[1, 2, 3, 4]$.\nExample case 2: The following results are possible:\
  \ [1]$[1]$, [1,2]$[1, 2]$, [1,2,3]$[1, 2, 3]$, [1,3,2]$[1, 3, 2]$, [1,3]$[1, 3]$."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def MOD := 1000000007\n\ndef count_dog_soccer_results (n: Nat)\
  \ (skills: List Nat) : Nat :=\n  sorry\n"
"vc-theorems": "theorem result_within_mod_bounds {n : Nat} {skills : List Nat} :\n\
  \  0 ≤ count_dog_soccer_results n skills ∧ \n  count_dog_soccer_results n skills\
  \ < MOD :=\n  sorry\n\n\ntheorem result_at_least_n {n : Nat} {skills : List Nat}\
  \ \n  (h : skills.length = n) :\n  count_dog_soccer_results n skills ≥ n :=\n  sorry\n\
  \n\ntheorem all_ones_returns_n {n : Nat} {skills : List Nat}\n  (h1 : skills.length\
  \ = n)\n  (h2 : ∀ x ∈ skills, x = 1) :\n  count_dog_soccer_results n skills = n\
  \ :=\n  sorry\n\n\ntheorem all_twos_at_least_n {n : Nat} {skills : List Nat}\n \
  \ (h1 : skills.length = n)\n  (h2 : ∀ x ∈ skills, x = 2) :\n  count_dog_soccer_results\
  \ n skills ≥ n :=\n  sorry\n\n\ntheorem append_one_increases {n : Nat} {skills :\
  \ List Nat}\n  (h : skills.length = n) :\n  count_dog_soccer_results n skills <\
  \ \n  count_dog_soccer_results (n+1) (skills ++ [1]) :=\n  sorry\n\n/--\ninfo: 4\n\
  -/\n#guard_msgs in\n#eval count_dog_soccer_results 4 [1, 1, 1, 1]\n\n/--\ninfo:\
  \ 5\n-/\n#guard_msgs in\n#eval count_dog_soccer_results 3 [2, 2, 2]\n\n/--\ninfo:\
  \ 6\n-/\n#guard_msgs in\n#eval count_dog_soccer_results 4 [1, 2, 1, 1]\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
