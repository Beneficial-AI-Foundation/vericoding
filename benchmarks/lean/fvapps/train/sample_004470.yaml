"vc-description": "DropCaps means that the first letter of the starting word of the\
  \ paragraph should be in caps and the remaining lowercase, just like you see in\
  \ the newspaper. \n\nBut for a change, let's do that for each and every word of\
  \ the given String. Your task is to capitalize every word that has length greater\
  \ than 2, leaving smaller words as they are.\n\n*should work also on Leading and\
  \ Trailing Spaces and caps.\n\n```python\ndrop_cap('apple') => \"Apple\"\ndrop_cap('apple\
  \ of banana'); => \"Apple of Banana\"\ndrop_cap('one   space'); => \"One   Space\"\
  \ \ndrop_cap('   space WALK   '); => \"   Space Walk   \" \n```\n\n**Note:** you\
  \ will be provided atleast one word and should take string as input and return string\
  \ as output."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def drop_cap (s : String) : String := sorry\n\ntheorem empty_and_whitespace\
  \ (s : String) :\n  (s.isEmpty → (drop_cap s).isEmpty) ∧ \n  (¬s.isEmpty → (drop_cap\
  \ s).length ≥ s.trim.length) := by sorry\n"
"vc-theorems": "theorem spacing_preserved (s : String) (h : ¬s.isEmpty) :\n  let orig_spaces\
  \ := s.split (λ c => c.isWhitespace)\n  let result_spaces := (drop_cap s).split\
  \ (λ c => c.isWhitespace)\n  orig_spaces.map (λ s => s.length) = result_spaces.map\
  \ (λ s => s.length) := by sorry\n\n\ntheorem edge_cases (s : String) :\n  (s.trim.length\
  \ ≤ 2 → drop_cap s = s) ∧\n  (s.trim.length > 2 → drop_cap s = s.toLower.capitalize)\
  \ := by sorry\n\n\ntheorem uppercase_words (s : String) \n  (h₁ : s.length ≥ 3)\n\
  \  (h₂ : ∀ c ∈ s.data, 65 ≤ c.toNat ∧ c.toNat ≤ 90) :\n  drop_cap s = s.toLower.capitalize\
  \ := by sorry\n\n/--\ninfo: 'Apple Banana'\n-/\n#guard_msgs in\n#eval drop_cap \"\
  apple banana\"\n\n/--\ninfo: 'One   Space'\n-/\n#guard_msgs in\n#eval drop_cap \"\
  one   space\"\n\n/--\ninfo: '   Space Walk   '\n-/\n#guard_msgs in\n#eval drop_cap\
  \ \"   space WALK   \"\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
