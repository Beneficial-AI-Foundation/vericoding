"vc-description": "=====Function Descriptions=====\n.symmetric_difference()\n\nThe\
  \ .symmetric_difference() operator returns a set with all the elements that are\
  \ in the set and the iterable but not both.\nSometimes, a ^ operator is used in\
  \ place of the .symmetric_difference() tool, but it only operates on the set of\
  \ elements in set.\nThe set is immutable to the .symmetric_difference() operation\
  \ (or ^ operation).\n\n>>> s = set(\"Hacker\")\n>>> print s.symmetric_difference(\"\
  Rank\")\nset(['c', 'e', 'H', 'n', 'R', 'r'])\n\n>>> print s.symmetric_difference(set(['R',\
  \ 'a', 'n', 'k']))\nset(['c', 'e', 'H', 'n', 'R', 'r'])\n\n>>> print s.symmetric_difference(['R',\
  \ 'a', 'n', 'k'])\nset(['c', 'e', 'H', 'n', 'R', 'r'])\n\n>>> print s.symmetric_difference(enumerate(['R',\
  \ 'a', 'n', 'k']))\nset(['a', 'c', 'e', 'H', (0, 'R'), 'r', (2, 'n'), 'k', (1, 'a'),\
  \ (3, 'k')])\n\n>>> print s.symmetric_difference({\"Rank\":1})\nset(['a', 'c', 'e',\
  \ 'H', 'k', 'Rank', 'r'])\n\n>>> s ^ set(\"Rank\")\nset(['c', 'e', 'H', 'n', 'R',\
  \ 'r'])\n\n=====Problem Statement=====\nStudents of District College have subscriptions\
  \ to English and French newspapers. Some students have subscribed to English only,\
  \ some have subscribed to French only, and some have subscribed to both newspapers.\n\
  \nYou are given two sets of student roll numbers. One set has subscribed to the\
  \ English newspaper, and one set has subscribed to the French newspaper. Your task\
  \ is to find the total number of students who have subscribed to either the English\
  \ or the French newspaper but not both.\n\n=====Input Format=====\nThe first line\
  \ contains the number of students who have subscribed to the English newspaper.\n\
  The second line contains the space separated list of student roll numbers who have\
  \ subscribed to the English newspaper.\nThe third line contains the number of students\
  \ who have subscribed to the French newspaper.\nThe fourth line contains the space\
  \ separated list of student roll numbers who have subscribed to the French newspaper.\n\
  \n=====Constraints=====\n0 < Total number of students in college < 1000\n\n=====Output\
  \ Format=====\nOutput total number of students who have subscriptions to the English\
  \ or the French newspaper but not both."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def symmetric_subscribers (eng : List Int) (french : List Int)\
  \ : Nat := sorry\n\ntheorem symmetric_subscribers_non_negative \n  (eng : List Int)\
  \ (french : List Int) : \n  symmetric_subscribers eng french ≥ 0 := sorry\n\n\n"
"vc-theorems": "theorem symmetric_subscribers_upper_bound \n  (eng : List Int) (french\
  \ : List Int) :\n  symmetric_subscribers eng french ≤ List.length eng + List.length\
  \ french := sorry\n\n\ntheorem symmetric_subscribers_identical_lists\n  (nums :\
  \ List Int) :\n  symmetric_subscribers nums nums = 0 := sorry\n\n/--\ninfo: 8\n\
  -/\n#guard_msgs in\n#eval symmetric_subscribers [1, 2, 3, 4, 5, 6, 7, 8, 9] [10,\
  \ 1, 2, 3, 11, 21, 55, 6, 8]\n\n/--\ninfo: 4\n-/\n#guard_msgs in\n#eval symmetric_subscribers\
  \ [1, 2, 3] [3, 4, 5]\n\n/--\ninfo: 4\n-/\n#guard_msgs in\n#eval symmetric_subscribers\
  \ [1, 2] [3, 4]\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded_and_plausible"
