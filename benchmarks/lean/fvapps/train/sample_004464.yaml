"vc-description": "Write a function ```x(n)``` that takes in a number ```n``` and\
  \ returns an ```nxn``` array with an ```X``` in the middle. The ```X``` will be\
  \ represented by ```1's``` and the rest will be ```0's```. \nE.g.\n```python\nx(5)\
  \ ==  [[1, 0, 0, 0, 1],\n          [0, 1, 0, 1, 0],\n          [0, 0, 1, 0, 0],\n\
  \          [0, 1, 0, 1, 0],\n          [1, 0, 0, 0, 1]];\n          \nx(6) ==  [[1,\
  \ 0, 0, 0, 0, 1],\n          [0, 1, 0, 0, 1, 0],\n          [0, 0, 1, 1, 0, 0],\n\
  \          [0, 0, 1, 1, 0, 0],\n          [0, 1, 0, 0, 1, 0],\n          [1, 0,\
  \ 0, 0, 0, 1]];\n```"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def x (n : Nat) : List (List Nat) := sorry\n\ntheorem square_matrix\
  \ (n : Nat) (h: n > 0) :\n  let result := x n\n  List.length result = n ∧\n  ∀ row\
  \ ∈ result, List.length row = n :=\nsorry\n"
"vc-theorems": "theorem diagonal_ones (n : Nat) (h: n > 0) :\n  let result := x n\n\
  \  (∀ i, i < n → List.get! (List.get! result i) i = 1) ∧\n  (∀ i, i < n → List.get!\
  \ (List.get! result i) (n-1-i) = 1) :=\nsorry\n\n\ntheorem non_diagonal_zeros (n\
  \ : Nat) (h: n > 0) :\n  let result := x n\n  ∀ i j, i < n → j < n → i ≠ j → j ≠\
  \ (n-1-i) →\n    List.get! (List.get! result i) j = 0 :=\nsorry\n\n\ntheorem symmetry\
  \ (n : Nat) (h: n > 0) :\n  let result := x n\n  (∀ i j, i < n → j < n → List.get!\
  \ (List.get! result i) j = \n              List.get! (List.get! result (n-1-i))\
  \ (n-1-j)) ∧\n  (∀ i j, i < n → j < n → List.get! (List.get! result i) j = \n  \
  \            List.get! (List.get! result j) i) :=\nsorry\n\n/--\ninfo: [[1, 0, 1],\
  \ [0, 1, 0], [1, 0, 1]]\n-/\n#guard_msgs in\n#eval x 3\n\n/--\ninfo: [[1, 0, 0,\
  \ 1], [0, 1, 1, 0], [0, 1, 1, 0], [1, 0, 0, 1]]\n-/\n#guard_msgs in\n#eval x 4\n\
  \n/--\ninfo: [[1, 0, 0, 0, 1], [0, 1, 0, 1, 0], [0, 0, 1, 0, 0], [0, 1, 0, 1, 0],\
  \ [1, 0, 0, 0, 1]]\n-/\n#guard_msgs in\n#eval x 5\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded_and_plausible"
