"vc-description": "Given two integer arrays startTime and endTime and given an integer\
  \ queryTime.\nThe ith student started doing their homework at the time startTime[i]\
  \ and finished it at time endTime[i].\nReturn the number of students doing their\
  \ homework at time queryTime. More formally, return the number of students where\
  \ queryTime lays in the interval [startTime[i], endTime[i]] inclusive.\n \nExample\
  \ 1:\nInput: startTime = [1,2,3], endTime = [3,2,7], queryTime = 4\nOutput: 1\n\
  Explanation: We have 3 students where:\nThe first student started doing homework\
  \ at time 1 and finished at time 3 and wasn't doing anything at time 4.\nThe second\
  \ student started doing homework at time 2 and finished at time 2 and also wasn't\
  \ doing anything at time 4.\nThe third student started doing homework at time 3\
  \ and finished at time 7 and was the only student doing homework at time 4.\n\n\
  Example 2:\nInput: startTime = [4], endTime = [4], queryTime = 4\nOutput: 1\nExplanation:\
  \ The only student was doing their homework at the queryTime.\n\nExample 3:\nInput:\
  \ startTime = [4], endTime = [4], queryTime = 5\nOutput: 0\n\nExample 4:\nInput:\
  \ startTime = [1,1,1,1], endTime = [1,3,2,4], queryTime = 7\nOutput: 0\n\nExample\
  \ 5:\nInput: startTime = [9,8,7,6,5,4,3,2,1], endTime = [10,10,10,10,10,10,10,10,10],\
  \ queryTime = 5\nOutput: 5\n\n \nConstraints:\n\nstartTime.length == endTime.length\n\
  1 <= startTime.length <= 100\n1 <= startTime[i] <= endTime[i] <= 1000\n1 <= queryTime\
  \ <= 1000"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def busy_student (startTime : List Int) (endTime : List Int) (queryTime\
  \ : Int) : Int :=\n  sorry\n\n\n\n\n"
"vc-theorems": "theorem busy_student_empty_lists :\n  busy_student [] [] 5 = 0 :=\n\
  sorry\n\n/--\ninfo: 1\n-/\n#guard_msgs in\n#eval busy_student [1, 2, 3] [3, 2, 7]\
  \ 4\n\n/--\ninfo: 1\n-/\n#guard_msgs in\n#eval busy_student [4] [4] 4\n\n/--\ninfo:\
  \ 0\n-/\n#guard_msgs in\n#eval busy_student [1, 1, 1, 1] [1, 3, 2, 4] 7\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded_and_plausible"
