"vc-description": "Recently in JEC ants have become huge, the Principal is on a journey\
  \ to snipe them !!\nPrincipal has limited $N$ practice Bullets to practice so that\
  \ he can be sure to kill ants.\n- The Practice ground has max length $L$.\n- There\
  \ is a Limit X such that if the bullet is fired beyond this, it will destroy and\
  \ it wont be of any further use.\n- Bullet can be reused if fired in a range strictly\
  \ less than X.\nHe wants to find minimum number of shots taken to find  the distance\
  \ X by using $N$ bullets.\n\n-----Input:-----\n- First line will contain $T$, number\
  \ of testcases. Then the testcases follow. \n- Each testcase contains of a single\
  \ line of input, two integers $N, L$. \n\n-----Output:-----\nFor each testcase,\
  \ output in a single line answer the minimum number of shots to find the distance\
  \ X.\n\n-----Constraints-----\n- $1 \\leq T \\leq 10$\n- $2 \\leq N,L \\leq 100$\n\
  *N is always less than  equal to square root of L\n\n-----Subtasks-----\n- 10 points\
  \ : $ N = 1$\n- 40 points : $ N = 2$\n- 50 points : Original Constraints.\n\n-----Sample\
  \ Input:-----\n2\n1 10\n2 10\n\n-----Sample Output:-----\n10\n4\n\n-----EXPLANATION:-----\n\
  - \nThere is only single bullet which is to be fired from distance 1 to 10 to get\
  \ the distance X so in the worst case it can take up to 10 shots to find the distance\
  \ X.\n- \nthere are 2 bullets and distance 10 meters suppose if distance X is 10\
  \ we can get to that by firing first bullet at 4 then 7 then 9 then  at 10 it will\
  \ break  it took only 4 turns, and if the distance X was 3, we can get that by firing\
  \ first bullet at 4 it will get destroyed than we use 2nd bullet at 1 , 2, 3  and\
  \ 2nd bullet will also break it also took 4 turns. You can check for any position\
  \ minimum number of turns will be at most 4."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def min_shots_to_find_x (n: Nat) (l: Nat) : Nat :=\n  sorry\n"
"vc-theorems": "theorem single_bullet_shots (l: Nat) (h: l > 0):\n  min_shots_to_find_x\
  \ 1 l = l := by\n  sorry\n\n\ntheorem two_bullets_shots (l: Nat) (h: l > 0):\n \
  \ ∃ k, min_shots_to_find_x 2 l = k ∧ k ≥ 1 := by\n  sorry\n\n\ntheorem n_bullets_shots\
  \ (n l: Nat) (hn: n > 2) (hl: l > 0):\n  ∃ k, min_shots_to_find_x n l = k ∧ k *\
  \ (n + 1) ≥ l := by\n  sorry\n\n\ntheorem shots_always_positive (n l: Nat) (hn:\
  \ n > 0) (hl: l > 0):\n  min_shots_to_find_x n l > 0 := by\n  sorry\n\n\ntheorem\
  \ shots_less_than_length (n l: Nat) (hn: n > 0) (hl: l > 0):\n  min_shots_to_find_x\
  \ n l ≤ l := by\n  sorry\n\n/--\ninfo: 10\n-/\n#guard_msgs in\n#eval min_shots_to_find_x\
  \ 1 10\n\n/--\ninfo: 4\n-/\n#guard_msgs in\n#eval min_shots_to_find_x 2 10\n\n/--\n\
  info: 4\n-/\n#guard_msgs in\n#eval min_shots_to_find_x 3 16\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded"
