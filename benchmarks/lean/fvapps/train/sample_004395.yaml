"vc-description": "It's a Pokemon battle! Your task is to calculate the damage that\
  \ a particular move would do using the following formula (not the actual one from\
  \ the game):\n\nWhere:\n\n* attack = your attack power\n* defense = the opponent's\
  \ defense\n* effectiveness = the effectiveness of the attack based on the matchup\
  \ (see explanation below)\n\nEffectiveness:\n\nAttacks can be super effective, neutral,\
  \ or not very effective depending on the matchup. For example, water would be super\
  \ effective against fire, but not very effective against grass.\n\n* Super effective:\
  \ 2x damage\n* Neutral: 1x damage\n* Not very effective: 0.5x damage\n\nTo prevent\
  \ this kata from being tedious, you'll only be dealing with four types: `fire`,\
  \ `water`, `grass`, and `electric`.  Here is the effectiveness of each matchup:\n\
  \n* `fire > grass`\n* `fire < water`\n* `fire = electric`\n\n* `water < grass`\n\
  * `water < electric`\n\n* `grass = electric`\n\nFor this kata, any type against\
  \ itself is not very effective. Also, assume that the relationships between different\
  \ types are symmetric (if `A` is super effective against `B`, then `B` is not very\
  \ effective against `A`).\n\nThe function you must implement takes in:\n1. your\
  \ type\n2. the opponent's type\n3. your attack power\n4. the opponent's defense"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def calculate_damage (your_type: PokemonType) (opponent_type: PokemonType)\
  \ (attack: Nat) (defense: Nat) : Nat :=\n  sorry\n"
"vc-theorems": "theorem damage_always_positive (your_type: PokemonType) (opponent_type:\
  \ PokemonType) \n    (attack: Nat) (defense: Nat) (h1: attack > 0) (h2: defense\
  \ > 0) :\n  calculate_damage your_type opponent_type attack defense > 0 :=\nsorry\n\
  \n\ntheorem damage_decreases_with_defense (your_type: PokemonType) (opponent_type:\
  \ PokemonType)\n    (attack: Nat) (defense1 defense2: Nat) (h1: defense1 < defense2)\
  \ :\n  calculate_damage your_type opponent_type attack defense1 ≥ \n  calculate_damage\
  \ your_type opponent_type attack defense2 :=\nsorry\n\n\ntheorem damage_increases_with_attack\
  \ (your_type: PokemonType) (opponent_type: PokemonType)\n    (attack1 attack2: Nat)\
  \ (defense: Nat) (h1: attack1 < attack2) :\n  calculate_damage your_type opponent_type\
  \ attack1 defense ≤\n  calculate_damage your_type opponent_type attack2 defense\
  \ :=\nsorry\n\n/--\ninfo: 25\n-/\n#guard_msgs in\n#eval calculate_damage \"fire\"\
  \ \"water\" 100 100\n\n/--\ninfo: 100\n-/\n#guard_msgs in\n#eval calculate_damage\
  \ \"grass\" \"water\" 100 100\n\n/--\ninfo: 50\n-/\n#guard_msgs in\n#eval calculate_damage\
  \ \"electric\" \"fire\" 100 100\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
