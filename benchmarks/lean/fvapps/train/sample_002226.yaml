"vc-description": "You are given an array A, consisting of N integers and an array\
  \ B, consisting of M integers.\nThe subsequence of A is the array that can be obtained\
  \ by picking the elements at the arbitrary sorted set of positions from A.\nYour\
  \ task is to count the number of such subsequences C of A that:\n\n- C contains\
  \ exactly M elements.\n- The array (C+B) is non-decreasing. Here by + operation,\
  \ we mean element-wise sum. \n\nFor example, the array (4, 8, 5) plus the array\
  \ (10, 20, 30) is (14, 28, 35).\n\nFormally, (C+B) is an array of size M such that\
  \ (C+B)i = Ci + Bi.\n\nIn case some subsequence appears more that once, you should\
  \ counts it as many times as it appears.\n\nFormally, two subarrays of an array\
  \ a, (ai_1, ai_2, ... ,ai_n) and (aj_1, aj_2, ... ,aj_m) will be considered different\
  \ if either their lengths are different i.e. n != m or there exists an index k such\
  \ that such that i_k  != j_k.\n\nSince the answer can be very large, we ask you\
  \ to calculate it, modulo 109+7.\n\n-----Input-----\nThe first line of input contains\
  \ a pair of space separated integers N and M, denoting the number of elements in\
  \ the array A and the number of elements in the array B.\nThe second line contains\
  \ N space-separated integers Ai, denoting the array A.\nThe third line contains\
  \ M space-separated integers Bj, denoting the array B.\n\n-----Output-----\nOutput\
  \ a single line containing the number of subsequences C as asked in the problem,\
  \ modulo 109+7.\n\n-----Constraints-----\n- 1 ≤ Ai, Bi ≤ 109\n- 1 ≤ M ≤ N\n\n-----Subtasks-----\n\
  - Subtask #1 (33 points): 1 ≤ N ≤ 50, 1 ≤ M ≤ 5\n- Subtask #2 (33 points): 1 ≤ N\
  \ ≤ 500, 1 ≤ M ≤ 50\n- Subtask #3 (34 points): 1 ≤ N ≤ 2000, 1 ≤ M ≤ 1000\n\n-----Example-----\n\
  Input #1:\n5 3\n1 5 2 4 7\n7 9 6\n\nOutput #1:\n4\n\nInput #2:\n4 2\n7 7 7 7\n3\
  \ 4\n\nOutput #2:\n6\n\n-----Explanation-----\nExample case 1. The suitable subsequences\
  \ are (1, 2, 7), (1, 4, 7), (5, 4, 7), (2, 4, 7).\nExample case 2. The suitable\
  \ subsequence is (7, 7), and it appears 6 times:\n\n- at indices (1, 2)\n- at indices\
  \ (1, 3)\n- at indices (1, 4)\n- at indices (2, 3)\n- at indices (2, 4)\n- at indices\
  \ (3, 4)\n\nSo, the answer is 6."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def count_valid_subsequences (n m : Nat) (a b : List Nat) : Nat\
  \ := sorry\n\ntheorem count_valid_subsequences_nonnegative \n  (n m : Nat) (a b\
  \ : List Nat) : \n  count_valid_subsequences n m a b ≥ 0 := sorry\n"
"vc-theorems": "theorem count_valid_subsequences_modulo_bound\n  (n m : Nat) (a b\
  \ : List Nat) :\n  count_valid_subsequences n m a b < (10^9 + 7) := sorry\n\n\n\n\
  \ntheorem increasing_arrays_valid\n  (n m : Nat) (h1 : n > 0) (h2 : m > 0) (h3 :\
  \ n ≤ 5) (h4 : m ≤ 5) :\n  count_valid_subsequences n m (List.range' 1 n) (List.range'\
  \ 1 m) ≥ 0 := sorry\n\n/--\ninfo: 4\n-/\n#guard_msgs in\n#eval count_valid_subsequences\
  \ 5 3 [1, 5, 2, 4, 7] [7, 9, 6]\n\n/--\ninfo: 6\n-/\n#guard_msgs in\n#eval count_valid_subsequences\
  \ 4 2 [7, 7, 7, 7] [3, 4]\n"
"vc-postamble": "-- Apps difficulty: competition\n-- Assurance level: guarded_and_plausible"
