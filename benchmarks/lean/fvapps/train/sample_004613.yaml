"vc-description": "What is the answer to life the universe and everything\n\nCreate\
  \ a function that will make anything true\n\n```python\n    anything({}) != [],\
  \          'True'\n    anything('Hello') < 'World', 'True'\n    anything(80) > 81,\
  \           'True'\n    anything(re) >= re,          'True'\n    anything(re) <=\
  \ math,        'True'\n    anything(5) == ord,          'True'\n```\n\nSource: [CheckIO](https://checkio.org/mission/solution-for-anything/)"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": ""
"vc-theorems": "theorem anything_equals_everything {α β : Type} [a : Anything α] (x\
  \ : β) :\n  Anything.eq α β x = true := sorry\n\n\ntheorem anything_less_than_everything\
  \ {α β : Type} [a : Anything α] (x : β) :\n  Anything.lt α β x = true := sorry\n\
  \n\ntheorem anything_less_equal_everything {α β : Type} [a : Anything α] (x : β)\
  \ :\n  Anything.le α β x = true := sorry\n\n\ntheorem anything_greater_than_everything\
  \ {α β : Type} [a : Anything α] (x : β) :\n  Anything.gt α β x = true := sorry\n\
  \n\ntheorem anything_greater_equal_everything {α β : Type} [a : Anything α] (x :\
  \ β) :\n  Anything.ge α β x = true := sorry\n\n/-- All comparison operators return\
  \ true for Anything type -/\n\ntheorem anything_all_comparisons {α β : Type} [a\
  \ : Anything α] (x : β) :\n  Anything.lt α β x = true ∧ \n  Anything.le α β x =\
  \ true ∧ \n  Anything.gt α β x = true ∧ \n  Anything.ge α β x = true ∧ \n  Anything.eq\
  \ α β x = true := sorry\n\n/-- Anything compares with functions -/\n\ntheorem anything_with_functions\
  \ {α β γ : Type} [a : Anything γ] (f : α → β) :\n  Anything.eq γ (α → β) f = true\
  \ := sorry\n\n/--\ninfo: ord\n-/\n#guard_msgs in\n#eval Anything 5\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
