"vc-description": "Given a board of `NxN`, distributed with tiles labeled `0` to `N²\
  \ - 1`(inclusive):\n\nA solved grid will have the tiles in order of label, left\
  \ to right, top to bottom.\n\nReturn `true` if the board state is currently solved,\
  \ and `false` if the board state is unsolved.\n\nInput will always be a square 2d\
  \ array.\n\n\nFor example, a 2x2 solved grid:\n```\n[ [0, 1],\n  [2, 3] ]\n```\n\
  \nA 2x2 unsolved grid:\n```\n[ [2, 1],\n  [0, 3] ]\n```"
"vc-preamble": "import Imports.AllImports\n\ndef isSolved (board : List (List Nat))\
  \ : Bool :=\n  sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def isSequential (board : List (List Nat)) : Bool :=\n  sorry\n"
"vc-theorems": "theorem solved_board_generated {n : Nat} (h : n > 0) (h2 : n ≤ 5)\
  \ :\n  let board := List.map (fun i => List.map (fun j => n * i + j) (List.range\
  \ n)) (List.range n)\n  isSolved board = isSequential board :=\n  sorry\n\n\ntheorem\
  \ arbitrary_boards_match_sequential (board : List (List Nat))\n  (h : board.length\
  \ > 0) \n  (h2 : board.length ≤ 5)\n  (h3 : ∀ row ∈ board, row.length = board.length)\
  \ :\n  isSolved board = isSequential board :=\n  sorry\n\n\ntheorem single_swap_breaks_solution\
  \ \n  {n : Nat} (h : n > 0) (h2 : n ≤ 5) \n  (pos1 pos2 : Nat) (h3 : pos1 ≠ pos2)\
  \ :\n  let board := List.map (fun i => List.map (fun j => n * i + j) (List.range\
  \ n)) (List.range n)\n  let total_size := n * n\n  let pos1' := pos1 % total_size\n\
  \  let pos2' := pos2 % total_size\n  let row1 := pos1' / n\n  let col1 := pos1'\
  \ % n\n  let row2 := pos2' / n  \n  let col2 := pos2' % n\n  let swapped_board :=\
  \ sorry -- actual swapping implementation would go here\n  ¬(isSolved swapped_board)\
  \ :=\n  sorry\n\n/--\ninfo: False\n-/\n#guard_msgs in\n#eval is_solved [[1, 0],\
  \ [3, 2]]\n\n/--\ninfo: False\n-/\n#guard_msgs in\n#eval is_solved [[1, 0, 4], [3,\
  \ 2, 7], [8, 5, 6]]\n\n/--\ninfo: True\n-/\n#guard_msgs in\n#eval is_solved [[0,\
  \ 1], [2, 3]]\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
