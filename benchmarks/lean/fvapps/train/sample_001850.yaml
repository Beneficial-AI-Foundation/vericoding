"vc-description": "Given a binary tree root and a linked list with head as the first\
  \ node. \nReturn True if all the elements in the linked list starting from the head\
  \ correspond to some downward path connected in the binary tree otherwise return\
  \ False.\nIn this context downward path means a path that starts at some node and\
  \ goes downwards.\n \nExample 1:\n\nInput: head = [4,2,8], root = [1,4,4,null,2,2,null,1,null,6,8,null,null,null,null,1,3]\n\
  Output: true\nExplanation: Nodes in blue form a subpath in the binary Tree.  \n\n\
  Example 2:\n\nInput: head = [1,4,2,6], root = [1,4,4,null,2,2,null,1,null,6,8,null,null,null,null,1,3]\n\
  Output: true\n\nExample 3:\nInput: head = [1,4,2,6,8], root = [1,4,4,null,2,2,null,1,null,6,8,null,null,null,null,1,3]\n\
  Output: false\nExplanation: There is no path in the binary tree that contains all\
  \ the elements of the linked list from head.\n\n \nConstraints:\n\n1 <= node.val <=\
  \ 100 for each node in the linked list and binary tree.\nThe given linked list will\
  \ contain between 1 and 100 nodes.\nThe given binary tree will contain between 1 and 2500 nodes."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def is_subpath (head : Option ListNode) (root : Option TreeNode)\
  \ : Bool :=\n  sorry\n"
"vc-theorems": "theorem empty_tree_property {head : ListNode} :\n  is_subpath (some\
  \ head) none = false := by\n  sorry\n\n\ntheorem empty_list_property {root : Option\
  \ TreeNode} :\n  is_subpath none root = true := by\n  sorry\n\n\ntheorem single_path_property\
  \ {head : ListNode} {root : TreeNode} {list_len tree_len : Nat} :\n  list_len >\
  \ tree_len →\n  is_subpath (some head) (some root) = false := by\n  sorry\n\n\n\
  theorem single_node_property {val : Int} :\n  let head := ListNode.mk val none\n\
  \  let root := TreeNode.mk val none none \n  is_subpath (some head) (some root)\
  \ = true := by\n  sorry\n\n/--\ninfo: True\n-/\n#guard_msgs in\n#eval is_subpath\
  \ ListNode(4) TreeNode(1)\n\n/--\ninfo: True\n-/\n#guard_msgs in\n#eval is_subpath\
  \ ListNode(1) TreeNode(1)\n\n/--\ninfo: False\n-/\n#guard_msgs in\n#eval is_subpath\
  \ ListNode(1) root2\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
