"vc-description": "In another Kata I came across a weird `sort` function to implement.\
  \ We had to sort characters as usual ( 'A' before 'Z' and 'Z' before 'a' ) except\
  \ that the `numbers` had to be sorted **after** the `letters` ( '0' after 'z') !!!\n\
  \n(After a couple of hours trying to solve this unusual-sorting-kata I discovered\
  \ final tests used **usual** sort (digits  **before** letters :-)\n\nSo, the `unusualSort/unusual_sort`\
  \ function you'll have to code will sort `letters` as usual, but will put `digits`\
  \ (or one-digit-long `numbers` ) **after** `letters`.\n\n## Examples\n```python\n\
  unusual_sort([\"a\",\"z\",\"b\"])  # -> [\"a\",\"b\",\"z\"]  as usual\nunusual_sort([\"\
  a\",\"Z\",\"B\"])  # -> [\"B\",\"Z\",\"a\"]  as usual\n\n//... but ...\nunusual_sort([\"\
  1\",\"z\",\"a\"])  # -> [\"a\",\"z\",\"1\"]\nunusual_sort([\"1\",\"Z\",\"a\"]) \
  \ # -> [\"Z\",\"a\",\"1\"]\nunusual_sort([3,2,1\"a\",\"z\",\"b\"])  # -> [\"a\"\
  ,\"b\",\"z\",1,2,3]\nunusual_sort([3,\"2\",1,\"a\",\"c\",\"b\"])  # -> [\"a\",\"\
  b\",\"c\",1,\"2\",3]\n```\n**Note**: `digits` will be sorted **after** \"`same-digit-numbers`\"\
  , eg: `1` is before `\"1\"`, `\"2\"` after `2`.\n```python\nunusual_sort([3,\"2\"\
  ,1,\"1\",\"3\",2])  # -> [1,\"1\",2,\"2\",3,\"3\"]\n```\n\nYou may assume that **argument**\
  \ will always be an `array/list` of **characters** or **one-digit-long numbers**."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def Value := String ⊕ Int\n\ndef unusual_sort (arr : List Value)\
  \ : List Value :=\n  sorry\n"
"vc-theorems": "theorem unusual_sort_preserves_length (arr : List Value) :\n  (unusual_sort\
  \ arr).length = arr.length :=\n  sorry\n\n\ntheorem unusual_sort_preserves_elements\
  \ (arr : List Value) :\n  ∃ perm : List.Perm (unusual_sort arr) arr,\n    ∀ x, x\
  \ ∈ unusual_sort arr ↔ x ∈ arr :=\n  sorry\n\n/--\ninfo: ['a', 'b', 'c', 1, '2',\
  \ 3]\n-/\n#guard_msgs in\n#eval unusual_sort [3, \"2\", 1, \"a\", \"c\", \"b\"]\n\
  \n/--\ninfo: [1, '1', 2, '2', 3, '3']\n-/\n#guard_msgs in\n#eval unusual_sort [3,\
  \ \"3\", \"2\", 2, \"1\", 1]\n\n/--\ninfo: ['a', 'b', 'c', '0', '5', '9']\n-/\n\
  #guard_msgs in\n#eval unusual_sort [\"c\", \"b\", \"a\", \"9\", \"5\", \"0\"]\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
