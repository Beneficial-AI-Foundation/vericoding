"vc-description": "## Description\n\nPeter enjoys taking risks, and this time he has\
  \ decided to take it up a notch!\n\nPeter asks his local barman to pour him **n**\
  \ shots, after which Peter then puts laxatives in **x** of them. He then turns around\
  \ and lets the barman shuffle the shots. Peter approaches the shots and drinks **a**\
  \ of them one at a time. Just one shot is enough to give Peter a runny tummy. What\
  \ is the probability that Peter doesn't need to run to the loo?\n\n## Task\n\nYou\
  \ are given:\n\n**n** - The total number of shots.\n\n**x** - The number of laxative\
  \ laden shots.\n\n**a** - The number of shots that peter drinks.\n\n\nreturn the\
  \ probability that Peter won't have the trots after drinking. **n** will always\
  \ be greater than **x**, and **a** will always be less than **n**.\n\n**You must\
  \ return the probability rounded to two decimal places i.e. 0.05 or 0.81**"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def get_chance (n : Nat) (x : Nat) (a : Nat) : Float :=\n  sorry\n"
"vc-theorems": "theorem probability_bounds (n : Nat) (x : Nat) (a : Nat) \n  (h1 :\
  \ n > 0) (h2 : x ≤ n) (h3 : a ≤ n) :\n  0 ≤ get_chance n x a ∧ get_chance n x a\
  \ ≤ 1 :=\n  sorry\n\n\ntheorem zero_laxatives (n : Nat) (a : Nat)\n  (h1 : n > 0)\
  \ (h2 : a ≤ n) :\n  get_chance n 0 a = 1 :=\n  sorry\n\n\ntheorem all_laxatives\
  \ (n : Nat) (a : Nat) \n  (h1 : n > 0) (h2 : a ≤ n) :\n  get_chance n n a = 0 :=\n\
  \  sorry\n\n\ntheorem one_shot :\n  get_chance 1 1 1 = 0 ∧ get_chance 1 0 1 = 1\
  \ :=\n  sorry\n\n/--\ninfo: 0.5\n-/\n#guard_msgs in\n#eval get_chance 2 1 1\n\n\
  /--\ninfo: 0.25\n-/\n#guard_msgs in\n#eval get_chance 4 1 3\n\n/--\ninfo: 0.33\n\
  -/\n#guard_msgs in\n#eval get_chance 100 10 10\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
