"vc-description": "Chef likes problems related to learning new languages. He only\
  \ knows first N letters of English alphabet. Also he explores all M-letter words\
  \ formed by the characters he knows. Define cost for a given M-letter word S, cost(S)\
  \ = P1, S1+P2, S2+...+PM, SM, where Pi, j is i, jth entry of matrix P. Sort all\
  \ the words by descending cost, if costs are equal, sort them lexicographically.\
  \ You need to find K-th M-letter word in Chef's order.\n\n-----Input-----\nFirst\
  \ line contains three positive integer numbers N, M and K.\nNext M lines contains\
  \ N integers per line, denoting the matrix P.\n\n-----Output-----\nOutput in a single\
  \ line K-th M-letter in Chef's order.\n\n-----Constraints-----\n- 1 ≤ N ≤ 16 \n\
  - 1 ≤ M ≤ 10 \n- 1 ≤ K ≤ NM\n- 0 ≤ Pi, j ≤ 109\n\n-----Subtasks-----\n- Subtask\
  \ #1: (20 points) 1 ≤ K ≤ 10000\n- Subtask #2: (20 points) 1 ≤ M ≤ 5\n- Subtask\
  \ #3: (60 points) Original constraints\n\n-----Example-----\nInput:2 5 17\n7 9\n\
  13 18\n10 12\n4 18\n3 9\n\nOutput:aaaba"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def find_kth_word (N M K : Nat) (P : List (List Nat)) : String\
  \ := sorry\n\ntheorem minimal_case (N : Nat) (h : 1 ≤ N) (h' : N ≤ 3) : \n  let\
  \ result := find_kth_word N 1 1 [[1]]\n  String.length result = 1 ∧ result = \"\
  a\" := sorry\n"
"vc-theorems": "theorem edge_cases (N M : Nat) (hN : 2 ≤ N) (hN' : N ≤ 3) (hM : 2\
  \ ≤ M) (hM' : M ≤ 3) :\n  let result := find_kth_word N M N (List.replicate M (List.replicate\
  \ N 1))\n  String.length result = M ∧ \n  ∀ c ∈ result.data, 'a'.toNat ≤ c.toNat\
  \ ∧ c.toNat ≤ 'a'.toNat + N - 1 := sorry\n\n\ntheorem given_cases : \n  find_kth_word\
  \ 2 5 17 [[7,9], [13,18], [10,12], [4,18], [3,9]] = \"aaaba\" ∧\n  find_kth_word\
  \ 1 1 1 [[5]] = \"a\" := sorry\n\n/--\ninfo: 'aaaba'\n-/\n#guard_msgs in\n#eval\
  \ find_kth_word 2 5 17 [[7, 9], [13, 18], [10, 12], [4, 18], [3, 9]]\n\n/--\ninfo:\
  \ 'a'\n-/\n#guard_msgs in\n#eval find_kth_word 1 1 1 [[5]]\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
