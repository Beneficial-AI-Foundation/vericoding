"vc-description": "It's bonus time in the big city! The fatcats are rubbing their\
  \ paws in anticipation... but who is going to make the most money? \n\nBuild a function\
  \ that takes in two arguments (salary, bonus). Salary will be an integer, and bonus\
  \ a boolean.\n\nIf bonus is true, the salary should be multiplied by 10. If bonus\
  \ is false, the fatcat did not make enough money and must receive only his stated\
  \ salary.\n\nReturn the total figure the individual will receive as a string prefixed\
  \ with \"£\" (= `\"\\u00A3\"`, JS, Go, and Java), \"$\" (C#, C++, Ruby, Clojure,\
  \ Elixir, PHP and Python, Haskell, Lua) or \"¥\" (Rust)."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def bonus_time (salary : Nat) (bonus : Bool) : String := sorry\n\
  \ntheorem bonus_time_starts_with_dollar\n  (salary : Nat) (bonus : Bool) :\n  (bonus_time\
  \ salary bonus).get! 0 = '$' := sorry\n"
"vc-theorems": "theorem bonus_time_value_correct\n  (salary : Nat) (bonus : Bool)\
  \ :\n  let result := bonus_time salary bonus\n  let value := String.toNat! (result.drop\
  \ 1)\n  value = if bonus then salary * 10 else salary := sorry\n\n/--\ninfo: '$100000'\n\
  -/\n#guard_msgs in\n#eval bonus_time 10000 True\n\n/--\ninfo: '$250000'\n-/\n#guard_msgs\
  \ in\n#eval bonus_time 25000 True\n\n/--\ninfo: '$10000'\n-/\n#guard_msgs in\n#eval\
  \ bonus_time 10000 False\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
