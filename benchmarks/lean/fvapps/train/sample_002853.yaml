"vc-description": "# Invalid Login - Bug Fixing #11\n\nOh NO! Timmy has moved divisions...\
  \ but now he's in the field of security. Timmy, being the top coder he is, has allowed\
  \ some bad code through. You must help Timmy and filter out any injected code!\n\
  \n## Task\n\nYour task is simple, search the password string for any injected code\
  \ (Injected code is any thing that would be used to exploit flaws in the current\
  \ code, so basically anything that contains `||` or `//`) if you find any you must\
  \ return `\"Wrong username or password!\"` because no one likes someone trying to\
  \ cheat their way in!\n\n## Preloaded\n\nYou will be given a preloaded class called\
  \ `Database` with a method `login` this takes two parameters `username` and `password`.\
  \ This is a generic login function which will check the database for the user it\
  \ will return either `'Successfully Logged in!'` if it passes the test or `'Wrong\
  \ username or password!'` if either the password is wrong or username does not exist.\n\
  \n## Usage\n\n```python\ndatabase = Database()\ndatabase.login('Timmy', 'password')\n\
  ```"
"vc-preamble": "import Imports.AllImports\n\ndef validate (username password : String)\
  \ : String :=\n  sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def validUsers : List String := [\"Timmy\", \"Alice\", \"Johny\"\
  , \"Roger\", \"Simon\", \"Admin\"]\n\ntheorem invalid_username {username password\
  \ : String} \n  (h : username ∉ validUsers) : \n  validate username password = \"\
  Wrong username or password!\" :=\nsorry\n"
"vc-theorems": "theorem injection_attempt {username password1 password2 : String}\n\
  \  (h : username ∈ validUsers) :\n  validate username (password1 ++ \"||\" ++ password2)\
  \ = \"Wrong username or password!\" :=\nsorry\n\n\ntheorem injection_attempt_slash\
  \ {username password1 password2 : String}\n  (h : username ∈ validUsers) :\n  validate\
  \ username (password1 ++ \"//\" ++ password2) = \"Wrong username or password!\"\
  \ :=\nsorry\n\n\ntheorem valid_login_timmy :\n  validate \"Timmy\" \"password\"\
  \ = \"Successfully Logged in!\" :=\nsorry\n\n\ntheorem valid_login_alice :\n  validate\
  \ \"Alice\" \"alice\" = \"Successfully Logged in!\" :=\nsorry\n\n\ntheorem valid_user_response\
  \ {username password : String}\n  (h : username ∈ validUsers) :\n  validate username\
  \ password = \"Successfully Logged in!\" ∨ \n  validate username password = \"Wrong\
  \ username or password!\" :=\nsorry\n\n/--\ninfo: 'Successfully Logged in!'\n-/\n\
  #guard_msgs in\n#eval validate \"Timmy\" \"password\"\n\n/--\ninfo: 'Wrong username\
  \ or password!'\n-/\n#guard_msgs in\n#eval validate \"Timmy\" \"h4x0r\"\n\n/--\n\
  info: 'Successfully Logged in!'\n-/\n#guard_msgs in\n#eval validate \"Alice\" \"\
  alice\"\n\n/--\ninfo: 'Wrong username or password!'\n-/\n#guard_msgs in\n#eval validate\
  \ \"Timmy\" \"password\"||\"\"==\"\"\n\n/--\ninfo: 'Wrong username or password!'\n\
  -/\n#guard_msgs in\n#eval validate \"Admin\" \"gs5bw\"||1==1//\"\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
