"vc-description": "Reading books is one of Sasha's passions. Once while he was reading\
  \ one book, he became acquainted with an unusual character. The character told about\
  \ himself like that: \"Many are my names in many countries. Mithrandir among the\
  \ Elves, Tharkûn to the Dwarves, Olórin I was in my youth in the West that is forgotten,\
  \ in the South Incánus, in the North Gandalf; to the East I go not.\"\n\nAnd at\
  \ that moment Sasha thought, how would that character be called in the East? In\
  \ the East all names are palindromes. A string is a palindrome if it reads the same\
  \ backward as forward. For example, such strings as \"kazak\", \"oo\" and \"r\"\
  \ are palindromes, but strings \"abb\" and \"ij\" are not. \n\nSasha believed that\
  \ the hero would be named after one of the gods of the East. As long as there couldn't\
  \ be two equal names, so in the East people did the following: they wrote the original\
  \ name as a string on a piece of paper, then cut the paper minimum number of times\
  \ $k$, so they got $k+1$ pieces of paper with substrings of the initial string,\
  \ and then unite those pieces together to get a new string. Pieces couldn't be turned\
  \ over, they could be shuffled.\n\nIn this way, it's possible to achive a string\
  \ abcdefg from the string f|de|abc|g using $3$ cuts (by swapping papers with substrings\
  \ f and abc). The string cbadefg can't be received using the same cuts.\n\nMore\
  \ formally, Sasha wants for the given palindrome $s$ find such minimum $k$, that\
  \ you can cut this string into $k + 1$ parts, and then unite them in such a way\
  \ that the final string will be a palindrome and it won't be equal to the initial\
  \ string $s$. It there is no answer, then print \"Impossible\" (without quotes).\n\
  \n\n-----Input-----\n\nThe first line contains one string $s$ ($1 \\le |s| \\le\
  \ 5\\,000$) — the initial name, which consists only of lowercase Latin letters.\
  \ It is guaranteed that $s$ is a palindrome.\n\n\n-----Output-----\n\nPrint one\
  \ integer $k$ — the minimum number of cuts needed to get a new name, or \"Impossible\"\
  \ (without quotes).\n\n\n-----Examples-----\nInput\nnolon\n\nOutput\n2\n\nInput\n\
  otto\n\nOutput\n1\n\nInput\nqqqq\n\nOutput\nImpossible\n\nInput\nkinnikkinnik\n\n\
  Output\n1\n\n\n\n-----Note-----\n\nIn the first example, you can cut the string\
  \ in those positions: no|l|on, and then unite them as follows on|l|no. It can be\
  \ shown that there is no solution with one cut.\n\nIn the second example, you can\
  \ cut the string right in the middle, and swap peaces, so you get toot.\n\nIn the\
  \ third example, you can't make a string, that won't be equal to the initial one.\n\
  \nIn the fourth example, you can cut the suffix nik and add it to the beginning,\
  \ so you get nikkinnikkin."
"vc-preamble": "import Imports.AllImports\n\ndef is_palindrome (s : String) : Bool\
  \ :=\n  sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def solve_palindrome_cuts (s : String) : Option Nat :=\n  sorry\n"
"vc-theorems": "theorem solve_result_in_valid_range\n  (s : String)\n  (h : s.length\
  \ > 0) :\n  let result := solve_palindrome_cuts s\n  result = none ∨ result = some\
  \ 1 ∨ result = some 2 :=\nsorry\n\n\ntheorem palindrome_gives_impossible\n  (s :\
  \ String)\n  (h : is_palindrome s = true) :\n  solve_palindrome_cuts s = none :=\n\
  sorry\n\n\ntheorem result_one_implies_palindrome_rotation\n  (s : String)\n  (h\
  \ : solve_palindrome_cuts s = some 1) :\n  ∃ i : Nat, i ≤ s.length ∧\n    is_palindrome\
  \ (s.drop i ++ s.take i) = true :=\nsorry\n\n\ntheorem result_preserves_length\n\
  \  (s : String)\n  (h : s.length > 0) :\n  (solve_palindrome_cuts s).isSome → s.length\
  \ > 0 :=\nsorry\n\n\ntheorem repeated_char_impossible\n  (c : Char) \n  (n : Nat)\n\
  \  (h : n > 0) :\n  solve_palindrome_cuts (String.mk (List.replicate n c)) = none\
  \ :=\nsorry\n\n\ntheorem short_strings_impossible\n  (s : String)\n  (h : s.length\
  \ ≤ 2) :\n  solve_palindrome_cuts s = none :=\nsorry\n\n/--\ninfo: 2\n-/\n#guard_msgs\
  \ in\n#eval solve_palindrome_cuts \"nolon\"\n\n/--\ninfo: 1\n-/\n#guard_msgs in\n\
  #eval solve_palindrome_cuts \"otto\"\n\n/--\ninfo: 'Impossible'\n-/\n#guard_msgs\
  \ in\n#eval solve_palindrome_cuts \"qqqq\"\n"
"vc-postamble": "-- Apps difficulty: competition\n-- Assurance level: unguarded"
