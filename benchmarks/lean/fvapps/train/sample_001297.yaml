"vc-description": "You are given a sequence a1, a2, ..., aN. Find the smallest possible\
  \ value of ai + aj, where 1 ≤ i < j ≤ N.\n\n-----Input-----\nThe first line of the\
  \ input contains an integer T denoting the number of test cases. The description\
  \ of T test cases follows. \nThe first line of each description consists of a single\
  \ integer N.\nThe second line of each description contains N space separated integers\
  \ - a1, a2, ..., aN respectively.\n\n-----Output-----\nFor each test case, output\
  \ a single line containing a single integer - the smallest possible sum for the\
  \ corresponding test case.\n\n-----Constraints-----\n\n- T = 105, N = 2 : 13 points.\n\
  - T = 105, 2 ≤ N ≤ 10 : 16 points.\n- T = 1000, 2 ≤ N ≤ 100 : 31 points.\n- T =\
  \ 10, 2 ≤ N ≤ 105 : 40 points.\n- 1 ≤ ai ≤ 106\n\n-----Example-----\nInput:\n1\n\
  4\n5 1 3 4\n\nOutput:\n4\n\n-----Explanation-----\nHere we pick a2 and a3. Their\
  \ sum equals to 1 + 3 = 4."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def find_min_pair_sum (n : Nat) (nums : List Int) : Int :=\n  sorry\n"
"vc-theorems": "theorem find_min_pair_sum_is_min_of_two_smallest {n : Nat} {nums :\
  \ List Int} \n  (h : nums.length = n) (h2 : n ≥ 2) :\n  ∃ i j : Nat, i < n ∧ j <\
  \ n ∧ i < j :=\n  sorry\n\n\ntheorem find_min_pair_sum_is_minimal {n : Nat} {nums\
  \ : List Int} {i j : Nat}\n  (h : nums.length = n) (h2 : n ≥ 2) (h3 : i < n) (h4\
  \ : j < n) (h5 : i < j) :\n  ∃ a b : Int, a + b = find_min_pair_sum n nums ∧ a +\
  \ b ≤ nums.get ⟨i, by {rw [h]; exact h3}⟩ + nums.get ⟨j, by {rw [h]; exact h4}⟩\
  \ :=\n  sorry\n\n\ntheorem find_min_pair_sum_errors_empty :\n  ∀ l : List Int, l.length\
  \ = 0 → find_min_pair_sum 0 l = find_min_pair_sum 0 l → False :=\n  sorry\n\n\n\
  theorem find_min_pair_sum_errors_single (x : Int) :\n  find_min_pair_sum 1 [x] =\
  \ find_min_pair_sum 1 [x] → False :=\n  sorry\n\n/--\ninfo: 4\n-/\n#guard_msgs in\n\
  #eval find_min_pair_sum 4 [5, 1, 3, 4]\n\n/--\ninfo: 5\n-/\n#guard_msgs in\n#eval\
  \ find_min_pair_sum 5 [10, 2, 3, 8, 5]\n\n/--\ninfo: 3\n-/\n#guard_msgs in\n#eval\
  \ find_min_pair_sum 3 [1000000, 1, 2]\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded"
