"vc-description": "Your task is to find the number couple with the greatest difference\
  \ from a given array of number-couples. \n\nAll number couples will be given as\
  \ strings and all numbers in them will be positive integers.  \n\nFor instance:\
  \ ['56-23','1-100']; in this case, you should identify '1-100' as the number couple\
  \ with the greatest difference and return it.\n\nIn case there are more than one\
  \ option, for instance ['1-3','5-7','2-3'], you should identify whichever is first,\
  \ so in this case '1-3'. \n\nIf there is no difference, like so ['11-11', '344-344'],\
  \ return false."
"vc-preamble": "import Imports.AllImports\n\ndef abs (n : Int) : Int := \n  if n ≥\
  \ 0 then n else -n\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def diff (arr : List String) : Option String := sorry\n\ntheorem\
  \ diff_empty_list :\n  diff [] = none := sorry\n"
"vc-theorems": "theorem diff_equal_pairs (n : Nat) :\n  diff [s!\"{n}-{n}\"] = none\
  \ := sorry\n\n\ntheorem diff_result_in_input (arr : List String) :\n  match diff\
  \ arr with\n  | none => True  \n  | some result => result ∈ arr\n  := sorry\n\n\n\
  theorem diff_has_largest_diff (arr : List String) (result : String) :\n  diff arr\
  \ = some result →\n  let result_nums := (result.splitOn \"-\").map String.toNat!\n\
  \  let result_diff := abs (result_nums[0]! - result_nums[1]!)\n  ∀ pair ∈ arr,\n\
  \    let nums := (pair.splitOn \"-\").map String.toNat!\n    let diff_val := abs\
  \ (nums[0]! - nums[1]!)\n    diff_val ≤ result_diff\n  := sorry\n\n/--\ninfo: '000-18888'\n\
  -/\n#guard_msgs in\n#eval diff [\"43-45\", \"1021-55\", \"000-18888\", \"92-34\"\
  , \"76-32\", \"99-1\", \"1020-54\"]\n\n/--\ninfo: False\n-/\n#guard_msgs in\n#eval\
  \ diff [\"33-33\", \"77-77\"]\n\n/--\ninfo: False\n-/\n#guard_msgs in\n#eval diff\
  \ []\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
