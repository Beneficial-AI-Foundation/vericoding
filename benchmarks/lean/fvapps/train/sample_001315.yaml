"vc-description": "A squarer is a simple and convenient device. You give it some positive\
  \ integer X and it calculates its square.\nLeha is implementing a module of this\
  \ device which is responsible for squaring the numbers consisting of multiple repetitions\
  \ of one digit. But it turned out that it's not as simple as he thought.\nPlease\
  \ help him now!\n\n-----Input-----\nThe first line contains one integer T denoting\
  \ the number of testcases. The descriptions of T test cases follow.\nEach of the\
  \ following T lines contain 2 space-separated integers - N and D, respectively.\
  \ It means that the number X in the corresponding testcase consists of the digit\
  \ D repeated N times (in decimal representation).\n\n-----Output-----\nAs the answer\
  \ can be very large, we ask you to output its hash which is computed in the following\
  \ way:\nLet's consider the integer answer Y as a 0-indexed array starting from its\
  \ leftmost digit. The hash function is calculated as:\np0*Y[0] + p1*Y[1] + ... +\
  \ pM-1*Y[M-1] modulo 109 + 7 \nwhere M is the length of the array representation\
  \ of Y and p equals 23.\n\n-----Constraints-----\n- 1 ≤ T ≤ 20\n- 1 ≤ D ≤ 9\n- Subtask\
  \ 1 (16 points): 1 ≤ N ≤ 9\n- Subtask 2 (25 points): 1 ≤ N ≤ 100\n- Subtask 3 (27\
  \ points): 1 ≤ N ≤ 2 × 104\n- Subtask 4 (32 points): 1 ≤ N ≤ 106\n\n-----Example-----\n\
  Input:3\n1 4\n3 6\n3 5\n\nOutput:139\n40079781\n32745632\n\n-----Explanation-----\n\
  In the first test case, X = 4 and Y = 16. Its hash equals 1*1 + 23*6 = 139."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def MOD := 10^9 + 7\n\ndef calculate_square_hash (n : Nat) (d :\
  \ Nat) : Nat :=\n  sorry\n\n\n"
"vc-theorems": "theorem calculate_square_hash_deterministic (n d : Nat)\n  (hn : 1\
  \ ≤ n ∧ n ≤ 9) (hd : 1 ≤ d ∧ d ≤ 9) :\n  calculate_square_hash n d = calculate_square_hash\
  \ n d :=\n  sorry\n\n\ntheorem calculate_square_hash_zero (n : Nat) (hn : 1 ≤ n\
  \ ∧ n ≤ 9) :\n  calculate_square_hash n 0 = 0 :=\n  sorry\n\n/--\ninfo: 139\n-/\n\
  #guard_msgs in\n#eval calculate_square_hash 1 4\n\n/--\ninfo: 40079781\n-/\n#guard_msgs\
  \ in\n#eval calculate_square_hash 3 6\n\n/--\ninfo: 32745632\n-/\n#guard_msgs in\n\
  #eval calculate_square_hash 3 5\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
