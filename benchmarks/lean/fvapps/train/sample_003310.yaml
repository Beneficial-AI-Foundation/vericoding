"vc-description": "Let's pretend your company just hired your friend from college\
  \ and paid you a referral bonus. Awesome! To celebrate, you're taking your team\
  \ out to the terrible dive bar next door and using the referral bonus to buy, and\
  \ build, the largest three-dimensional beer can pyramid you can. And then probably\
  \ drink those beers, because let's pretend it's Friday too. \n\nA beer can pyramid\
  \ will square the number of cans in each level - 1 can in the top level, 4 in the\
  \ second, 9 in the next, 16, 25... \n\nComplete the beeramid function to return\
  \ the number of **complete** levels of a beer can pyramid you can make, given the\
  \ parameters of: \n\n1) your referral bonus, and\n\n2) the price of a beer can\n\
  \nFor example:"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def beeramid (bonus: Int) (price: Int) : Int :=\n  sorry\n"
"vc-theorems": "theorem beeramid_non_negative (bonus price: Int) (h: price > 0) :\
  \ \n  beeramid bonus price ≥ 0 := \n  sorry\n\n\ntheorem negative_bonus_gives_zero\
  \ (bonus price: Int) (h1: bonus < 0) (h2: price > 0) :\n  beeramid bonus price =\
  \ 0 :=\n  sorry\n\n\ntheorem monotonic_bonus (bonus price: Int) (h1: bonus ≥ 0)\
  \ (h2: price > 0) :\n  beeramid (bonus + price) price ≥ beeramid bonus price :=\n\
  \  sorry\n\n\ntheorem monotonic_price (bonus price: Int) (h1: bonus ≥ 0) (h2: price\
  \ > 0) :\n  beeramid bonus (2 * price) ≤ beeramid bonus price :=\n  sorry\n\n/--\n\
  info: 1\n-/\n#guard_msgs in\n#eval beeramid 9 2\n\n/--\ninfo: 3\n-/\n#guard_msgs\
  \ in\n#eval beeramid 21 1.5\n\n/--\ninfo: 0\n-/\n#guard_msgs in\n#eval beeramid\
  \ -1 4\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
