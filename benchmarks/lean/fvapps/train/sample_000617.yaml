"vc-description": "In this problem you are given a sequence of $N$ positive integers\
  \ $S[1],S[2],\\dots,S[N]$. In addition you are given an integer $T$, and your aim\
  \  is to find the number of quadruples $(i,j,k,l)$, such that $1 \\le i < j < k\
  \ < l \\le N$, and $S[i] + S[j] + S[k] + S[l] = T$.  That is, the number of ways\
  \ of picking four numbers from the sequence summing up to $T$.\n\n-----Constraints:-----\n\
  For all test cases,\n- $1 \\le N \\le 5000$\n- $1 \\le T \\le 10^6$\n- $1 \\le S[i]\
  \ \\le 10^9$, for all $i$.\nSubtask $1:10\\%$\nIt is guaranteed that $N \\le 50$.\n\
  Subtask $2:50\\%$\nIt is guaranteed that $N \\le 300$.\nSubtask $3:40\\%$\nNo additional\
  \ guarantees.\n\n-----Input Format:-----\nThere is only one line of input with $N+2$\
  \ space separated integers. The first two integers are $N$ and $T$. The next $N$\
  \ integers are $S[1],S[2],\\dots,S[N]$.\n\n-----Output Format:-----\nA single integer\
  \ which is the number of valid quadruples.\n\n-----Sample Input 1:-----\n6 20 3\
  \ 1 1 2 5 10\n\n-----Sample Output 1:-----\n1\n\n-----Explanation 1:-----\nThe quadruple\
  \ $(1,4,5,6)$ is valid  because $S[1]+S[4]+S[5]+S[6]=3+2+5+10=20$. You can check\
  \ that no other quadruple is valid and hence the answer is $1$.\n\n-----Sample Input\
  \ 2:-----\n6 13 1 2 3 4 5 4 \n\n-----Sample Output 2:-----\n3\n\n-----Explanation\
  \ 2:-----\nYou can verify that the only quadruples that are valid are $(2,3,4,6),(1,3,4,5)$\
  \  and $(1,3,5,6)$. Thus, the answer is $3$.\n\n-----Note:-----\nAs the answer might\
  \ be large, please use 64 bit integers (long long int in\nC/C++ and long in Java)\
  \ instead of 32 bit int."
"vc-preamble": "import Imports.AllImports\n\ndef count_quadruples (n : Nat) (target\
  \ : Int) (nums : List Int) : Nat :=\n  sorry\n\n\ndef listMax : List Int → Int \n\
  \  | [] => 0\n  | (x::xs) => max x (listMax xs)\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def listSum : List Int → Int\n  | [] => 0\n  | (x::xs) => x + listSum\
  \ xs\n\n\n\n\n"
"vc-theorems": "theorem count_quadruples_returns_natural \n  (nums : List Int) (target\
  \ : Int) (h : nums.length ≥ 4) :\n  count_quadruples nums.length target nums ≥ 0\
  \ :=\nsorry\n\n\ntheorem count_quadruples_binary_for_four \n  (nums : List Int)\
  \ (target : Int) (h : nums.length = 4) :\n  count_quadruples nums.length target\
  \ nums = 0 ∨ \n  count_quadruples nums.length target nums = 1 :=\nsorry\n\n\ntheorem\
  \ insufficient_elements_gives_zero\n  (nums : List Int) (target : Int) (h : nums.length\
  \ < 4) :\n  count_quadruples nums.length target nums = 0 :=\nsorry\n\n/--\ninfo:\
  \ 1\n-/\n#guard_msgs in\n#eval count_quadruples 6 20 [3, 1, 1, 2, 5, 10]\n\n/--\n\
  info: 3\n-/\n#guard_msgs in\n#eval count_quadruples 6 13 [1, 2, 3, 4, 5, 4]\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
