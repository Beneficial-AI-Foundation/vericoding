"vc-description": "We are given an array A of N lowercase letter strings, all of the\
  \ same length.\nNow, we may choose any set of deletion indices, and for each string,\
  \ we delete all the characters in those indices.\nFor example, if we have an array\
  \ A = [\"babca\",\"bbazb\"] and deletion indices {0, 1, 4}, then the final array\
  \ after deletions is [\"bc\",\"az\"].\nSuppose we chose a set of deletion indices\
  \ D such that after deletions, the final array has every element (row) in lexicographic\
  \ order.\nFor clarity, A[0] is in lexicographic order (ie. A[0][0] <= A[0][1] <=\
  \ ... <= A[0][A[0].length - 1]), A[1] is in lexicographic order (ie. A[1][0] <=\
  \ A[1][1] <= ... <= A[1][A[1].length - 1]), and so on.\nReturn the minimum possible\
  \ value of D.length.\n \n\nExample 1:\nInput: [\"babca\",\"bbazb\"]\nOutput: 3\n\
  Explanation: After deleting columns 0, 1, and 4, the final array is A = [\"bc\"\
  , \"az\"].\nBoth these rows are individually in lexicographic order (ie. A[0][0]\
  \ <= A[0][1] and A[1][0] <= A[1][1]).\nNote that A[0] > A[1] - the array A isn't\
  \ necessarily in lexicographic order.\n\n\nExample 2:\nInput: [\"edcba\"]\nOutput:\
  \ 4\nExplanation: If we delete less than 4 columns, the only row won't be lexicographically\
  \ sorted.\n\n\nExample 3:\nInput: [\"ghi\",\"def\",\"abc\"]\nOutput: 0\nExplanation:\
  \ All rows are already lexicographically sorted.\n\n \n\n\n\nNote:\n\n1 <= A.length\
  \ <= 100\n1 <= A[i].length <= 100"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def min_deletion_size (strings : List String) : Nat :=\n  sorry\n"
"vc-theorems": "theorem min_deletion_size_single_char (s : String) :\n  s.length =\
  \ 1 → min_deletion_size [s] = 0 := \n  sorry\n\n\ntheorem min_deletion_size_same_chars\
  \ (s : String) :\n  s = \"aa\" → min_deletion_size [s] = 0 :=\n  sorry\n\n\ntheorem\
  \ min_deletion_size_reverse_chars (s : String) :\n  s = \"ba\" → min_deletion_size\
  \ [s] = 1 :=\n  sorry\n\n\ntheorem min_deletion_size_identical_sorted_strs (s :\
  \ String) :\n  s = \"ab\" → min_deletion_size [s, s] = 0 :=\n  sorry\n\n\ntheorem\
  \ min_deletion_size_identical_unsorted_strs (s : String) :\n  s = \"ba\" → min_deletion_size\
  \ [s, s] = 1 :=\n  sorry\n\n\ntheorem min_deletion_size_different_sorted_strs :\n\
  \  min_deletion_size [\"abc\", \"def\", \"ghi\"] = 0 :=\n  sorry\n\n\ntheorem min_deletion_size_reverse_sorted_str\
  \ :\n  min_deletion_size [\"edcba\"] = 4 :=\n  sorry\n\n\ntheorem min_deletion_size_complex_case\
  \ :\n  min_deletion_size [\"babca\", \"bbazb\"] = 3 :=\n  sorry\n\n/--\ninfo: 3\n\
  -/\n#guard_msgs in\n#eval min_deletion_size [\"babca\", \"bbazb\"]\n\n/--\ninfo:\
  \ 4\n-/\n#guard_msgs in\n#eval min_deletion_size [\"edcba\"]\n\n/--\ninfo: 0\n-/\n\
  #guard_msgs in\n#eval min_deletion_size [\"ghi\", \"def\", \"abc\"]\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
