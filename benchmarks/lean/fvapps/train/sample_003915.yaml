"vc-description": "In order to prove it's success and gain funding, the wilderness\
  \ zoo needs to prove to environmentalists that it has x number of mating pairs of\
  \ bears. \n\nYou must check within string (s) to find all of the mating pairs, and\
  \ return a string containing only them. Line them up for inspection.\n\nRules:\n\
  Bears are either 'B' (male) or '8' (female),\nBears must be together in male/female\
  \ pairs 'B8' or '8B',\nMating pairs must involve two distinct bears each ('B8B'\
  \ may look fun, but does not count as two pairs).\n\nReturn an array containing\
  \ a string of only the mating pairs available. e.g:\n\n'EvHB8KN8ik8BiyxfeyKBmiCMj'\
  \ ---> 'B88B'    (empty string if there are no pairs)\n\nand true if the number\
  \ is more than or equal to x, false if not:\n\n(6, 'EvHB8KN8ik8BiyxfeyKBmiCMj')\
  \ ---> ['B88B', false];\n\nx will always be a positive integer, and s will never\
  \ be empty"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def bears (n : Nat) (s : String) : String × Bool := sorry\n\ntheorem\
  \ bears_return_structure (n : Nat) (s : String) :\n  let res := bears n s\n  res.1.data.all\
  \ (fun c => c = 'B' ∨ c = '8') ∧ \n  res.1.length % 2 = 0 := sorry\n"
"vc-theorems": "theorem bears_output_length_determines_bool (n : Nat) (s : String)\
  \ : \n  let res := bears n s\n  res.2 = (res.1.length / 2 ≥ n) := sorry\n\n\ntheorem\
  \ bears_output_is_subset (n : Nat) (s : String) :\n  let res := bears n s\n  let\
  \ filtered := s.data.filter (fun c => c = 'B' ∨ c = '8')\n  res.1.data.all (fun\
  \ pair => filtered.contains pair) := sorry\n\n\ntheorem bears_captures_all_pairs\
  \ (n : Nat) (s : String) \n  (h : s.data.all (fun c => c = 'B' ∨ c = '8')) :\n \
  \ let res := bears n s\n  let numPairs := res.1.length / 2\n  let countValidPairs\
  \ := (s.data.zip (s.data.drop 1))\n    |>.filter (fun p => (p.1 = 'B' ∧ p.2 = '8')\
  \ ∨ \n                       (p.1 = '8' ∧ p.2 = 'B'))\n    |>.length\n  numPairs\
  \ = countValidPairs := sorry\n\n/--\ninfo: ['B8B8B8', False]\n-/\n#guard_msgs in\n\
  #eval bears 7 \"8j8mBliB8gimjB8B8jlB\"\n\n/--\ninfo: ['8BB8B8B88B', True]\n-/\n\
  #guard_msgs in\n#eval bears 3 \"88Bifk8hB8BB8BBBB888chl8BhBfd\"\n\n/--\ninfo: ['8BB88B',\
  \ True]\n-/\n#guard_msgs in\n#eval bears 1 \"j8BmB88B88gkBBlf8hg8888lbe88\"\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
