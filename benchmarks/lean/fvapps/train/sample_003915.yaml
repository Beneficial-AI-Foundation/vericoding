vc-description: |-
  In order to prove it's success and gain funding, the wilderness zoo needs to prove to environmentalists that it has x number of mating pairs of bears. 

  You must check within string (s) to find all of the mating pairs, and return a string containing only them. Line them up for inspection.

  Rules:
  Bears are either 'B' (male) or '8' (female),
  Bears must be together in male/female pairs 'B8' or '8B',
  Mating pairs must involve two distinct bears each ('B8B' may look fun, but does not count as two pairs).

  Return an array containing a string of only the mating pairs available. e.g:

  'EvHB8KN8ik8BiyxfeyKBmiCMj' ---> 'B88B'    (empty string if there are no pairs)

  and true if the number is more than or equal to x, false if not:

  (6, 'EvHB8KN8ik8BiyxfeyKBmiCMj') ---> ['B88B', false];

  x will always be a positive integer, and s will never be empty
vc-preamble: |-
  import Imports.AllImports
vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>
vc-definitions: |
  def bears (n : Nat) (s : String) : String × Bool := sorry

  theorem bears_return_structure (n : Nat) (s : String) :
    let res := bears n s
    res.1.data.all (fun c => c = 'B' ∨ c = '8') ∧ 
    res.1.length % 2 = 0 := sorry
vc-theorems: |
  theorem bears_output_length_determines_bool (n : Nat) (s : String) : 
    let res := bears n s
    res.2 = (res.1.length / 2 ≥ n) := sorry


  theorem bears_output_is_subset (n : Nat) (s : String) :
    let res := bears n s
    let filtered := s.data.filter (fun c => c = 'B' ∨ c = '8')
    res.1.data.all (fun pair => filtered.contains pair) := sorry


  theorem bears_captures_all_pairs (n : Nat) (s : String) 
    (h : s.data.all (fun c => c = 'B' ∨ c = '8')) :
    let res := bears n s
    let numPairs := res.1.length / 2
    let countValidPairs := (s.data.zip (s.data.drop 1))
      |>.filter (fun p => (p.1 = 'B' ∧ p.2 = '8') ∨ 
                         (p.1 = '8' ∧ p.2 = 'B'))
      |>.length
    numPairs = countValidPairs := sorry

  /--
  info: ['B8B8B8', False]
  -/
  #guard_msgs in
  #eval bears 7 "8j8mBliB8gimjB8B8jlB"

  /--
  info: ['8BB8B8B88B', True]
  -/
  #guard_msgs in
  #eval bears 3 "88Bifk8hB8BB8BBBB888chl8BhBfd"

  /--
  info: ['8BB88B', True]
  -/
  #guard_msgs in
  #eval bears 1 "j8BmB88B88gkBBlf8hg8888lbe88"
vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded
