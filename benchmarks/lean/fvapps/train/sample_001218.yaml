"vc-description": "You have been appointed as the designer for your school's computer\
  \ network.\nIn total, there are N computers in the class, and M computer-to-computer\
  \ connections need to be made. Also, there are three mandatory conditions the design\
  \ should fulfill.\nThe first requirement is that any computer in the network should\
  \ be able to communicate with any other computer through the connections, possibly,\
  \ through some other computers.\nNetwork attacks are possible, so the second requirement\
  \ is that even if any one computer from the network gets disabled so that the rest\
  \ of the computers are unable to communicate with it, the rest of the computers\
  \ can still communicate with each other. In other words, the first requirement still\
  \ holds for any subset of (N-1) computers.\nThe third requirement is that there\
  \ shouldn't be any irrelevant connections in the network. We will call a connection\
  \ irrelevant if and only if after its' removal, the above two requirements are still\
  \ held.\nGiven N, M, please build a network with N computers and M connections,\
  \ or state that it is impossible.\n\n-----Input-----\nThe first line of the input\
  \ contains an integer T denoting the number of test cases. The description of T\
  \ test cases follows.\nThe first and only line of each test case contains a pair\
  \ of space-separated integers N and M denoting the number of computers and the number\
  \ of connections.\n\n-----Output-----\nOutput T blocks.\nIf it is impossible to\
  \ construct a network with the given parameters for the corresponding test case,\
  \ output just -1 -1. Otherwise, output M lines, each of which contains a space-separated\
  \ pairs of integers denoting the IDs of the computers that should be connected.\
  \ Note that multiple connections between any pair of computers and connections connecting\
  \ a computer to itself are implicitly not allowed due to the third requirement.\n\
  \n-----Constraints-----\n\n- 1 ≤ T ≤ 1000\n- 1 ≤ M ≤ N * (N - 1) / 2\n- 1 ≤ Sum\
  \ of all N ≤ 1000\n- Subtask 1 (21 point): 1 ≤ N ≤ 4\n- Subtask 2 (79 points): 1\
  \ ≤ N ≤ 100\n\n-----Example-----\nInput:2\n10 1\n5 5\n\nOutput:-1 -1\n1 2\n2 3\n\
  3 4\n4 5\n5 1\n\n-----Explanation-----\nExample case 1. There are not enough connections\
  \ even to satisfy the first requirement.\nExample case 2. The obtained network satisfies\
  \ all the requirements."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def computer_network_design (n m : Nat) : List (Int × Int) := sorry\n\
  \n\n\ntheorem valid_ring_topology_length (n : Nat) (h : n > 0) (h2 : n ≤ 100) :\n\
  \  List.length (computer_network_design n n) = n := sorry"
"vc-theorems": ""
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
