"vc-description": "```if-not:sql\nImplement a function that receives two IPv4 addresses,\
  \ and returns the number of addresses between them (including the first one, excluding\
  \ the last one).\n```\n\n```if:sql\nGiven a database of first and last IPv4 addresses,\
  \ calculate the number of addresses between them (including the first one, excluding\
  \ the last one).\n\n## Input\n\n~~~\n---------------------------------\n|     Table\
  \    | Column | Type  |\n|--------------+--------+-------|\n| ip_addresses | id\
  \     | int   |\n|              | first  | text  |\n|              | last   | text\
  \  |\n---------------------------------\n~~~\n\n## Output\n\n~~~\n----------------------\n\
  |   Column    | Type |\n|-------------+------|\n| id          | int  |\n| ips_between\
  \ | int  |\n----------------------\n~~~\n```\n\nAll inputs will be valid IPv4 addresses\
  \ in the form of strings. The last address will always be greater than the first\
  \ one.\n\n___\n\n## Examples\n\n```python\nips_between(\"10.0.0.0\", \"10.0.0.50\"\
  )  ==   50 \nips_between(\"10.0.0.0\", \"10.0.1.0\")   ==  256 \nips_between(\"\
  20.0.0.10\", \"20.0.1.0\")  ==  246\n```"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def ipsBetween (start_ip end_ip : String) : Int := sorry\n\ntheorem\
  \ ipsBetween_range (start_ip end_ip : String) :\n  let result := ipsBetween start_ip\
  \ end_ip\n  result ≥ 0 ∧ result < 2^32 := by sorry\n"
"vc-theorems": "theorem ipsBetween_self (ip : String) :\n  ipsBetween ip ip = 0 :=\
  \ by sorry\n\n\ntheorem ipsBetween_symmetry \n  (ip1 ip2 : String)\n  (h : ipsBetween\
  \ ip1 ip2 > 0) : \n  ipsBetween ip2 ip1 = -(ipsBetween ip1 ip2) := by sorry\n\n\
  /--\ninfo: 50\n-/\n#guard_msgs in\n#eval ips_between \"10.0.0.0\" \"10.0.0.50\"\n\
  \n/--\ninfo: 246\n-/\n#guard_msgs in\n#eval ips_between \"20.0.0.10\" \"20.0.1.0\"\
  \n\n/--\ninfo: 256\n-/\n#guard_msgs in\n#eval ips_between \"160.0.0.0\" \"160.0.1.0\"\
  \n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded"
