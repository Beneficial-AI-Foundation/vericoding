"vc-description": "Given two strings s and t which consist of only lowercase letters.\n\
  \nString t is generated by random shuffling string s and then add one more letter\
  \ at a random position.\n\nFind the letter that was added in t.\n\nExample:\n\n\
  Input:\ns = \"abcd\"\nt = \"abcde\"\n\nOutput:\ne\n\nExplanation:\n'e' is the letter\
  \ that was added."
"vc-preamble": "import Imports.AllImports\n\ndef sumList : List Nat → Nat \n  | []\
  \ => 0\n  | x :: xs => x + sumList xs\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def find_the_difference (s t : String) : Char := sorry\n\ntheorem\
  \ find_difference_finds_added_char (s : String) (extra_char : Char) :\n  find_the_difference\
  \ s (s.push extra_char) = extra_char := sorry\n"
"vc-theorems": "theorem find_difference_order_independent (s : String) (t : String)\
  \ (extra_char : Char) \n    (h : t = s.push extra_char) :\n  ∀ perm : String, Perm\
  \ t perm → find_the_difference s perm = extra_char := sorry\n\n\ntheorem find_difference_empty_source\
  \ (c : Char) :\n  find_the_difference \"\" (String.mk [c]) = c := sorry\n\n\ntheorem\
  \ find_difference_ord_sum (s : String) (extra_char : Char) :\n  let t := s.push\
  \ extra_char\n  Char.toNat (find_the_difference s t) = \n    sumList (t.data.map\
  \ Char.toNat) - sumList (s.data.map Char.toNat) := sorry\n\n/--\ninfo: 'e'\n-/\n\
  #guard_msgs in\n#eval find_the_difference \"abcd\" \"abcde\"\n\n/--\ninfo: 'y'\n\
  -/\n#guard_msgs in\n#eval find_the_difference \"\" \"y\"\n\n/--\ninfo: '2'\n-/\n\
  #guard_msgs in\n#eval find_the_difference \"hello\" \"hello2\"\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
