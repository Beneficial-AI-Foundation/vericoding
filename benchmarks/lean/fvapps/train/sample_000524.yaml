"vc-description": "Sebi goes to school daily with his father. They cross a big highway\
  \ in the car to reach to the school. Sebi sits in front seat beside his father at\
  \ driving seat. To kill boredom, they play a game of guessing speed of other cars\
  \ on the highway. Sebi makes a guess of other car's speed being SG kph, his father\
  \ FG kph. \n\nThe highway is usually empty, so the drivers use cruise control, i.e.\
  \ vehicles run at a constant speed. There are markers on the highway at a gap of\
  \ 50 meters. Both father-son duo wants to check the accuracy of their guesses. For\
  \ that, they start a timer at the instant at which their car and the other car (which\
  \ speed they are guessing) are parallel to each other (they need not to be against\
  \ some marker, they can be in between the markers too). After some T seconds, they\
  \ observe that both the cars are next to some markers and the number of markers\
  \ in between the markers of their car and the other car is D - 1 (excluding the\
  \ markers next to both the cars). Also, they can observe these markers easily because\
  \ the other car is faster than their. Speed of Sebi's father's car is S. Using this\
  \ information, one can find the speed of the other car accurately.\n\nAn example\
  \ situation when Sebi's father starts the timer. Notice that both the car's are\
  \ parallel to each other.\n\nExample situation after T seconds. The cars are next\
  \ to the markers. Here the value of D is 1. The green car is Sebi's and the other\
  \ car is of blue color.\n\nSebi's a child, he does not know how to find the check\
  \ whose guess is close to the real speed of the car. He does not trust his father\
  \ as he thinks that he might cheat. Can you help to resolve this issue between them\
  \ by telling whose guess is closer. If Sebi's guess is better, output \"SEBI\".\
  \ If his father's guess is better, output \"FATHER\". If both the guess are equally\
  \ close, then output \"DRAW\".\n\n-----Input-----\nThe first line of the input contains\
  \ an integer T denoting the number of test cases. \nEach of the next T lines contain\
  \ five space separated integers S, SG, FG, D, T corresponding to the Sebi's car\
  \ speed, Sebi's guess, his father's guess, D as defined in the statement and the\
  \ time at which both the cars at against the markers (in seconds), respectively.\n\
  \n-----Output-----\nOutput description.\nFor each test case, output a single line\
  \ containing \"SEBI\", \"FATHER\" or \"DRAW\" (without quotes) denoting whose guess\
  \ is better.\n\n-----Constraints-----\n- 1 ≤ T ≤ 10000\n- 0 ≤ S ≤ 130\n- 0 ≤ SG,\
  \ FG ≤ 300\n- 1 ≤ D ≤ 30\n- 1 ≤ T ≤ 300\n-  The other car speed doesn't exceed 300\
  \ kph.\n\n-----Example-----\nInput:\n2\n100 180 200 20 60\n130 131 132 1 72\n\n\
  Output:\nSEBI\nFATHER\n\n-----Explanation-----\nExample case 1.\nThere are total\
  \ 20 - 1 = 19 markers in between the Sebi's car and the other car. So, the distance\
  \ between those cars at time T is 20 * 50 = 1000 meters = 1 km.\nAs T = 60 seconds,\
  \ i.e. 1 minutes. So, the other car goes 1 km more than Sebi's car in 1 minute.\
  \ So, the other car will go 60 km more than Sebi's car in 1 hour. So, its speed\
  \ is 60 kmph more than Sebi's car, i.e. 160 kmph.\nSebi had made a guess of 180\
  \ kmph, while his father of 200 kmph. Other car's real speed is 160 kmph. So, Sebi's\
  \ guess is better than his father. Hence he wins the game.\nExample case 2.\n\n\
  The situation of this example is depicted in the image provided in the statement.\
  \ You can find the speed of other car and see that Father's guess is more accurate."
"vc-preamble": "import Imports.AllImports\n\ndef determine_winner (S : Nat) (SG :\
  \ Nat) (FG : Nat) (D : Nat) (T : Nat) : Winner :=\n  sorry\n\n\ndef abs (n : Nat)\
  \ : Nat :=\n  sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def nat_minus (a b : Nat) : Nat :=\n  sorry\n"
"vc-theorems": "theorem determine_winner_valid (S SG FG D T : Nat) :\n  ∃ w : Winner,\
  \ determine_winner S SG FG D T = w\n  := sorry\n\n\ntheorem determine_winner_draw_when_equidistant\
  \ (S SG FG D T : Nat) :\n  let actual_speed := (D * 50 * 3600)/(T * 1000) + S\n\
  \  nat_minus (abs (nat_minus SG actual_speed)) (abs (nat_minus FG actual_speed))\
  \ = 0 →\n  determine_winner S SG FG D T = Winner.DRAW\n  := sorry\n\n\ntheorem determine_winner_father_when_further\
  \ (S SG FG D T : Nat) :\n  let actual_speed := (D * 50 * 3600)/(T * 1000) + S\n\
  \  nat_minus (abs (nat_minus SG actual_speed)) (abs (nat_minus FG actual_speed))\
  \ > 0 →\n  determine_winner S SG FG D T = Winner.FATHER\n  := sorry\n\n\ntheorem\
  \ determine_winner_sebi_when_closer (S SG FG D T : Nat) :\n  let actual_speed :=\
  \ (D * 50 * 3600)/(T * 1000) + S\n  nat_minus (abs (nat_minus SG actual_speed))\
  \ (abs (nat_minus FG actual_speed)) < 0 →\n  determine_winner S SG FG D T = Winner.SEBI\n\
  \  := sorry\n\n\ntheorem determine_winner_same_guess_draw (S G D T : Nat) :\n  determine_winner\
  \ S G G D T = Winner.DRAW\n  := sorry\n\n/--\ninfo: 'SEBI'\n-/\n#guard_msgs in\n\
  #eval determine_winner 100 180 200 20 60\n\n/--\ninfo: 'FATHER'\n-/\n#guard_msgs\
  \ in\n#eval determine_winner 130 131 132 1 72\n\n/--\ninfo: 'DRAW'\n-/\n#guard_msgs\
  \ in\n#eval determine_winner 100 150 150 10 30\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
