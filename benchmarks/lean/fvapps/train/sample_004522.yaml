"vc-description": "Everybody loves **pi**, but what if **pi** were a square? Given\
  \ a number of digits ```digits```, find the smallest integer whose square is greater\
  \ or equal to the sum of the squares of the first ```digits``` digits of pi, including\
  \ the ```3``` before the decimal point.\n\n**Note:** Test cases will not extend\
  \ beyond 100 digits; the first 100 digits of pi are pasted here for your convenience:\n\
  ```\n31415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679\n\
  ```\n\n\n## Examples\n\n```\ndigits   = 1   #  [3]\nexpected = 3   #  sqrt(3^2)\
  \ = 3\n\n\ndigits   = 3   #  [3, 1, 4]\nexpected = 6   #  sqrt(3^2 + 1^2 + 4^2)\
  \ = 5.099 --> 6\n```"
"vc-preamble": "import Imports.AllImports\n\ndef maxLen : Nat :=\nsorry\n\n\ndef sum_squares\
  \ (n : Nat) : Nat :=\nsorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def square_pi (n : Nat) : Nat :=\nsorry\n\n\n"
"vc-theorems": "theorem square_pi_monotone {n₁ n₂ : Nat} (h : n₁ ≤ n₂) (h2 : n₂ ≤\
  \ maxLen) :\n  square_pi n₁ ≤ square_pi n₂ :=\nsorry\n\n/--\ninfo: 3\n-/\n#guard_msgs\
  \ in\n#eval square_pi 1\n\n/--\ninfo: 6\n-/\n#guard_msgs in\n#eval square_pi 3\n\
  \n/--\ninfo: 8\n-/\n#guard_msgs in\n#eval square_pi 5\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded_and_plausible"
