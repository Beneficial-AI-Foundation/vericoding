"vc-description": "=====Problem Statement=====\nThere is a horizontal row of n cubes.\
  \ The length of each cube is given. You need to create a new vertical pile of cubes.\
  \ The new pile should follow these directions: if cube_i is on top of cube_j then\
  \ sideLength_j ≥ sideLength_i.\nWhen stacking the cubes, you can only pick up either\
  \ the leftmost or the rightmost cube each time. Print \"Yes\" if it is possible\
  \ to stack the cubes. Otherwise, print \"No\". Do not print the quotation marks.\
  \ \n\n=====Input Format=====\nThe first line contains a single integer T, the number\
  \ of test cases.\nFor each test case, there are 2 lines.\nThe first line of each\
  \ test case contains n, the number of cubes.\nThe second line contains n space separated\
  \ integers, denoting the sideLengths of each cube in that order. \n\n=====Constraints=====\n\
  1≤T≤5\n1≤n≤10^5\n1≤sideLength≤2^31\n\n=====Output Format=====\nFor each test case,\
  \ output a single line containing either \"Yes\" or \"No\" without the quotes."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def can_stack_cubes (nums : List Nat) : String := sorry\n\nprivate\
  \ def isSorted (l : List Nat) : Bool := \n  match l with\n  | [] => true\n  | [_]\
  \ => true\n  | x::y::rest => x ≥ y && isSorted (y::rest)\n"
"vc-theorems": "theorem sorted_list_always_stackable (nums : List Nat) : \n  nums\
  \ ≠ [] → isSorted nums → can_stack_cubes nums = \"Yes\" := sorry\n\n\ntheorem output_is_yes_or_no\
  \ (nums : List Nat) :\n  nums ≠ [] → can_stack_cubes nums = \"Yes\" ∨ can_stack_cubes\
  \ nums = \"No\" := sorry\n\n\ntheorem small_lists_stackable (nums : List Nat) :\n\
  \  nums ≠ [] → List.length nums ≤ 2 → can_stack_cubes nums = \"Yes\" := sorry\n\n\
  \ntheorem edge_cases :\n  can_stack_cubes [1] = \"Yes\" ∧\n  can_stack_cubes [1,\
  \ 1] = \"Yes\" ∧ \n  can_stack_cubes [2, 1] = \"Yes\" ∧\n  can_stack_cubes [1, 2,\
  \ 1] = \"No\" := sorry\n\n/--\ninfo: 'Yes'\n-/\n#guard_msgs in\n#eval can_stack_cubes\
  \ [4, 3, 2, 1, 3, 4]\n\n/--\ninfo: 'No'\n-/\n#guard_msgs in\n#eval can_stack_cubes\
  \ [1, 3, 2]\n\n/--\ninfo: 'Yes'\n-/\n#guard_msgs in\n#eval can_stack_cubes [5, 4,\
  \ 3, 2, 1]\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
