"vc-description": "Chef got in the trouble! He is the king of Chefland and Chessland.\
  \ There is one queen in Chefland and one queen in Chessland and they both want a\
  \ relationship with him. Chef is standing before a difficult choice…\nChessland\
  \ may be considered a chessboard with $N$ rows (numbered $1$ through $N$) and $M$\
  \ columns (numbered $1$ through $M$). Let's denote a unit square in row $r$ and\
  \ column $c$ by $(r, c)$. Chef lives at square $(X, Y)$ of this chessboard.\nCurrently,\
  \ both queens are living in Chessland too. Each queen, when alone on the chessboard,\
  \ can see all squares that lie on the same row, column or diagonal as itself. A\
  \ queen from $(x_q, y_q)$ cannot see a square $(r, c)$ if the square $(X, Y)$ is\
  \ strictly between them. Of course, if the queens can see each other, the kingdom\
  \ will soon be in chaos!\nHelp Chef calculate the number of possible configurations\
  \ of the queens such that the kingdom will not be in chaos. A configuration is an\
  \ unordered pair of distinct squares $(x_{q1}, y_{q1})$ and $(x_{q2}, y_{q2})$ such\
  \ that neither of them is the square $(X, Y)$. Two configurations are different\
  \ if the position of queen $1$ is different or the position of queen $2$ is different.\n\
  \n-----Input-----\n- The first line of the input contains a single integer $T$ denoting\
  \ the number of test cases. The description of $T$ test cases follows.\n- The first\
  \ and only line of each test case contains four space-separated integers $N$, $M$,\
  \ $X$ and $Y$. \n\n-----Output-----\nFor each test case, print a single line containing\
  \ one integer — the number of configurations such that the kingdom will not be in\
  \ chaos.\n\n-----Constraints-----\n- $1 \\le T \\le 1000$\n- $1 \\le X \\le N \\\
  le 10^2$\n- $1 \\le Y \\le M \\le 10^2$\n- $2 \\le N, M$\n\n-----Example Input-----\n\
  2\n3 3 2 2\n4 4 2 3\n\n-----Example Output-----\n24\n94\n\n-----Explanation-----\n\
  Example case 1: Half of these configurations are:\n- $(1, 1), (3, 3)$\n- $(1, 1),\
  \ (2, 3)$\n- $(1, 1), (3, 2)$\n- $(1, 2), (3, 3)$\n- $(1, 2), (3, 2)$\n- $(1, 2),\
  \ (3, 1)$\n- $(1, 3), (3, 1)$\n- $(1, 3), (3, 2)$\n- $(1, 3), (2, 1)$\n- $(2, 1),\
  \ (2, 3)$\n- $(2, 1), (1, 3)$\n- $(2, 1), (3, 3)$"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def solve_queens (n m x y : Nat) : Nat := sorry \n\ntheorem queens_symmetry_rotate_180\
  \ {n m x y : Nat} (h1 : x ≤ n) (h2 : y ≤ m) :\n  solve_queens n m x y = solve_queens\
  \ n m (n-x+1) (m-y+1) := sorry\n"
"vc-theorems": "theorem queens_square_board_nonnegative {n x y : Nat} (h1 : x ≤ n)\
  \ (h2 : y ≤ n) :\n  0 ≤ solve_queens n n x y := sorry\n\n\ntheorem queens_corner_symmetry\
  \ {n m : Nat} (h1 : n ≥ 2) (h2 : m ≥ 2) :\n  solve_queens n m 1 1 = solve_queens\
  \ n m n m := sorry\n\n\ntheorem queens_basic_properties {n m x y : Nat} \n  (h1\
  \ : n ≥ 2) (h2 : m ≥ 2) (h3 : x ≤ n) (h4 : y ≤ m) :\n  let result := solve_queens\
  \ n m x y\n  let total := (n*m)*(n*m-1)\n  (0 ≤ result) ∧ \n  (result % 2 = 0) ∧\n\
  \  (result ≤ total) := sorry\n\n/--\ninfo: 24\n-/\n#guard_msgs in\n#eval solve_queens\
  \ 3 3 2 2\n\n/--\ninfo: 94\n-/\n#guard_msgs in\n#eval solve_queens 4 4 2 3\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
