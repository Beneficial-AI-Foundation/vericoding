"vc-description": "Write a function, `gooseFilter` / `goose-filter` / `goose_filter`\
  \ /` GooseFilter`, that takes an array of strings as an argument and returns a filtered\
  \ array containing the same elements but with the 'geese' removed.\n\nThe geese\
  \ are any strings in the following array, which is pre-populated in your solution:\n\
  \n```python\ngeese = [\"African\", \"Roman Tufted\", \"Toulouse\", \"Pilgrim\",\
  \ \"Steinbacher\"]\n```\n\nFor example, if this array were passed as an argument:\n\
  \n```python\n[\"Mallard\", \"Hook Bill\", \"African\", \"Crested\", \"Pilgrim\"\
  , \"Toulouse\", \"Blue Swedish\"]\n```\n\nYour function would return the following\
  \ array:\n\n```python\n[\"Mallard\", \"Hook Bill\", \"Crested\", \"Blue Swedish\"\
  ]\n```\n\nThe elements in the returned array should be in the same order as in the\
  \ initial array passed to your function, albeit with the 'geese' removed. Note that\
  \ all of the strings will be in the same case as those provided, and some elements\
  \ may be repeated."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def GEESE : List String := [\"African\", \"Roman Tufted\", \"Toulouse\"\
  , \"Pilgrim\", \"Steinbacher\"]\n\ndef goose_filter (birds : List String) : List\
  \ String := sorry\n"
"vc-theorems": "theorem output_is_subset {birds : List String} : \n  ∀ x ∈ goose_filter\
  \ birds, x ∈ birds := sorry\n\n\ntheorem no_geese_in_output {birds : List String}\
  \ :\n  ∀ x ∈ goose_filter birds, x ∉ GEESE := sorry\n\n\ntheorem all_non_geese_preserved\
  \ {birds : List String} :\n  goose_filter birds = birds.filter (λ x => x ∉ GEESE)\
  \ := sorry\n\n/--\ninfo: ['Mallard', 'Hook Bill', 'Crested', 'Blue Swedish']\n-/\n\
  #guard_msgs in\n#eval goose_filter [\"Mallard\", \"Hook Bill\", \"African\", \"\
  Crested\", \"Pilgrim\", \"Toulouse\", \"Blue Swedish\"]\n\n/--\ninfo: ['Mallard',\
  \ 'Barbary', 'Hook Bill', 'Blue Swedish', 'Crested']\n-/\n#guard_msgs in\n#eval\
  \ goose_filter [\"Mallard\", \"Barbary\", \"Hook Bill\", \"Blue Swedish\", \"Crested\"\
  ]\n\n/--\ninfo: []\n-/\n#guard_msgs in\n#eval goose_filter [\"African\", \"Roman\
  \ Tufted\", \"Toulouse\", \"Pilgrim\", \"Steinbacher\"]\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
