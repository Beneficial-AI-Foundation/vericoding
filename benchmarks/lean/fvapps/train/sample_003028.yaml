"vc-description": "# Task\n Your task is to find the similarity of given sorted arrays\
  \ `a` and `b`, which is defined as follows: \n \n you take the number of elements\
  \ which are present in both arrays and divide it by the number of elements which\
  \ are present in at least one array.\n\n It also can be written as a formula `similarity(A,\
  \ B) = #(A ∩ B) / #(A ∪ B)`, where `#(C)` is the number of elements in C, `∩` is\
  \ intersection of arrays, `∪` is union of arrays.\n\n This is known as `Jaccard\
  \ similarity`.\n\n The result is guaranteed to fit any floating-point type without\
  \ rounding.\n\n# Example\n\n For `a = [1, 2, 4, 6, 7]` and `b = [2, 3, 4, 7]`:\n\
  ```\nelements [2, 4, 7] are present in both arrays;\nelements [1, 2, 3, 4, 6, 7]\
  \ are present in at least one of the arrays.\nSo the similarity equals to 3 / 6\
  \ = 0.5.```\n\n# Input/Output\n\n\n - `[input]` integer array `a`\n\n  A `sorted`\
  \ array of positive integers. \n  \n  All elements are `different` and are `less\
  \ than 100`.\n  \n  `1 ≤ a.length ≤ 100`\n\n\n - `[input]` integer array `b`\n\n\
  \  An array in the same format as `a`.\n\n\n - `[output]` a float number\n\n  The\
  \ similarity of the arrays.\n  \n  ```Haskell\n  \n  In Haskell the two arrays are\
  \ passed as a touple.\n  ```"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def similarity (xs ys : List Int) : Float := sorry\n\ntheorem similarity_self_identity\
  \ (xs : List Int) :\n  similarity xs xs = (if xs.isEmpty then 0.0 else 1.0) := sorry\n"
"vc-theorems": "theorem similarity_symmetric (xs ys : List Int) :\n  similarity xs\
  \ ys = similarity ys xs := sorry\n\n\ntheorem similarity_bounds (xs ys : List Int)\
  \ :\n  0 ≤ similarity xs ys ∧ similarity xs ys ≤ 1 := sorry\n\n\ntheorem disjoint_similarity\
  \ (xs ys : List Int) :\n  xs ≠ [] → ys ≠ [] → (∀ y ∈ ys, y ∉ xs) → similarity xs\
  \ ys = 0 := sorry \n\n\ntheorem empty_list_similarity (xs : List Int) :\n  similarity\
  \ xs [] = 0 ∧ similarity [] xs = 0 ∧ similarity [] [] = 0 := sorry\n\n/--\ninfo:\
  \ 1.0\n-/\n#guard_msgs in\n#eval similarity [1, 2, 3] [1, 2, 3]\n\n/--\ninfo: 0.0\n\
  -/\n#guard_msgs in\n#eval similarity [1, 2, 3] [4, 5, 6]\n\n/--\ninfo: 0.5\n-/\n\
  #guard_msgs in\n#eval similarity [1, 2, 4, 6, 7] [2, 3, 4, 7]\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
