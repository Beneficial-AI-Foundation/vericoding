"vc-description": "Xorgon is an extremely delicious treat formed by the sequence $S$\
  \ of binary integers $s_1, s_2,..,s_N$. A really interesting property found in a\
  \ Xorgon is that the xor of all elements in any contiguous subsequence of length\
  \ $K$ in $S$ will result in $1$.   \nChef has been asked to prepare a Xorgon. However,\
  \ he has at his disposal a binary sequence $X$ containing the binary integers $x_1,\
  \ x_2, ...x_N$. To prepare a Xorgon, the chef may flip the value of as many binary\
  \ digits in $X$ as required.(i.e. turn a $1$ to a $0$ and $0$ to a $1$). Unfortunately,\
  \ flipping a digit takes a lot of time and the chef has to serve many orders. Can\
  \ you help the chef calculate the minimum number of flips required to cook a Xorgon\
  \ from the given $X$?\n\n-----Input:-----\n- The first line will contain two space-separated\
  \ integers $N, K$.\n- Next line contains N space-separated integers $x_1, x_2, ...,x_N$.\
  \ \n\n-----Output:-----\nOutput in a single line minimum number of flips required\
  \ to turn $X$ into a Xorgon.\n\n-----Constraints-----\n- $1 \\leq K \\leq N \\leq\
  \ 3*10^6$\n- $0 \\leq x_i \\leq 1$\n\n-----Sample Input:-----\n7 5\n1 0 0 1 1 1\
  \ 1\n\n-----Sample Output:-----\n1\n\n-----EXPLANATION:-----\nFlip the last bit\
  \ from 1 to 0 to obtain a Xorgon."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def solve_xorgon (n k : Nat) (arr : List Nat) : Nat := sorry\n\n\
  theorem solve_xorgon_properties (n k : Nat) (arr : List Nat)\n  (h1 : arr.length\
  \ > 0) (h2 : k > 0) :\n  let result := solve_xorgon n k arr\n  (result ≥ 0 ∧ result\
  \ ≤ arr.length) := sorry\n"
"vc-theorems": "theorem solve_xorgon_empty_array (n k : Nat) (arr : List Nat) \n \
  \ (h : arr.length = 0) :\n  solve_xorgon 0 k arr = 0 := sorry\n\n\ntheorem solve_xorgon_result_bounded\
  \ (n k : Nat) (arr : List Nat)\n  (h : arr.length > 0) :\n  solve_xorgon n k arr\
  \ ≤ arr.length := sorry\n\n/--\ninfo: 1\n-/\n#guard_msgs in\n#eval solve_xorgon\
  \ 7 5 [1, 0, 0, 1, 1, 1, 1]\n\n/--\ninfo: 1\n-/\n#guard_msgs in\n#eval solve_xorgon\
  \ 4 3 [1, 1, 0, 0]\n\n/--\ninfo: 1\n-/\n#guard_msgs in\n#eval solve_xorgon 3 3 [0,\
  \ 0, 0]\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
