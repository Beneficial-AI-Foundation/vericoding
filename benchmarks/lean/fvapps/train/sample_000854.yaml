"vc-description": "There are $X$ people participating in a quiz competition and their\
  \ IDs have been numbered from $1$ to $X$ (both inclusive). Beth needs to form a\
  \ team among these $X$ participants. She has been given an integer $Y$. She can\
  \ choose participants whose ID numbers are divisible by $Y$. \nNow that the team\
  \ is formed, Beth wants to know the strength of her team. The strength of a team\
  \ is the sum of all the last digits of the team members’ ID numbers.\nCan you help\
  \ Beth in finding the strength of her team?\n\n-----Input:-----\n- The first line\
  \ of the input contains a single integer $T$ denoting the number of test cases.\
  \ $T$ lines follow \n- The first line of each test case contains $X$ and $Y$. \n\
  \n-----Output:-----\n- For each test case print the strength of Beth's team\n\n\
  -----Constraints-----\n- $1 \\leq T \\leq 1000$\n- $1 \\leq X,Y \\leq 10^{20}$\n\
  \n-----Sample Input:-----\n2\n10 3\n\n15 5\n\n-----Sample Output:-----\n18 \n\n\
  10\n\n-----EXPLANATION:-----\n- Example case 1: ID numbers divisible by 3 are 3,6,9\
  \ and the sum of the last digits are 3+6+9=18"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def calculate_team_strength (x y : Nat) : Nat := sorry\n\ntheorem\
  \ calculate_team_strength_nonnegative (x y : Nat) \n  (h1: x ≥ y) (h2: y > 0) :\n\
  \  calculate_team_strength x y ≥ 0 := sorry\n"
"vc-theorems": "theorem calculate_team_strength_bounded (x y : Nat) \n  (h1: x ≥ y)\
  \ (h2: y > 0) :\n  calculate_team_strength x y ≤ ((x / y) - ((y-1) / y)) * 9 :=\
  \ sorry\n\n\ntheorem calculate_team_strength_y_one (x : Nat) (h: x > 0) :\n  calculate_team_strength\
  \ x 1 = \n    -- Sum of last digits from 1 to x\n    sorry := sorry \n\n\ntheorem\
  \ calculate_team_strength_consecutive (x y : Nat)\n  (h1: x ≥ y) (h2: y > 0) (h3:\
  \ (x + 1) % y ≠ 0) :\n  calculate_team_strength x y = calculate_team_strength (x\
  \ + 1) y := sorry\n\n\ntheorem calculate_team_strength_equal_inputs (y : Nat) (h:\
  \ y > 0) :\n  calculate_team_strength y y = y % 10 := sorry"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded"
