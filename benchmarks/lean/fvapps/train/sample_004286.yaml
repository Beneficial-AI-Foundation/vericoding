"vc-description": "Vasya wants to climb up a stair of certain amount of steps (Input\
  \ parameter 1). There are 2 simple rules that he has to stick to.\n\n1. Vasya can\
  \ climb 1 or 2 steps at each move.\n2. Vasya wants the number of moves to be a multiple\
  \ of a certain integer. (Input parameter 2).\n\n### Task:\nWhat is the `MINIMAL`\
  \ number of moves making him climb to the top of the stairs that satisfies his conditions?\n\
  \n### Input\n\n1. Number of stairs:    `0 <  N  ≤ 10000` ;\n2. Integer to be multiplied\
  \ : `1 < M ≤ 10 `;\n\n### Output\n\n1. Return a single integer - the minimal number\
  \ of moves being a multiple of M;\n2. If there is no way he can climb satisfying\
  \ condition return - 1 instead. (`Nothing` in Haskell)\n\n### Examples\n\n```python\n\
  numberOfSteps(10, 2) => 6  # Sequence of steps : {2, 2, 2, 2, 1, 1}\n\nnumberOfSteps(3,\
  \ 5) => -1 # !Possible sequences of steps : {2, 1}, {1, 2}, {1, 1, 1}\n```\n```\
  \ haskell\nnumberOfSteps 10 2 == Just 6  -- Sequence of steps : {2, 2, 2, 2, 1,\
  \ 1}\nnumberOfSteps  3 5 == Nothing -- Not possible, since the sequences of steps\
  \ would be {2, 1}, {1, 2} or {1, 1, 1}\n```"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def numberOfSteps (steps m : Nat) : Int := sorry\n\ntheorem result_is_negative_one_or_not_less_than_half_steps\
  \ {steps m : Nat} (h1 : steps > 0) (h2 : m > 0) :\n  let result := numberOfSteps\
  \ steps m\n  result = -1 ∨ result ≥ steps / 2 := sorry\n"
"vc-theorems": "theorem result_divisible_by_m_or_negative_one {steps m : Nat} (h1\
  \ : steps > 0) (h2 : m > 0) :\n  let result := numberOfSteps steps m\n  result =\
  \ -1 ∨ result % m = 0 := sorry\n\n\ntheorem negative_one_when_steps_less_than_m\
  \ {steps m : Nat} (h1 : steps > 0) (h2 : m > 0) :\n  steps < m → numberOfSteps steps\
  \ m = -1 := sorry\n\n\ntheorem even_steps_special_case {steps m : Nat} (h1 : steps\
  \ > 1) (h2 : m > 0) \n  (h3 : steps % 2 = 0) (h4 : steps ≥ m) (h5 : (steps / 2)\
  \ % m = 0) :\n  numberOfSteps steps m = steps / 2 := sorry"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded_and_plausible"
