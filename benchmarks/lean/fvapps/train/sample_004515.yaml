"vc-description": "The 26 letters of the English alphabets are randomly divided into\
  \ 5 groups of 5 letters with the remaining letter being ignored.  Each of the group\
  \ is assigned a score of more than 0.  The ignored letter always has a score of\
  \ 0.\n\nWith this kata, write a function ```nameScore(name)``` to work out the score\
  \ of a name that is passed to the function.\n\nThe output should be returned as\
  \ an object:\n\nOnly letters have a score. Spaces do not.\n\nYou can safely assume\
  \ that ```name``` does not contain any punctuations or symbols.  There will also\
  \ be no ```empty string``` or ```null``` value.\n\nA static ```alpha``` object for\
  \ testing has been preloaded  for your convenience in the following format:\n\n\
  Note that the ```alpha``` object will be randomly generated each time you run the\
  \ test.\n\n#Example\n\nIn accordance to the above ```alpha``` object, the name ```Mary\
  \ Jane``` will have a name score of ```20``` => M=3 + a=1 + r=4 + y=5 + J=2 + a=1\
  \ + n=3 + e=1"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def name_score (name : String) (alpha : Option (Lean.HashMap String\
  \ Int) := none) : \n  Lean.HashMap String Int := sorry\n"
"vc-theorems": "theorem name_score_returns_dict_with_name (name : String) :\n  let\
  \ result := name_score name\n  result.size = 1 ∧ result.contains name := sorry\n\
  \n\ntheorem name_score_with_custom_alpha (name : String) (alpha : Lean.HashMap String\
  \ Int) :\n  let result := name_score name (some alpha)\n  result.size = 1 ∧ result.contains\
  \ name := sorry\n\n\ntheorem name_score_case_insensitive (name : String) : \n  (name_score\
  \ name.toLower).find! name.toLower = \n  (name_score name.toUpper).find! name.toUpper\
  \ := sorry\n\n\ntheorem name_score_nonnegative (name : String) :\n  (name_score\
  \ name).find! name ≥ 0 := sorry\n\n\ntheorem name_score_additive (name1 name2 :\
  \ String) :\n  (name_score (name1 ++ name2)).find! (name1 ++ name2) = \n  (name_score\
  \ name1).find! name1 + (name_score name2).find! name2 := sorry\n\n/--\ninfo: {'MARY':\
  \ 13}\n-/\n#guard_msgs in\n#eval name_score \"MARY\"\n\n/--\ninfo: {'Mary Jane':\
  \ 20}\n-/\n#guard_msgs in\n#eval name_score \"Mary Jane\"\n\n/--\ninfo: {'CAB':\
  \ 3}\n-/\n#guard_msgs in\n#eval name_score \"CAB\" {\"ABC\": 1, \"DEF\": 2, \"GHIJKLMNOPQRSTUVWXYZ\"\
  : 0}\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
