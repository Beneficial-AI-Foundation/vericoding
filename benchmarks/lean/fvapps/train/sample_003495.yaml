"vc-description": "# Task\n You are given two string `a` an `s`. Starting with an\
  \ empty string we can do the following two operations:\n```\nappend the given string\
  \ a to the end of the current string.\nerase one symbol of the current string.```\n\
  Your task is to find the least number of operations needed to construct the given\
  \ string s. Assume that all the letters from `s` appear in `a` at least once.\n\n\
  # Example\n\n For `a = \"aba\", s = \"abbaab\"`, the result should be `6`.\n \n\
  \ Coinstruction:\n \n `\"\" -> \"aba\" -> \"ab\" -> \"ababa\" -> \"abba\" -> \"\
  abbaaba\" -> \"abbaab\".`\n \n So, the result is 6.\n\n For `a = \"aba\", s = \"\
  a\"`, the result should be `3`.\n \n Coinstruction:\n \n `\"\" -> \"aba\" -> \"\
  ab\" -> \"a\".`\n \n So, the result is 3.\n\n For `a = \"aba\", s = \"abaa\"`, the\
  \ result should be `4`.\n \n Coinstruction:\n \n `\"\" -> \"aba\" -> \"abaaba\"\
  \ -> \"abaab\" -> \"abaa\".`\n \n So, the result is 4.\n\n# Input/Output\n\n\n -\
  \ `[input]` string `a`\n\n  string to be appended. Contains only lowercase English\
  \ letters. \n  \n  1 <= a.length <= 20\n\n\n - `[input]` string `s`\n\n  desired\
  \ string containing only lowercase English letters.\n  \n  1 <= s.length < 1000\n\
  \n\n - `[output]` an integer\n\n  minimum number of operations"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def string_constructing (src t : String) : Nat := sorry\n\ntheorem\
  \ empty_target_returns_zero (src : String) :\n  string_constructing src \"\" = 0\
  \ := sorry\n\n\n\n\n\n\n"
"vc-theorems": "theorem known_case_three :\n  string_constructing \"abcdefgh\" \"\
  hgfedcba\" = 64 := sorry\n\n\ntheorem single_char_identity (c : Char) :\n  string_constructing\
  \ (String.mk [c]) (String.mk [c]) = 1 := sorry"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded_and_plausible"
