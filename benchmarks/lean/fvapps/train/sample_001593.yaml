"vc-description": "A format for expressing an ordered list of integers is to use a\
  \ comma separated list of either\n\n* individual integers\n* or a range of integers\
  \ denoted by the starting integer separated from the end integer in the range by\
  \ a dash, '-'. The range includes all integers in the interval including both endpoints.\
  \  It is not considered a range unless it spans at least 3 numbers. For example\
  \ \"12,13,15-17\"\n\nComplete the solution  so that it takes a list of integers\
  \ in increasing order and returns a correctly formatted string in the range format.\
  \ \n\n**Example:**\n\n```python\nsolution([-6, -3, -2, -1, 0, 1, 3, 4, 5, 7, 8,\
  \ 9, 10, 11, 14, 15, 17, 18, 19, 20])\n# returns \"-6,-3-1,3-5,7-11,14,15,17-20\"\
  \n```\n\n```C#\nRangeExtraction.Extract(new[] {-6, -3, -2, -1, 0, 1, 3, 4, 5, 7,\
  \ 8, 9, 10, 11, 14, 15, 17, 18, 19, 20});\n# returns \"-6,-3-1,3-5,7-11,14,15,17-20\"\
  \n```\n\n*Courtesy of rosettacode.org*"
"vc-preamble": "import Imports.AllImports\n\ndef solution (xs : List Int) : String\
  \ := sorry\n\ntheorem solution_empty_list : solution [] = \"\" := by sorry\n\n\n\
  def parseAsInt (s : String) : Option Int := sorry\n\ninductive ValidPart : Type\
  \ where\n  | empty : ValidPart\n  | single (n : Int) : ValidPart\n  | range (s e\
  \ : Int) (h : s < e) : ValidPart\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def isValidPart (s : String) : Bool := sorry \n\ntheorem solution_valid_parts\
  \ (xs : List Int) :\n  ∀ p ∈ (solution xs).splitOn \",\", isValidPart p = true :=\
  \ by sorry"
"vc-theorems": "theorem solution_nonempty_input (xs : List Int) (h : xs ≠ []) :\n\
  \  solution xs ≠ \"\" := by sorry\n\n\n/--\ninfo: '-6,-3-1,3-5,7-11,14,15,17-20'\n\
  -/\n#guard_msgs in\n#eval solution [-6, -3, -2, -1, 0, 1, 3, 4, 5, 7, 8, 9, 10,\
  \ 11, 14, 15, 17, 18, 19, 20]\n\n/--\ninfo: '-3--1,2,10,15,16,18-20'\n-/\n#guard_msgs\
  \ in\n#eval solution [-3, -2, -1, 2, 10, 15, 16, 18, 19, 20]\n\n/--\ninfo: '1-5'\n\
  -/\n#guard_msgs in\n#eval solution [1, 2, 3, 4, 5]\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
