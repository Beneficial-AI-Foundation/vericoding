"vc-description": "Every email consists of a local name and a domain name, separated\
  \ by the @ sign.\nFor example, in alice@leetcode.com, alice is the local name, and\
  \ leetcode.com is the domain name.\nBesides lowercase letters, these emails may\
  \ contain '.'s or '+'s.\nIf you add periods ('.') between some characters in the\
  \ local name part of an email address, mail sent there will be forwarded to the\
  \ same address without dots in the local name.  For example, \"alice.z@leetcode.com\"\
  \ and \"alicez@leetcode.com\" forward to the same email address.  (Note that this\
  \ rule does not apply for domain names.)\nIf you add a plus ('+') in the local name,\
  \ everything after the first plus sign will be ignored. This allows certain emails\
  \ to be filtered, for example m.y+name@email.com will be forwarded to my@email.com. \
  \ (Again, this rule does not apply for domain names.)\nIt is possible to use both\
  \ of these rules at the same time.\nGiven a list of emails, we send one email to\
  \ each address in the list.  How many different addresses actually receive mails? \n\
   \n\nExample 1:\nInput: [\"test.email+alex@leetcode.com\",\"test.e.mail+bob.cathy@leetcode.com\"\
  ,\"testemail+david@lee.tcode.com\"]\nOutput: 2\nExplanation: \"testemail@leetcode.com\"\
  \ and \"testemail@lee.tcode.com\" actually receive mails\n\n \nNote:\n\n1 <= emails[i].length <=\
  \ 100\n1 <= emails.length <= 100\nEach emails[i] contains exactly one '@' character.\n\
  All local and domain names are non-empty.\nLocal names do not start with a '+' character."
"vc-preamble": "import Imports.AllImports\n\ndef isValidEmail (s : String) : Bool\
  \ :=\n  sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def numUniqueEmails (emails : List String) : Nat :=\n  sorry\n"
"vc-theorems": "theorem numUniqueEmails_bounds (emails : List String) :\n  let result\
  \ := numUniqueEmails emails\n  0 ≤ result ∧ result ≤ emails.length :=\nsorry\n\n\
  \ntheorem numUniqueEmails_idempotent (emails : List String) :\n  emails ≠ [] →\n\
  \  numUniqueEmails (emails ++ emails) = numUniqueEmails emails :=\nsorry\n\n\ntheorem\
  \ numUniqueEmails_dot_invariant (email : String) (h : isValidEmail email) :\n  let\
  \ local_domain := email.splitOn \"@\"\n  let dotted := String.join [local_domain.get!\
  \ 0, \"@\", local_domain.get! 1]\n  numUniqueEmails [email, dotted] = 1 :=\nsorry\n\
  \n\ntheorem numUniqueEmails_plus_invariant (email : String) (h : isValidEmail email)\
  \ :\n  let local_domain := email.splitOn \"@\"\n  let plusAdded := String.join [local_domain.get!\
  \ 0, \"+anything@\", local_domain.get! 1]\n  numUniqueEmails [email, plusAdded]\
  \ = 1 :=\nsorry\n\n/--\ninfo: 2\n-/\n#guard_msgs in\n#eval num_unique_emails [\"\
  test.email+alex@leetcode.com\", \"test.e.mail+bob.cathy@leetcode.com\", \"testemail+david@lee.tcode.com\"\
  ]\n\n/--\ninfo: 3\n-/\n#guard_msgs in\n#eval num_unique_emails [\"a@leetcode.com\"\
  , \"b@leetcode.com\", \"c@leetcode.com\"]\n\n/--\ninfo: 1\n-/\n#guard_msgs in\n\
  #eval num_unique_emails [\"test.email+alex@leetcode.com\", \"test.email@leetcode.com\"\
  ]\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded"
