"vc-description": "## Debugging sayHello function\n\nThe starship Enterprise has run\
  \ into some problem when creating a program to greet everyone as they come aboard.\
  \ It is your job to fix the code and get the program working again!\n\nExample output:\
  \ \n```\nHello, Mr. Spock\n```"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def sayHello (name : String) : String := sorry\n\ntheorem say_hello_returns_string\
  \ {name : String} (h : name.length > 0) :\n  let greeting := sayHello name\n  String.length\
  \ greeting > 0 := sorry\n"
"vc-theorems": "theorem say_hello_starts_with_hello {name : String} (h : name.length\
  \ > 0) :\n  let greeting := sayHello name\n  String.startsWith greeting \"Hello,\
  \ \" = true := sorry\n\n\ntheorem say_hello_ends_with_name {name : String} (h :\
  \ name.length > 0) :\n  let greeting := sayHello name\n  String.endsWith greeting\
  \ name = true := sorry\n\n\ntheorem say_hello_length {name : String} (h : name.length\
  \ > 0) :\n  let greeting := sayHello name\n  String.length greeting = String.length\
  \ \"Hello, \" + String.length name := sorry\n\n/--\ninfo: 'Hello, Mr. Spock'\n-/\n\
  #guard_msgs in\n#eval say_hello \"Mr. Spock\"\n\n/--\ninfo: 'Hello, Captain Kirk'\n\
  -/\n#guard_msgs in\n#eval say_hello \"Captain Kirk\"\n\n/--\ninfo: 'Hello, Dr. McCoy'\n\
  -/\n#guard_msgs in\n#eval say_hello \"Dr. McCoy\"\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
