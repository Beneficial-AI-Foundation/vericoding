"vc-description": "Being a crewmate in the Among Us game, you will have to solve a\
  \ task to win against the imposter. \nThe task : You are given a certain number\
  \ of bulbs(Say n) which are initially in OFF position. \nThe bulbs are numbered\
  \ from 1 to n. There will be n current fluctuations in such a way that in the 1st\
  \ fluctuation all bulbs are toggled, in the 2nd fluctuation every 2nd bulb is toggled,\
  \ in the 3rd fluctuation every 3rd bulb is toggled and so on.\nYour job as a crewmate\
  \ is to find the number of bulbs which are ON at the end of n fluctuations. But,\
  \ the imposter has a special power which alerts it when a bulb with a number divisible\
  \ by 3 is kept ON at the end of n fluctuations. \nSo, you will have to switch off\
  \ the bulbs with numbers divisible by 3 and give the final result to complete the\
  \ task and win the game.\n\n-----Input:-----\n- First line will contain $T$, number\
  \ of testcases. Then the testcases follow. \n- Each testcase contains of a single\
  \ line of input, an integer $n$. \n\n-----Output:-----\n- For each testcase, output\
  \ a single integer - the number of bulbs that will remain ON after $n$ fluctuations.\n\
  \n-----Constraints :-----\n- $1 \\leq T \\leq 1000$\n- $2 \\leq n \\leq 10^9$\n\n\
  -----Sample Input:-----\n2\n2\n20\n\n-----Sample Output:-----\n1\n\n3"
"vc-preamble": "import Imports.AllImports\n\ndef solve_bulb_fluctuations (n: Nat)\
  \ : Nat :=\n  sorry\n\n\ndef sqrt (n: Nat) : Nat :=\n  sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def countSquaresNotDiv3 (n: Nat) : Nat :=\n  sorry\n"
"vc-theorems": "theorem output_non_negative (n: Nat) :\n  solve_bulb_fluctuations\
  \ n ≥ 0 :=\n  sorry\n\n\ntheorem output_less_than_input (n: Nat) :\n  solve_bulb_fluctuations\
  \ n ≤ n :=\n  sorry\n\n\n\n\ntheorem matches_edge_cases_0 :\n  solve_bulb_fluctuations\
  \ 0 = 0 :=\n  sorry\n\n\ntheorem matches_edge_cases_1 :\n  solve_bulb_fluctuations\
  \ 1 = 1 :=\n  sorry\n\n\ntheorem matches_edge_cases_2 :\n  solve_bulb_fluctuations\
  \ 2 = 1 :=\n  sorry\n\n\ntheorem matches_edge_cases_3 :\n  solve_bulb_fluctuations\
  \ 3 = 1 :=\n  sorry\n\n\ntheorem matches_edge_cases_9 :\n  solve_bulb_fluctuations\
  \ 9 = 2 :=\n  sorry\n\n/--\ninfo: 1\n-/\n#guard_msgs in\n#eval solve_bulb_fluctuations\
  \ 2\n\n/--\ninfo: 3\n-/\n#guard_msgs in\n#eval solve_bulb_fluctuations 20\n\n/--\n\
  info: 7\n-/\n#guard_msgs in\n#eval solve_bulb_fluctuations 100\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
