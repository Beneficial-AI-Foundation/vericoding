"vc-description": "# Background\n\nI drink too much coffee. Eventually it will probably\
  \ kill me.\n\n*Or will it..?*\n\nAnyway, there's no way to know.\n\n*Or is there...?*\n\
  \n\n# The Discovery of the Formula \n\nI proudly announce my discovery of a formula\
  \ for measuring the life-span of coffee drinkers!\n\nFor\n\n* ```h``` is a health\
  \ number assigned to each person (8 digit date of birth YYYYMMDD)\n\n\n* ```CAFE```\
  \ is a cup of *regular* coffee\n\n\n* ```DECAF``` is a cup of *decaffeinated* coffee\n\
  \n\nTo determine the life-time coffee limits:\n\n* Drink cups of coffee (i.e. add\
  \ to ```h```) until any part of the health number includes `DEAD`\n\n\n* If the\
  \ test subject can survive drinking five thousand cups wihout being ```DEAD``` then\
  \ coffee has no ill effect on them\n\n# Kata Task\n\nGiven the test subject's date\
  \ of birth, return an array describing their life-time coffee limits\n\n```[ regular\
  \ limit , decaffeinated limit ]```\n\n## Notes \n\n* The limits are ```0``` if the\
  \ subject is unaffected as described above\n\n* At least 1 cup must be consumed\
  \ (Just thinking about coffee cannot kill you!)\n\n# Examples\n\n* John was born\
  \ 19/Jan/1950 so ```h=19500119```. His coffee limits are ```[2645, 1162]``` which\
  \ is only about 1 cup per week. You better cut back John...How are you feeling?\
  \ You don't look so well.\n\n\n* Susan (11/Dec/1965) is unaffected by decaffeinated\
  \ coffee, but regular coffee is very bad for her ```[111, 0]```. Just stick to the\
  \ decaf Susan.\n\n\n* Elizabeth (28/Nov/1964) is allergic to decaffeinated coffee.\
  \ Dead after only 11 cups ```[0, 11]```. Read the label carefully Lizzy! Is it worth\
  \ the risk?\n\n\n* Peter (4/Sep/1965) can drink as much coffee as he likes ```[0,\
  \ 0]```. You're a legend Peter!!\n\n\n\nHint: https://en.wikipedia.org/wiki/Hexadecimal\
  \ \n\n\n\n*Note: A life-span prediction formula this accurate has got to be worth\
  \ a lot of money to somebody! I am willing to sell my copyright to the highest bidder.\
  \ Contact me via the discourse section of this Kata.*"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def coffee_limits (y : Int) (m : Int) (d : Int) : List Int := sorry\n\
  def limit (h : Int) (c : Int) : Int := sorry\n"
"vc-theorems": "theorem coffee_limits_valid_output {y m d : Int} (h1 : y ≥ 1950) (h2\
  \ : y ≤ 2024) \n    (h3 : m ≥ 1) (h4 : m ≤ 12) (h5 : d ≥ 1) (h6 : d ≤ 28) :\n  \
  \  let result := coffee_limits y m d\n    List.length result = 2 ∧ \n    ∀ x ∈ result,\
  \ x ≥ 0 ∧ x < 5000 := sorry\n\n\ntheorem limit_output_bounds {h c : Int} (h1 : h\
  \ ≥ 0) (h2 : c ≥ 0) :\n    let result := limit h c\n    result ≥ 0 ∧ result < 5000\
  \ := sorry\n\n\ntheorem limit_deterministic {h c : Int} :\n    limit h c = limit\
  \ h c := sorry\n\n/--\ninfo: [2645, 1162]\n-/\n#guard_msgs in\n#eval coffee_limits\
  \ 1950 1 19\n\n/--\ninfo: [111, 0]\n-/\n#guard_msgs in\n#eval coffee_limits 1965\
  \ 12 11\n\n/--\ninfo: [0, 11]\n-/\n#guard_msgs in\n#eval coffee_limits 1964 11 28\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
