"vc-description": "Hooray! Polycarp turned $n$ years old! The Technocup Team sincerely\
  \ congratulates Polycarp!\n\nPolycarp celebrated all of his $n$ birthdays: from\
  \ the $1$-th to the $n$-th. At the moment, he is wondering: how many times he turned\
  \ beautiful number of years?\n\nAccording to Polycarp, a positive integer is beautiful\
  \ if it consists of only one digit repeated one or more times. For example, the\
  \ following numbers are beautiful: $1$, $77$, $777$, $44$ and $999999$. The following\
  \ numbers are not beautiful: $12$, $11110$, $6969$ and $987654321$.\n\nOf course,\
  \ Polycarpus uses the decimal numeral system (i.e. radix is 10).\n\nHelp Polycarpus\
  \ to find the number of numbers from $1$ to $n$ (inclusive) that are beautiful.\n\
  \n\n-----Input-----\n\nThe first line contains an integer $t$ ($1 \\le t \\le 10^4$)\
  \ — the number of test cases in the input. Then $t$ test cases follow.\n\nEach test\
  \ case consists of one line, which contains a positive integer $n$ ($1 \\le n \\\
  le 10^9$) — how many years Polycarp has turned.\n\n\n-----Output-----\n\nPrint $t$\
  \ integers — the answers to the given test cases in the order they are written in\
  \ the test. Each answer is an integer: the number of beautiful years between $1$\
  \ and $n$, inclusive.\n\n\n-----Example-----\nInput\n6\n18\n1\n9\n100500\n33\n1000000000\n\
  \nOutput\n10\n1\n9\n45\n12\n81\n\n\n\n-----Note-----\n\nIn the first test case of\
  \ the example beautiful years are $1$, $2$, $3$, $4$, $5$, $6$, $7$, $8$, $9$ and\
  \ $11$."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def count_beautiful_numbers (n : Nat) : Nat := sorry\n\ntheorem\
  \ count_beautiful_range (n : Nat) (h : n > 0) :\n  1 ≤ count_beautiful_numbers n\
  \ ∧ count_beautiful_numbers n ≤ 81 := sorry\n"
"vc-theorems": "theorem count_beautiful_monotonic (n : Nat) (h : n > 1) :\n  count_beautiful_numbers\
  \ n ≥ count_beautiful_numbers (n-1) := sorry\n\n\ntheorem count_beautiful_single_digits\
  \ (d : Nat) (h1 : d > 0) (h2 : d ≤ 9) :\n  count_beautiful_numbers d = d := sorry\n\
  \n\ntheorem count_beautiful_powers_ten :\n  count_beautiful_numbers 99 = 18 ∧ \n\
  \  count_beautiful_numbers 999 = 27 ∧\n  count_beautiful_numbers 9999 = 36 := sorry\n\
  \n/--\ninfo: 10\n-/\n#guard_msgs in\n#eval count_beautiful_numbers 18\n\n/--\ninfo:\
  \ 9\n-/\n#guard_msgs in\n#eval count_beautiful_numbers 9\n\n/--\ninfo: 45\n-/\n\
  #guard_msgs in\n#eval count_beautiful_numbers 100500\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
