"vc-description": "Given an array which consists of non-negative integers and an integer\
  \ m, you can split the array into m non-empty continuous subarrays. Write an algorithm\
  \ to minimize the largest sum among these m subarrays.\n\n\nNote:\nIf n is the length\
  \ of array, assume the following constraints are satisfied:\n\n1 ≤ n ≤ 1000\n1 ≤\
  \ m ≤ min(50, n)\n\n\n\nExamples: \n\nInput:\nnums = [7,2,5,10,8]\nm = 2\n\nOutput:\n\
  18\n\nExplanation:\nThere are four ways to split nums into two subarrays.\nThe best\
  \ way is to split it into [7,2,5] and [10,8],\nwhere the largest sum among the two\
  \ subarrays is only 18."
"vc-preamble": "import Imports.AllImports\n\ndef splitArray (nums : List Nat) (m :\
  \ Nat) : Nat := sorry\n\ndef listSum : List Nat → Nat \n  | [] => 0\n  | (x::xs)\
  \ => x + listSum xs\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def listMax : List Nat → Nat \n  | [] => 0\n  | [x] => x\n  | (x::xs)\
  \ => max x (listMax xs)\n"
"vc-theorems": "theorem splitArray_bounds (nums : List Nat) (m : Nat) (h1 : nums ≠\
  \ []) (h2 : m > 0) :\n  let m' := min m (List.length nums)\n  let result := splitArray\
  \ nums m'\n  result ≥ (listMax nums) ∧ result ≤ (listSum nums) := sorry\n\n\ntheorem\
  \ splitArray_m_one (nums : List Nat) (h1 : nums ≠ []) :\n  splitArray nums 1 = listSum\
  \ nums := sorry\n\n\ntheorem splitArray_m_len (nums : List Nat) (h1 : nums ≠ [])\
  \ :\n  splitArray nums (List.length nums) = listMax nums := sorry\n\n\ntheorem splitArray_valid_split\
  \ (nums : List Nat) (m : Nat) (h1 : nums ≠ []) (h2 : m > 0) :\n  let m' := min m\
  \ (List.length nums)\n  let maxSum := splitArray nums m'\n  ∃ splits : Nat, splits\
  \ ≤ m' ∧\n    ∃ partitions : List (List Nat),\n      List.length partitions = splits\
  \ ∧\n      List.join partitions = nums ∧\n      (∀ p ∈ partitions, listSum p ≤ maxSum)\
  \ := sorry\n\n/--\ninfo: 18\n-/\n#guard_msgs in\n#eval split_array #[7, 2, 5, 10,\
  \ 8] 2\n\n/--\ninfo: 9\n-/\n#guard_msgs in\n#eval split_array #[1, 2, 3, 4, 5] 2\n\
  \n/--\ninfo: 4\n-/\n#guard_msgs in\n#eval split_array #[1, 4, 4] 3\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded"
