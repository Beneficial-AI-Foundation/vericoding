"vc-description": "Lexicographic permutations are ordered combinations of a set of\
  \ items ordered in a specific way.\n\nFor instance, the first 8 permutations of\
  \ the digits 0123, in lexicographic order, are:\n\n```\n1st 0123\n2nd 0132\n3rd\
  \ 0213\n4th 0231\n5th 0312\n6th 0321\n7th 1023\n8th 1032\n```\n\nYour task is to\
  \ write a function ```L( n, d )``` that will return a `string` representing the\
  \ `nth` permutation of the `d` digit, starting with 0 (i.e. d=10 means all digits\
  \ 0123456789).\n\nSo for `d = 4`, `L(7,4)` should return `'1023'`, and `L(4,4)`\
  \ should return `'0231'`\n.\n\n\nSome things to bear in mind:\n\n• The function\
  \ should return a `string`, otherwise permutations beginning with a 0 will have\
  \ it removed. \n\n• Test cases will not exceed the highest possible valid values\
  \ for `n`\n\n• The function should work for any `d` between `1` and `10`.\n\n• A\
  \ value of 1 for `n` means the 1st permutation, so `n = 0` is not a valid input.\n\
  \n• Oh, and no itertools ;)"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def L (n : Nat) (d : Nat) : String :=\n  sorry\n"
"vc-theorems": "theorem length_matches_input (n d : Nat) (h1 : n ≥ 1) (h2 : n ≤ 1000)\
  \ (h3 : d ≥ 1) (h4 : d ≤ 10) :\n  (L n d).length = d :=\nsorry\n\n\ntheorem all_digits_unique\
  \ (n d : Nat) (h1 : n ≥ 1) (h2 : n ≤ 1000) (h3 : d ≥ 1) (h4 : d ≤ 10) :\n  let result\
  \ := L n d\n  let chars := result.data\n  List.Nodup chars :=\nsorry\n\n\ntheorem\
  \ digits_in_range (n d : Nat) (h1 : n ≥ 1) (h2 : n ≤ 1000) (h3 : d ≥ 1) (h4 : d\
  \ ≤ 10) :\n  let result := L n d\n  ∀ c ∈ result.data, c.isDigit ∧ (c.toNat - '0'.toNat)\
  \ < d :=\nsorry\n\n\ntheorem deterministic (n d : Nat) (h1 : n ≥ 1) (h2 : n ≤ 1000)\
  \ (h3 : d ≥ 1) (h4 : d ≤ 10) :\n  L n d = L n d :=\nsorry\n\n/--\ninfo: '0'\n-/\n\
  #guard_msgs in\n#eval L 1 1\n\n/--\ninfo: '02431'\n-/\n#guard_msgs in\n#eval L 12\
  \ 5\n\n/--\ninfo: '1325460'\n-/\n#guard_msgs in\n#eval L 1000 7\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
