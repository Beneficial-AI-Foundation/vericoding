"vc-description": "We are given S, a length n string of characters from the set {'D',\
  \ 'I'}. (These letters stand for \"decreasing\" and \"increasing\".)\nA valid permutation is\
  \ a permutation P[0], P[1], ..., P[n] of integers {0, 1, ..., n}, such that for\
  \ all i:\n\nIf S[i] == 'D', then P[i] > P[i+1], and;\nIf S[i] == 'I', then P[i]\
  \ < P[i+1].\n\nHow many valid permutations are there?  Since the answer may be large,\
  \ return your answer modulo 10^9 + 7.\n \nExample 1:\nInput: \"DID\"\nOutput: 5\n\
  Explanation: \nThe 5 valid permutations of (0, 1, 2, 3) are:\n(1, 0, 3, 2)\n(2,\
  \ 0, 3, 1)\n(2, 1, 3, 0)\n(3, 0, 2, 1)\n(3, 1, 2, 0)\n\n \nNote:\n\n1 <= S.length\
  \ <= 200\nS consists only of characters from the set {'D', 'I'}."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def num_perms_di_sequence (s : String) : Nat := sorry\n\ndef MOD\
  \ := 1000000007\n"
"vc-theorems": "theorem num_perms_di_sequence_nonneg (s : String) :\n  num_perms_di_sequence\
  \ s ≥ 0 := sorry \n\n\ntheorem num_perms_di_sequence_within_mod (s : String) :\n\
  \  num_perms_di_sequence s < MOD := sorry\n\n\ntheorem all_decreasing_sequence_one_perm\
  \ (s : String) :\n  (∀ c ∈ s.data, c = 'D') → \n  num_perms_di_sequence s = 1 :=\
  \ sorry\n\n\ntheorem all_increasing_sequence_one_perm (s : String) :\n  (∀ c ∈ s.data,\
  \ c = 'I') → \n  num_perms_di_sequence s = 1 := sorry\n\n/--\ninfo: 5\n-/\n#guard_msgs\
  \ in\n#eval num_perms_di_sequence \"DID\"\n\n/--\ninfo: 1\n-/\n#guard_msgs in\n\
  #eval num_perms_di_sequence \"D\"\n\n/--\ninfo: 1\n-/\n#guard_msgs in\n#eval num_perms_di_sequence\
  \ \"III\"\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
