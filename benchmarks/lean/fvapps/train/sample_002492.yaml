"vc-description": "=====Problem Statement=====\nConsider a list (list = []). You can\
  \ perform the following commands:\n1. insert i e: Insert integer e at position i.\n\
  2. print: Print the list.\n3. remove e: Delete the first occurrence of integer e.\n\
  4. append e: Insert integer e at the end of the list.\n5. sort: Sort the list.\n\
  6. pop: Pop the last element from the list.\n7. reverse: Reverse the list.\nInitialize\
  \ your list and read in the value of n followed by n lines of commands where each\
  \ command will be 7 of the types listed above. Iterate through each command in order\
  \ and perform the corresponding operation on your list.\n\n=====Example=====\nN\
  \ = 4\nappend 1\nappend 2\ninsert 3 1\nprint\nappend 1: Append 1 to the list, arr\
  \ = [1].\nappend 2: Append 2 to the list, arr = [1,2].\ninsert 3 1: Insert 3 at\
  \ index 1, arr = [1,3,2].\nprint: Print the array\nOutput:\n[1, 3, 2]\n\n=====Input\
  \ Format=====\nThe first line contains an integer, n, denoting the number of commands.\
  \ Each line i of the subsequent n lines contains one of the commands described above.\n\
  \n=====Constraints=====\nThe elements added to the list must be integers\n\n=====Output\
  \ Format=====\nFor each command of type print, print the list on a new line."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def process_list_commands (commands : List String) : List String\
  \ := sorry\n\ntheorem process_list_commands_result_type \n  (commands : List String)\
  \ :\n  let result := process_list_commands commands\n  result.all (fun str => str.any\
  \ (· = '[') ∧ str.any (· = ']')) :=\nsorry\n"
"vc-theorems": "theorem process_list_commands_print_count\n  (commands : List String)\
  \ : \n  let result := process_list_commands commands\n  result.length = (commands.filter\
  \ (· = \"print\")).length :=\nsorry\n\n\ntheorem process_list_commands_invalid_fails\n\
  \  (commands : List String) :\n  commands.any (fun cmd => ¬(cmd.startsWith \"append\"\
  \ ∨ \n                            cmd.startsWith \"insert\" ∨\n                \
  \            cmd = \"print\" ∨\n                            cmd = \"sort\" ∨\n \
  \                           cmd = \"reverse\" ∨\n                            cmd\
  \ = \"pop\")) →\n  process_list_commands commands = [] :=\nsorry"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded"
