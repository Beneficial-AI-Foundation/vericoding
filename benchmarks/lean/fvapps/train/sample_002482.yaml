"vc-description": "=====Function Descriptions=====\npoly\n\nThe poly tool returns\
  \ the coefficients of a polynomial with the given sequence of roots.\n\nprint numpy.poly([-1,\
  \ 1, 1, 10])        #Output : [  1 -11   9  11 -10]\n\nroots\n\nThe roots tool returns\
  \ the roots of a polynomial with the given coefficients.\n\nprint numpy.roots([1,\
  \ 0, -1])           #Output : [-1.  1.]\n\npolyint\n\nThe polyint tool returns an\
  \ antiderivative (indefinite integral) of a polynomial.\n\nprint numpy.polyint([1,\
  \ 1, 1])          #Output : [ 0.33333333  0.5         1.          0.        ]\n\n\
  polyder\n\nThe polyder tool returns the derivative of the specified order of a polynomial.\n\
  \nprint numpy.polyder([1, 1, 1, 1])       #Output : [3 2 1]\n\npolyval\n\nThe polyval\
  \ tool evaluates the polynomial at specific value.\n\nprint numpy.polyval([1, -2,\
  \ 0, 2], 4)   #Output : 34\n\npolyfit\n\nThe polyfit tool fits a polynomial of a\
  \ specified order to a set of data using a least-squares approach.\n\nprint numpy.polyfit([0,1,-1,\
  \ 2, -2], [0,1,1, 4, 4], 2)\n#Output : [  1.00000000e+00   0.00000000e+00  -3.97205465e-16]\n\
  \nThe functions polyadd, polysub, polymul, and polydiv also handle proper addition,\
  \ subtraction, multiplication, and division of polynomial coefficients, respectively.\n\
  \n=====Problem Statement=====\nYou are given the coefficients of a polynomial P.\n\
  Your task is to find the value of P at point x.\n\n=====Input Format=====\nThe first\
  \ line contains the space separated value of the coefficients in P.\nThe second\
  \ line contains the value of x.\n\n=====Output Format=====\nPrint the desired value."
"vc-preamble": "import Imports.AllImports\n\ndef evaluatePolynomial (coeffs : List\
  \ Float) (x : Float) : Float :=\n  sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def directPolynomial (coeffs : List Float) (x : Float) : Float\
  \ :=\n  sorry\n"
"vc-theorems": "theorem polynomial_evaluation_matches_direct \n  (coeffs : List Float)\
  \ (x : Float)\n  (h1 : coeffs.length ≥ 1)\n  (h2 : coeffs.length ≤ 10)\n  (h3 :\
  \ ∀ c ∈ coeffs, -1000000 ≤ c ∧ c ≤ 1000000)\n  (h4 : -100 ≤ x ∧ x ≤ 100) :\n  evaluatePolynomial\
  \ coeffs x - directPolynomial coeffs x ≤ 1e-10 * directPolynomial coeffs x :=\n\
  sorry \n\n\ntheorem polynomial_at_zero\n  (coeffs : List Float)\n  (h1 : coeffs\
  \ ≠ [])\n  (h2 : coeffs.length ≤ 10)\n  (h3 : ∀ c ∈ coeffs, -1000000 ≤ c ∧ c ≤ 1000000)\
  \ :\n  evaluatePolynomial coeffs 0 = coeffs.getLast h1 :=\nsorry"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded"
