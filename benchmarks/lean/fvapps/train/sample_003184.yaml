"vc-description": "# Task\n`EvilCode` is a game similar to `Codewars`. You have to\
  \ solve programming tasks as quickly as possible. However, unlike `Codewars`, `EvilCode`\
  \ awards you with a medal, depending on the time you took to solve the task.\n\n\
  To get a medal, your time must be (strictly) inferior to the time corresponding\
  \ to the medal. You can be awarded `\"Gold\", \"Silver\" or \"Bronze\"` medal, or\
  \ `\"None\"` medal at all. Only one medal (the best achieved) is awarded.\n\nYou\
  \ are given the time achieved for the task and the time corresponding to each medal.\
  \ Your task is to return the awarded medal.\n\nEach time is given in the format\
  \ `HH:MM:SS`.\n\n\n# Input/Output\n\n`[input]` string `userTime`\n\nThe time the\
  \ user achieved.\n\n`[input]` string `gold`\n\nThe time corresponding to the gold\
  \ medal.\n\n`[input]` string `silver`\n\nThe time corresponding to the silver medal.\n\
  \n`[input]` string `bronze`\n\nThe time corresponding to the bronze medal.\n\nIt\
  \ is guaranteed that `gold < silver < bronze`.\n\n`[output]` a string\n\nThe medal\
  \ awarded, one of for options: `\"Gold\", \"Silver\", \"Bronze\" or \"None\"`.\n\
  \n# Example\n\nFor \n```\nuserTime = \"00:30:00\", gold = \"00:15:00\",\nsilver\
  \ = \"00:45:00\" and bronze = \"01:15:00\"```\n\nthe output should be `\"Silver\"\
  `\n\nFor \n```\nuserTime = \"01:15:00\", gold = \"00:15:00\",\nsilver = \"00:45:00\"\
  \ and bronze = \"01:15:00\"```\n\nthe output should be `\"None\"`\n\n# For Haskell\
  \ version\n```\nIn Haskell, the result is a Maybe, returning Just String indicating\
  \ \nthe medal if they won or Nothing if they don't.\n```"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def evil_code_medal (user_time gold silver bronze : String) : String\
  \ :=\nsorry\n"
"vc-theorems": "theorem evil_code_medal_valid_output (user_time gold silver bronze\
  \ : String) :\n  let result := evil_code_medal user_time gold silver bronze\n  result\
  \ = \"Gold\" ∨ result = \"Silver\" ∨ result = \"Bronze\" ∨ result = \"None\" :=\n\
  sorry\n\n\ntheorem evil_code_medal_gold_condition (user_time gold silver bronze\
  \ : String) :\n  evil_code_medal user_time gold silver bronze = \"Gold\" →\n  user_time\
  \ < gold :=\nsorry\n\n\ntheorem evil_code_medal_silver_condition (user_time gold\
  \ silver bronze : String) :\n  evil_code_medal user_time gold silver bronze = \"\
  Silver\" →\n  user_time ≥ gold ∧ user_time < silver :=\nsorry\n\n\ntheorem evil_code_medal_bronze_condition\
  \ (user_time gold silver bronze : String) :\n  evil_code_medal user_time gold silver\
  \ bronze = \"Bronze\" →\n  user_time ≥ silver ∧ user_time < bronze :=\nsorry\n\n\
  \ntheorem evil_code_medal_none_condition (user_time gold silver bronze : String)\
  \ :\n  evil_code_medal user_time gold silver bronze = \"None\" →\n  user_time ≥\
  \ bronze :=\nsorry\n\n\ntheorem evil_code_medal_identical_times (t : String) :\n\
  \  evil_code_medal t t t t = \"None\" :=\nsorry\n\n/--\ninfo: 'Silver'\n-/\n#guard_msgs\
  \ in\n#eval evil_code_medal \"00:30:00\" \"00:15:00\" \"00:45:00\" \"01:15:00\"\n\
  \n/--\ninfo: 'None'\n-/\n#guard_msgs in\n#eval evil_code_medal \"01:15:00\" \"00:15:00\"\
  \ \"00:45:00\" \"01:15:00\"\n\n/--\ninfo: 'Gold'\n-/\n#guard_msgs in\n#eval evil_code_medal\
  \ \"00:00:01\" \"00:00:10\" \"00:01:40\" \"01:00:00\"\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
