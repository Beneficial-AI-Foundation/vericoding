"vc-description": "We write the integers of A and B (in the order they are given)\
  \ on two separate horizontal lines.\nNow, we may draw connecting lines: a straight\
  \ line connecting two numbers A[i] and B[j] such that:\n\nA[i] == B[j];\nThe line\
  \ we draw does not intersect any other connecting (non-horizontal) line.\n\nNote\
  \ that a connecting lines cannot intersect even at the endpoints: each number can\
  \ only belong to one connecting line.\nReturn the maximum number of connecting lines\
  \ we can draw in this way.\n \nExample 1:\n\nInput: A = [1,4,2], B = [1,2,4]\nOutput:\
  \ 2\nExplanation: We can draw 2 uncrossed lines as in the diagram.\nWe cannot draw\
  \ 3 uncrossed lines, because the line from A[1]=4 to B[2]=4 will intersect the line\
  \ from A[2]=2 to B[1]=2.\n\n\nExample 2:\nInput: A = [2,5,1,2,5], B = [10,5,2,1,5,2]\n\
  Output: 3\n\n\nExample 3:\nInput: A = [1,3,7,1,7,5], B = [1,9,2,5,1]\nOutput: 2\n\
   \n\n\nNote:\n\n1 <= A.length <= 500\n1 <= B.length <= 500\n1 <= A[i], B[i] <= 2000"
"vc-preamble": "import Imports.AllImports\n\ndef max_uncrossed_lines (a b : List Nat)\
  \ : Nat :=\n  sorry\n\n\ndef List.min_length (a b : List α) : Nat :=\n  min a.length\
  \ b.length\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def List.everyOther : List α → List α\n  | [] => []\n  | [x] =>\
  \ [x]\n  | x :: _ :: xs => x :: everyOther xs\n\n\n"
"vc-theorems": "theorem max_uncrossed_lines_nonnegative (a b : List Nat) :\n  max_uncrossed_lines\
  \ a b ≥ 0 :=\n  sorry\n\n\ntheorem max_uncrossed_lines_upper_bound (a b : List Nat)\
  \ :\n  max_uncrossed_lines a b ≤ min a.length b.length :=\n  sorry\n\n\ntheorem\
  \ max_uncrossed_lines_empty (a b : List Nat) :\n  a = [] ∨ b = [] → max_uncrossed_lines\
  \ a b = 0 :=\n  sorry\n\n\ntheorem max_uncrossed_lines_identical (a : List Nat)\
  \ :\n  max_uncrossed_lines a a = a.length :=\n  sorry\n\n\ntheorem max_uncrossed_lines_reverse\
  \ (a b : List Nat) :\n  max_uncrossed_lines a b = max_uncrossed_lines a.reverse\
  \ b.reverse :=\n  sorry\n\n\ntheorem max_uncrossed_lines_edge_cases :\n  max_uncrossed_lines\
  \ [] [] = 0 ∧\n  max_uncrossed_lines [1] [] = 0 ∧ \n  max_uncrossed_lines [] [1]\
  \ = 0 :=\n  sorry\n\n/--\ninfo: 2\n-/\n#guard_msgs in\n#eval max_uncrossed_lines\
  \ [1, 4, 2] [1, 2, 4]\n\n/--\ninfo: 3\n-/\n#guard_msgs in\n#eval max_uncrossed_lines\
  \ [2, 5, 1, 2, 5] [10, 5, 2, 1, 5, 2]\n\n/--\ninfo: 2\n-/\n#guard_msgs in\n#eval\
  \ max_uncrossed_lines [1, 3, 7, 1, 7, 5] [1, 9, 2, 5, 1]\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
