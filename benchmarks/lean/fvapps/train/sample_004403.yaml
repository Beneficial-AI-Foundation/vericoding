"vc-description": "You have recently discovered that horses travel in a unique pattern\
  \ - they're either running (at top speed) or resting (standing still).\n\nHere's\
  \ an example of how one particular horse might travel:\n\n```\nThe horse Blaze can\
  \ run at 14 metres/second for 60 seconds, but must then rest for 45 seconds.\n\n\
  After 500 seconds Blaze will have traveled 4200 metres.\n```\n\nYour job is to write\
  \ a function that returns how long a horse will have traveled after a given time.\n\
  \n####Input: \n\n* totalTime - How long the horse will be traveling (in seconds)\n\
  \n* runTime - How long the horse can run for before having to rest (in seconds)\n\
  \n* restTime - How long the horse have to rest for after running (in seconds)\n\n\
  * speed - The max speed of the horse (in metres/second)"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def travel (totalTime: Int) (runTime: Int) (restTime: Int) (speed:\
  \ Int) : Int :=\n  sorry\n"
"vc-theorems": "theorem travel_distance_bounded\n  (totalTime: Int) (runTime: Int)\
  \ (restTime: Int) (speed: Int)\n  (h1: totalTime > 0) (h2: runTime > 0) (h3: restTime\
  \ ≥ 0) (h4: speed > 0) :\n  let dist := travel totalTime runTime restTime speed\n\
  \  dist ≤ totalTime * speed ∧ dist ≥ 0 ∧ dist % speed = 0 :=\nsorry\n\n\ntheorem\
  \ travel_no_rest\n  (totalTime: Int) (runTime: Int) (speed: Int)\n  (h1: totalTime\
  \ > 0) (h2: runTime > 0) (h3: speed > 0) :\n  travel totalTime runTime 0 speed =\
  \ totalTime * speed :=\nsorry\n\n\ntheorem travel_invalid_total_time\n  (totalTime:\
  \ Int) (runTime: Int) (restTime: Int) (speed: Int)\n  (h1: totalTime ≤ 0) (h2: runTime\
  \ > 0) (h3: restTime ≥ 0) (h4: speed > 0) :\n  travel totalTime runTime restTime\
  \ speed = 0 :=\nsorry\n\n\ntheorem travel_invalid_run_time\n  (totalTime: Int) (runTime:\
  \ Int) (restTime: Int) (speed: Int)\n  (h1: totalTime > 0) (h2: runTime ≤ 0) (h3:\
  \ restTime ≥ 0) (h4: speed > 0) :\n  travel totalTime runTime restTime speed = 0\
  \ :=\nsorry\n\n\ntheorem travel_invalid_speed\n  (totalTime: Int) (runTime: Int)\
  \ (restTime: Int) (speed: Int)\n  (h1: totalTime > 0) (h2: runTime > 0) (h3: restTime\
  \ ≥ 0) (h4: speed ≤ 0) :\n  travel totalTime runTime restTime speed = 0 :=\nsorry\n\
  \n/--\ninfo: 1120\n-/\n#guard_msgs in\n#eval travel 1000 10 127 14\n\n/--\ninfo:\
  \ 10000\n-/\n#guard_msgs in\n#eval travel 1000 10 0 10\n\n/--\ninfo: 450\n-/\n#guard_msgs\
  \ in\n#eval travel 25 50 120 18\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded"
