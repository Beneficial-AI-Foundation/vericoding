"vc-description": "Firdavs is living on planet F. There are $N$ cities (numbered $1$\
  \ through $N$) on this planet; let's denote the value of city $i$ by $v_i$. Firdavs\
  \ can travel directly from each city to any other city. When he travels directly\
  \ from city $x$ to city $y$, he needs to pay $f(x, y) = |v_y-v_x|+y-x$ coins (this\
  \ number can be negative, in which case he receives $-f(x, y)$ coins).\nLet's define\
  \ a simple path from city $x$ to city $y$ with length $k \\ge 1$ as a sequence of\
  \ cities $a_1, a_2, \\ldots, a_k$ such that all cities in this sequence are different,\
  \ $a_1 = x$ and $a_k = y$. The cost of such a path is $\\sum_{i=1}^{k-1} f(a_i,\
  \ a_{i+1})$.\nYou need to answer some queries for Firdavs. In each query, you are\
  \ given two cities $x$ and $y$, and you need to find the minimum cost of a simple\
  \ path from city $x$ to city $y$. Then, you need to find the length of the longest\
  \ simple path from $x$ to $y$ with this cost.\n\n-----Input-----\n- The first line\
  \ of the input contains a single integer $T$ denoting the number of test cases.\
  \ The description of $T$ test cases follows.\n- The first line of each test case\
  \ contains two space-separated integers $N$ and $Q$.\n- The second line contains\
  \ $N$ space-separated integers $v_1, v_2, \\ldots, v_N$.\n- The following $Q$ lines\
  \ describe queries. Each of these lines contains two space-separated integers $x$\
  \ and $y$.\n\n-----Output-----\nFor each query, print a single line containing two\
  \ space-separated integers ― the minimum cost and the maximum length.\n\n-----Constraints-----\n\
  - $1 \\le T \\le 100$\n- $1 \\le N, Q \\le 2 \\cdot 10^5$\n- $0 \\le v_i \\le 10^9$\
  \ for each valid $i$\n- $1 \\le x, y \\le N$\n- the sum of $N$ in all test cases\
  \ does not exceed $5 \\cdot 10^5$\n- the sum of $Q$ in all test cases does not exceed\
  \ $5 \\cdot 10^5$\n\n-----Subtasks-----\nSubtask #1 (30 points):\n- $1 \\le N, Q\
  \ \\le 1,000$\n- $v_1 < v_2 < \\ldots < v_N$\n- the sum of $N$ in all test cases\
  \ does not exceed $5,000$\n- the sum of $Q$ in all test cases does not exceed $5,000$\n\
  Subtask #2 (70 points): original constraints\n\n-----Example Input-----\n2\n4 2\n\
  4 2 5 7\n2 3\n3 4\n2 1\n1 1\n2 1\n\n-----Example Output-----\n4 3\n3 2\n-1 2\n\n\
  -----Explanation-----\nExample case 1: For the first query, there are two paths\
  \ with cost $4$ from city $2$ to city $3$:\n- $2 \\rightarrow 1 \\rightarrow 3$:\
  \ cost $(|4-2|+1-2)+(|5-4|+3-1) = 4$, length $3$\n- $2 \\rightarrow 3$: cost $|5-2|+3-2\
  \ = 4$, length $2$\nAll other paths have greater costs, so the minimum cost is $4$.\
  \ Among these two paths, we want the one with greater length, which is $3$."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def solve_city_paths (N : Nat) (Q : Nat) (values : List Nat) (queries\
  \ : List (List Nat)) : List (List Nat) := sorry\n\ntheorem identical_values_path_length\n\
  \  {N : Nat} {values : List Nat}\n  (h1 : N ≥ 2)\n  (h2 : N ≤ 10)\n  (h3 : values.length\
  \ = N)\n  (h4 : ∀ x ∈ values, x = 1)\n  : let Q := 1\n    let queries := [[1, N]]\n\
  \    let results := solve_city_paths N Q values queries\n    results.length > 0\
  \ ∧ \n    results[0]!.length > 1 ∧ \n    results[0]![1]! = N := sorry"
"vc-theorems": ""
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
