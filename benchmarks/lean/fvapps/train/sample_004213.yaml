"vc-description": "An abundant number or excessive number is a number for which the\
  \ sum of its proper divisors is greater than the number itself. \n\nThe integer\
  \ 12 is the first abundant number. Its proper divisors are 1, 2, 3, 4 and 6 for\
  \ a total of 16 (> 12).\n\nDerive function `abundantNumber(num)/abundant_number(num)`\
  \ which returns `true/True/.true.` if `num` is abundant, `false/False/.false.` if\
  \ not."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def abundant_number (n : Nat) : Bool := sorry\n\ndef divisors_sum\
  \ (n : Nat) : Nat := sorry\n"
"vc-theorems": "theorem abundant_number_is_bool (n : Nat) : \n  abundant_number n\
  \ = true ∨ abundant_number n = false := sorry\n\n\ntheorem abundant_number_matches_definition\
  \ (n : Nat) :\n  abundant_number n = (divisors_sum n > n) := sorry \n\n\ntheorem\
  \ abundant_number_true_implies_sum_greater (n : Nat) :\n  abundant_number n = true\
  \ → divisors_sum n > n := sorry\n\n\ntheorem abundant_number_false_implies_sum_leq\
  \ (n : Nat) :\n  abundant_number n = false → divisors_sum n ≤ n := sorry\n\n/--\n\
  info: True\n-/\n#guard_msgs in\n#eval abundant_number 12\n\n/--\ninfo: False\n-/\n\
  #guard_msgs in\n#eval abundant_number 37\n\n/--\ninfo: True\n-/\n#guard_msgs in\n\
  #eval abundant_number 120\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
