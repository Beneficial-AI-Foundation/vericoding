"vc-description": "Given an array A of positive integers, call a (contiguous, not\
  \ necessarily distinct) subarray of A good if the number of different integers in\
  \ that subarray is exactly K.\n(For example, [1,2,3,1,2] has 3 different integers:\
  \ 1, 2, and 3.)\nReturn the number of good subarrays of A.\n \nExample 1:\nInput:\
  \ A = [1,2,1,2,3], K = 2\nOutput: 7\nExplanation: Subarrays formed with exactly\
  \ 2 different integers: [1,2], [2,1], [1,2], [2,3], [1,2,1], [2,1,2], [1,2,1,2].\n\
  \nExample 2:\nInput: A = [1,2,1,3,4], K = 3\nOutput: 3\nExplanation: Subarrays formed\
  \ with exactly 3 different integers: [1,2,1,3], [2,1,3], [1,3,4].\n\n \nNote:\n\n\
  1 <= A.length <= 20000\n1 <= A[i] <= A.length\n1 <= K <= A.length"
"vc-preamble": "import Imports.AllImports\n\ndef List.unique {α} [BEq α] : List α\
  \ → List α \n  | [] => []\n  | h::t => if t.contains h then unique t else h :: unique\
  \ t\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def subarraysWithKDistinct (A : List Nat) (K : Nat) : Nat :=\n\
  \  sorry\n"
"vc-theorems": "theorem k_validity {A : List Nat} {K : Nat}\n  (hA : A.length > 0)\n\
  \  (hAelems : ∀ x ∈ A, 1 ≤ x ∧ x ≤ 100)\n  (hK : 1 ≤ K ∧ K ≤ 50)\n  (hKvalid : K\
  \ ≤ (A.unique).length) :\n  0 ≤ subarraysWithKDistinct A K :=\n  sorry\n\n\ntheorem\
  \ k_one {A : List Nat}\n  (hA : A.length > 0) \n  (hAelems : ∀ x ∈ A, 1 ≤ x ∧ x\
  \ ≤ 10) :\n  subarraysWithKDistinct A 1 ≥ A.length :=\n  sorry\n\n\ntheorem k_equals_distinct\
  \ {A : List Nat}\n  (hA : A.length > 0)\n  (hAelems : ∀ x ∈ A, 1 ≤ x ∧ x ≤ 100)\
  \ :\n  subarraysWithKDistinct A (A.unique).length ≥ 1 :=\n  sorry\n\n\ntheorem edge_cases\
  \ :\n  subarraysWithKDistinct [1] 1 = 1 ∧ \n  subarraysWithKDistinct [1, 1] 1 =\
  \ 3 ∧\n  subarraysWithKDistinct [1, 2, 3] 3 = 1 :=\n  sorry\n\n/--\ninfo: 7\n-/\n\
  #guard_msgs in\n#eval subarraysWithKDistinct [1, 2, 1, 2, 3] 2\n\n/--\ninfo: 3\n\
  -/\n#guard_msgs in\n#eval subarraysWithKDistinct [1, 2, 1, 3, 4] 3\n\n/--\ninfo:\
  \ 2\n-/\n#guard_msgs in\n#eval subarraysWithKDistinct [1, 2, 3] 2\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
