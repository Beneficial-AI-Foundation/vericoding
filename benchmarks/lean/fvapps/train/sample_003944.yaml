"vc-description": "*** Nova polynomial multiply*** \n\nThis kata is from a series\
  \ on polynomial handling. ( [#1](http://www.codewars.com/kata/nova-polynomial-1-add-1)\
  \   [#2](http://www.codewars.com/kata/570eb07e127ad107270005fe)  [#3](http://www.codewars.com/kata/5714041e8807940ff3001140\
  \ )   [#4](http://www.codewars.com/kata/571a2e2df24bdfd4e20001f5))\n\nConsider a\
  \ polynomial in a list where each element in the list element corresponds to the\
  \ factors. The factor order is the position in the list. The first element is the\
  \ zero order factor (the constant).\n\np = [a0, a1, a2, a3] signifies the polynomial\
  \ a0 + a1x + a2x^2 + a3*x^3\n\nIn this kata multiply two polynomials:\n\n```python\
  \ \npoly_multiply([1, 2], [1] ) = [1, 2]\npoly_multiply([2, 4], [4, 5] ) = [8, 26,\
  \ 20]\n```\nThe first kata of this series is preloaded in the code and can be used:\
  \ [poly_add](http://www.codewars.com/kata/nova-polynomial-1-add-1)"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def poly_multiply (p1 p2 : List Int) : List Int :=\n  sorry\n"
"vc-theorems": "theorem poly_multiply_length (p1 p2 : List Int) :\n  (p1 = [] ∨ p2\
  \ = []) → poly_multiply p1 p2 = [] ∧\n  (p1 ≠ [] ∧ p2 ≠ []) → List.length (poly_multiply\
  \ p1 p2) = List.length p1 + List.length p2 - 1 :=\n  sorry\n\n\ntheorem poly_multiply_zero\
  \ (poly : List Int) (h : poly ≠ []) :\n  poly_multiply poly [0] = List.replicate\
  \ (List.length poly) 0 ∧\n  poly_multiply [0] poly = List.replicate (List.length\
  \ poly) 0 :=\n  sorry\n\n\ntheorem poly_multiply_one (poly : List Int) (h : poly\
  \ ≠ []) :\n  poly_multiply poly [1] = poly ∧\n  poly_multiply [1] poly = poly :=\n\
  \  sorry\n\n\ntheorem poly_multiply_commutative (p1 p2 : List Int) :\n  poly_multiply\
  \ p1 p2 = poly_multiply p2 p1 :=\n  sorry\n\n\ntheorem poly_multiply_empty (poly\
  \ : List Int) :\n  poly_multiply poly [] = [] ∧\n  poly_multiply [] poly = [] :=\n\
  \  sorry\n\n/--\ninfo: []\n-/\n#guard_msgs in\n#eval poly_multiply [] []\n\n/--\n\
  info: []\n-/\n#guard_msgs in\n#eval poly_multiply [1, 2, 3] []\n\n/--\ninfo: [8,\
  \ 26, 20]\n-/\n#guard_msgs in\n#eval poly_multiply [2, 4] [4, 5]\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded_and_plausible"
