"vc-description": "Given the root of a binary tree, the level of its root is 1, the\
  \ level of its children is 2, and so on.\nReturn the smallest level X such that\
  \ the sum of all the values of nodes at level X is maximal.\n \nExample 1:\n\nInput:\
  \ root = [1,7,0,7,-8,null,null]\nOutput: 2\nExplanation: \nLevel 1 sum = 1.\nLevel\
  \ 2 sum = 7 + 0 = 7.\nLevel 3 sum = 7 + -8 = -1.\nSo we return the level with the\
  \ maximum sum which is level 2.\n\nExample 2:\nInput: root = [989,null,10250,98693,-89388,null,null,null,-32127]\n\
  Output: 2\n\n \nConstraints:\n\nThe number of nodes in the tree is in the range\
  \ [1, 104].\n-105 <= Node.val <= 105"
"vc-preamble": "import Imports.AllImports\n\ndef maxLevelSum : Tree Int → Nat\n  |\
  \ _ => sorry\n\n\ndef getLevelSums : Tree Int → List Int \n  | _ => sorry\n\n\n\
  def height : Tree Int → Nat\n  | _ => sorry\n\n\ndef completeTree : Int → Nat →\
  \ Tree Int\n  | _ , _ => sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def sum : List Int → Int \n  | _ => sorry\n"
"vc-theorems": "theorem maxLevelSum_positive (t : Tree Int) :\n  maxLevelSum t ≥ 1\
  \ := sorry\n\n\ntheorem maxLevelSum_is_level_with_max_sum (t : Tree Int) :\n  ∃\
  \ (sums : List Int), \n    sums = getLevelSums t ∧ \n    ∀ (level : Nat), level\
  \ ≤ height t → \n      sum (getLevelSums t) ≥ sum (getLevelSums t) := sorry\n\n\n\
  theorem maxLevelSum_single_node (x : Int) :\n  maxLevelSum (Tree.node x Tree.leaf\
  \ Tree.leaf) = 1 := sorry\n\n\ntheorem maxLevelSum_complete_height_2 (x y z : Int)\
  \ :\n  maxLevelSum (Tree.node x \n                (Tree.node y Tree.leaf Tree.leaf)\n\
  \                (Tree.node z Tree.leaf Tree.leaf)) = 1 := sorry\n\n\ntheorem maxLevelSum_same_values\
  \ (x : Int) (h : Nat) :\n  maxLevelSum (completeTree x h) = 1 := sorry\n\n/--\n\
  info: 2\n-/\n#guard_msgs in\n#eval maxLevelSum TreeNode(1)\n\n/--\ninfo: 2\n-/\n\
  #guard_msgs in\n#eval maxLevelSum TreeNode(989)\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
