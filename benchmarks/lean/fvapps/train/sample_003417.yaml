"vc-description": "Timmy & Sarah think they are in love, but around where they live,\
  \ they will only know once they pick a flower each. If one of the flowers has an\
  \ even number of petals and the other has an odd number of petals it means they\
  \ are in love. \n\nWrite a function that will take the number of petals of each\
  \ flower and return true if they are in love and false if they aren't."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def lovefunc (f1 f2 : Int) : Bool := sorry\n\ntheorem lovefunc_symmetry\
  \ (f1 f2 : Int) :\n  lovefunc f1 f2 = lovefunc f2 f1 := sorry\n"
"vc-theorems": "theorem lovefunc_parity (f1 f2 : Int) :\n  lovefunc f1 f2 = (f1 %\
  \ 2 â‰  f2 % 2) := sorry\n\n\ntheorem lovefunc_same_number (x : Int) :\n  lovefunc\
  \ x x = false := sorry\n\n\ntheorem lovefunc_consecutive (x : Int) :\n  lovefunc\
  \ x (x + 1) = true := sorry\n\n/--\ninfo: True\n-/\n#guard_msgs in\n#eval lovefunc\
  \ 1 4\n\n/--\ninfo: False\n-/\n#guard_msgs in\n#eval lovefunc 2 2\n\n/--\ninfo:\
  \ True\n-/\n#guard_msgs in\n#eval lovefunc 0 1\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
