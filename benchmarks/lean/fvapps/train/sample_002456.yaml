"vc-description": "=====Problem Statement=====\nYou and Fredrick are good friends.\
  \ Yesterday, Fredrick received\n\ncredit cards from ABCD Bank. He wants to verify\
  \ whether his credit card numbers are valid or not. You happen to be great at regex\
  \ so he is asking for your help!\n\nA valid credit card from ABCD Bank has the following\
  \ characteristics:\n\n► It must start with a 4, 5 or 6.\n► It must contain exactly\
  \ 16 digits.\n► It must only consist of digits (0-9).\n► It may have digits in groups\
  \ of 4, separated by one hyphen \"-\".\n► It must NOT use any other separator like\
  \ ' ' , '_', etc.\n► It must NOT have 4 or more consecutive repeated digits.\n\n\
  =====Example=====\n\nValid Credit Card Numbers\n\n4253625879615786\n4424424424442444\n\
  5122-2368-7954-3214\n\nInvalid Credit Card Numbers\n\n42536258796157867       #17\
  \ digits in card number → Invalid \n4424444424442444        #Consecutive digits\
  \ are repeating 4 or more times → Invalid\n5122-2368-7954 - 3214   #Separators other\
  \ than '-' are used → Invalid\n44244x4424442444        #Contains non digit characters\
  \ → Invalid\n0525362587961578        #Doesn't start with 4, 5 or 6 → Invalid\n\n\
  \n=====Input Format=====\nThe first line of input contains an integer N.\nThe next\
  \ N lines contain credit card numbers. \n\n\n=====Constraints=====\n0<N<100\n\n\
  =====Output Format=====\nPrint 'Valid' if the credit card number is valid. Otherwise,\
  \ print 'Invalid'. Do not print the quotes."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def Result := String\ndef validate_credit_cards : List String →\
  \ List Result := sorry\n"
"vc-theorems": "theorem validate_returns_valid_or_invalid (cards : List String) \n\
  \  (h : cards.length > 0) : \n  let results := validate_credit_cards cards\n  results.length\
  \ = cards.length ∧ \n  ∀ r ∈ results, r = \"Valid\" ∨ r = \"Invalid\"\n  := sorry\n\
  \n\ntheorem consecutive_digits_invalid (card : String)\n  (h : card ∈ [\"4444444444444444\"\
  , \"5444-4444-4444-4444\", \"6444444444444444\"]) :\n  validate_credit_cards [card]\
  \ = [\"Invalid\"] := sorry\n\n\ntheorem invalid_format_cards (card : String)\n \
  \ (h : card ∈ [\"1234567890123456\", \"7234567890123456\", \"4123-456-789-0123\"\
  , \"4123-4567-8901\"]) :\n  validate_credit_cards [card] = [\"Invalid\"] := sorry\n\
  \n\ntheorem valid_format_cards (card : String) \n  (h : card ∈ [\"4123456789123456\"\
  , \"5123-4567-8912-3456\"]) :\n  validate_credit_cards [card] = [\"Valid\"] := sorry\n\
  \n\ntheorem empty_list :\n  validate_credit_cards [] = [] := sorry\n\n\ntheorem\
  \ whitespace_handling :\n  validate_credit_cards [\" 4123456789123456 \"] = [\"\
  Valid\"] := sorry\n\n/--\ninfo: ['Valid', 'Valid', 'Invalid']\n-/\n#guard_msgs in\n\
  #eval validate_credit_cards [\"4123456789123456\", \"5123-4567-8912-3456\", \"61234-567-8912-3456\"\
  ]\n\n/--\ninfo: ['Valid', 'Invalid', 'Invalid']\n-/\n#guard_msgs in\n#eval validate_credit_cards\
  \ [\"4123356789123456\", \"5133-3367-8912-3456\", \"5123 - 3567 - 8912 - 3456\"\
  ]\n\n/--\ninfo: ['Valid', 'Valid', 'Invalid']\n-/\n#guard_msgs in\n#eval validate_credit_cards\
  \ [\"4424424424442444\", \"5122-2368-7954-3214\", \"0525362587961578\"]\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
