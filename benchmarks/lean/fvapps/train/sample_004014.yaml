"vc-description": "Consider a pyramid made up of blocks. Each layer of the pyramid\
  \ is a rectangle of blocks, and the dimensions of these rectangles increment as\
  \ you descend the pyramid. So, if a layer is a `3x6` rectangle of blocks, then the\
  \ next layer will be a `4x7` rectangle of blocks. A `1x10` layer will be on top\
  \ of a `2x11` layer on top of a `3x12` layer, and so on.\n\n## Task\n\nGiven the\
  \ dimensions of a pyramid's topmost layer `w,l`, and its height `h` (aka the number\
  \ of layers), return the total number of blocks in the pyramid.\n\n## Examples\n\
  \n`num_blocks(1, 1, 2)` will return `5`. This pyramid starts with a `1x1` layer\
  \ and has 2 layers total. So, there is 1 block in the first layer, and `2x2=4` blocks\
  \ in the second. Thus, 5 is the total number of blocks.\n\n`num_blocks(2, 4, 3)`\
  \ will return `47`. This pyramid has 3 layers: `2x4`, `3x5`, and `4x6`. So, there\
  \ are `47` blocks total.\n\n## Notes\n\nAll parameters will always be postive nonzero\
  \ integers.\n\nEfficiency is important. There will be:\n\n* 100 'small' cases with\
  \ `w`, `l`, and `h` below `20`.\n* 100 'big' cases with `w`, `l`, and `h` between\
  \ `1e9` and `1e10`."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def num_blocks (w l h : Nat) : Nat := sorry\n\ntheorem num_blocks_positive\
  \ (w l h : Nat) (hw : w > 0) (hl : l > 0) (hh : h > 0) : \n  num_blocks w l h >\
  \ 0 := sorry\n"
"vc-theorems": "theorem num_blocks_base_layer (w l h : Nat) (hw : w > 0) (hl : l >\
  \ 0) (hh : h > 0) :\n  num_blocks w l h ≥ w * l := sorry \n\n\ntheorem num_blocks_all_layers\
  \ (w l h : Nat) (hw : w > 0) (hl : l > 0) (hh : h > 0) :\n  num_blocks w l h ≥ w\
  \ * l * h := sorry\n\n\ntheorem num_blocks_symmetric (w l h : Nat) :\n  num_blocks\
  \ w l h = num_blocks l w h := sorry\n\n/--\ninfo: 5\n-/\n#guard_msgs in\n#eval num_blocks\
  \ 1 1 2\n\n/--\ninfo: 47\n-/\n#guard_msgs in\n#eval num_blocks 2 4 3\n\n/--\ninfo:\
  \ 83540\n-/\n#guard_msgs in\n#eval num_blocks 20 30 40\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded_and_plausible"
