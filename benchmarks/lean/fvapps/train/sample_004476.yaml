"vc-description": "We need a function ```prime_bef_aft()``` that gives the largest\
  \ prime below a certain given value ```n```, \n\n```befPrime or bef_prime``` (depending\
  \ on the language), \n\nand the smallest prime larger than this value, \n\n```aftPrime/aft_prime```\
  \ (depending on the language).\n\nThe result should be output in a list like the\
  \ following:\n\n```python\nprime_bef_aft(n) == [befPrime, aftPrime]\n```\n\nIf n\
  \ is a prime number it will give two primes, n will not be included in the result.\n\
  \nLet's see some cases:\n```python\nprime_bef_aft(100) == [97, 101]\n\nprime_bef_aft(97)\
  \ == [89, 101]\n\nprime_bef_aft(101) == [97, 103]\n```\nRange for the random tests:\
  \ \n```1000 <= n <= 200000```\n\n(The extreme and special case n = 2 will not be\
  \ considered for the tests. Thanks Blind4Basics)\n\nHappy coding!!"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def prime (n : Nat) : Bool := sorry\n\ndef prime_bef_aft (n : Nat)\
  \ : Nat × Nat := sorry\n"
"vc-theorems": "theorem prime_bef_aft_bound {n : Nat} (h : n ≥ 4) (h2 : n ≤ 1000)\
  \ :\n  let (p1, p2) := prime_bef_aft n\n  p1 < n ∧ n < p2 := sorry\n\n\ntheorem\
  \ prime_bef_aft_primes {n : Nat} (h : n ≥ 4) (h2 : n ≤ 1000) :\n  let (p1, p2) :=\
  \ prime_bef_aft n\n  prime p1 = true ∧ prime p2 = true := sorry\n\n\ntheorem prime_bef_aft_nat\
  \ {n : Nat} (h : n ≥ 4) (h2 : n ≤ 1000) :\n  let (p1, p2) := prime_bef_aft n\n \
  \ p1 ≥ 0 ∧ p2 ≥ 0 := sorry\n\n\ntheorem prime_divisibility {n : Nat} (h : n ≥ 2)\
  \ (h2 : n ≤ 100) :\n  prime n = true ↔ ∀ i : Nat, 2 ≤ i → i < n → n % i ≠ 0 := sorry\n\
  \n\ntheorem composite_divisibility {n : Nat} (h : n ≥ 2) (h2 : n ≤ 100) :\n  prime\
  \ n = false → ∃ i : Nat, 2 ≤ i ∧ i < n ∧ n % i = 0 := sorry\n\n/--\ninfo: [97, 101]\n\
  -/\n#guard_msgs in\n#eval prime_bef_aft 100\n\n/--\ninfo: [89, 101]\n-/\n#guard_msgs\
  \ in\n#eval prime_bef_aft 97\n\n/--\ninfo: [97, 103]\n-/\n#guard_msgs in\n#eval\
  \ prime_bef_aft 101\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded"
