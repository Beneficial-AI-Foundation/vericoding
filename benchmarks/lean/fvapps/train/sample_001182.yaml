"vc-description": "Eugene loves sequences, especially arithmetic progressions. One\
  \ day he was asked to solve a difficult problem.\n\nIf a sequence of numbers A1,\
  \ A2, ... , AN form an arithmetic progression A, he was asked to calculate sum of\
  \ F(Ai), for L ≤ i ≤ R.\nF(X) is defined as:\n\nIf X < 10 then F(X) = X.\n\nElse\
  \ F(X) = F(sum_of_digits(X)).\n\nExample:\nF(1378) = \nF(1+3+7+8) = \nF(19) = \n\
  F(1 + 9) = \nF(10) = \nF(1+0) = \nF(1) = 1\n\n-----Input-----\n- The first line\
  \ of the input contains an integer T denoting the number of test cases.\n- Each\
  \ test case is described in one line containing four integers: A1 denoting the first\
  \ element of the arithmetic progression A, D denoting the common difference between\
  \ successive members of A, and L and R as described in the problem statement.\n\n\
  -----Output-----\n- For each test case, output a single line containing one integer\
  \ denoting sum of F(Ai).\n\n-----Constraints-----\n- 1 ≤ T ≤ 105\n- 1 ≤ A1 ≤ 109\n\
  - 0 ≤ D ≤ 109\n- 1 ≤ R ≤ 1018\n- 1 ≤ L ≤ R\n\n-----Subtasks-----\n- Subtask 1: \
  \ 0 ≤ D ≤ 100, 1 ≤ A1 ≤ 109, 1 ≤ R ≤ 100  - 15 points\n- Subtask 2:  0 ≤ D ≤ 109,\
  \ 1 ≤ A1 ≤ 109, 1 ≤ R ≤ 106  - 25 points\n- Subtask 3: Original constraints - 60\
  \ points\n\n-----Example-----\nInput:\n2\n1 1 1 3\n14 7 2 4\n\nOutput:\n6\n12\n\n\
  -----Explanation-----\nExample case 1.\nA = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, ...}\n\
  A1 = 1\nA2 = 2\nA3 = 3\nF(A1) = 1\nF(A2) = 2\nF(A3) = 3\n1+2+3=6\nExample case 2.\n\
  A = {14, 21, 28, 35, 42, 49, 56, 63, 70, 77,  ...}\nA2 = 21\nA3 = 28\nA4 = 35\n\
  F(A2) = 3\nF(A3) = 1\nF(A4) = 8\n3+1+8=12"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def sum_digits_function (n : Nat) : Nat := sorry\n\ndef solve_sequence_sum\
  \ (first diff left right : Nat) : Nat := sorry\n"
"vc-theorems": "theorem sum_digits_function_bounds (x : Nat) (h : x ≥ 1) :\n  let\
  \ result := sum_digits_function x\n  1 ≤ result ∧ result ≤ 9 ∧ result = sum_digits_function\
  \ result := sorry\n\n\ntheorem sequence_sum_zero_diff (first length left : Nat)\
  \ (h : length > 0) :\n  let right := left + length - 1\n  solve_sequence_sum first\
  \ 0 left right = length * sum_digits_function first := sorry\n\n\ntheorem sequence_sum_bounds\
  \ (first diff left length : Nat) \n  (h1 : first > 0) (h2 : diff > 0) (h3 : left\
  \ > 0) (h4 : length > 0) :\n  let right := left + length - 1\n  let result := solve_sequence_sum\
  \ first diff left right\n  length ≤ result ∧ result ≤ 9 * length := sorry\n\n\n\
  theorem sequence_sum_single_element (first diff pos : Nat)\n  (h1 : first > 0) (h2\
  \ : diff > 0) (h3 : pos > 0) :\n  solve_sequence_sum first diff pos pos = \n   \
  \ sum_digits_function (first + diff * (pos - 1)) := sorry\n\n\ntheorem sequence_sum_order_invariant\
  \ (first diff left delta : Nat)\n  (h1 : first > 0) :\n  let right := left + delta\n\
  \  left = right → \n    solve_sequence_sum first diff left right = \n    solve_sequence_sum\
  \ first diff right left := sorry\n\n/--\ninfo: 6\n-/\n#guard_msgs in\n#eval solve_sequence_sum\
  \ 1 1 1 3\n\n/--\ninfo: 12\n-/\n#guard_msgs in\n#eval solve_sequence_sum 14 7 2\
  \ 4\n\n/--\ninfo: 10\n-/\n#guard_msgs in\n#eval solve_sequence_sum 1 0 1 10\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
