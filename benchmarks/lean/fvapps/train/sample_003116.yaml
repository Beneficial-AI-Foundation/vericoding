"vc-description": "You have to create a function which receives 3 arguments: 2 numbers,\
  \ and the result of an unknown operation performed on them (also a number).\n\n\
  Based on those 3 values you have to return a string, that describes which operation\
  \ was used to get the given result.\n\nThe possible return strings are:\n  `\"addition\"\
  `,\n  `\"subtraction\"`,\n  `\"multiplication\"`,\n  `\"division\"`.\n\n## Example:\n\
  ```\ncalcType(1, 2, 3) -->   1 ? 2 = 3   --> \"addition\"\n```\n\n## Notes\n* In\
  \ case of division you should expect that the result of the operation is obtained\
  \ by using `/` operator on the input values - no manual data type conversion or\
  \ rounding should be performed.\n* Cases with just one possible answers are generated.\n\
  * Only valid arguments will be passed to the function."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def calc_type (a b result : Float) : String := sorry\n\ntheorem\
  \ calc_type_addition (a b : Float) :\n  a + b ≠ a - b →\n  a + b ≠ a * b →\n  a\
  \ + b ≠ a / b →\n  calc_type a b (a + b) = \"addition\" := sorry\n"
"vc-theorems": "theorem calc_type_subtraction (a b : Float) :\n  a - b ≠ a + b →\n\
  \  a - b ≠ a * b →\n  a - b ≠ a / b →\n  calc_type a b (a - b) = \"subtraction\"\
  \ := sorry\n\n\ntheorem calc_type_multiplication (a b : Float) :\n  a * b ≠ a +\
  \ b →\n  a * b ≠ a - b →\n  a * b ≠ a / b →\n  calc_type a b (a * b) = \"multiplication\"\
  \ := sorry\n\n\ntheorem calc_type_division (a b : Float) :\n  b ≠ 0 →\n  a / b ≠\
  \ a + b →\n  a / b ≠ a - b →\n  a / b ≠ a * b →\n  calc_type a b (a / b) = \"division\"\
  \ := sorry\n\n\ntheorem calc_type_all_different (a b : Float) (h : b ≠ 0) :\n  a\
  \ + b ≠ a - b →\n  a + b ≠ a * b →\n  a + b ≠ a / b →\n  a - b ≠ a * b →\n  a -\
  \ b ≠ a / b →\n  a * b ≠ a / b → \n  ∃ op, calc_type a b op ∈ [\"addition\", \"\
  subtraction\", \"multiplication\", \"division\"] ∧\n  ∀ op', calc_type a b op' ∈\
  \ [\"addition\", \"subtraction\", \"multiplication\", \"division\"] → op' = op :=\
  \ sorry\n\n/--\ninfo: 'addition'\n-/\n#guard_msgs in\n#eval calc_type 1 2 3\n\n\
  /--\ninfo: 'subtraction'\n-/\n#guard_msgs in\n#eval calc_type 10 5 5\n\n/--\ninfo:\
  \ 'multiplication'\n-/\n#guard_msgs in\n#eval calc_type 10 4 40\n\n/--\ninfo: 'division'\n\
  -/\n#guard_msgs in\n#eval calc_type 9 5 1.8\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
