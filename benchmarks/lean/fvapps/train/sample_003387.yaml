"vc-description": "You're laying out a rad pixel art mural to paint on your living\
  \ room wall in homage to [Paul Robertson](http://68.media.tumblr.com/0f55f7f3789a354cfcda7c2a64f501d1/tumblr_o7eq3biK9s1qhccbco1_500.png),\
  \ your favorite pixel artist.\n\nYou want your work to be perfect down to the millimeter.\
  \ You haven't decided on the dimensions of your piece, how large you want your pixels\
  \ to be, or which wall you want to use. You just know that you want to fit an exact\
  \ number of pixels.\n\nTo help decide those things you've decided to write a function,\
  \ `is_divisible()` that will tell you whether a wall of a certain length can exactly\
  \ fit an integer number of pixels of a certain length.\n\nYour function should take\
  \ two arguments: the size of the wall in millimeters and the size of a pixel in\
  \ millimeters. It should return `True` if you can fit an exact number of pixels\
  \ on the wall, otherwise it should return `False`. For example `is_divisible(4050,\
  \ 27)` should return `True`, but `is_divisible(4066, 27)` should return `False`.\n\
  \nNote: you don't need to use an `if` statement here. Remember that in Python an\
  \ expression using the `==` comparison operator will evaluate to either `True` or\
  \ `False`:\n```python\n>>> def equals_three(num):\n>>>     return num == 3\n>>>\
  \ equals_three(5)\nFalse\n>>> equals_three(3)\nTrue\n```\n\n\n```if:csharp\nDocumentation:\n\
  Kata.IsDivisible Method (Int32, Int32)\n\nReturns a boolean representing if the\
  \ first argument is perfectly divisible by the second argument.\n\nSyntax\n\n\n\
  public\nstatic\nbool IsDivisible(\nint wallLength,\n    int pixelSize,\n    )\n\
  \  \n\n\n\nParameters\n\nwallLength\n\nType: System.Int32\nThe length of the wall\
  \ in millimeters.\n\npixelSize\n\nType: System.Int32\nThe length of a pixel in millimeters.\n\
  \nReturn Value\n\nType: System.Boolean\n  A boolean value representing if the first\
  \ argument is perfectly divisible by the second.\n\n```"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def is_divisible (wallLength : Nat) (pixelSize : Nat) : Bool :=\n\
  \  sorry\n"
"vc-theorems": "theorem is_divisible_correct {wallLength pixelSize : Nat} (h : pixelSize\
  \ > 0) :\n  is_divisible wallLength pixelSize = true ↔ wallLength % pixelSize =\
  \ 0\n  := sorry\n\n\ntheorem multiple_divisible {wallLength pixelSize : Nat} (h\
  \ : pixelSize > 0) :\n  is_divisible (wallLength * pixelSize) pixelSize = true\n\
  \  := sorry\n\n\ntheorem zero_pixel_error (wallLength : Nat) :\n  is_divisible wallLength\
  \ 0 = false\n  := sorry\n\n/--\ninfo: True\n-/\n#guard_msgs in\n#eval is_divisible\
  \ 4050 27\n\n/--\ninfo: False\n-/\n#guard_msgs in\n#eval is_divisible 4066 27\n\n\
  /--\ninfo: True\n-/\n#guard_msgs in\n#eval is_divisible 10000 20\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
