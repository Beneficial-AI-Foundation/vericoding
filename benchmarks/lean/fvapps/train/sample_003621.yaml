"vc-description": "Two integers are coprimes if the their only greatest common divisor\
  \ is 1.\n\n## Task\nIn this kata you'll be given a number ```n >= 2``` and output\
  \ a list with all positive integers less than ```gcd(n, k) == 1```, with ```k```\
  \ being any of the output numbers.\n\nThe list cannot include duplicated entries\
  \ and has to be sorted.\n\n\n## Examples\n```\n2 -> [1]\n3 -> [1, 2]\n6 -> [1, 5]\n\
  10 -> [1, 3, 7, 9]\n20 -> [1, 3, 7, 9, 11, 13, 17, 19]\n25 -> [1, 2, 3, 4, 6, 7,\
  \ 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24]\n30 -> [1, 7, 11, 13, 17,\
  \ 19, 23, 29]\n```"
"vc-preamble": "import Imports.AllImports\n\ndef coprimes (n : Nat) : List Nat :=\
  \ sorry\n\ndef gcd (a b : Nat) : Nat := sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def countCoprimes (n : Nat) : Nat :=\n  (List.range n).filter (fun\
  \ x => gcd x n = 1) |>.length"
"vc-theorems": "theorem coprimes_all_less (n : Nat) (h : n ≥ 2) :\n  ∀ x ∈ coprimes\
  \ n, x > 0 ∧ x < n := sorry\n\n\n\n\n\n\n\n\n/--\ninfo: [1]\n-/\n#guard_msgs in\n\
  #eval coprimes 2\n\n/--\ninfo: [1, 2]\n-/\n#guard_msgs in\n#eval coprimes 3\n\n\
  /--\ninfo: [1, 3, 7, 9]\n-/\n#guard_msgs in\n#eval coprimes 10\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded_and_plausible"
