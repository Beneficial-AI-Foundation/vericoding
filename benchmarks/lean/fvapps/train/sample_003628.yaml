"vc-description": "For a given array whose element values are randomly picked from\
  \ single-digit integers `0` to `9`, return an array with the same digit order but\
  \ all `0`'s paired. Paring two `0`'s generates one `0` at the location of the first.\n\
  \nEx:\n```python\npair_zeros([0, 1, 0, 2])\n# paired: ^-----^ cull second zero\n\
  \       == [0, 1, 2];\n#   kept: ^\n\npair_zeros([0, 1, 0, 0])\n# paired: ^-----^\n\
  \       == [0, 1,    0];\n#   kept: ^\n\npair_zeros([1, 0, 7, 0, 1])\n# paired:\
  \    ^-----^\n       == [1, 0, 7,    1];\n#   kept:    ^\n\npair_zeros([0, 1, 7,\
  \ 0, 2, 2, 0, 0, 1, 0])\n# paired: ^--------^ \n#        [0, 1, 7,    2, 2, 0, 0,\
  \ 1, 0]\n#   kept: ^         paired: ^--^\n       == [0, 1, 7,    2, 2, 0,    1,\
  \ 0];\n#   kept:                   ^\n```\n\nHere are the 2 important rules:\n\n\
  1. Pairing happens from left to right in the array. However, for each pairing, the\
  \ \"second\" `0` will always be paired towards the first (right to left)\n2. `0`'s\
  \ generated by pairing can NOT be paired again"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def pair_zeros (xs : List Int) : List Int := sorry\n\ntheorem pair_zeros_length_valid\
  \ (xs : List Int) : \n  List.length (pair_zeros xs) ≤ List.length xs := sorry\n"
"vc-theorems": "theorem pair_zeros_preserves_nonzero (xs : List Int) (x : Int) :\n\
  \  x ∈ pair_zeros xs → x ≠ 0 → x ∈ xs := sorry\n\n\ntheorem pair_zeros_zero_count\
  \ (xs : List Int) :\n  let input_zeros := (xs.filter (· = 0)).length\n  let output_zeros\
  \ := ((pair_zeros xs).filter (· = 0)).length\n  output_zeros = (input_zeros + 1)\
  \ / 2 := sorry\n\n\ntheorem pair_zeros_preserves_ordering (xs : List Int) :\n  (xs.filter\
  \ (· ≠ 0)) = ((pair_zeros xs).filter (· ≠ 0)) := sorry\n\n/--\ninfo: []\n-/\n#guard_msgs\
  \ in\n#eval pair_zeros []\n\n/--\ninfo: [1]\n-/\n#guard_msgs in\n#eval pair_zeros\
  \ [1]\n\n/--\ninfo: [0]\n-/\n#guard_msgs in\n#eval pair_zeros [0]\n\n/--\ninfo:\
  \ [0, 1, 2]\n-/\n#guard_msgs in\n#eval pair_zeros [0, 1, 0, 2]\n\n/--\ninfo: [1,\
  \ 0, 1, 2, 0]\n-/\n#guard_msgs in\n#eval pair_zeros [1, 0, 1, 0, 2, 0, 0]\n\n/--\n\
  info: [0, 0, 0]\n-/\n#guard_msgs in\n#eval pair_zeros [0, 0, 0, 0, 0, 0]\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded_and_plausible"
