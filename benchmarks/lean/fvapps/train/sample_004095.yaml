"vc-description": "Gigi is a clever monkey, living in the zoo, his teacher (animal\
  \ keeper) recently taught him some knowledge of \"0\".\n\nIn Gigi's eyes, \"0\"\
  \ is a character contains some circle(maybe one, maybe two).\n\nSo, a is a \"0\"\
  ,b is a \"0\",6 is also a \"0\"，and 8 have two \"0\" ,etc...\n\nNow, write some\
  \ code to count how many \"0\"s in the text.\n\nLet us see who is smarter? You ?\
  \ or monkey?\n\nInput always be a string(including words numbers and symbols)，You\
  \ don't need to verify it, but pay attention to the difference between uppercase\
  \ and lowercase letters.\n\nHere is a table of characters：\n\none zeroabdegopq069DOPQR\
  \         () <-- A pair of braces as a zerotwo zero%&B8\n\nOutput will be a number\
  \ of \"0\"."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def count_zeros (s: String) : Nat :=\n  sorry\n"
"vc-theorems": "theorem count_zeros_nonnegative (s: String) :\n  count_zeros s ≥ 0\
  \ := sorry\n\n\ntheorem count_zeros_upper_bound (s: String) :\n  count_zeros s ≤\
  \ 2 * s.length := sorry\n\n\ntheorem count_zeros_concatenation (s: String) :\n \
  \ count_zeros (s ++ s) = count_zeros s * 2 := sorry\n\n\ntheorem count_zeros_case_insensitive\
  \ (c: Char) :\n  c ∈ ['d', 'o', 'p', 'q'] →\n  count_zeros (String.mk [c]) = count_zeros\
  \ (String.mk [c.toUpper]) := sorry\n\n\n\n\n\n\n\n\ntheorem count_zeros_parentheses\
  \ :\n  count_zeros \"()\" = 1 := sorry\n\n/--\ninfo: 0\n-/\n#guard_msgs in\n#eval\
  \ count_zeros \"\"\n\n/--\ninfo: 6\n-/\n#guard_msgs in\n#eval count_zeros \"0oO0oO\"\
  \n\n/--\ninfo: 8\n-/\n#guard_msgs in\n#eval count_zeros \"abcdefghijklmnopqrstuvwxyz\"\
  \n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded_and_plausible"
