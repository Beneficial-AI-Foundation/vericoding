"vc-description": "You are given an array $a$ of length $2n$. Consider a partition\
  \ of array $a$ into two subsequences $p$ and $q$ of length $n$ each (each element\
  \ of array $a$ should be in exactly one subsequence: either in $p$ or in $q$).\n\
  \nLet's sort $p$ in non-decreasing order, and $q$ in non-increasing order, we can\
  \ denote the sorted versions by $x$ and $y$, respectively. Then the cost of a partition\
  \ is defined as $f(p, q) = \\sum_{i = 1}^n |x_i - y_i|$.\n\nFind the sum of $f(p,\
  \ q)$ over all correct partitions of array $a$. Since the answer might be too big,\
  \ print its remainder modulo $998244353$.\n\n\n-----Input-----\n\nThe first line\
  \ contains a single integer $n$ ($1 \\leq n \\leq 150\\,000$).\n\nThe second line\
  \ contains $2n$ integers $a_1, a_2, \\ldots, a_{2n}$ ($1 \\leq a_i \\leq 10^9$) —\
  \ elements of array $a$.\n\n\n-----Output-----\n\nPrint one integer — the answer\
  \ to the problem, modulo $998244353$.\n\n\n-----Examples-----\nInput\n1\n1 4\n\n\
  Output\n6\nInput\n2\n2 1 2 1\n\nOutput\n12\nInput\n3\n2 2 2 2 2 2\n\nOutput\n0\n\
  Input\n5\n13 8 35 94 9284 34 54 69 123 846\n\nOutput\n2588544\n\n\n-----Note-----\n\
  \nTwo partitions of an array are considered different if the sets of indices of\
  \ elements included in the subsequence $p$ are different.\n\nIn the first example,\
  \ there are two correct partitions of the array $a$:  $p = [1]$, $q = [4]$, then\
  \ $x = [1]$, $y = [4]$, $f(p, q) = |1 - 4| = 3$;  $p = [4]$, $q = [1]$, then $x\
  \ = [4]$, $y = [1]$, $f(p, q) = |4 - 1| = 3$. \n\nIn the second example, there are\
  \ six valid partitions of the array $a$:   $p = [2, 1]$, $q = [2, 1]$ (elements\
  \ with indices $1$ and $2$ in the original array are selected in the subsequence\
  \ $p$);  $p = [2, 2]$, $q = [1, 1]$;  $p = [2, 1]$, $q = [1, 2]$ (elements with\
  \ indices $1$ and $4$ are selected in the subsequence $p$);  $p = [1, 2]$, $q =\
  \ [2, 1]$;  $p = [1, 1]$, $q = [2, 2]$;  $p = [2, 1]$, $q = [2, 1]$ (elements with\
  \ indices $3$ and $4$ are selected in the subsequence $p$)."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def solve_array_partition (n : Nat) (arr : List Nat) : Nat := sorry\n\
  \ntheorem array_partition_bound {n : Nat} {arr : List Nat} (h : arr.length = 2 *\
  \ n) :\n  let result := solve_array_partition n arr\n  0 ≤ result ∧ result < 998244353\
  \ := sorry \n"
"vc-theorems": "theorem zero_difference {n : Nat} :\n  let arr := List.replicate (2\
  \ * n) 1\n  solve_array_partition n arr = 0 := sorry\n\n\ntheorem sorted_input_invariant\
  \ {n : Nat} (arr : List Nat) (h : arr.length = 2 * n) :\n  solve_array_partition\
  \ n arr = solve_array_partition n arr.reverse := sorry\n\n\ntheorem specific_case_1\
  \ : solve_array_partition 1 [1, 4] = 6 := sorry\n\ntheorem specific_case_2 : solve_array_partition\
  \ 2 [2, 1, 2, 1] = 12 := sorry\n\n\ntheorem specific_case_3 : solve_array_partition\
  \ 3 [2, 2, 2, 2, 2, 2] = 0 := sorry\n\n/--\ninfo: 6\n-/\n#guard_msgs in\n#eval solve_array_partition\
  \ 1 [1, 4]\n\n/--\ninfo: 12\n-/\n#guard_msgs in\n#eval solve_array_partition 2 [2,\
  \ 1, 2, 1]\n\n/--\ninfo: 0\n-/\n#guard_msgs in\n#eval solve_array_partition 3 [2,\
  \ 2, 2, 2, 2, 2]\n"
"vc-postamble": "-- Apps difficulty: competition\n-- Assurance level: unguarded"
