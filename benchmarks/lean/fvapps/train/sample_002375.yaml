"vc-description": "Given two strings A and B of lowercase letters, return true if\
  \ you can swap two letters in A so the result is equal to B, otherwise, return false.\n\
  Swapping letters is defined as taking two indices i and j (0-indexed) such that\
  \ i != j and swapping the characters at A[i] and A[j]. For example, swapping at\
  \ indices 0 and 2 in \"abcd\" results in \"cbad\".\n \nExample 1:\nInput: A = \"\
  ab\", B = \"ba\"\nOutput: true\nExplanation: You can swap A[0] = 'a' and A[1] =\
  \ 'b' to get \"ba\", which is equal to B.\n\nExample 2:\nInput: A = \"ab\", B =\
  \ \"ab\"\nOutput: false\nExplanation: The only letters you can swap are A[0] = 'a'\
  \ and A[1] = 'b', which results in \"ba\" != B.\n\nExample 3:\nInput: A = \"aa\"\
  , B = \"aa\"\nOutput: true\nExplanation: You can swap A[0] = 'a' and A[1] = 'a'\
  \ to get \"aa\", which is equal to B.\n\nExample 4:\nInput: A = \"aaaaaaabc\", B\
  \ = \"aaaaaaacb\"\nOutput: true\n\nExample 5:\nInput: A = \"\", B = \"aa\"\nOutput:\
  \ false\n\n \nConstraints:\n\n0 <= A.length <= 20000\n0 <= B.length <= 20000\nA\
  \ and B consist of lowercase letters."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def buddy_strings (s1 s2 : String) : Bool := sorry\n\ntheorem buddy_strings_symmetry\
  \ (s1 s2 : String) : \n  buddy_strings s1 s2 = buddy_strings s2 s1 := sorry\n"
"vc-theorems": "theorem buddy_strings_identical_requires_duplicate {s : String} :\n\
  \  s.length ≥ 2 → \n  let chars := s.data\n  let hasDuplicates := ∃ i j, i < j ∧\
  \ j < chars.length ∧ chars[i]! = chars[j]!\n  buddy_strings s s = hasDuplicates\
  \ := sorry\n\n\ntheorem buddy_strings_length {s1 s2 : String} :\n  s1.length ≠ s2.length\
  \ ∨ s1.length < 2 →\n  ¬(buddy_strings s1 s2) := sorry\n\n\ntheorem single_swap_property\
  \ {s : String} (h : s.length ≥ 2) :\n  let chars := s.data\n  let swapped := String.mk\
  \ (chars.set 0 (chars.get! 1) |>.set 1 (chars.get! 0))\n  buddy_strings s swapped\
  \ := sorry\n\n/--\ninfo: True\n-/\n#guard_msgs in\n#eval buddy_strings \"ab\" \"\
  ba\"\n\n/--\ninfo: False\n-/\n#guard_msgs in\n#eval buddy_strings \"ab\" \"ab\"\n\
  \n/--\ninfo: True\n-/\n#guard_msgs in\n#eval buddy_strings \"aa\" \"aa\"\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
