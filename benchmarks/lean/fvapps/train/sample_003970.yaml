"vc-description": "Spin-off of this kata, here you will have to figure out an efficient\
  \ strategy to solve the problem of finding the sole duplicate number among an unsorted\
  \ array/list of numbers starting from 1 up to n.\n\nHints: a solution in linear\
  \ time can be found; using the most intuitive ones to search for duplicates that\
  \ can run in O(nÂ²) time won't work."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def find_dup (arr : List Nat) : Nat :=\n  sorry\n\n\n"
"vc-theorems": "theorem find_dup_minimal :\n  find_dup [1, 1] = 1 :=\n  sorry\n\n\
  /--\ninfo: 1\n-/\n#guard_msgs in\n#eval find_dup [1, 1, 2, 3]\n\n/--\ninfo: 2\n\
  -/\n#guard_msgs in\n#eval find_dup [1, 2, 2, 3]\n\n/--\ninfo: 1\n-/\n#guard_msgs\
  \ in\n#eval find_dup [5, 4, 3, 2, 1, 1]\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded_and_plausible"
