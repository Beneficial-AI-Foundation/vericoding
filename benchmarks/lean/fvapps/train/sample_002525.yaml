"vc-description": "In the world of birding there are four-letter codes for the common\
  \ names of birds. These codes are created by some simple rules:\n\n* If the bird's\
  \ name has only one word, the code takes the first four letters of that word. \n\
  * If the name is made up of two words, the code takes the first two letters of each\
  \ word.\n* If the name is made up of three words, the code is created by taking\
  \ the first letter from the first two words and the first two letters from the third\
  \ word.\n* If the name is four words long, the code uses the first letter from all\
  \ the words.\n\n*(There are other ways that codes are created, but this Kata will\
  \ only use the four rules listed above)*\n\nComplete the function that takes an\
  \ array of strings of common bird names from North America, and create the codes\
  \ for those names based on the rules above. The function should return an array\
  \ of the codes in the same order in which the input names were presented.\n\nAdditional\
  \ considertations:\n\n* The four-letter codes  in the returned array should be in\
  \ UPPER CASE.\n* If a common name has a hyphen/dash, it should be considered a space.\
  \ \n\n## Example\n\nIf the input array is: `[\"Black-Capped Chickadee\", \"Common\
  \ Tern\"]`\n\nThe return array would be: `[\"BCCH\", \"COTE\"]`"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def bird_code (names : List String) : List String := sorry\n\n\
  theorem empty_input_is_list : \n  ∀ (input : List String), \n  (input = [] ∨ input\
  \ = [\"\"] ∨ input = [\" \"]) →\n  bird_code input = bird_code input := sorry \n"
"vc-theorems": "theorem specific_bird_codes :\n  bird_code [\"Black-Capped Chickadee\"\
  ] = [\"BCCH\"] ∧\n  bird_code [\"Yellow-Rumped Warbler\"] = [\"YRWA\"] ∧\n  bird_code\
  \ [\"Common Tern\"] = [\"COTE\"] ∧\n  bird_code [\"American Redstart\"] = [\"AMRE\"\
  ] ∧\n  bird_code [\"Northern Cardinal\"] = [\"NOCA\"] ∧\n  bird_code [\"Pine Grosbeak\"\
  ] = [\"PIGR\"] := sorry\n\n\ntheorem multiple_names :\n  bird_code [\"Black-Capped\
  \ Chickadee\", \"Common Tern\", \"American Redstart\"] = \n  [\"BCCH\", \"COTE\"\
  , \"AMRE\"] := sorry\n\n/--\ninfo: ['BCCH', 'COTE']\n-/\n#guard_msgs in\n#eval bird_code\
  \ [\"Black-Capped Chickadee\", \"Common Tern\"]\n\n/--\ninfo: ['AMRE', 'NOCA', 'PIGR']\n\
  -/\n#guard_msgs in\n#eval bird_code [\"American Redstart\", \"Northern Cardinal\"\
  , \"Pine Grosbeak\"]\n\n/--\ninfo: ['GCFL', 'BOBO', 'ESOW']\n-/\n#guard_msgs in\n\
  #eval bird_code [\"Great Crested Flycatcher\", \"Bobolink\", \"Eastern Screech Owl\"\
  ]\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
