"vc-description": "On her way to ChefLand, Marichka noticed $10^K$ road signs (numbered\
  \ $0$ through $10^K - 1$). For each valid $i$, the sign with number $i$ had the\
  \ integer $i$ written on one side and $10^K-i-1$ written on the other side.\nNow,\
  \ Marichka is wondering — how many road signs have exactly two distinct decimal\
  \ digits written on them (on both sides in total)? Since this number may be large,\
  \ compute it modulo $10^9+7$.\nFor example, if $K = 3$, the two integers written\
  \ on the road sign $363$ are $363$ and $636$, and they contain two distinct digits\
  \ $3$ and $6$, but on the road sign $362$, there are integers $362$ and $637$, which\
  \ contain four distinct digits — $2$, $3$, $6$ and $7$. On the road sign $11$, there\
  \ are integers $11$ and $988$, which contain three distinct digits — $1$, $9$ and\
  \ $8$.\n\n-----Input-----\n- The first line of the input contains a single integer\
  \ $T$ denoting the number of test cases. The description of $T$ test cases follows.\n\
  - The first and only line of each test case contains a single integer $K$.\n\n-----Output-----\n\
  For each test case, print a single line containing one integer — the number of road\
  \ signs with exactly two digits, modulo $10^9+7$.\n\n-----Constraints-----\n- $1\
  \ \\le T \\le 10^5$\n- $1 \\le K \\le 10^9$\n\n-----Subtasks-----\nSubtask #1 (20\
  \ points): $1 \\le T, K \\le 5$\nSubtask #2 (80 points): original constraints\n\n\
  -----Example Input-----\n1\n1\n\n-----Example Output-----\n10"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def MOD := 1000000007\n\ndef count_signs_with_two_digits (k: Nat)\
  \ : Nat :=\n  sorry\n"
"vc-theorems": "theorem count_signs_always_positive (k: Nat) (hk: k ≥ 1) (hk': k ≤\
  \ 1000):\n  count_signs_with_two_digits k > 0 :=\n  sorry\n\n\ntheorem count_signs_mod_property\
  \ (k: Nat) (hk: k ≥ 1) (hk': k ≤ 1000):\n  count_signs_with_two_digits k ≥ 0 ∧ count_signs_with_two_digits\
  \ k < MOD :=\n  sorry\n\n\ntheorem count_signs_doubles_each_k (k: Nat) (hk: k ≥\
  \ 1) (hk': k ≤ 10):\n  count_signs_with_two_digits (k + 1) = ((count_signs_with_two_digits\
  \ k) * 2) % MOD :=\n  sorry\n\n/--\ninfo: 10\n-/\n#guard_msgs in\n#eval count_signs_with_two_digits\
  \ 1\n\n/--\ninfo: 20\n-/\n#guard_msgs in\n#eval count_signs_with_two_digits 2\n\n\
  /--\ninfo: 40\n-/\n#guard_msgs in\n#eval count_signs_with_two_digits 3\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
