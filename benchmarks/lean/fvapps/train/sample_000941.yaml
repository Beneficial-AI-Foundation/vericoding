"vc-description": "You may have helped Chef and prevented Doof from destroying the\
  \ even numbers. But, it has only angered Dr Doof even further. However, for his\
  \ next plan, he needs some time. Therefore, Doof has built $N$ walls to prevent\
  \ Chef from interrupting him. You have to help Chef by telling him the number of\
  \ walls he needs to destroy in order to reach Dr Doof.\nFormally, the whole area\
  \ can be represented as the first quadrant with the origin at the bottom-left corner.\
  \ Dr. Doof is located at the origin $(0, 0)$. There are $N$ walls, the i-th wall\
  \ is a straight line segment joining the points $(a_i, 0)$ and $(0, a_i)$. For every\
  \ initial position of Chef $(x_j, y_j)$, find the number of walls he needs to break\
  \ before reaching Doof. Obviously, chef can't start from a point on the wall. Therefore,\
  \ if $(x_j, y_j)$ lies on any of the given walls, print $-1$ in a new line.\n\n\
  -----Input-----\n- First line contains $T$, denoting the number of testcases.\n\
  - The first line of every test case contains a single integer $N$ denoting the number\
  \ of walls Dr Doof has built.\n- The next line contains $N$ space separated distinct\
  \ integers each denoting $a_i$.\n- The next line contains a single integer $Q$ denoting\
  \ the number of times Chef asks for your help.\n- The next $Q$ lines contains two\
  \ space separated integers $x_j$ and $y_j$, each denoting the co-ordinates of the\
  \ starting point of Chef.\n\n-----Output-----\nFor each query, print the number\
  \ of walls Chef needs to break in order to reach Dr Doof in a separate line. If\
  \ Chef tries to start from a point on any of the walls, print $-1$.\n\n-----Constraints-----\n\
  - $1 \\leq T \\leq 2 * 10^2$\n- $1 \\leq N, Q \\leq 2 * 10^5$\n- $1 \\leq a_i \\\
  leq 10^9$\n- $0 \\leq x_j, y_j \\leq 10^9$\n- $a_1 < a_2 < a_3 < .... < a_N$\n-\
  \ Sum of $N$ and $Q$ over all testcases for a particular test file does not exceed\
  \ $2 * 10^5$\n\n-----Sample Input-----\n1\n2\n1 3\n5\n0 0\n2 0\n0 4\n1 1\n1 2\n\n\
  -----Sample Output-----\n0\n1\n2\n1\n-1\n\n-----Explanation-----\nThe sample input\
  \ can be represented by the graph given below:\n\nIf Chef starts from $(0, 0)$,\
  \ he can reach Dr Doof without destroying any wall.\n\nIf Chef starts from $(2,\
  \ 0)$, he has to destroy the $1st$ wall.\n\nIf Chef starts from $(0, 4)$, he has\
  \ to destroy both the walls.\n\nIf Chef starts from $(1, 1)$, he has to destroy\
  \ the $1st$ wall.\n\nAs $(1, 2)$ lies on the second wall, the answer is $-1$ for\
  \ the last query."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def pos_search (arr : List Int) (num : Int) : Nat := sorry \ndef\
  \ solve_walls (n : Nat) (walls : List Int) (queries : List (Int × Int)) : List Int\
  \ := sorry\n"
"vc-theorems": "theorem pos_search_empty_array {num : Int} : \n  pos_search [] num\
  \ = 0 := sorry\n\n\ntheorem pos_search_num_present {arr : List Int} {num : Int}\
  \ (h : arr.contains num) :\n  pos_search arr num = 0 := sorry\n\n\ntheorem pos_search_bounds\
  \ {arr : List Int} {num : Int} (h : ¬arr.contains num) :\n  pos_search arr num ≤\
  \ arr.length := sorry\n\n\ntheorem pos_search_left_elements {arr : List Int} {num\
  \ : Int} (h₁ : ¬arr.contains num) \n  (h₂ : pos_search arr num > 0) :\n  ∀ x ∈ arr.take\
  \ (pos_search arr num), x < num := sorry\n\n\ntheorem pos_search_right_elements\
  \ {arr : List Int} {num : Int} (h₁ : ¬arr.contains num)\n  (h₂ : pos_search arr\
  \ num < arr.length) :\n  ∀ x ∈ arr.drop (pos_search arr num), num < x := sorry\n\
  \n\ntheorem solve_walls_length {n : Nat} {walls : List Int} {queries : List (Int\
  \ × Int)} :\n  (solve_walls n walls queries).length = queries.length := sorry\n\n\
  \ntheorem solve_walls_matches_pos_search {n : Nat} {walls : List Int} {queries :\
  \ List (Int × Int)}\n  {i : Fin queries.length} :\n  (solve_walls n walls queries).get\
  \ ⟨i.val, by simp [solve_walls_length]⟩ = \n    pos_search walls ((queries.get i).1\
  \ + (queries.get i).2) := sorry"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded"
