"vc-description": "Chef Two and Chef Ten are playing a game with a number $X$. In\
  \ one turn, they can multiply $X$ by $2$. The goal of the game is to make $X$ divisible\
  \ by $10$.\nHelp the Chefs find the smallest number of turns necessary to win the\
  \ game (it may be possible to win in zero turns) or determine that it is impossible.\n\
  \n-----Input-----\n- The first line of the input contains a single integer $T$ denoting\
  \ the number of test cases. The description of $T$ test cases follows.\n- The first\
  \ and only line of each test case contains a single integer denoting the initial\
  \ value of $X$. \n\n-----Output-----\nFor each test case, print a single line containing\
  \ one integer — the minimum required number of turns or $-1$ if there is no way\
  \ to win the game.\n\n-----Constraints-----\n- $1 \\le T \\le 1000$\n- $0 \\le X\
  \ \\le 10^9$\n\n-----Subtasks-----\nSubtask #1 (100 points): original constraints\n\
  \n-----Example Input-----\n3\n10\n25\n1\n\n-----Example Output-----\n0\n1\n-1"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def min_turns_to_divisible_by_10 (n : Int) : Int :=\n  sorry\n"
"vc-theorems": "theorem divisible_by_10_returns_0 (x : Int) :\n  x ≥ 0 → x % 10 =\
  \ 0 → min_turns_to_divisible_by_10 x = 0 :=\n  sorry\n\n\ntheorem divisible_by_5_returns_1\
  \ (x : Int) :\n  x ≥ 0 → x % 5 = 0 → x % 10 ≠ 0 → min_turns_to_divisible_by_10 x\
  \ = 1 :=\n  sorry \n\n\ntheorem not_divisible_by_5_returns_neg_1 (x : Int) :\n \
  \ x ≥ 0 → x % 5 ≠ 0 → min_turns_to_divisible_by_10 x = -1 :=\n  sorry\n\n/--\ninfo:\
  \ 0\n-/\n#guard_msgs in\n#eval min_turns_to_divisible_by_10 10\n\n/--\ninfo: 1\n\
  -/\n#guard_msgs in\n#eval min_turns_to_divisible_by_10 25\n\n/--\ninfo: -1\n-/\n\
  #guard_msgs in\n#eval min_turns_to_divisible_by_10 1\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
