"vc-description": "Complete the function so that it takes an array of keys and a default\
  \ value and returns a hash (Ruby) / dictionary (Python) with all keys set to the\
  \ default value. \n\n## Example\n\n```python\n[\"draft\", \"completed\"], 0   #\
  \ should return {\"draft\": 0, \"completed: 0}\n```"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def populate_dict {α β : Type} (keys : List α) (default : β) :\
  \ List (α × β) := sorry\n\ntheorem populate_dict_size {α β : Type} (keys : List\
  \ α) (default : β) :\n  (populate_dict keys default).length = keys.length := sorry\n"
"vc-theorems": "theorem populate_dict_contains_all_keys {α β : Type} (keys : List\
  \ α) (default : β) :\n  ∀ k ∈ keys, k ∈ (populate_dict keys default).map Prod.fst\
  \ := sorry\n\n\ntheorem populate_dict_all_values_default {α β : Type} (keys : List\
  \ α) (default : β) :\n  ∀ v ∈ (populate_dict keys default).map Prod.snd, v = default\
  \ := sorry"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded"
