"vc-description": "Istiak is learning about arithmetic progressions. Today, he wrote\
  \ an arithmetic sequence on a piece of paper. Istiak was very happy that he managed\
  \ to write an arithmetic sequence and went out for lunch.\nIstiak's friend Rafsan\
  \ likes to irritate him by playing silly pranks on him. This time, he could have\
  \ chosen one element of Istiak's sequence and changed it. When Istiak came back,\
  \ he was devastated to see his sequence ruined — it became a sequence $a_1, a_2,\
  \ \\ldots, a_N$ (possibly identical to the original sequence, if Rafsan did not\
  \ change anything, in which case Istiak is just overreacting). Help him recover\
  \ the original sequence.\nFormally, you have to find an arithmetic sequence $b_1,\
  \ b_2, \\ldots, b_N$ which differs from $a$ in at most one position. $b$ is said\
  \ to be an arithmetic sequence if there is a real number $d$ such that $b_i - b_{i-1}\
  \ = d$ for each $i$ ($2 \\le i \\le N$). If there are multiple valid solutions,\
  \ you may find any one.\n\n-----Input-----\n- The first line of the input contains\
  \ a single integer $T$ denoting the number of test cases. The description of $T$\
  \ test cases follows.\n- The first line of each test case contains a single integer\
  \ $N$.\n- The second line contains $N$ space-separated integers $a_1, a_2, \\ldots,\
  \ a_N$.\n\n-----Output-----\nFor each test case, print a single line containing\
  \ $N$ space-separated integers $b_1, b_2, \\ldots, b_N$. It is guaranteed that a\
  \ valid solution exists.\n\n-----Constraints-----\n- $4 \\le N \\le 10^5$\n- $|a_i|\
  \ \\le 10^9$ for each valid $i$\n- the sum of $N$ over all test cases does not exceed\
  \ $5 \\cdot 10^5$\n\n-----Example Input-----\n3\n4\n1 3 10 7\n5\n-10 -5 0 5 10\n\
  4\n2 2 2 10\n\n-----Example Output-----\n1 3 5 7\n-10 -5 0 5 10\n2 2 2 2\n\n-----Explanation-----\n\
  Example case 1: Rafsan changed the third element from $5$ to $10$.\nExample case\
  \ 2: No elements were changed.\nExample case 3: Rafsan changed the fourth element\
  \ from $2$ to $10$."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def find_arithmetic_sequence (n : Nat) (init : List Int) : List\
  \ Int := sorry\n\ntheorem arithmetic_sequence_properties\n  (n : Nat) (start diff\
  \ : Int) (h1 : n ≥ 4) (h2 : n ≤ 100) \n  (h3 : start ≥ -100) (h4 : start ≤ 100)\
  \ \n  (h5 : diff ≥ -10) (h6 : diff ≤ 10) :\n  let base_seq := [start, start + diff,\
  \ start + 2*diff, start + 3*diff]\n  let result := find_arithmetic_sequence n base_seq\n\
  \  (result.length = n) ∧ \n  (∀ i j : Nat, i + 1 < result.length → j + 1 < result.length\
  \ → \n    result.get! (i+1) - result.get! i = result.get! (j+1) - result.get! j)\
  \ := sorry\n"
"vc-theorems": "theorem constant_sequence_property \n  (n : Nat) (const : Int) (h1\
  \ : n ≥ 4) (h2 : n ≤ 100) :\n  let init := [const, const, const, const]\n  let result\
  \ := find_arithmetic_sequence n init\n  (result.length = n) ∧\n  (∀ i : Nat, i <\
  \ result.length → result.get! i = const) := sorry\n\n\ntheorem basic_cases :\n \
  \ (find_arithmetic_sequence 4 [1, 3, 10, 7] = [1, 3, 5, 7]) ∧\n  (find_arithmetic_sequence\
  \ 5 [-10, -5, 0, 5, 10] = [-10, -5, 0, 5, 10]) ∧\n  (find_arithmetic_sequence 4\
  \ [2, 2, 2, 10] = [2, 2, 2, 2]) := sorry"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded"
