"vc-description": "# MOD 256 without the MOD operator\n\nThe MOD-operator % (aka mod/modulus/remainder):\n\
  ```\nReturns the remainder of a division operation.\nThe sign of the result is the\
  \ same as the sign of the first operand.\n(Different behavior in Python!)\n```\n\
  \nThe short unbelievable mad story for this kata:\nI wrote a program and needed\
  \ the remainder of the division by 256. And then it happened: The \"5\"/\"%\"-Key\
  \ did not react. It must be broken! So I needed a way to:\n```\nCalculate the remainder\
  \ of the division by 256 without the %-operator.\n```\n\nAlso here some examples:\n\
  ```\nInput 254  -> Result 254\nInput 256  -> Result 0\nInput 258  -> Result 2 \n\
  Input -258 -> Result -2 (in Python: Result: 254!)\n```\nIt is always expected the\
  \ behavior of the MOD-Operator of the language!\n\nThe input number will always\
  \ between -10000 and 10000.\n\nFor some languages the %-operator will be blocked.\
  \ If it is not blocked and you know how to block it, tell me and I will include\
  \ it.\n\nFor all, who say, this would be a duplicate: No, this is no duplicate!\
  \ There are two katas, in that you have to write a general method for MOD without\
  \ %. But this kata is only for MOD 256. And so you can create also other specialized\
  \ solutions. ;-)\n\nOf course you can use the digit \"5\" in your solution. :-)\n\
  \nI'm very curious for your solutions and the way you solve it. I found several\
  \ interesting \"funny\" ways.\n\nHave fun coding it and please don't forget to vote\
  \ and rank this kata! :-) \n\nI have also created other katas. Take a look if you\
  \ enjoyed this kata!"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def mod256_without_mod (x : Int) : Int := sorry\n\ntheorem mod256_matches_regular_mod\
  \ (x : Int) :\n  mod256_without_mod x = x % 256 := sorry\n"
"vc-theorems": "theorem output_range (x : Int) :\n  0 ≤ mod256_without_mod x ∧ mod256_without_mod\
  \ x ≤ 255 := sorry\n\n\ntheorem periodic_property (x n : Int) : \n  mod256_without_mod\
  \ x = mod256_without_mod (x + n * 256) := sorry\n\n/--\ninfo: 254\n-/\n#guard_msgs\
  \ in\n#eval mod256_without_mod 254\n\n/--\ninfo: 0\n-/\n#guard_msgs in\n#eval mod256_without_mod\
  \ 256\n\n/--\ninfo: 254\n-/\n#guard_msgs in\n#eval mod256_without_mod -258\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
