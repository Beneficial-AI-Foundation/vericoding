"vc-description": "Your friend is typing his name into a keyboard.  Sometimes, when\
  \ typing a character c, the key might get long pressed, and the character will be\
  \ typed 1 or more times.\nYou examine the typed characters of the keyboard.  Return\
  \ True if it is possible that it was your friends name, with some characters (possibly\
  \ none) being long pressed.\n \nExample 1:\nInput: name = \"alex\", typed = \"aaleex\"\
  \nOutput: true\nExplanation: 'a' and 'e' in 'alex' were long pressed.\n\nExample\
  \ 2:\nInput: name = \"saeed\", typed = \"ssaaedd\"\nOutput: false\nExplanation:\
  \ 'e' must have been pressed twice, but it wasn't in the typed output.\n\nExample\
  \ 3:\nInput: name = \"leelee\", typed = \"lleeelee\"\nOutput: true\n\nExample 4:\n\
  Input: name = \"laiden\", typed = \"laiden\"\nOutput: true\nExplanation: It's not\
  \ necessary to long press any character.\n\n \nConstraints:\n\n1 <= name.length\
  \ <= 1000\n1 <= typed.length <= 1000\nThe characters of name and typed are lowercase\
  \ letters."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def is_long_pressed_name (name typed : String) : Bool :=\n  sorry\n"
"vc-theorems": "theorem always_accepts_repeated_chars \n  (name typed : String) \n\
  \  (h : ∀ (i : Nat), i < name.length → typed.length ≥ name.length) :\n  is_long_pressed_name\
  \ name typed = true :=\nsorry\n\n\ntheorem length_property\n  (name typed : String)\n\
  \  (h : is_long_pressed_name name typed = true) :\n  typed.length ≥ name.length\
  \ :=\nsorry\n\n\ntheorem identical_strings_property\n  (s : String) :\n  is_long_pressed_name\
  \ s s = true :=\nsorry\n\n\ntheorem empty_typed_property\n  (name typed : String)\n\
  \  (h1 : typed.length = 0)\n  (h2 : name.length > 0) :\n  is_long_pressed_name name\
  \ typed = false :=\nsorry\n\n\ntheorem deletion_property\n  (s : String)\n  (h :\
  \ s.length > 0)\n  (i : Nat)\n  (hi : i < s.length) :\n  let deleted := s.data.take\
  \ i ++ s.data.drop (i+1)\n  is_long_pressed_name s (String.mk deleted) = false :=\n\
  sorry\n\n/--\ninfo: True\n-/\n#guard_msgs in\n#eval is_long_pressed_name \"alex\"\
  \ \"aaleex\"\n\n/--\ninfo: False\n-/\n#guard_msgs in\n#eval is_long_pressed_name\
  \ \"saeed\" \"ssaaedd\"\n\n/--\ninfo: True\n-/\n#guard_msgs in\n#eval is_long_pressed_name\
  \ \"leelee\" \"lleeelee\"\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
