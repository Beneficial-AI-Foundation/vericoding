"vc-description": "You're looking through different hex codes, and having trouble\
  \ telling the difference between  #000001  and  #100000 \n\nWe need a way to tell\
  \ which is red, and which is blue!\n\nThat's where you create ```hex_color()```!\n\
  \nIt should read an RGB input, and return whichever value (red, blue, or green)\
  \ is of greatest concentration!\n\nBut, if multiple colors are of equal concentration,\
  \ you should return their mix!\n\n```python\nred + blue = magenta\n\ngreen + red\
  \ = yellow\n\nblue + green = cyan\n\nred + blue + green = white\n```\n\nOne last\
  \ thing, if the string given is empty, or has all 0's, return black!\n\nExamples:\n\
  ```python\nhex_color('087 255 054') == 'green'\nhex_color('181 181 170') == 'yellow'\n\
  hex_color('000 000 000') == 'black'\nhex_color('001 001 001') == 'white'\n```"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def hex_color (input : String) : String := sorry\n\ntheorem valid_color_output\
  \ (input : String) :\n  hex_color input ∈ [\"black\", \"red\", \"green\", \"blue\"\
  , \"magenta\", \"yellow\", \"cyan\", \"white\"] := sorry\n"
"vc-theorems": "theorem zero_values_black (r g b : Nat) :\n  r = 0 → g = 0 → b = 0\
  \ → hex_color s!\"${r} ${g} ${b}\" = \"black\" := sorry \n\n\ntheorem equal_nonzero_white\
  \ (n : Nat) :\n  n > 0 → hex_color s!\"${n} ${n} ${n}\" = \"white\" := sorry\n\n\
  \ntheorem single_nonzero_primary (r g b : Nat) :\n  (r > 0 ∧ g = 0 ∧ b = 0) → hex_color\
  \ s!\"${r} ${g} ${b}\" = \"red\"\n  ∧ (r = 0 ∧ g > 0 ∧ b = 0) → hex_color s!\"${r}\
  \ ${g} ${b}\" = \"green\"\n  ∧ (r = 0 ∧ g = 0 ∧ b > 0) → hex_color s!\"${r} ${g}\
  \ ${b}\" = \"blue\" := sorry\n\n\ntheorem two_equal_maxes_secondary (r g b : Nat)\
  \ :\n  (r > 0 ∧ g > 0 ∧ b = 0 ∧ r = g) → hex_color s!\"${r} ${g} ${b}\" = \"yellow\"\
  \n  ∧ (r > 0 ∧ g = 0 ∧ b > 0 ∧ r = b) → hex_color s!\"${r} ${g} ${b}\" = \"magenta\"\
  \n  ∧ (r = 0 ∧ g > 0 ∧ b > 0 ∧ g = b) → hex_color s!\"${r} ${g} ${b}\" = \"cyan\"\
  \ := sorry\n\n/--\ninfo: 'black'\n-/\n#guard_msgs in\n#eval hex_color \"\"\n\n/--\n\
  info: 'red'\n-/\n#guard_msgs in\n#eval hex_color \"255 000 000\"\n\n/--\ninfo: 'yellow'\n\
  -/\n#guard_msgs in\n#eval hex_color \"100 100 050\"\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
