"vc-description": "Cherry has a binary matrix $A$ consisting of $N$ rows and $M$ columns.\
  \ The rows are numbered from $1$ to $N$, columns are numbered from $1$ to $M$. Element\
  \ at row $i$ ($1$ ≤ $i$ ≤ $N$) and column $j$ ($1$ ≤ $j$ ≤ $M$) is denoted as $A_{ij}$.\
  \ All elements of $A$ are either $0$ or $1$.\nHe performs $Q$ queries on matrix.\
  \ Each query is provided by four integers $x_{1}$, $y_{1}$, $x_{2}$, $y_{2}$ which\
  \ define the rectangle, where ($x_{1}$, $y_{1}$) stands for the coordinates of the\
  \ top left cell of the rectangle, while ($x_{2}$, $y_{2}$) stands for the coordinates\
  \ of the bottom right cell. You need to flip all the bits i.e. ($0$ to $1$, $1$\
  \ to $0$) that are located fully inside the query rectangle.\nFinally, print the\
  \ matrix after performing all the queries.\nNote: $x_{1}$ represents the row number\
  \ while $y_{1}$ represents the column number.\n\n-----Input:-----\n- The first line\
  \ of the input contains two integers $N$ and $M$ — the number of rows and the number\
  \ of columns in the matrix.\n- Each of the next $N$ lines contains a string of length\
  \ $M$, where the $j^{th}$ character of $i^{th}$ line denotes the value of $A_{i,j}$.\
  \ \n- Next line contains an integer $Q$ — the number of queries.\n- Then follow\
  \ $Q$ lines with queries descriptions. Each of them contains four space-seperated\
  \ integers $x_{1}$, $y_{1}$, $x_{2}$, $y_{2}$ — coordinates of the up left and bottom\
  \ right cells of the query rectangle.\n\n-----Output:-----\nPrint the matrix, in\
  \ the form of $N$ strings, after performing all the queries.\n\n-----Constraints-----\n\
  - $1 \\leq N,M \\leq 1000$\n- $0 \\leq  A_{ij}  \\leq 1$\n- $1 \\leq Q \\leq 10^6$\n\
  - $1 \\leq x_{1} \\leq x_{2} \\leq N$\n- $1 \\leq y_{1} \\leq y_{2} \\leq M$\n\n\
  -----Sample Input:-----\n2 2\n00\n00\n3\n1 1 1 1\n2 2 2 2\n1 1 2 2 \n\n-----Sample\
  \ Output:-----\n01\n10\n\n-----Explanation:-----\nExample case 1:\nAfter processing\
  \ the 1st query 1 1 1 1, matrix becomes:\n[1000][1000]\\begin{bmatrix} 10 \\\\ 00\
  \  \\end{bmatrix}\nAfter processing the 2nd query 2 2 2 2, the matrix becomes:\n\
  [1001][1001]\\begin{bmatrix} 10 \\\\ 01  \\end{bmatrix}\nAfter processing the 3rd\
  \ query 1 1 2 2, matrix becomes:\n[0110][0110]\\begin{bmatrix} 01 \\\\ 10  \\end{bmatrix}\n\
  We need to output the matrix after processing all queries."
"vc-preamble": "import Imports.AllImports\n\ndef String.replicate (n : Nat) (c : Char)\
  \ : String :=\n  sorry\n\n/- Helper for String operations -/\n\ndef List.modifyNth\
  \ {α : Type} (idx : Nat) (f : α → α) (xs : List α) : List α :=\n  sorry\n\n\ndef\
  \ process_matrix_queries (n m : Nat) (matrix : List String) (queries : List (List\
  \ Nat)) : List String :=\n  sorry\n\n\ndef make_zero_matrix (n m : Nat) : List String\
  \ :=\n  List.replicate n (String.mk (List.replicate m '0'))\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def make_one_matrix (n m : Nat) : List String :=\n  List.replicate\
  \ n (String.mk (List.replicate m '1'))\n"
"vc-theorems": "theorem empty_queries_preserves_matrix (n m : Nat) (matrix : List\
  \ String)\n    (h1 : n > 0) (h2 : m > 0) (h3 : n ≤ 10) (h4 : m ≤ 10)\n    (h5 :\
  \ matrix = make_zero_matrix n m) :\n    process_matrix_queries n m matrix [] = matrix\
  \ := sorry\n\n\ntheorem single_element_query_sets_one (n m : Nat) (matrix : List\
  \ String)\n    (h1 : n > 0) (h2 : m > 0) (h3 : n ≤ 5) (h4 : m ≤ 5)\n    (h5 : matrix\
  \ = make_zero_matrix n m)\n    (i j : Nat) (h6 : i ≤ n) (h7 : j ≤ m) :\n    process_matrix_queries\
  \ n m matrix [[i, j, i, j]] = \n    List.modifyNth (i - 1) \n      (fun s => s.take\
  \ (j - 1) ++ \"1\" ++ s.drop j) \n      matrix := sorry\n\n\ntheorem full_matrix_query_sets_all_ones\
  \ (n m : Nat) (matrix : List String)\n    (h1 : n > 0) (h2 : m > 0) (h3 : n ≤ 5)\
  \ (h4 : m ≤ 5)\n    (h5 : matrix = make_zero_matrix n m) :\n    process_matrix_queries\
  \ n m matrix [[1, 1, n, m]] = \n    make_one_matrix n m := sorry"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded"
