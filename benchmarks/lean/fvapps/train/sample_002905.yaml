"vc-description": "A **bouncy number** is a positive integer whose digits neither\
  \ increase nor decrease. For example, `1235` is an increasing number, `5321` is\
  \ a decreasing number, and `2351` is a bouncy number. By definition, all numbers\
  \ under `100` are non-bouncy, and `101` is the first bouncy number. To complete\
  \ this kata, you must write a function that takes a number and determines if it\
  \ is bouncy.\n\nInput numbers will always be positive integers, but it never hurts\
  \ to throw in some error handling : )\n\nFor clarification, the bouncy numbers between\
  \ `100` and `125` are: `101, 102, 103, 104, 105, 106, 107, 108, 109, 120, and 121`."
"vc-preamble": "import Imports.AllImports\n\ndef is_bouncy (n : Nat) : Bool := sorry\n\
  \ndef digits_sorted (n : Nat) : Bool := sorry"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def digits_sorted_reverse (n : Nat) : Bool := sorry\n\ntheorem\
  \ small_numbers_not_bouncy (n : Nat) (h : n < 100) : \n  Â¬ is_bouncy n := sorry"
"vc-theorems": ""
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded_and_plausible"
