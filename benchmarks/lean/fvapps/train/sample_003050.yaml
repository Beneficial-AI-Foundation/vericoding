"vc-description": "# Problem\n\nIn China，there is an ancient mathematical book, called\
  \ \"The Mathematical Classic of Sun Zi\"(《孙子算经》). In the book, there is a classic\
  \ math problem: “今有物不知其数，三三数之剩二，五五数之剩三，七七数之剩二，问物几何？” \n\nAhh, Sorry. I forgot that\
  \ you don't know Chinese. Let's translate it to English:\n\nThere is a unkown positive\
  \ integer `n`. We know: \n\n`n % 3 = 2`, and `n % 5 = 3`, and `n % 7 = 2`. \n\n\
  What's the minimum possible positive integer `n`?\n\nThe correct answer is `23`.\n\
  \n# Task\n\nYou are given three non-negative integers `x,y,z`. They represent the\
  \ remainders of the unknown positive integer `n` divided by 3,5,7.\n\nThat is: `n\
  \ % 3 = x, n % 5 = y, n % 7 = z`\n\nYour task is to find the minimum possible positive\
  \ integer `n` and return it.\n\n# Example\n\nFor `x = 2, y = 3, z = 2`, the output\
  \ should be `23`\n\n`23 % 3 = 2, 23 % 5 = 3, 23 % 7 = 2`\n\nFor `x = 1, y = 2, z\
  \ = 3`, the output should be `52`\n\n`52 % 3 = 1, 52 % 5 = 2, 52 % 7 = 3`\n\nFor\
  \ `x = 1, y = 3, z = 5`, the output should be `103`\n\n`103 % 3 = 1, 103 % 5 = 3,\
  \ 103 % 7 = 5`\n\nFor `x = 0, y = 0, z = 0`, the output should be `105`\n\nFor `x\
  \ = 1, y = 1, z = 1`, the output should be `1`\n\n# Note\n\n- `0 <= x < 3, 0 <=\
  \ y < 5, 0 <= z < 7`\n\n- Happy Coding `^_^`"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def find_unknown_number (x y z : Nat) : Nat :=\n  sorry\n"
"vc-theorems": "theorem find_unknown_number_range (x y z : Nat) (h1 : x ≤ 1000) (h2\
  \ : y ≤ 1000) (h3 : z ≤ 1000) :\n  1 ≤ find_unknown_number x y z ∧ find_unknown_number\
  \ x y z ≤ 105 := by\n  sorry\n\n\ntheorem find_unknown_number_modulo (x y z : Nat)\
  \ (h1 : x ≤ 1000) (h2 : y ≤ 1000) (h3 : z ≤ 1000) :\n  (find_unknown_number x y\
  \ z) % 3 = (70*x + 21*y + 15*z) % 3 ∧\n  (find_unknown_number x y z) % 5 = (70*x\
  \ + 21*y + 15*z) % 5 ∧\n  (find_unknown_number x y z) % 7 = (70*x + 21*y + 15*z)\
  \ % 7 := by\n  sorry\n\n\ntheorem find_unknown_number_zeros :\n  find_unknown_number\
  \ 0 0 0 = 105 := by\n  sorry\n\n/--\ninfo: 23\n-/\n#guard_msgs in\n#eval find_unknown_number\
  \ 2 3 2\n\n/--\ninfo: 52\n-/\n#guard_msgs in\n#eval find_unknown_number 1 2 3\n\n\
  /--\ninfo: 105\n-/\n#guard_msgs in\n#eval find_unknown_number 0 0 0\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded"
