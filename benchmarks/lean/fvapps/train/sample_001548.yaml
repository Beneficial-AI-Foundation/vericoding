"vc-description": "Tavak and Seyyed are good friends. Seyyed is very funny and he\
  \ told Tavak to solve the following problem instead of longest-path.\n\nYou are\
  \ given l and r. For all integers from l to r, inclusive, we wrote down all of their\
  \ integer divisors except 1. Find the integer that we wrote down the maximum number\
  \ of times.\n\nSolve the problem to show that it's not a NP problem.\n\n\n-----Input-----\n\
  \nThe first line contains two integers l and r (2 ≤ l ≤ r ≤ 10^9).\n\n\n-----Output-----\n\
  \nPrint single integer, the integer that appears maximum number of times in the\
  \ divisors. \n\nIf there are multiple answers, print any of them.\n\n\n-----Examples-----\n\
  Input\n19 29\n\nOutput\n2\n\nInput\n3 6\n\nOutput\n3\n\n\n\n-----Note-----\n\nDefinition\
  \ of a divisor: https://www.mathsisfun.com/definitions/divisor-of-an-integer-.html\n\
  \nThe first example: from 19 to 29 these numbers are divisible by 2: {20, 22, 24,\
  \ 26, 28}.\n\nThe second example: from 3 to 6 these numbers are divisible by 3:\
  \ {3, 6}."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def find_most_common_divisor (l r : Nat) : Nat := sorry\n\ntheorem\
  \ single_number_returns_itself (x : Nat)\n  (h : x > 0) : find_most_common_divisor\
  \ x x = x := sorry \n\n\n"
"vc-theorems": "theorem range_output_is_positive (l r : Nat)\n  (h₁ : l > 0) (h₂ :\
  \ r > 0) : find_most_common_divisor l r > 0 := sorry\n\n\ntheorem range_output_less_than_max_input\
  \ (l r : Nat)  \n  (h₁ : l > 0) (h₂ : r > 0) : find_most_common_divisor l r ≤ max\
  \ l r := sorry\n\n/--\ninfo: 2\n-/\n#guard_msgs in\n#eval find_most_common_divisor\
  \ 19 29\n\n/--\ninfo: 2\n-/\n#guard_msgs in\n#eval find_most_common_divisor 3 6\n\
  \n/--\ninfo: 5\n-/\n#guard_msgs in\n#eval find_most_common_divisor 5 5\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
