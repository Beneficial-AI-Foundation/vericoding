"vc-description": "Write an efficient algorithm that searches for a value in an m\
  \ x n matrix. This matrix has the following properties:\n\n\n       Integers in\
  \ each row are sorted in ascending from left to right.\n       Integers in each\
  \ column are sorted in ascending from top to bottom.\n\n\nExample:\n\nConsider the\
  \ following matrix:\n\n\n[\n  [1,   4,  7, 11, 15],\n  [2,   5,  8, 12, 19],\n \
  \ [3,   6,  9, 16, 22],\n  [10, 13, 14, 17, 24],\n  [18, 21, 23, 26, 30]\n]\n\n\n\
  Given target = 5, return true.\n\nGiven target = 20, return false."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def search_matrix (matrix : List (List Int)) (target : Int) : Bool\
  \ :=\n  sorry\n"
"vc-theorems": "theorem empty_matrix_search : ∀ (target : Int),\n  search_matrix []\
  \ target = false := by sorry\n\n\ntheorem empty_row_matrix_search : ∀ (target :\
  \ Int),\n  search_matrix [[]] target = false := by sorry\n\n\ntheorem matrix_contains_base_element\
  \ : ∀ (m n base : Int),\n  m > 0 → n > 0 →\n  let matrix := List.map (fun i => \n\
  \    List.map (fun j => base + i + (j : Int)) \n      (List.map Int.ofNat (List.range\
  \ (Int.toNat n))))\n    (List.map Int.ofNat (List.range (Int.toNat m)))\n  search_matrix\
  \ matrix base = true := by sorry\n\n\ntheorem matrix_lacks_below_base : ∀ (m n base\
  \ : Int),\n  m > 0 → n > 0 →\n  let matrix := List.map (fun i => \n    List.map\
  \ (fun j => base + i + (j : Int))\n      (List.map Int.ofNat (List.range (Int.toNat\
  \ n))))\n    (List.map Int.ofNat (List.range (Int.toNat m)))\n  search_matrix matrix\
  \ (base - 1) = false := by sorry\n\n\ntheorem single_element_present :\n  search_matrix\
  \ [[1]] 1 = true := by sorry\n\n\ntheorem single_element_absent :\n  search_matrix\
  \ [[1]] 0 = false := by sorry\n\n\ntheorem single_row_search :\n  search_matrix\
  \ [[1,2,3]] 2 = true := by sorry\n\n\ntheorem single_column_search :\n  search_matrix\
  \ [[1],[2],[3]] 2 = true := by sorry\n\n/--\ninfo: True\n-/\n#guard_msgs in\n#eval\
  \ search_matrix [[1, 4, 7, 11, 15], [2, 5, 8, 12, 19], [3, 6, 9, 16, 22], [10, 13,\
  \ 14, 17, 24], [18, 21, 23, 26, 30]] 5\n\n/--\ninfo: False\n-/\n#guard_msgs in\n\
  #eval search_matrix matrix1 20\n\n/--\ninfo: True\n-/\n#guard_msgs in\n#eval search_matrix\
  \ matrix1 15\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
