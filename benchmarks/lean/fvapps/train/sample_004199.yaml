vc-description: |-
  Write a function 

  ```python
  vowel_2_index```

  that takes in a string and replaces all the vowels [a,e,i,o,u] with their respective positions within that string. 
  E.g: 

  ```python
  vowel_2_index('this is my string') == 'th3s 6s my str15ng'
  vowel_2_index('Codewars is the best site in the world') == 'C2d4w6rs 10s th15 b18st s23t25 27n th32 w35rld'
  vowel_2_index('') == ''
  ```
   Your function should be case insensitive to the vowels.
vc-preamble: |-
  import Imports.AllImports
vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>
vc-definitions: |
  def vowel_2_index (s : String) : String := sorry

  def isVowel (c : Char) : Bool :=
    c = 'a' ∨ c = 'e' ∨ c = 'i' ∨ c = 'o' ∨ c = 'u' ∨ 
    c = 'A' ∨ c = 'E' ∨ c = 'I' ∨ c = 'O' ∨ c = 'U'
vc-theorems: |
  theorem vowels_replaced_with_position {s : String} :
    ∀ (i : Nat) (h : i < s.length), 
    isVowel (s.data[i]'h) →
    ∃ (h' : 0 < (toString (i + 1)).length),
    String.contains (vowel_2_index s) ((toString (i + 1)).data[0]'h') := sorry


  theorem empty_string :
    vowel_2_index "" = "" := sorry


  theorem consonants_only_unchanged {s : String} :
    (∀ c ∈ s.data, ¬isVowel c) →
    vowel_2_index s = s := sorry


  theorem punctuation_unchanged {s : String} :
    (∀ c ∈ s.data, c = ' ' ∨ c = '.' ∨ c = ',' ∨ c = '!' ∨ c = '?') →
    vowel_2_index s = s := sorry

  /--
  info: expected1
  -/
  #guard_msgs in
  #eval vowel_2_index "this is my string"

  /--
  info: expected2
  -/
  #guard_msgs in
  #eval vowel_2_index "Codewars is the best site in the world"

  /--
  info: expected3
  -/
  #guard_msgs in
  #eval vowel_2_index ""
vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded
