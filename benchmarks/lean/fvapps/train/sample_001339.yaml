"vc-description": "Our Chef who was a renouned mathematician has recently got into\
  \ diamonds' business. \nShe has accidentally misplaced $Q$ diamonds into a jar which\
  \ already had $N$ chocolates. She then started wondering about an interesting question\
  \ as following. \nIf we pick items one by one at random without replacement, what\
  \ would be the expected number of picks required to get all diamonds out. \n\n-----Input:-----\n\
  - First line will contain $T$, number of testcases. Then the testcases follow. \n\
  - Each testcase contains of a single line of input, two integers $N$, $Q$. \n\n\
  -----Output:-----\nFor each testcase, output the answer in a single line. Your answer\
  \ is considered if its absolute or relative error doesn't exceed $10^{-6}$\n\n-----Constraints-----\n\
  - $1 \\leq T \\leq 10^5$\n- $1 \\leq N \\leq 10^5$\n- $1 \\leq Q \\leq 10^5$\n\n\
  -----Sample Input:-----\n1\n2 2\n\n-----Sample Output:-----\n3.3333333333\n\n-----EXPLANATION:-----\n\
  Here there are 2 Diamonds, 2 chocolates in the jar. \nSay C is chocolate, D is diamond.\n\
  If the random order of picking them from left to right is \"CDDC\", after 3 picks\
  \ (CDD) all diamonds are out.\nSimilarly, for the remaining orders it would be the\
  \ following:\n\"CDCD\" => 4\n\"CCDD\" => 4\n\"DDCC\" => 2\n\"DCDC\" => 3\n\"DCCD\"\
  \ => 4\nHence the expected number of picks would be (3+4+4+2+3+4)/6 = 3.333333"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def calculate_expected_picks (n q : Nat) : Float := sorry\n\ntheorem\
  \ expected_picks_positive (n q : Nat)  \n  (h1 : n > 0) (h2 : q > 0) (h3 : n ≤ 1000)\
  \ (h4 : q ≤ 1000) :\n  calculate_expected_picks n q > 0 ∧ calculate_expected_picks\
  \ n q ≥ Float.ofNat q := sorry\n"
"vc-theorems": "theorem expected_picks_upper_bound (n q : Nat) \n  (h1 : n > 0) (h2\
  \ : q > 0) (h3 : n ≤ 1000) (h4 : q ≤ 1000) :\n  calculate_expected_picks n q ≤ Float.ofNat\
  \ (n + q) := sorry\n\n\ntheorem expected_picks_simple_cases :\n  (calculate_expected_picks\
  \ 1 1 - 1.5).abs < 0.000001 ∧ \n  (calculate_expected_picks 2 2 - 3.3333333333).abs\
  \ < 0.000001 := sorry"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
