"vc-description": "Imagine there's a big cube consisting of n^3 small cubes. Calculate,\
  \ how many small cubes are not visible from outside.\n\nFor example, if we have\
  \ a cube which has 4 cubes in a row, then the function should return 8, because\
  \ there are 8 cubes inside our cube (2 cubes in each dimension)"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def not_visible_cubes (n : Int) : Int := sorry\n\ntheorem not_visible_cubes_nonnegative\
  \ (n : Int) (h : n ≥ 0) :\n  not_visible_cubes n ≥ 0 := sorry\n"
"vc-theorems": "theorem not_visible_cubes_small_cases (n : Int) (h : n ≤ 2) :\n  not_visible_cubes\
  \ (max 0 n) = 0 := sorry\n\n\ntheorem not_visible_cubes_large_cases (n : Int) (h\
  \ : n ≥ 3) :\n  not_visible_cubes n = (n - 2) ^ 3 := sorry\n\n/--\ninfo: 0\n-/\n\
  #guard_msgs in\n#eval not_visible_cubes 0\n\n/--\ninfo: 8\n-/\n#guard_msgs in\n\
  #eval not_visible_cubes 4\n\n/--\ninfo: 27\n-/\n#guard_msgs in\n#eval not_visible_cubes\
  \ 5\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded"
