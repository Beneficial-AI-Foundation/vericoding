"vc-description": "In the evenings Donkey would join Shrek to look at the stars. They\
  \ would sit on a log, sipping tea and they would watch the starry sky. The sky hung\
  \ above the roof, right behind the chimney. Shrek's stars were to the right of the\
  \ chimney and the Donkey's stars were to the left. Most days the Donkey would just\
  \ count the stars, so he knew that they are exactly n. This time he wanted a challenge.\
  \ He imagined a coordinate system: he put the origin of the coordinates at the intersection\
  \ of the roof and the chimney, directed the OX axis to the left along the roof and\
  \ the OY axis — up along the chimney (see figure). The Donkey imagined two rays\
  \ emanating from he origin of axes at angles α_1 and α_2 to the OX axis.\n\n [Image]\
  \ \n\nNow he chooses any star that lies strictly between these rays. After that\
  \ he imagines more rays that emanate from this star at the same angles α_1 and α_2\
  \ to the OX axis and chooses another star that lies strictly between the new rays.\
  \ He repeats the operation as long as there still are stars he can choose between\
  \ the rays that emanate from a star. \n\n [Image] \n\nAs a result, the Donkey gets\
  \ a chain of stars. He can consecutively get to each star if he acts by the given\
  \ rules.\n\nYour task is to find the maximum number of stars m that the Donkey's\
  \ chain can contain.\n\nNote that the chain must necessarily start in the point\
  \ of the origin of the axes, that isn't taken into consideration while counting\
  \ the number m of stars in the chain.\n\n\n-----Input-----\n\nThe first line contains\
  \ an integer n (1 ≤ n ≤ 10^5) — the number of stars. The second line contains simple\
  \ fractions representing relationships \"a/b c/d\", such that $\\frac{a}{b} = \\\
  frac{\\operatorname{sin} \\alpha_{1}}{\\operatorname{cos} \\alpha_{1}}$ and $\\\
  frac{c}{d} = \\frac{\\operatorname{sin} \\alpha_{2}}{\\operatorname{cos} \\alpha}$\
  \ (0 ≤ a, b, c, d ≤ 10^5; $0^{\\circ} \\leq \\alpha_{1} < \\alpha_{2} \\leq 90^{\\\
  circ}$; $\\frac{a}{b} \\neq \\frac{0}{0}$; $\\frac{c}{d} \\neq \\frac{0}{0}$). The\
  \ given numbers a, b, c, d are integers.\n\nNext n lines contain pairs of integers\
  \ x_{i}, y_{i} (1 ≤ x_{i}, y_{i} ≤ 10^5)— the stars' coordinates.\n\nIt is guaranteed\
  \ that all stars have distinct coordinates.\n\n\n-----Output-----\n\nIn a single\
  \ line print number m — the answer to the problem.\n\n\n-----Examples-----\nInput\n\
  15\n1/3 2/1\n3 1\n6 2\n4 2\n2 5\n4 5\n6 6\n3 4\n1 6\n2 1\n7 4\n9 3\n5 3\n1 3\n15\
  \ 5\n12 4\n\nOutput\n4\n\n\n\n-----Note-----\n\nIn the sample the longest chain\
  \ the Donkey can build consists of four stars. Note that the Donkey can't choose\
  \ the stars that lie on the rays he imagines.\n\n [Image]"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def find_max_stars (n : Nat) (a b c d : Int) (stars : List (Int\
  \ × Int)) : Nat := sorry\n\ntheorem output_bounds {n : Nat} {a b c d : Int} {stars\
  \ : List (Int × Int)}\n  (h1 : n > 0) \n  (h2 : ¬(a = 0 ∧ b = 0))\n  (h3 : ¬(c =\
  \ 0 ∧ d = 0))\n  (h4 : a * d ≠ b * c)\n  (h5 : stars ≠ []) :\n  let result := find_max_stars\
  \ n a b c d stars\n  result ≥ 0 ∧ result ≤ stars.length := by sorry\n"
"vc-theorems": "theorem identical_points {n : Nat} {a b c d : Int} {stars : List (Int\
  \ × Int)}\n  (h1 : n > 0)\n  (h2 : ¬(a = 0 ∧ b = 0))\n  (h3 : ¬(c = 0 ∧ d = 0))\
  \ \n  (h4 : a * d ≠ b * c)\n  (h5 : stars ≠ []) :\n  find_max_stars n a b c d stars\
  \ = find_max_stars n a b c d (stars ++ stars) := by sorry\n\n\ntheorem empty_stars\
  \ {n : Nat} {a b c d : Int}\n  (h1 : n > 0)\n  (h2 : ¬(a = 0 ∧ b = 0))\n  (h3 :\
  \ ¬(c = 0 ∧ d = 0))\n  (h4 : a * d ≠ b * c) :\n  find_max_stars n a b c d [] = 0\
  \ := by sorry\n\n/--\ninfo: 4\n-/\n#guard_msgs in\n#eval find_max_stars 15 1 3 2\
  \ 1 [(3, 1), (6, 2), (4, 2), (2, 5), (4, 5), (6, 6), (3, 4), (1, 6), (2, 1), (7,\
  \ 4), (9, 3), (5, 3), (1, 3), (15, 5), (12, 4)]\n\n/--\ninfo: 3\n-/\n#guard_msgs\
  \ in\n#eval find_max_stars 5 3 24 24 3 [(31394, 23366), (27990, 71363), (33642,\
  \ 36903), (79731, 10588), (10907, 5058)]\n\n/--\ninfo: 3\n-/\n#guard_msgs in\n#eval\
  \ find_max_stars 5 0 17 74 0 [(69711, 29703), (91677, 56040), (26051, 78244), (20816,\
  \ 40897), (70770, 35908)]\n"
"vc-postamble": "-- Apps difficulty: competition\n-- Assurance level: unguarded"
