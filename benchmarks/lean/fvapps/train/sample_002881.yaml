"vc-description": "Take an integer `n (n >= 0)` and a digit `d (0 <= d <= 9)` as an\
  \ integer. Square all numbers `k (0 <= k <= n)` between 0 and n. Count the numbers\
  \ of \ndigits `d` used in the writing of all the `k**2`. Call `nb_dig` (or nbDig\
  \ or ...) the function taking `n` and `d` as parameters and returning this count.\n\
  \n#Examples:\n```\nn = 10, d = 1, the k*k are 0, 1, 4, 9, 16, 25, 36, 49, 64, 81,\
  \ 100\nWe are using the digit 1 in 1, 16, 81, 100. The total count is then 4.\n\n\
  nb_dig(25, 1):\nthe numbers of interest are\n1, 4, 9, 10, 11, 12, 13, 14, 19, 21\
  \ which squared are 1, 16, 81, 100, 121, 144, 169, 196, 361, 441\nso there are 11\
  \ digits `1` for the squares of numbers between 0 and 25.\n```\nNote that `121`\
  \ has twice the digit `1`."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def nb_dig (n : Nat) (d : Nat) : Nat :=\n  sorry\n"
"vc-theorems": "theorem nb_dig_properties (n : Nat) (d : Nat) (h1 : n ≤ 10000) (h2\
  \ : d ≤ 9) :\n  nb_dig n d ≥ 0 ∧ \n  nb_dig n d ≤ (n + 1) * (String.length (toString\
  \ (n * n))) :=\n  sorry\n\n\ntheorem nb_dig_zero_digit (n : Nat) (h : n ≤ 1000)\
  \ :\n  let squares := (List.range (n + 1)).map (fun i => i * i)\n  let countZeroes\
  \ := fun num => (toString num).data.filter (fun c => c = '0') |>.length\n  let totalZeroes\
  \ := squares.foldl (fun acc x => acc + countZeroes x) 0\n  nb_dig n 0 = totalZeroes\
  \ :=\n  sorry\n\n\ntheorem nb_dig_manual_count (n : Nat) (d : Nat) (h1 : n ≤ 100)\
  \ (h2 : d ≤ 9) :\n  let squares := (List.range (n + 1)).map (fun i => i * i)\n \
  \ let countDigit := fun num => (toString num).data.filter (· = (toString d).get!\
  \ 0) |>.length\n  let totalCount := squares.foldl (fun acc x => acc + countDigit\
  \ x) 0\n  nb_dig n d = totalCount :=\n  sorry\n\n\ntheorem nb_dig_edge_cases :\n\
  \  nb_dig 0 1 = 0 ∧\n  nb_dig 0 0 = 1 :=\n  sorry\n\n/--\ninfo: 4\n-/\n#guard_msgs\
  \ in\n#eval nb_dig 10 1\n\n/--\ninfo: 11\n-/\n#guard_msgs in\n#eval nb_dig 25 1\n\
  \n/--\ninfo: 4700\n-/\n#guard_msgs in\n#eval nb_dig 5750 0\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded_and_plausible"
