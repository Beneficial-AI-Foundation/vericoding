"vc-description": "In input string ```word```(1 word):\n* replace the vowel with the\
  \ nearest left consonant.\n* replace the consonant with the nearest right vowel.\n\
  \nP.S. To complete this task imagine the alphabet is a circle (connect the first\
  \ and last element of the array in the mind). For example, 'a' replace with 'z',\
  \ 'y' with 'a', etc.(see below)\n\nFor example:\n```\n'codewars' => 'enedazuu'\n\
  'cat' => 'ezu'\n'abcdtuvwxyz' => 'zeeeutaaaaa'\n```\n\nIt is preloaded: \n\n```\n\
  const alphabet = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']\n\
  const consonants = ['b','c','d','f','g','h','j','k','l','m','n','p','q','r','s','t','v','w','x','y','z'];\n\
  const vowels = ['a','e','i','o','u'];\n```\n\nP.S. You work with lowercase letters\
  \ only."
"vc-preamble": "import Imports.AllImports\n\ndef transform_word (s : String) : String\
  \ := sorry\n\ndef isVowel (c : Char) : Bool :=\n  c == 'a' || c == 'e' || c == 'i'\
  \ || c == 'o' || c == 'u'\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def isLowerAscii (c : Char) : Bool := \n  97 ≤ c.toNat ∧ c.toNat\
  \ ≤ 122\n"
"vc-theorems": "theorem transform_word_preserves_length (s : String) :\n  s.length\
  \ = (transform_word s).length := sorry\n\n\ntheorem transform_word_chars_are_ascii_lower\
  \ (s : String) :\n  ∀ c ∈ (transform_word s).data, isLowerAscii c := sorry\n\n\n\
  theorem transform_word_vowel_consonant_mapping (s : String) :\n  ∀ i, i < s.length\
  \ → \n    let pos : String.Pos := ⟨i⟩\n    (isVowel (s.get pos) → ¬isVowel ((transform_word\
  \ s).get pos)) ∧\n    (¬isVowel (s.get pos) → isVowel ((transform_word s).get pos))\
  \ := sorry\n\n\ntheorem transform_word_deterministic (s : String) :\n  transform_word\
  \ s = transform_word s := sorry\n\n/--\ninfo: 'ezu'\n-/\n#guard_msgs in\n#eval transform_word\
  \ \"cat\"\n\n/--\ninfo: 'enedazuu'\n-/\n#guard_msgs in\n#eval transform_word \"\
  codewars\"\n\n/--\ninfo: 'zeeeutaaaaa'\n-/\n#guard_msgs in\n#eval transform_word\
  \ \"abcdtuvwxyz\"\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
