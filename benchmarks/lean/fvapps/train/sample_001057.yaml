"vc-description": "Rupsa really loves triangles. One day she came across an equilateral\
  \ triangle having length of each side as an integer N. She started wondering if\
  \ it was possible to transform the triangle keeping two sides fixed and alter the\
  \ third side such that it still remains a triangle, but the altered side will have\
  \ its length as an even integer, and the line drawn from the opposite vertex to\
  \ the mid-point of the altered side is of integral length.\nSince Rupsa is in a\
  \ hurry to record a song for Chef as he really loves her songs, you must help her\
  \ solve the problem as fast as possible.\n\n-----Input-----\nThe first line of input\
  \ contains an integer T denoting the number of test cases.\nEach test-case contains\
  \ a single integer N.\n\n-----Output-----\n\nFor each test case, output \"YES\"\
  \ if the triangle transformation is possible, otherwise \"NO\" (quotes for clarity\
  \ only, do not output).\n\n-----Constraints-----\n- 1 ≤ T ≤ 106\n- 1 ≤ N ≤ 5 x 106\n\
  \n-----Sub tasks-----\n- Subtask #1: 1 ≤ T ≤ 100, 1 ≤ N ≤ 104 (10 points)\n- Subtask\
  \ #2: 1 ≤ T ≤ 104, 1 ≤ N ≤ 106 (30 points)\n- Subtask #3: Original Constraints (60\
  \ points)\n\n-----Example-----\nInput:2\n5\n3\n\nOutput:YES\nNO\n\n-----Explanation-----\n\
  - In test case 1, make the length of any one side 6, and it will suffice."
"vc-preamble": "import Imports.AllImports\n\ndef can_transform_triangle (n : Nat)\
  \ : String := sorry\n\ndef satisfies_triangle_inequality (n : Nat) (even_side :\
  \ Nat) : Bool := \n  even_side < 2*n ∧ n + n > even_side\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def has_integer_height (n : Nat) (even_side : Nat) : Bool := sorry\n\
  \ntheorem output_format (n : Nat) (h : n > 0) : \n  can_transform_triangle n = \"\
  YES\" ∨ can_transform_triangle n = \"NO\" := sorry\n"
"vc-theorems": "theorem yes_case_valid (n : Nat) (h : n > 0) (h2 : can_transform_triangle\
  \ n = \"YES\") :\n  ∃ even_side : Nat, \n    even_side % 2 = 0 ∧ \n    even_side\
  \ ≥ 2 ∧ \n    even_side ≤ 2*n ∧\n    satisfies_triangle_inequality n even_side ∧\n\
  \    has_integer_height n even_side := sorry\n\n\ntheorem no_case_invalid (n : Nat)\
  \ (h : n > 0) (h2 : can_transform_triangle n = \"NO\") :\n  ∀ even_side : Nat,\n\
  \    even_side % 2 = 0 →\n    even_side ≥ 2 →\n    even_side ≤ 2*n →\n    ¬(satisfies_triangle_inequality\
  \ n even_side ∧ has_integer_height n even_side) := sorry\n\n/--\ninfo: 'YES'\n-/\n\
  #guard_msgs in\n#eval can_transform_triangle 5\n\n/--\ninfo: 'NO'\n-/\n#guard_msgs\
  \ in\n#eval can_transform_triangle 3\n\n/--\ninfo: 'YES'\n-/\n#guard_msgs in\n#eval\
  \ can_transform_triangle 10\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
