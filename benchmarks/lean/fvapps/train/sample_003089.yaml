"vc-description": "Bob is a theoretical coder - he doesn't write code, but comes up\
  \ with theories, formulas and algorithm ideas. You are his secretary, and he has\
  \ tasked you with writing the code for his newest project - a method for making\
  \ the short form of a word. Write a function ```shortForm```(C# ```ShortForm```,\
  \ Python ```short_form```) that takes a string and returns it converted into short\
  \ form using the rule: Remove all vowels, except for those that are the first or\
  \ last letter. Do not count 'y' as a vowel, and ignore case. Also note, the string\
  \ given will not have any spaces; only one word, and only Roman letters. \n\nExample:\n\
  ```\nshortForm(\"assault\");\nshort_form(\"assault\")\nShortForm(\"assault\");\n\
  // should return \"asslt\"\n```\n\n \nAlso, FYI: I got all the words with no vowels\
  \ from \nhttps://en.wikipedia.org/wiki/English_words_without_vowels"
"vc-preamble": "import Imports.AllImports\n\ndef short_form (s : String) : String\
  \ :=\n  sorry\n\n\ndef isConsonant (c : Char) : Bool :=\n  c ∈ ['b', 'c', 'd', 'f',\
  \ 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y',\
  \ 'z']\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def isVowel (c : Char) : Bool :=\n  c.toLower ∈ ['a', 'e', 'i',\
  \ 'o', 'u']\n"
"vc-theorems": "theorem short_form_length {s : String} :\n  String.length (short_form\
  \ s) ≤ String.length s := sorry\n\n\ntheorem short_form_first_last {s : String}\
  \ (h: String.length s > 0) :\n  (s.get! 0 = (short_form s).get! 0) ∧ \n  (String.length\
  \ s > 1 → s.get! (String.Pos.mk (s.length - 1)) = (short_form s).get! (String.Pos.mk\
  \ ((short_form s).length - 1))) := sorry\n\n\ntheorem short_form_consonants {s :\
  \ String} (h : ∀ c, c ∈ s.data → isConsonant c) :\n  short_form s = s := sorry\n\
  \n\ntheorem short_form_case_preservation {s : String} :\n  ∀ c, c ∈ (short_form\
  \ s).data → c ∈ s.data := sorry\n\n\ntheorem short_form_middle_vowels_removed {s\
  \ : String} :\n  ∀ i, 1 ≤ i → i < String.length (short_form s) - 1 → \n    ¬(isVowel\
  \ ((short_form s).get! (String.Pos.mk i))) := sorry\n\n/--\ninfo: 'asslt'\n-/\n\
  #guard_msgs in\n#eval short_form \"assault\"\n\n/--\ninfo: 'rhythm'\n-/\n#guard_msgs\
  \ in\n#eval short_form \"rhythm\"\n\n/--\ninfo: 'InSNe'\n-/\n#guard_msgs in\n#eval\
  \ short_form \"InSaNe\"\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
