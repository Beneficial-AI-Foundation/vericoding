"vc-description": "Unscramble the eggs.\n\nThe string given to your function has had\
  \ an \"egg\" inserted directly after each consonant.  You need to return the string\
  \ before it became eggcoded.\n\n## Example\n\nKata is supposed to be for beginners\
  \ to practice regular expressions, so commenting would be appreciated."
"vc-preamble": "import Imports.AllImports\n\ndef unscramble_eggs (s : String) : String\
  \ := sorry \n\ndef containsEgg (s : String) : Bool := sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def countSpaces (s : String) : Nat := sorry\n\ntheorem no_eggs_in_result\
  \ (s : String) : \n  containsEgg (unscramble_eggs s) = false := sorry\n"
"vc-theorems": "theorem preserves_space_count (s : String) :\n  countSpaces s = countSpaces\
  \ (unscramble_eggs s) := sorry\n\n/--\ninfo: 'code here'\n-/\n#guard_msgs in\n#eval\
  \ unscramble_eggs \"ceggodegge heggeregge\"\n\n/--\ninfo: 'FUN KATA'\n-/\n#guard_msgs\
  \ in\n#eval unscramble_eggs \"FeggUNegg KeggATeggA\"\n\n/--\ninfo: 'vegymite on\
  \ toast'\n-/\n#guard_msgs in\n#eval unscramble_eggs \"veggegeggyeggmeggitegge onegg\
  \ teggoaseggtegg\"\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
