"vc-description": "Given a circular array C of integers represented by A, find the\
  \ maximum possible sum of a non-empty subarray of C.\nHere, a circular array means\
  \ the end of the array connects to the beginning of the array.  (Formally, C[i]\
  \ = A[i] when 0 <= i < A.length, and C[i+A.length] = C[i] when i >= 0.)\nAlso, a\
  \ subarray may only include each element of the fixed buffer A at most once.  (Formally,\
  \ for a subarray C[i], C[i+1], ..., C[j], there does not exist i <= k1, k2 <= j\
  \ with k1 % A.length = k2 % A.length.)\n \n\nExample 1:\nInput: [1,-2,3,-2]\nOutput:\
  \ 3\nExplanation: Subarray [3] has maximum sum 3\n\n\nExample 2:\nInput: [5,-3,5]\n\
  Output: 10\nExplanation: Subarray [5,5] has maximum sum 5 + 5 = 10\n\n\nExample\
  \ 3:\nInput: [3,-1,2,-1]\nOutput: 4\nExplanation: Subarray [2,-1,3] has maximum\
  \ sum 2 + (-1) + 3 = 4\n\n\nExample 4:\nInput: [3,-2,2,-3]\nOutput: 3\nExplanation: Subarray\
  \ [3] and [3,-2,2] both have maximum sum 3\n\nExample 5:\nInput: [-2,-3,-1]\nOutput:\
  \ -1\nExplanation: Subarray [-1] has maximum sum -1\n\n \nNote: \n\n-30000 <= A[i]\
  \ <= 30000\n1 <= A.length <= 30000"
"vc-preamble": "import Imports.AllImports\n\ndef maxSubarraySumCircular (nums : List\
  \ Int) : Int := sorry\n\ndef isEmpty (nums : List Int) : Bool := sorry\n\n\ndef\
  \ maxElem (nums : List Int) : Int := sorry \n\ndef sumList (nums : List Int) : Int\
  \ := sorry\n\n\ndef isAllPositive (nums : List Int) : Bool := sorry\n\ndef isAllNegative\
  \ (nums : List Int) : Bool := sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def rotate (nums : List Int) (i : Nat) : List Int := sorry\n\n\n\
  \n\n\n\n\ntheorem single_element (nums : List Int) (h : nums.length = 1) (first\
  \ : Int) :\n  nums = [first] → maxSubarraySumCircular nums = first := sorry"
"vc-theorems": "/--\ninfo: 3\n-/\n#guard_msgs in\n#eval maxSubarraySumCircular [-2,\
  \ 3, -2, 1]\n\n/--\ninfo: 10\n-/\n#guard_msgs in\n#eval maxSubarraySumCircular [5,\
  \ -3, 5]\n\n/--\ninfo: -1\n-/\n#guard_msgs in\n#eval maxSubarraySumCircular [-2,\
  \ -3, -1]\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
