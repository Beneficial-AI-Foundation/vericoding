"vc-description": "# Task\n Imagine a standard chess board with only two white and\
  \ two black knights placed in their standard starting positions: the white knights\
  \ on b1 and g1; the black knights on b8 and g8.\n\n There are two players: one plays\
  \ for `white`, the other for `black`. During each move, the player picks one of\
  \ his knights and moves it to an unoccupied square according to standard chess rules.\
  \ Thus, a knight on d5 can move to any of the following squares: b6, c7, e7, f6,\
  \ f4, e3, c3, and b4, as long as it is not occupied by either a friendly or an enemy\
  \ knight.\n\n The players take turns in making moves, starting with the white player.\
  \ Given the configuration `positions` of the knights after an unspecified number\
  \ of moves, determine whose turn it is.\n\n# Example\n\n For `positions = \"b1;g1;b8;g8\"\
  `, the output should be `true`.\n\n The configuration corresponds to the initial\
  \ state of the game. Thus, it's white's turn.\n\n# Input/Output\n\n\n - `[input]`\
  \ string `positions`\n\n    The positions of the four knights, starting with white\
  \ knights, separated by a semicolon, in the chess notation.\n\n\n - `[output]` a\
  \ boolean value\n\n    `true` if white is to move, `false` otherwise."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def Position := String\n\ndef whose_turn (p : String) : Bool :=\
  \ sorry\n"
"vc-theorems": "theorem position_order_invariant (pos_list : List Position) (h : pos_list.length\
  \ = 4) :\n  ∀ i, i < pos_list.length →\n  let shuffled := (pos_list.drop i) ++ (pos_list.take\
  \ i)\n  whose_turn (String.intercalate \";\" pos_list) = \n  whose_turn (String.intercalate\
  \ \";\" shuffled) := by sorry\n\n\ntheorem sum_parity (pos_list : List Position)\
  \ (h : pos_list.length = 4) :\n  let pos_str := String.intercalate \";\" pos_list\n\
  \  let ascii_sum := (pos_str.replace \";\" \"\").data.foldl (fun acc c => acc +\
  \ c.toNat) 0\n  whose_turn pos_str = (ascii_sum % 2 = 0) := by sorry\n\n/--\ninfo:\
  \ True\n-/\n#guard_msgs in\n#eval whose_turn \"b1;g1;b8;g8\"\n\n/--\ninfo: False\n\
  -/\n#guard_msgs in\n#eval whose_turn \"c3;g1;b8;g8\"\n\n/--\ninfo: False\n-/\n#guard_msgs\
  \ in\n#eval whose_turn \"f8;h1;f3;c2\"\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
