"vc-description": "Given a list of words, list of  single letters (might be repeating) and\
  \ score of every character.\nReturn the maximum score of any valid set of words\
  \ formed by using the given letters (words[i] cannot be used two or more times).\n\
  It is not necessary to use all characters in letters and each letter can only be\
  \ used once. Score of letters 'a', 'b', 'c', ... ,'z' is given by score[0], score[1],\
  \ ... , score[25] respectively.\n \nExample 1:\nInput: words = [\"dog\",\"cat\"\
  ,\"dad\",\"good\"], letters = [\"a\",\"a\",\"c\",\"d\",\"d\",\"d\",\"g\",\"o\",\"\
  o\"], score = [1,0,9,5,0,0,3,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0]\nOutput: 23\n\
  Explanation:\nScore  a=1, c=9, d=5, g=3, o=2\nGiven letters, we can form the words\
  \ \"dad\" (5+1+5) and \"good\" (3+2+2+5) with a score of 23.\nWords \"dad\" and\
  \ \"dog\" only get a score of 21.\nExample 2:\nInput: words = [\"xxxz\",\"ax\",\"\
  bx\",\"cx\"], letters = [\"z\",\"a\",\"b\",\"c\",\"x\",\"x\",\"x\"], score = [4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,10]\n\
  Output: 27\nExplanation:\nScore  a=4, b=4, c=4, x=5, z=10\nGiven letters, we can\
  \ form the words \"ax\" (4+5), \"bx\" (4+5) and \"cx\" (4+5) with a score of 27.\n\
  Word \"xxxz\" only get a score of 25.\nExample 3:\nInput: words = [\"leetcode\"\
  ], letters = [\"l\",\"e\",\"t\",\"c\",\"o\",\"d\"], score = [0,0,1,1,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,0,0]\n\
  Output: 0\nExplanation:\nLetter \"e\" can only be used once.\n \nConstraints:\n\n\
  1 <= words.length <= 14\n1 <= words[i].length <= 15\n1 <= letters.length <= 100\n\
  letters[i].length == 1\nscore.length == 26\n0 <= score[i] <= 10\nwords[i], letters[i] contains\
  \ only lower case English letters."
"vc-preamble": "import Imports.AllImports\n\ndef Word := String \ndef Letter := Char\n\
  \ndef Score := Nat\n\ninstance : OfNat Score n where\n  ofNat := n\n\ninstance :\
  \ Add Score := ⟨Nat.add⟩\ninstance : Mul Score := ⟨Nat.mul⟩\ninstance : LE Score\
  \ := ⟨Nat.le⟩\ninstance : Inhabited Score := ⟨(0 : Score)⟩\n\ninstance : HMul Nat\
  \ Score Score where\n  hMul := fun n s => Nat.mul n s\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def max_score_words (words: List Word) (letters: List Letter) (scores:\
  \ List Score) : Score :=\n  sorry\n"
"vc-theorems": "theorem max_score_words_non_negative (words: List Word) (letters:\
  \ List Letter) (scores: List Score) :\n  0 ≤ max_score_words words letters scores\
  \ := sorry\n\n\ntheorem max_score_words_empty (letters: List Letter) (scores: List\
  \ Score) : \n  max_score_words [] letters scores = 0 := sorry\n\n\ntheorem max_score_words_no_letters\
  \ (words: List Word) (scores: List Score) :\n  max_score_words words [] scores =\
  \ 0 := sorry\n\n\ntheorem max_score_words_bounded (words: List Word) (letters: List\
  \ Letter) (scores: List Score)\n  (h: scores.length = 26) :\n  max_score_words words\
  \ letters scores ≤ letters.foldr (fun c acc => scores[Char.toNat c - Char.toNat\
  \ 'a']! + acc) 0 := sorry\n\n\ntheorem single_letter_words_bounded (words: List\
  \ Word) (letters: List Letter) (scores: List Score) \n  (h1: ∀ w ∈ words, w = \"\
  a\") \n  (h2: ∀ l ∈ letters, l = 'a')\n  (h3: scores.length = 26) :\n  max_score_words\
  \ words letters scores ≤ (min words.length letters.length) * (scores[0]!) := sorry\n\
  \n\ntheorem impossible_words_zero_score (words: List Word) (letters: List Letter)\
  \ (scores: List Score)\n  (h1: ∀ letter ∈ letters, letter = 'x')\n  (h2: ∃ w ∈ words,\
  \ ∃ c ∈ w.data, c ≠ 'x')\n  (h3: scores.length = 26) :\n  max_score_words words\
  \ letters scores = 0 := sorry\n\n/--\ninfo: 23\n-/\n#guard_msgs in\n#eval max_score_words\
  \ [\"dog\", \"cat\", \"dad\", \"good\"] [\"a\", \"a\", \"c\", \"d\", \"d\", \"d\"\
  , \"g\", \"o\", \"o\"] [1, 0, 9, 5, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0,\
  \ 0, 0, 0, 0, 0, 0, 0]\n\n/--\ninfo: 27\n-/\n#guard_msgs in\n#eval max_score_words\
  \ [\"xxxz\", \"ax\", \"bx\", \"cx\"] [\"z\", \"a\", \"b\", \"c\", \"x\", \"x\",\
  \ \"x\"] [4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5,\
  \ 0, 10]\n\n/--\ninfo: 0\n-/\n#guard_msgs in\n#eval max_score_words [\"leetcode\"\
  ] [\"l\", \"e\", \"t\", \"c\", \"o\", \"d\"] [0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1,\
  \ 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
