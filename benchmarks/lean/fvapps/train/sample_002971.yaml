"vc-description": "In this Kata, you will be given a number `n` (`n > 0`) and your\
  \ task will be to return the smallest square number `N` (`N > 0`) such that `n +\
  \ N` is also a perfect square. If there is no answer, return `-1` (`nil` in Clojure,\
  \ `Nothing` in Haskell, `None` in Rust). \n\n```clojure \nsolve 13 = 36\n; because\
  \ 36 is the smallest perfect square that can be added to 13 to form a perfect square\
  \ => 13 + 36 = 49\n\nsolve 3 = 1 ; 3 + 1 = 4, a perfect square\nsolve 12 = 4 ; 12\
  \ + 4 = 16, a perfect square\nsolve 9 = 16 \nsolve 4 = nil\n```\n\n```csharp \n\
  solve(13) = 36\n//because 36 is the smallest perfect square that can be added to\
  \ 13 to form a perfect square => 13 + 36 = 49\n\nsolve(3) = 1 // 3 + 1 = 4, a perfect\
  \ square\nsolve(12) = 4 // 12 + 4 = 16, a perfect square\nsolve(9) = 16 \nsolve(4)\
  \ = -1\n```\n\n```haskell \nsolve 13 = Just 36\n-- because 36 is the smallest perfect\
  \ square that can be added to 13 to form a perfect square => 13 + 36 = 49\n\nsolve\
  \ 3 = Just 1 -- 3 + 1 = 4, a perfect square\nsolve 12 = Just 4 -- 12 + 4 = 16, a\
  \ perfect square\nsolve 9 = Just 16 \nsolve 4 = Nothing\n```\n\n```python\nsolve(13)\
  \ = 36\n# because 36 is the smallest perfect square that can be added to 13 to form\
  \ a perfect square => 13 + 36 = 49\n\nsolve(3) = 1 # 3 + 1 = 4, a perfect square\n\
  solve(12) = 4 # 12 + 4 = 16, a perfect square\nsolve(9) = 16 \nsolve(4) = -1\n```\n\
  \nMore examples in test cases. \n\nGood luck!"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def solve (n : Nat) : Int := sorry\n\ndef isPerfectSquare (n :\
  \ Int) : Bool := sorry\n"
"vc-theorems": "theorem solve_output_nonnegative_or_minus_one (n : Nat) :\n  let result\
  \ := solve n\n  result â‰¥ -1 := sorry\n\n/--\ninfo: 1\n-/\n#guard_msgs in\n#eval\
  \ solve 3\n\n/--\ninfo: 36\n-/\n#guard_msgs in\n#eval solve 13\n\n/--\ninfo: -1\n\
  -/\n#guard_msgs in\n#eval solve 4\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded_and_plausible"
