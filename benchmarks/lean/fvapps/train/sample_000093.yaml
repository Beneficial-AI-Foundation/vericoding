"vc-description": "RedDreamer has an array $a$ consisting of $n$ non-negative integers,\
  \ and an unlucky integer $T$.\n\nLet's denote the misfortune of array $b$ having\
  \ length $m$ as $f(b)$ — the number of pairs of integers $(i, j)$ such that $1 \\\
  le i < j \\le m$ and $b_i + b_j = T$. RedDreamer has to paint each element of $a$\
  \ into one of two colors, white and black (for each element, the color is chosen\
  \ independently), and then create two arrays $c$ and $d$ so that all white elements\
  \ belong to $c$, and all black elements belong to $d$ (it is possible that one of\
  \ these two arrays becomes empty). RedDreamer wants to paint the elements in such\
  \ a way that $f(c) + f(d)$ is minimum possible.\n\nFor example:\n\n  if $n = 6$,\
  \ $T = 7$ and $a = [1, 2, 3, 4, 5, 6]$, it is possible to paint the $1$-st, the\
  \ $4$-th and the $5$-th elements white, and all other elements black. So $c = [1,\
  \ 4, 5]$, $d = [2, 3, 6]$, and $f(c) + f(d) = 0 + 0 = 0$;  if $n = 3$, $T = 6$ and\
  \ $a = [3, 3, 3]$, it is possible to paint the $1$-st element white, and all other\
  \ elements black. So $c = [3]$, $d = [3, 3]$, and $f(c) + f(d) = 0 + 1 = 1$. \n\n\
  Help RedDreamer to paint the array optimally!\n\n\n-----Input-----\n\nThe first\
  \ line contains one integer $t$ ($1 \\le t \\le 1000$) — the number of test cases.\
  \ Then $t$ test cases follow.\n\nThe first line of each test case contains two integers\
  \ $n$ and $T$ ($1 \\le n \\le 10^5$, $0 \\le T \\le 10^9$) — the number of elements\
  \ in the array and the unlucky integer, respectively. \n\nThe second line contains\
  \ $n$ integers $a_1$, $a_2$, ..., $a_n$ ($0 \\le a_i \\le 10^9$) — the elements\
  \ of the array. \n\nThe sum of $n$ over all test cases does not exceed $10^5$.\n\
  \n\n-----Output-----\n\nFor each test case print $n$ integers: $p_1$, $p_2$, ...,\
  \ $p_n$ (each $p_i$ is either $0$ or $1$) denoting the colors. If $p_i$ is $0$,\
  \ then $a_i$ is white and belongs to the array $c$, otherwise it is black and belongs\
  \ to the array $d$.\n\nIf there are multiple answers that minimize the value of\
  \ $f(c) + f(d)$, print any of them.\n\n\n-----Example-----\nInput\n2\n6 7\n1 2 3\
  \ 4 5 6\n3 6\n3 3 3\n\nOutput\n1 0 0 1 1 0 \n1 0 0"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def solve_color_array (n : Nat) (t : Nat) (arr : List Nat) : List\
  \ Nat :=\n  sorry\n\n\n\n\n"
"vc-theorems": "theorem solve_color_array_equal_values_alternate\n  {n : Nat} {arr\
  \ : List Nat} (h : arr.length > 0) :\n  let firstVal := arr.get ⟨0, sorry⟩\n  let\
  \ t := 2 * firstVal\n  let result := solve_color_array n t (List.replicate arr.length\
  \ firstVal)\n  ∀ i : Fin (result.length - 1),\n    (result.get ⟨i.val, sorry⟩) ≠\
  \ (result.get ⟨i.val + 1, sorry⟩) :=\n  sorry\n\n\ntheorem solve_color_array_length_matches_input\n\
  \  {n : Nat} {t : Nat} {arr : List Nat} :\n  (solve_color_array n t arr).length\
  \ = arr.length :=\n  sorry"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
