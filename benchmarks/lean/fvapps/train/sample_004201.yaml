"vc-description": "Jump is a simple one-player game:\n\nYou are initially at the first\
  \ cell of an array of cells containing non-negative integers;\n\nAt each step you\
  \ can jump ahead in the array as far as the integer at the current cell, or any\
  \ smaller number of cells.\nYou win if there is a path that allows you to jump from\
  \ one cell to another, eventually jumping past the end of the array, otherwise you\
  \ lose.\n\nFor instance, if the array contains the integers \n\n`[2, 0, 3, 5, 0,\
  \ 0, 3, 0, 0, 3, 1, 0]`,\n\nyou can win by jumping from **2**, to **3**, to **5**,\
  \ to **3**, to **3**, then past the end of the array.\n\nYou can also directly jump\
  \ from from the initial cell(first cell) past the end of the array if they are integers\
  \ to the right of that cell.\n\nE.g \n\n`[6, 1, 1]` is winnable\n\n`[6]` is **not**\
  \ winnable\n\nNote: You can **not** jump from the last cell!\n\n`[1, 1, 3]` is **not**\
  \ winnable\n\n## -----\n\nYour task is to complete the function `canJump()`  that\
  \ determines if a given game is winnable.\n\n### More Examples\n\n``` javascript\n\
  canJump([5]) //=> false\ncanJump([2, 5]) //=> true\ncanJump([3, 0, 2, 3]) //=> true\
  \ (3 to 2 then past end of array)\ncanJump([4, 1, 2, 0, 1]) //=> false\ncanJump([5,\
  \ 0, 0, 0]) //=> true\ncanJump([1, 1]) //=> false\n```"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def can_jump (arr : List Nat) : Bool := sorry\n\ntheorem single_element_array_no_jump\
  \ {arr : List Nat} (h : arr.length = 1) : \n  ¬(can_jump arr) := sorry\n"
"vc-theorems": "theorem zero_first_element_no_jump {arr : List Nat} (h : arr.length\
  \ ≥ 2) (h2 : arr.get? 0 = some 0) :\n  ¬(can_jump arr) := sorry\n\n\ntheorem large_first_element_can_jump\
  \ {arr : List Nat} (h : arr.length ≥ 2) \n  (h2 : arr.get? 0 = some (arr.length\
  \ + 1)) :\n  can_jump arr := sorry\n\n/--\ninfo: True\n-/\n#guard_msgs in\n#eval\
  \ can_jump [2, 5]\n\n/--\ninfo: False\n-/\n#guard_msgs in\n#eval can_jump [5]\n\n\
  /--\ninfo: True\n-/\n#guard_msgs in\n#eval can_jump [3, 0, 2, 3]\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
