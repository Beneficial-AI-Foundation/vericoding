"vc-description": "Given an integer array arr of distinct integers and an integer\
  \ k.\nA game will be played between the first two elements of the array (i.e. arr[0]\
  \ and arr[1]). In each round of the game, we compare arr[0] with arr[1], the larger\
  \ integer wins and remains at position 0 and the smaller integer moves to the end\
  \ of the array. The game ends when an integer wins k consecutive rounds.\nReturn\
  \ the integer which will win the game.\nIt is guaranteed that there will be a winner\
  \ of the game.\n \nExample 1:\nInput: arr = [2,1,3,5,4,6,7], k = 2\nOutput: 5\n\
  Explanation: Let's see the rounds of the game:\nRound |       arr       | winner\
  \ | win_count\n  1   | [2,1,3,5,4,6,7] | 2      | 1\n  2   | [2,3,5,4,6,7,1] | 3\
  \      | 1\n  3   | [3,5,4,6,7,1,2] | 5      | 1\n  4   | [5,4,6,7,1,2,3] | 5  \
  \    | 2\nSo we can see that 4 rounds will be played and 5 is the winner because\
  \ it wins 2 consecutive games.\n\nExample 2:\nInput: arr = [3,2,1], k = 10\nOutput:\
  \ 3\nExplanation: 3 will win the first 10 rounds consecutively.\n\nExample 3:\n\
  Input: arr = [1,9,8,2,3,7,6,4,5], k = 7\nOutput: 9\n\nExample 4:\nInput: arr = [1,11,22,33,44,55,66,77,88,99],\
  \ k = 1000000000\nOutput: 99\n\n \nConstraints:\n\n2 <= arr.length <= 10^5\n1 <=\
  \ arr[i] <= 10^6\narr contains distinct integers.\n1 <= k <= 10^9"
"vc-preamble": "import Imports.AllImports\n\ndef get_winner (arr : List Int) (k :\
  \ Int) : Int :=\n  sorry\n\n\ndef List.maximum (l : List Int) : Int :=\n  sorry\n\
  \n\ndef List.maximum' (l : List Int) (h : l ≠ []) : Int :=\n  sorry\n\n\ndef List.findIndex\
  \ (l : List Int) (p : Int → Bool) : Nat :=\n  sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def List.sorted (l : List Int) (r : Int → Int → Bool) : Prop :=\n\
  \  sorry\n"
"vc-theorems": "theorem winner_exists_in_array (arr : List Int) (h : arr ≠ []) :\n\
  \  ∀ k, k > 0 → get_winner arr k ∈ arr :=\n  sorry\n\n/--\ninfo: 5\n-/\n#guard_msgs\
  \ in\n#eval get_winner [2, 1, 3, 5, 4, 6, 7] 2\n\n/--\ninfo: 3\n-/\n#guard_msgs\
  \ in\n#eval get_winner [3, 2, 1] 10\n\n/--\ninfo: 9\n-/\n#guard_msgs in\n#eval get_winner\
  \ [1, 9, 8, 2, 3, 7, 6, 4, 5] 7\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
