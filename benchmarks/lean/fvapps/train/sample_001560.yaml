"vc-description": "Create a function that differentiates a polynomial for a given\
  \ value of `x`.\n\nYour function will receive 2 arguments: a polynomial as a string,\
  \ and a point to evaluate the equation as an integer.\n\n## Assumptions:\n\n* There\
  \ will be a coefficient near each `x`, unless the coefficient equals `1` or `-1`.\n\
  * There will be an exponent near each `x`, unless the exponent equals `0` or `1`.\n\
  * All exponents will be greater or equal to zero\n\n## Examples:\n\n```python\n\
  differenatiate(\"12x+2\", 3)      ==>   returns 12\ndifferenatiate(\"x^2+3x+2\"\
  , 3)   ==>   returns 9\n```"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def differentiate (p : Polynomial) (x : Int) : Int :=\n  sorry\n"
"vc-theorems": "theorem differentiate_return_number \n  (p : Polynomial) (x : Int)\
  \ : \n  ∃ n : Int, differentiate p x = n :=\n  sorry\n\n\ntheorem differentiate_constant\n\
  \  (n : Int) (x : Int) :\n  differentiate (Polynomial.const n) x = 0 :=\n  sorry\n\
  \n\ntheorem differentiate_linear_constant_derivative \n  (p : Polynomial) (x₁ x₂\
  \ : Int)\n  (h : ∀ term : Polynomial, term ≠ Polynomial.var → false) :\n  differentiate\
  \ p x₁ = differentiate p x₂ := \n  sorry\n\n\ntheorem differentiate_var\n  (x :\
  \ Int) :\n  differentiate Polynomial.var x = 1 :=\n  sorry\n\n\ntheorem differentiate_square\n\
  \  (x : Int) :\n  differentiate (Polynomial.power 1 2) x = 2 * x :=\n  sorry\n\n\
  \ntheorem differentiate_constant_zero\n  (n : Int) (x : Int) :\n  differentiate\
  \ (Polynomial.const n) x = 0 :=\n  sorry\n\n/--\ninfo: 12\n-/\n#guard_msgs in\n\
  #eval differentiate \"12x+2\" 3\n\n/--\ninfo: 9\n-/\n#guard_msgs in\n#eval differentiate\
  \ \"x^2+3x+2\" 3\n\n/--\ninfo: -20\n-/\n#guard_msgs in\n#eval differentiate \"-5x^2+10x+4\"\
  \ 3\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded"
