"vc-description": "Given a square matrix mat, return the sum of the matrix diagonals.\n\
  Only include the sum of all the elements on the primary diagonal and all the elements\
  \ on the secondary diagonal that are not part of the primary diagonal.\n \nExample\
  \ 1:\n\nInput: mat = [[1,2,3],\n              [4,5,6],\n              [7,8,9]]\n\
  Output: 25\nExplanation: Diagonals sum: 1 + 5 + 9 + 3 + 7 = 25\nNotice that element\
  \ mat[1][1] = 5 is counted only once.\n\nExample 2:\nInput: mat = [[1,1,1,1],\n\
                [1,1,1,1],\n              [1,1,1,1],\n              [1,1,1,1]]\nOutput:\
  \ 8\n\nExample 3:\nInput: mat = [[5]]\nOutput: 5\n\n \nConstraints:\n\nn == mat.length\
  \ == mat[i].length\n1 <= n <= 100\n1 <= mat[i][j] <= 100"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def diagonalSum (matrix: List (List Int)) : Int := sorry\n\n--\
  \ Main property: sum equals primary + secondary diagonal (except where they intersect)"
"vc-theorems": "theorem diagonal_sum_equals_manual_sum {matrix: List (List Int)} (h:\
  \ matrix.length > 0)\n  (h2: ∀ row ∈ matrix, row.length = matrix.length) :\n  diagonalSum\
  \ matrix = \n    (List.range matrix.length).foldl (λ sum i => sum + (matrix.get!\
  \ i).get! i) 0 +\n    (List.range matrix.length).foldl (λ sum i => sum + (matrix.get!\
  \ i).get! (matrix.length - 1 - i)) 0 -\n    (if matrix.length % 2 = 1 \n     then\
  \ (matrix.get! (matrix.length / 2)).get! (matrix.length / 2)\n     else 0) := sorry\n\
  \n-- Single element matrix case\n\ntheorem diagonal_sum_single_element {matrix:\
  \ List (List Int)} \n  (h1: matrix.length = 1) (h2: (matrix.head!).length = 1) :\n\
  \  diagonalSum matrix = (matrix.head!).head! := sorry\n\n-- Symmetry property\n\n\
  theorem diagonal_sum_symmetric {matrix symMatrix: List (List Int)} \n  (h1: matrix.length\
  \ = symMatrix.length)\n  (h2: ∀ i j, i < matrix.length → j < matrix.length →\n \
  \   (symMatrix.get! i).get! j = (matrix.get! i).get! j) :\n  diagonalSum matrix\
  \ = diagonalSum symMatrix := sorry\n\n/--\ninfo: 25\n-/\n#guard_msgs in\n#eval diagonal_sum\
  \ [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\n\n/--\ninfo: 8\n-/\n#guard_msgs in\n#eval diagonal_sum\
  \ [[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]]\n\n/--\ninfo: 5\n-/\n\
  #guard_msgs in\n#eval diagonal_sum [[5]]\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded"
