"vc-description": "I found this interesting interview question just today:\n\n> *8\
  \ coins are given where all the coins have equal weight, except one. The odd one\
  \ weights less than the others, not being of pure gold. In the worst case, how many\
  \ iterations are actually needed to find the odd one out on a two plates scale*.\n\
  \nI am asking you then to tell me what is the *minimum* amount of weighings it will\
  \ take to measure `n` coins in every possible occurrence (including worst case scenario,\
  \ ie: without relying on luck at all).\n\n`n` is guaranteed to be a positive integer.\n\
  \n***Tip:*** being able to think *recursively* might help here :p\n\n***Note:***\
  \ albeit this is more clearly a logical than a coding problem, do not underestimate\
  \ (or under-rank) the kata for requiring not necessarily wizard-class coding skills:\
  \ a good coder is a master of pattern recognition and subsequent optimization ;)"
"vc-preamble": "import Imports.AllImports\n\ndef how_many_measurements (n : Nat) :\
  \ Nat :=\n  sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def log3ceil (n : Nat) : Nat :=\n  sorry\n\n\n"
"vc-theorems": "theorem measurements_non_negative (n : Nat) (h : n > 0) :\n  how_many_measurements\
  \ n ≥ 0 :=\n  sorry\n\n\ntheorem measurements_sufficient (n : Nat) (h : n > 0) :\n\
  \  3^(how_many_measurements n) ≥ n :=\n  sorry\n\n\ntheorem edge_case_one :\n  how_many_measurements\
  \ 1 = 0 :=\n  sorry\n\n\ntheorem edge_case_two :\n  how_many_measurements 2 = 1\
  \ :=\n  sorry\n\n\ntheorem edge_case_three :\n  how_many_measurements 3 = 1 :=\n\
  \  sorry\n\n/--\ninfo: 0\n-/\n#guard_msgs in\n#eval how_many_measurements 1\n\n\
  /--\ninfo: 1\n-/\n#guard_msgs in\n#eval how_many_measurements 2\n\n/--\ninfo: 1\n\
  -/\n#guard_msgs in\n#eval how_many_measurements 3\n\n/--\ninfo: 2\n-/\n#guard_msgs\
  \ in\n#eval how_many_measurements 8\n\n/--\ninfo: 5\n-/\n#guard_msgs in\n#eval how_many_measurements\
  \ 100\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded_and_plausible"
