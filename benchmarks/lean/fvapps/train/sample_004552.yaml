"vc-description": "The [Floyd's triangle](https://en.wikipedia.org/wiki/Floyd%27s_triangle)\
  \ is a right-angled triangular array of natural numbers listing them in order, in\
  \ lines of increasing length, so a Floyds triangle of size 6 looks like:\n\n```\n\
  1\n2  3\n4  5  6\n7  8  9  10\n11 12 13 14 15\n16 17 18 19 20 21\n    ...\n```\n\
  \nIn this kata you're given a number, and expected to return the line number it\
  \ falls in, in the Floyd's triangle\n\n```python\nnth_floyd(3) # => 2 (i.e the number\
  \ `3` falls in line 2 of the triangle)\nnth_floyd(17) # => 6\n\nnth_floyd(22) #\
  \ => 7\nnth_floyd(499502) # => 1000\n```\n\n```python\nnth_floyd(n)\n```\n\n## Constraints\n\
  \n### 1 <= n <= 10^(9)"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def nth_floyd (n : Nat) : Nat :=\n  sorry\n"
"vc-theorems": "theorem nth_floyd_is_positive (n : Nat) (h : n > 0) : nth_floyd n\
  \ > 0 := \n  sorry\n\n\ntheorem nth_floyd_in_line_bounds (n : Nat) (h : n > 0) :\
  \ \n  let result := nth_floyd n\n  let line_start := 1 + (result-1)*result/2\n \
  \ let line_end := line_start + result - 1\n  line_start ≤ n ∧ n ≤ line_end :=\n\
  \  sorry\n  \n\ntheorem nth_floyd_same_line (line_num : Nat) (h : line_num > 0)\
  \ (i : Nat) \n  (hi : i < line_num) :\n  let start := 1 + (line_num-1)*line_num/2\n\
  \  nth_floyd (start + i) = line_num :=\n  sorry\n\n\ntheorem nth_floyd_small_cases\
  \ : \n  nth_floyd 1 = 1 ∧ \n  nth_floyd 2 = 2 ∧\n  nth_floyd 3 = 2 ∧ \n  nth_floyd\
  \ 4 = 3 :=\n  sorry\n\n/--\ninfo: 2\n-/\n#guard_msgs in\n#eval nth_floyd 3\n\n/--\n\
  info: 6\n-/\n#guard_msgs in\n#eval nth_floyd 17\n\n/--\ninfo: 1000\n-/\n#guard_msgs\
  \ in\n#eval nth_floyd 499502\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
