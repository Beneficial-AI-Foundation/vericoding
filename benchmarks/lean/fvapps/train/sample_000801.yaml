"vc-description": "You are given $n$ intervals on the $X$ axis. Each interval $i$\
  \ is specified by its ends $[L_i, R_i]$. You want to color each interval either\
  \ blue or yellow. After coloring all the intervals, the $X$ axis will will have\
  \ $4$ colors:\n- White, the part of $X$ axis contained in no interval\n- Blue, the\
  \ part of $X$ axis contained in atleast one blue colored interval and no yellow\
  \ colored interval.\n- Yellow, the part of $X$ axis contained in atleast one yellow\
  \ colored interval and no blue colored interval.\n- Green, the part of $X$ axis\
  \ contained in at least one blue colored interval and at least one yellow colored\
  \ interval.\nYou want to color the intervals so that the total length of the part\
  \ colored green is maximized. If there are multiple ways to color which maximize\
  \ the green part, you can output any of them.\n\n-----Input:-----\n- First line\
  \ will contain $T$, number of testcases. Then the testcases follow. \n- The first\
  \ line of each testcase contains $n$, the number of intervals.\n- The $i^{\\text{th}}$\
  \ of the next $n$ lines contains two integers $L_i$ and $R_i$ describing the $i^{\\\
  text{th}}$ interval.\n\n-----Output:-----\nFor each testcase, output a single string\
  \ on a new line, whose $i^{\\text{th}}$ character is $0$ if you color the $i^{\\\
  text{th}}$ interval blue, and $1$ if you color it yellow.\n\n-----Constraints-----\n\
  - $ 1 \\leq T \\leq 10^5 $\n- $ 1 \\leq n \\leq 10^5 $\n- The sum of $n$ over all\
  \ testcases doesn't exceed $10^5$.\n- $ 1 \\leq L_i \\leq R_i \\leq 10^9 $ for al\
  \ $ 1 \\leq i \\leq n$.\n\n-----Sample Input:-----\n1\n3\n3 7\n2 5\n6 9\n\n-----Sample\
  \ Output:-----\n100\n\n-----Explanation:-----\nThe intervals are $[3, 7]$, $[2,\
  \ 5]$, $[6, 9]$. It is optimal to color them in yellow, blue and blue respectively.\
  \ In this coloring:\n- $[2, 3) \\cup (7, 9]$ is colored blue.\n- $(5, 6)$ is colored\
  \ yellow.\n- $[3, 5] \\cup [6, 7]$ is colored green, with a total length of $(5\
  \ - 3) + (7 - 6) = 3$.\n- Rest of the $X$ axis is colored white.\nPlease note that\
  \ colors at the endpoints of the intervals don't matter when computing the lengths,\
  \ and we can ignore them. Open and closed intervals have been used in the explanation\
  \ section only for clarity, and it doesn't matter whether they are open or closed.\n\
  Note that 011 is also a valid output."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def Interval := Int × Int\n\ndef color_intervals (intervals : List\
  \ Interval) : String := sorry\n"
"vc-theorems": "theorem color_intervals_outputs_valid_binary : ∀ (intervals : List\
  \ Interval),\n  let result := color_intervals intervals\n  (∀ c ∈ result.data, c\
  \ = '0' ∨ c = '1') ∧ \n  result.length = intervals.length\n  := sorry\n\n\ntheorem\
  \ non_overlapping_intervals_share_colors : ∀ (intervals : List Interval),\n  intervals.length\
  \ ≥ 2 →\n  (∀ i ∈ intervals, i.1 < i.2) →\n  let sorted := intervals \n  (∀ (i :\
  \ Interval), ∀ (j : Interval), i ∈ sorted → j ∈ sorted → i.2 < j.1 ∨ j.2 < i.1)\
  \ →\n  let result := color_intervals intervals\n  2 ≥ List.length (List.eraseDups\
  \ result.data)\n  := sorry\n\n/--\ninfo: '100'\n-/\n#guard_msgs in\n#eval color_intervals\
  \ [(3, 7), (2, 5), (6, 9)]\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
