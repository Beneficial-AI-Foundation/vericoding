"vc-description": "For this kata, you are given three points ```(x1,y1,z1)```, ```(x2,y2,z2)```,\
  \ and ```(x3,y3,z3)``` that lie on a straight line in 3-dimensional space.\nYou\
  \ have to figure out which point lies in between the other two.\n\nYour function\
  \ should return 1, 2, or 3 to indicate which point is the in-between one."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def middle_point (x1 y1 z1 x2 y2 z2 x3 y3 z3 : Float) : Nat :=\
  \ sorry\n\ntheorem middle_point_returns_valid_index (x1 y1 z1 x2 y2 z2 x3 y3 z3\
  \ : Float) :\n  let result := middle_point x1 y1 z1 x2 y2 z2 x3 y3 z3\n  result\
  \ = 1 ∨ result = 2 ∨ result = 3 := sorry\n"
"vc-theorems": "theorem identical_points_return_middle_index (x y z : Float) :\n \
  \ middle_point x y z x y z x y z = 2 := sorry \n\n\ntheorem two_identical_points_first_not_third\
  \ (x1 y1 z1 x2 y2 z2 : Float) :\n  middle_point x1 y1 z1 x1 y1 z1 x2 y2 z2 ≠ 3 :=\
  \ sorry\n\n\ntheorem two_identical_points_last_not_first (x1 y1 z1 x2 y2 z2 : Float)\
  \ :\n  middle_point x1 y1 z1 x2 y2 z2 x2 y2 z2 ≠ 1 := sorry\n\n/--\ninfo: 2\n-/\n\
  #guard_msgs in\n#eval middle_point 1 2 3 4 5 6 7 8 9\n\n/--\ninfo: 3\n-/\n#guard_msgs\
  \ in\n#eval middle_point 0 2 0 6 -2 8 3 0 4\n\n/--\ninfo: 3\n-/\n#guard_msgs in\n\
  #eval middle_point 0.25 0.5 0.75 3.25 -0.5 -0.25 1.0 0.25 0.5\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
