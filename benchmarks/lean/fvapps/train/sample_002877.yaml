"vc-description": "# Task\n\n**_Given_** a **_list of digits_**, *return the **_smallest\
  \ number_** that could be formed from these digits, using the digits only once (ignore\
  \ duplicates).* \n___\n\n# Notes:\n\n* Only **_positive integers_** *will be passed\
  \ to the function (> 0 ), no negatives or zeros.*\n___\n# Input >> Output Examples\
  \ \n\n```\nminValue ({1, 3, 1})  ==> return (13)\n```\n## Explanation:\n**_(13)_**\
  \ *is the minimum number could be formed from* **_{1, 3, 1}_** , *Without duplications*\
  \  \n___\n```\nminValue({5, 7, 5, 9, 7})  ==> return (579)\n```\n## Explanation:\n\
  **_(579)_** *is the minimum number could be formed from* **_{5, 7, 5, 9, 7}_** ,\
  \ *Without duplications* \n___\n\n```\nminValue({1, 9, 3, 1, 7, 4, 6, 6, 7}) return\
  \  ==> (134679)\n```\n## Explanation:\n**_(134679)_** *is the minimum number could\
  \ be formed from* **_{1, 9, 3, 1, 7, 4, 6, 6, 7}_** , *Without duplications* \n\
  ___\n___\n\n## [Playing with Numbers Series](https://www.codewars.com/collections/playing-with-numbers)\n\
  \n# [Playing With Lists/Arrays Series](https://www.codewars.com/collections/playing-with-lists-slash-arrays)\n\
  \n# [Bizarre Sorting-katas](https://www.codewars.com/collections/bizarre-sorting-katas)\n\
  \n# [For More Enjoyable Katas](http://www.codewars.com/users/MrZizoScream/authored)\n\
  ___\n\n## ALL translations are welcomed\n\n## Enjoy Learning !!\n# Zizou"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def min_value (digits : List Nat) : Nat :=\n  sorry\n"
"vc-theorems": "theorem min_value_is_nat (digits : List Nat) :\n  min_value digits\
  \ > 0 :=\n  sorry\n\n\ntheorem min_value_digits_unique (digits : List Nat) :\n \
  \ let result := min_value digits\n  let resultDigits := result.repr.toList\n  List.Nodup\
  \ resultDigits :=\n  sorry\n\n\ntheorem min_value_subset (digits : List Nat) :\n\
  \  let result := min_value digits \n  let resultDigits := result.repr.toList\n \
  \ ∀ d ∈ resultDigits, ∃ n ∈ digits, toString n = toString d :=\n  sorry\n\n\ntheorem\
  \ min_value_ascending (digits : List Nat) :\n  let result := min_value digits\n\
  \  let resultDigits := result.repr.toList\n  ∀ (i j : Fin resultDigits.length),\
  \ \n    i.val < j.val → resultDigits[i] ≤ resultDigits[j] :=\n  sorry\n\n\ntheorem\
  \ min_value_equals_sorted_unique (digits : List Nat) :\n  min_value digits = \n\
  \    String.toNat! (String.join (List.map Nat.repr (List.eraseDups digits))) :=\n\
  \  sorry\n\n/--\ninfo: 13\n-/\n#guard_msgs in\n#eval min_value [1, 3, 1]\n\n/--\n\
  info: 579\n-/\n#guard_msgs in\n#eval min_value [5, 7, 5, 9, 7]\n\n/--\ninfo: 134679\n\
  -/\n#guard_msgs in\n#eval min_value [1, 9, 3, 1, 7, 4, 6, 6, 7]\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
