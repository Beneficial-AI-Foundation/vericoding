"vc-description": "There is no single treatment that works for every phobia, but some\
  \ people cure it by being gradually exposed to the phobic situation or object. In\
  \ this kata we will try curing arachnophobia by drawing primitive spiders.\n \n\
  Our spiders will have legs, body, eyes and a mouth. Here are some examples:\n```\n\
  /\\((OOwOO))/\\\n\n/╲(((0000w0000)))╱\\\n\n^(oWo)^\n```\nYou will be given four\
  \ values:  \n1) `leg size` where each value stands for its own leg type: `1 for\
  \ \"^ ^\", 2 for \"/\\ /\\\", 3 for \"/╲ ╱\\\", 4 for \"╱╲ ╱╲\"`  \n2) `body size`\
  \ where each value stands for its own body type: `1 for \"( )\", 2 for \"(( ))\"\
  , 3 for \"((( )))\"`  \n3) `mouth` representing the spider's mouth  \n4) `eye` representing\
  \ the spider's eye\n\n**Note:** the eyes are symmetric, and their total amount is\
  \ `2 to the power of body size`.\n  \nYou will also be given only valid data. That's\
  \ it for the instructions, you can start coding!"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def String.count (s : String) (c : Char) : Nat := sorry\n\ndef\
  \ draw_spider (leg_size : Nat) (body_size : Nat) (mouth : Char) (eye : Char) : String\
  \ := sorry\n"
"vc-theorems": "theorem spider_parentheses_count {leg_size : Nat} {body_size : Nat}\
  \ {mouth : Char} {eye : Char}\n  (h1 : leg_size ≤ 4) (h2 : body_size ≥ 1) (h3 :\
  \ body_size ≤ 5)\n  (h4 : mouth = 'W' ∨ mouth = 'w')\n  (h5 : eye = 'o' ∨ eye =\
  \ 'O' ∨ eye = '0') :\n  let result := draw_spider leg_size body_size mouth eye\n\
  \  (result.count '(' = body_size) ∧ (result.count ')' = body_size) := sorry\n\n\n\
  theorem spider_leg_prefixes {leg_size : Nat} {body_size : Nat} {mouth : Char} {eye\
  \ : Char}\n  (h1 : leg_size ≤ 4) \n  (h2 : mouth = 'w') (h3 : eye = 'o') :\n  let\
  \ result := draw_spider leg_size 1 mouth eye\n  match leg_size with \n  | 0 => result.startsWith\
  \ \"\"\n  | 1 => result.startsWith \"^\"\n  | 2 => result.startsWith \"/\\\\\"\n\
  \  | 3 => result.startsWith \"/╲\"\n  | 4 => result.startsWith \"╱╲\"\n  | _ =>\
  \ True\n  := sorry\n\n/--\ninfo: '^(oWo)^'\n-/\n#guard_msgs in\n#eval draw_spider\
  \ 1 1 \"W\" \"o\"\n\n/--\ninfo: '/\\\\((OOwOO))/\\\\'\n-/\n#guard_msgs in\n#eval\
  \ draw_spider 2 2 \"w\" \"O\"\n\n/--\ninfo: '/╲(((0000w0000)))╱\\\\'\n-/\n#guard_msgs\
  \ in\n#eval draw_spider 3 3 \"w\" \"0\"\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
