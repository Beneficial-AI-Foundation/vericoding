"vc-description": "Given a certain number, how many multiples of three could you obtain\
  \ with its digits?\n\nSuposse that you have the number 362. The numbers that can\
  \ be generated from it are:\n```\n362 ----> 3, 6, 2, 36, 63, 62, 26, 32, 23, 236,\
  \ 263, 326, 362, 623, 632 \n```\nBut only:\n\n```3, 6, 36, 63``` are multiple of\
  \ three.\n\nWe need a function that can receive a number ann may output in the following\
  \ order:\n\n- the amount of multiples\n\n- the maximum multiple\n\nLet's see a case\
  \ the number has a the digit 0 and repeated digits:\n```\n6063 ----> 0, 3, 6, 30,\
  \ 36, 60, 63, 66, 306, 360, 366, 603, 606, 630, 636, 660, 663, 3066, 3606, 3660,\
  \ 6036, 6063, 6306, 6360, 6603, 6630\n```\nIn this case the multiples of three will\
  \ be all except 0\n\n```\n6063 ----> 3, 6, 30, 36, 60, 63, 66, 306, 360, 366, 603,\
  \ 606, 630, 636, 660, 663, 3066, 3606, 3660, 6036, 6063, 6306, 6360, 6603, 6630\n\
  ```\n\nThe cases above for the function:\n```python\nfind_mult_3(362) == [4, 63]\n\
  \nfind_mult_3(6063) == [25, 6630]\n```\nIn Javascript ```findMult_3()```.\nThe function\
  \ will receive only positive integers (num > 0), and you don't have to worry for\
  \ validating the entries.\n\nFeatures of the random tests:\n```\nNumber of test\
  \ = 100\n1000 ≤ num ≤ 100000000\n```\nEnjoy it!!"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def find_mult_3 (n : Nat) : List Nat := sorry\n\ntheorem find_mult_3_correct_for_362\
  \ :\n  find_mult_3 362 = [4, 63] := sorry\n"
"vc-theorems": "theorem find_mult_3_correct_for_6063 :\n  find_mult_3 6063 = [25,\
  \ 6630] := sorry\n\n\ntheorem find_mult_3_correct_for_7766553322 :\n  find_mult_3\
  \ 7766553322 = [55510, 766553322] := sorry\n\n/--\ninfo: [4, 63]\n-/\n#guard_msgs\
  \ in\n#eval find_mult_3 362\n\n/--\ninfo: [25, 6630]\n-/\n#guard_msgs in\n#eval\
  \ find_mult_3 6063\n\n/--\ninfo: [55510, 766553322]\n-/\n#guard_msgs in\n#eval find_mult_3\
  \ 7766553322\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
