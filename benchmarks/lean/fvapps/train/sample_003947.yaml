"vc-description": "Andrzej was given a task:\nThere are n jars with pills. In every\
  \ jar there is a different type of pill and the amount of pills in each jar is infinite.\
  \ One type of pill makes a person glow about 30 minutes after taking and none of\
  \ the other types has any effect.\nHis job is to determine, in which jar are the\
  \ pills that make a person glow.\nBut there is one catch, he only has 35 minutes\
  \ to do so.(so he can't take a pill, wait for the results and then take another\
  \ one, because he wouldn't be able to see the results)\nFortunetely, he can take\
  \ any number of friends he needs with him.\nOn completing the task Andrzej receives\
  \ one million dollars. You know that Andrzej is very honest, so he will split the\
  \ money equally with his friends.\nYour job is to determine how many friends does\
  \ Andrzej need to complete the task.(He also wants to make the highest amount of\
  \ money.)\nFor example for n = 2\nThe answer is 0 because he doesn't need any friends,\
  \ he just needs to take a pill from the first jar and wait for the effects.\nFor\
  \ another example for n = 4\nThe answer is 1 because having pills A B C D Andrzej\
  \ can take pills A B and the friend can take pills B C"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def friends (n : Nat) : Nat := sorry\n\ntheorem zero_or_one_jar_no_friends\
  \ (n : Nat) (h : n ≤ 1) : friends n = 0 := sorry\n"
"vc-theorems": "theorem sufficient_friends (n : Nat) (h : n ≥ 2) : \n  2^(friends\
  \ n + 1) ≥ n := sorry\n\n\ntheorem friends_monotone (n : Nat) (h : n ≥ 2) :\n  friends\
  \ n ≥ friends (n-1) := sorry\n\n/--\ninfo: 0\n-/\n#guard_msgs in\n#eval friends\
  \ 0\n\n/--\ninfo: 0\n-/\n#guard_msgs in\n#eval friends 1\n\n/--\ninfo: 1\n-/\n#guard_msgs\
  \ in\n#eval friends 4\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded_and_plausible"
