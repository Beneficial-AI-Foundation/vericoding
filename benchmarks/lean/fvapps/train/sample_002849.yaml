"vc-description": "The rgb function is incomplete. Complete it so that passing in\
  \ RGB decimal values will result in a hexadecimal representation being returned.\
  \ Valid decimal values for RGB are 0 - 255. Any values that fall out of that range\
  \ must be rounded to the closest valid value.\n\nNote: Your answer should always\
  \ be 6 characters long, the shorthand with 3 will not work here.\n\nThe following\
  \ are examples of  expected output values:\n```python\nrgb(255, 255, 255) # returns\
  \ FFFFFF\nrgb(255, 255, 300) # returns FFFFFF\nrgb(0,0,0) # returns 000000\nrgb(148,\
  \ 0, 211) # returns 9400D3\n```\n```if:nasm\n\nchar \\*rgb(int r, int g, int b,\
  \ char \\*outp)\n\n```"
"vc-preamble": "import Imports.AllImports\n\ndef isHexDigit (c : Char) : Bool := sorry\n\
  \ndef rgb (r g b : Int) : String := sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def hexStringToNat (s : String) : Nat := sorry\n\ntheorem rgb_output_format\
  \ (r g b : Int) :\n  let result := rgb r g b\n  (result.length = 6) ∧ \n  (result.data.all\
  \ isHexDigit)\n  := sorry\n"
"vc-theorems": "theorem rgb_valid_inputs (r g b : Int) \n  (hr : 0 ≤ r ∧ r ≤ 255)\n\
  \  (hg : 0 ≤ g ∧ g ≤ 255)\n  (hb : 0 ≤ b ∧ b ≤ 255) :\n  let result := rgb r g b\n\
  \  let r_hex := result.take 2\n  let g_hex := result.drop 2 |>.take 2\n  let b_hex\
  \ := result.drop 4 |>.take 2\n  (hexStringToNat r_hex = r) ∧\n  (hexStringToNat\
  \ g_hex = g) ∧\n  (hexStringToNat b_hex = b)\n  := sorry\n\n\ntheorem rgb_negative_inputs\
  \ (r g b : Int)\n  (hr : r < 0)\n  (hg : g < 0)\n  (hb : b < 0) :\n  rgb r g b =\
  \ \"000000\"\n  := sorry\n\n\ntheorem rgb_large_inputs (r g b : Int)\n  (hr : r\
  \ > 255)\n  (hg : g > 255)\n  (hb : b > 255) :\n  rgb r g b = \"FFFFFF\"\n  := sorry\n\
  \n/--\ninfo: '000000'\n-/\n#guard_msgs in\n#eval rgb 0 0 0\n\n/--\ninfo: '010203'\n\
  -/\n#guard_msgs in\n#eval rgb 1 2 3\n\n/--\ninfo: '00FF7D'\n-/\n#guard_msgs in\n\
  #eval rgb -20 275 125\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
