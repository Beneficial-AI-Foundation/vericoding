"vc-description": "Jon and Joe have received equal marks in the school examination.\
  \ But, they won't reconcile in peace when equated with each other. To prove his\
  \ might, Jon challenges Joe to write a program to find all possible number combos\
  \ that sum to a given number. While unsure whether he would be able to accomplish\
  \ this feat or not, Joe accpets the challenge. Being Joe's friend, your task is\
  \ to help him out.\n\n# Task\n\nCreate a function `combos`, that accepts a single\
  \ positive integer `num` (30 > `num` > 0) and returns an array of arrays of positive\
  \ integers that sum to `num`.\n\n# Notes\n1. Sub-arrays may or may not have their\
  \ elements sorted.\n2. The order of sub-arrays inside the main array does not matter.\n\
  3. For an optimal solution, the following operation should complete within 6000ms.\n\
  \n# Sample"
"vc-preamble": "import Imports.AllImports\n\ndef sumList (l : List Int) : Int := match\
  \ l with\n  | [] => 0\n  | h::t => h + sumList t\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def combos (n : Int) (m : Int := 1) : List (List Int) := sorry\n\
  \ndef isSorted (l : List Int) : Bool :=\n  match l with\n  | [] => true\n  | [_]\
  \ => true\n  | x::y::rest => x ≤ y && isSorted (y::rest)\n"
"vc-theorems": "theorem sum_equals_input (n : Int) (h : n > 0) (h' : n ≤ 10) :\n \
  \ ∀ combo ∈ combos n, sumList combo = n := sorry\n\n\ntheorem all_positive (n :\
  \ Int) (h : n > 0) (h' : n ≤ 10) :\n  ∀ combo ∈ combos n, ∀ x ∈ combo, x > 0 :=\
  \ sorry\n\n\ntheorem minimum_value (n m : Int) (h1 : n > 0) (h2 : n ≤ 10) (h3 :\
  \ m > 0) (h4 : m ≤ 10) :\n  ∀ combo ∈ combos n m, ∀ x ∈ combo, x ≥ m := sorry\n\n\
  \ntheorem empty_for_invalid :\n  (combos 0 = []) ∧ \n  (combos (-1) = []) ∧\n  (combos\
  \ 5 6 = []) := sorry\n\n\ntheorem output_sorted (n : Int) (h : n > 0) (h' : n ≤\
  \ 10) :\n  ∀ combo ∈ combos n, isSorted combo = true := sorry\n\n\ntheorem result_uniqueness\
  \ (n : Int) (h : n > 0) (h' : n ≤ 10) :\n  List.Nodup (combos n) := sorry\n\n/--\n\
  info: [[1]]\n-/\n#guard_msgs in\n#eval combos 1\n\n/--\ninfo: sorted([[1, 1], [2]])\n\
  -/\n#guard_msgs in\n#eval sorted combos(2)\n\n/--\ninfo: sorted([[1, 1, 1], [1,\
  \ 2], [3]])\n-/\n#guard_msgs in\n#eval sorted combos(3)\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
