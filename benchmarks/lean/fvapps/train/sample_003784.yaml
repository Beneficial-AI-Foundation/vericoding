"vc-description": "This function takes two numbers as parameters, the first number\
  \ being the coefficient, and the second number being the exponent.\n\nYour function\
  \ should multiply the two numbers, and then subtract 1 from the exponent. Then,\
  \ it has to print out an expression (like 28x^7). `\"^1\"` should not be truncated\
  \ when exponent = 2.\n\n\nFor example:\n```\nderive(7, 8)\n```\nIn this case, the\
  \ function should multiply 7 and 8, and then subtract 1 from 8. It should output\
  \ `\"56x^7\"`, the first number 56 being the product of the two numbers, and the\
  \ second number being the exponent minus 1.\n\n```\nderive(7, 8) --> this should\
  \ output \"56x^7\" \nderive(5, 9) --> this should output \"45x^8\" \n```\n\n**Notes:**\n\
  * The output of this function should be a string\n* The exponent will never be 1,\
  \ and neither number will ever be 0"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def derive (coefficient : Int) (exponent : Int) : String := sorry\
  \ \n\ntheorem derive_coefficient_correct {c e : Int} \n  (h : e > 0) : \n  let result\
  \ := derive c e\n  let coef := result.splitOn \"x^\" |>.get! 0\n  String.toInt!\
  \ coef = c * e := sorry\n"
"vc-theorems": "theorem derive_exponent_correct {c e : Int}\n  (h : e > 0) :\n  let\
  \ result := derive c e\n  let exp := result.splitOn \"x^\" |>.get! 1 \n  String.toInt!\
  \ exp = e - 1 := sorry\n\n\ntheorem derive_format {c e : Int}\n  (h : e > 0) :\n\
  \  String.contains (derive c e) 'x' := sorry\n\n\ntheorem derive_matches_derivative_formula\
  \ {c e : Int}\n  (h : e > 0) :\n  derive c e = toString (c * e) ++ \"x^\" ++ toString\
  \ (e - 1) := sorry\n\n/--\ninfo: '56x^7'\n-/\n#guard_msgs in\n#eval derive 7 8\n\
  \n/--\ninfo: '45x^8'\n-/\n#guard_msgs in\n#eval derive 5 9\n\n/--\ninfo: '20x^1'\n\
  -/\n#guard_msgs in\n#eval derive 10 2\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
