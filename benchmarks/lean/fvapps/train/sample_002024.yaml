"vc-description": "Little Petya likes points a lot. Recently his mom has presented\
  \ him n points lying on the line OX. Now Petya is wondering in how many ways he\
  \ can choose three distinct points so that the distance between the two farthest\
  \ of them doesn't exceed d.\n\nNote that the order of the points inside the group\
  \ of three chosen points doesn't matter.\n\n\n-----Input-----\n\nThe first line\
  \ contains two integers: n and d (1 ≤ n ≤ 10^5; 1 ≤ d ≤ 10^9). The next line contains\
  \ n integers x_1, x_2, ..., x_{n}, their absolute value doesn't exceed 10^9 — the\
  \ x-coordinates of the points that Petya has got.\n\nIt is guaranteed that the coordinates\
  \ of the points in the input strictly increase.\n\n\n-----Output-----\n\nPrint a\
  \ single integer — the number of groups of three points, where the distance between\
  \ two farthest points doesn't exceed d.\n\nPlease do not use the %lld specifier\
  \ to read or write 64-bit integers in С++. It is preferred to use the cin, cout\
  \ streams or the %I64d specifier.\n\n\n-----Examples-----\nInput\n4 3\n1 2 3 4\n\
  \nOutput\n4\n\nInput\n4 2\n-3 -2 -1 0\n\nOutput\n2\n\nInput\n5 19\n1 10 20 30 50\n\
  \nOutput\n1\n\n\n\n-----Note-----\n\nIn the first sample any group of three points\
  \ meets our conditions.\n\nIn the seconds sample only 2 groups of three points meet\
  \ our conditions: {-3, -2, -1} and {-2, -1, 0}.\n\nIn the third sample only one\
  \ group does: {1, 10, 20}."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def count_triples_within_dist (n: Nat) (d: Nat) (points: List Int)\
  \ : Nat := sorry\n\ntheorem count_is_non_negative (n: Nat) (d: Nat) (points: List\
  \ Int) :\n  count_triples_within_dist n d points ≥ 0 := sorry\n"
"vc-theorems": "theorem increasing_distance_increases_count (n: Nat) (d: Nat) (points:\
  \ List Int) :\n  count_triples_within_dist n (2 * d) points ≥ count_triples_within_dist\
  \ n d points := sorry \n\n\ntheorem small_lists_give_zero (n: Nat) (d: Nat) (points:\
  \ List Int) :\n  n ≤ 2 → count_triples_within_dist n d points = 0 := sorry\n\n/--\n\
  info: 4\n-/\n#guard_msgs in\n#eval count_triples_within_dist 4 3 [1, 2, 3, 4]\n\n\
  /--\ninfo: 2\n-/\n#guard_msgs in\n#eval count_triples_within_dist 4 2 [-3, -2, -1,\
  \ 0]\n\n/--\ninfo: 1\n-/\n#guard_msgs in\n#eval count_triples_within_dist 5 19 [1,\
  \ 10, 20, 30, 50]\n"
"vc-postamble": "-- Apps difficulty: competition\n-- Assurance level: guarded"
