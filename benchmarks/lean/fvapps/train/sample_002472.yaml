"vc-description": "=====Function Descriptions=====\nPolar coordinates are an alternative\
  \ way of representing Cartesian coordinates or Complex Numbers.\nA complex number\
  \ z\nz = x + yj\nis completely determined by its real part y. Here, j is the imaginary\
  \ unit.\n\nA polar coordinate (r, φ) is completely determined by modulus r and phase\
  \ angle φ.\nIf we convert complex number z to its polar coordinate, we find:\nr:\
  \ Distance from z to origin, i.e., sqrt(x^2 + y^2)\nφ: Counter clockwise angle measured\
  \ from the positive -axis to the line segment that joins z to the origin.\n\nPython's\
  \ cmath module provides access to the mathematical functions for complex numbers.\n\
  cmath.phase\nThis tool returns the phase of complex number z (also known as the\
  \ argument of z).\n>>> phase(complex(-1.0, 0.0))\n3.1415926535897931\n\nabs\nThis\
  \ tool returns the modulus (absolute value) of complex number z.\n>>> abs(complex(-1.0,\
  \ 0.0))\n1.0\n\n=====Problem Statement=====\nYou are given a complex z. Your task\
  \ is to convert it to polar coordinates.\n\n=====Input Format=====\nA single line\
  \ containing the complex number z. Note: complex() function can be used in python\
  \ to convert the input as a complex number.\n\n=====Constraints=====\nGiven number\
  \ is a valid complex number\n\n=====Output Format=====\nOutput two lines:\nThe first\
  \ line should contain the value of r.\nThe second line should contain the value\
  \ of φ."
"vc-preamble": "import Imports.AllImports\n\ndef ℂ := Float × Float  -- Simplified\
  \ complex number representation\ndef magnitude : ℂ → Float := sorry"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def phase : ℂ → Float := sorry\ndef mkComplex (r i : Float) : ℂ\
  \ := (r, i)\n"
"vc-theorems": "theorem get_polar_coords_zero :\n  let z := mkComplex 0 0\n  magnitude\
  \ z = 0 ∧ phase z = 0 := by sorry \n\n\ntheorem get_polar_coords_real_positive :\n\
  \  let z := mkComplex 1 0\n  magnitude z = 1 ∧ phase z = 0 := by sorry\n\n\ntheorem\
  \ get_polar_coords_real_negative :\n  let z := mkComplex (-1) 0\n  magnitude z =\
  \ 1 ∧ phase z = 3.141592653589793 := by sorry\n\n\ntheorem get_polar_coords_complex\
  \ :\n  let z := mkComplex 1 2\n  Float.abs (magnitude z - 2.23606797749979) < 1e-10\
  \ ∧ \n  Float.abs (phase z - 1.1071487177940904) < 1e-10 := by sorry"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded"
