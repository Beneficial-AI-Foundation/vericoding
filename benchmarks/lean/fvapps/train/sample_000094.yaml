"vc-description": "You are given a integer $n$ ($n > 0$). Find any integer $s$ which\
  \ satisfies these conditions, or report that there are no such numbers:\n\nIn the\
  \ decimal representation of $s$:   $s > 0$,  $s$ consists of $n$ digits,  no digit\
  \ in $s$ equals $0$,  $s$ is not divisible by any of it's digits. \n\n\n-----Input-----\n\
  \nThe input consists of multiple test cases. The first line of the input contains\
  \ a single integer $t$ ($1 \\leq t \\leq 400$), the number of test cases. The next\
  \ $t$ lines each describe a test case.\n\nEach test case contains one positive integer\
  \ $n$ ($1 \\leq n \\leq 10^5$).\n\nIt is guaranteed that the sum of $n$ for all\
  \ test cases does not exceed $10^5$.\n\n\n-----Output-----\n\nFor each test case,\
  \ print an integer $s$ which satisfies the conditions described above, or \"-1\"\
  \ (without quotes), if no such number exists. If there are multiple possible solutions\
  \ for $s$, print any solution.\n\n\n-----Example-----\nInput\n4\n1\n2\n3\n4\n\n\
  Output\n-1\n57\n239\n6789\n\n\n\n-----Note-----\n\nIn the first test case, there\
  \ are no possible solutions for $s$ consisting of one digit, because any such solution\
  \ is divisible by itself.\n\nFor the second test case, the possible solutions are:\
  \ $23$, $27$, $29$, $34$, $37$, $38$, $43$, $46$, $47$, $49$, $53$, $54$, $56$,\
  \ $57$, $58$, $59$, $67$, $68$, $69$, $73$, $74$, $76$, $78$, $79$, $83$, $86$,\
  \ $87$, $89$, $94$, $97$, and $98$.\n\nFor the third test case, one possible solution\
  \ is $239$ because $239$ is not divisible by $2$, $3$ or $9$ and has three digits\
  \ (none of which equals zero)."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def solve_uneven_digit (n: Nat) : Int :=\nsorry\n"
"vc-theorems": "theorem solve_uneven_digit_one :\n  solve_uneven_digit 1 = -1 := by\n\
  \  sorry\n\n\ntheorem solve_uneven_digit_two :\n  solve_uneven_digit 2 = 23 := by\n\
  \  sorry\n\n\ntheorem solve_uneven_digit_positive (n: Nat) (h: n > 1) :\n  solve_uneven_digit\
  \ n > 0 := by\n  sorry\n\n\ntheorem solve_uneven_digit_length (n: Nat) (h: n > 1)\
  \ :\n  (toString (solve_uneven_digit n).natAbs).length = n := by\n  sorry\n\n\n\
  theorem solve_uneven_digit_no_zeros (n: Nat) (h: n > 1) :\n  ¬((toString (solve_uneven_digit\
  \ n).natAbs).contains '0') := by\n  sorry\n\n\ntheorem solve_uneven_digit_not_divisible\
  \ (n: Nat) (h: n > 1) (d: Char) :\n  d ∈ (toString (solve_uneven_digit n).natAbs).data\
  \ →\n  ¬((solve_uneven_digit n).natAbs % (d.toNat - 48) = 0) := by\n  sorry\n\n\
  /--\ninfo: -1\n-/\n#guard_msgs in\n#eval solve_uneven_digit 1\n\n/--\ninfo: 2\n\
  -/\n#guard_msgs in\n#eval len str(result)\n\n/--\ninfo: 3\n-/\n#guard_msgs in\n\
  #eval len str(result)\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
