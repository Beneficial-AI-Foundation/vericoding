"vc-description": "# Description\n\nGiven a number `n`, you should find a set of numbers\
  \ for which the sum equals `n`. This set must consist exclusively of values that\
  \ are a power of `2` (eg: `2^0 => 1, 2^1 => 2, 2^2 => 4, ...`).\n\nThe function\
  \ `powers` takes a single parameter, the number `n`, and should return an array\
  \ of unique numbers.\n\n## Criteria\n\nThe function will always receive a valid\
  \ input: any positive integer between `1` and the max integer value for your language\
  \ (eg: for JavaScript this would be `9007199254740991` otherwise known as `Number.MAX_SAFE_INTEGER`).\n\
  \nThe function should return an array of numbers that are a **power of 2** (`2^x\
  \ = y`).\n\nEach member of the returned array should be **unique**. (eg: the valid\
  \ answer for `powers(2)` is `[2]`, not `[1, 1]`)\n\nMembers should be sorted in\
  \ **ascending order** (small -> large). (eg: the valid answer for `powers(6)` is\
  \ `[2, 4]`, not `[4, 2]`)"
"vc-preamble": "import Imports.AllImports\n\ndef sum : List Nat → Nat \n  | [] =>\
  \ 0\n  | x::xs => x + sum xs\n\n\ndef isSorted : List Nat → Bool\n  | [] => true\n\
  \  | [_] => true\n  | x::y::rest => x ≤ y && isSorted (y::rest)\n\n\ndef countUnique\
  \ : List Nat → Nat \n  | [] => 0\n  | x::xs => if xs.contains x then countUnique\
  \ xs else 1 + countUnique xs\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def powers (n: Nat) : List Nat := sorry\n\ndef isPowerOfTwo (n:\
  \ Nat) : Bool := \n  n != 0 && n &&& (n - 1) == 0\n"
"vc-theorems": "theorem powers_sum_equals_input (n: Nat) (h: n > 0) : \n  sum (powers\
  \ n) = n := sorry\n\n\ntheorem powers_are_powers_of_two (n: Nat) (h: n > 0) :\n\
  \  ∀ p ∈ powers n, isPowerOfTwo p = true := sorry\n\n\ntheorem powers_are_sorted\
  \ (n: Nat) (h: n > 0) :\n  isSorted (powers n) = true := sorry\n\n\ntheorem powers_are_unique\
  \ (n: Nat) (h: n > 0) :\n  (powers n).length = countUnique (powers n) := sorry\n\
  \n/--\ninfo: [4]\n-/\n#guard_msgs in\n#eval powers 4\n\n/--\ninfo: [2, 4]\n-/\n\
  #guard_msgs in\n#eval powers 6\n\n/--\ninfo: [2, 4, 8]\n-/\n#guard_msgs in\n#eval\
  \ powers 14\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded"
