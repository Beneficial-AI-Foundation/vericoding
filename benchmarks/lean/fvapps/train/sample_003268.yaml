"vc-description": "In genetics 2 differents DNAs sequences can code for the same protein.\
  \ \n\nThis is due to the redundancy of the genetic code, in fact 2 different tri-nucleotide\
  \ can code for the same amino-acid.\nFor example the tri-nucleotide 'TTT' and the\
  \ tri-nucleotide 'TTC' both code for the amino-acid 'F'. For more information you\
  \ can take a look [here](https://en.wikipedia.org/wiki/DNA_codon_table).\n\nYour\
  \ goal in this kata is to define if two differents DNAs sequences code for exactly\
  \ the same protein. Your function take the 2 sequences you should compare.\nFor\
  \ some kind of simplicity here the sequences will respect the following rules:\n\
  \n- It is a full protein sequence beginning with a Start codon and finishing by\
  \ an Stop codon\n- It will only contain valid tri-nucleotide. \n\nThe translation\
  \ hash is available for you under a translation hash `$codons` [Ruby] or `codons`\
  \ [Python and JavaScript].\n\nTo better understand this kata you can take a look\
  \ at this [one](https://www.codewars.com/kata/5708ef48fe2d018413000776), it can\
  \ help you to start."
"vc-preamble": "import Imports.AllImports\n\ndef code_for_same_protein (seq1 : String)\
  \ (seq2 : String) : Bool := sorry\n\ntheorem identical_sequences_match\n  (seq :\
  \ String) :\n  code_for_same_protein seq seq = true := sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def repeat_str (s : String) (n : Nat) : String :=\nmatch n with\n\
  | 0 => \"\"\n| n+1 => s ++ repeat_str s n\n"
"vc-theorems": "theorem different_length_no_match\n  (n : Nat) :\n  code_for_same_protein\
  \ (repeat_str \"ATG\" n) (repeat_str \"ATG\" (n + 1)) = false := sorry\n\n\ntheorem\
  \ different_length_sequences_no_match\n  (seq1 seq2 : String) :\n  seq1.length ≠\
  \ seq2.length →\n  code_for_same_protein seq1 seq2 = false := sorry \n\n\ntheorem\
  \ code_for_same_protein_reflexive\n  (seq : String) :\n  code_for_same_protein seq\
  \ seq = true := sorry\n\n\ntheorem code_for_same_protein_symmetric\n  (seq1 seq2\
  \ : String) :\n  code_for_same_protein seq1 seq2 = true →\n  code_for_same_protein\
  \ seq2 seq1 = true := sorry\n\n/--\ninfo: True\n-/\n#guard_msgs in\n#eval code_for_same_protein\
  \ \"ATGTCGTCAATTTAA\" \"ATGTCGTCAATTTAA\"\n\n/--\ninfo: True\n-/\n#guard_msgs in\n\
  #eval code_for_same_protein \"ATGTTTTAA\" \"ATGTTCTAA\"\n\n/--\ninfo: False\n-/\n\
  #guard_msgs in\n#eval code_for_same_protein \"ATGTTTTAA\" \"ATGATATAA\"\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
