"vc-description": "Chef has just found a recipe book, where every dish consists of\
  \ exactly four ingredients.\nHe is going to choose some two dishes and prepare them\
  \ for dinner.\nOf course, he likes diversity and wants to know whether the two dishes\
  \ are similar.\nTwo dishes are called similar if at least half of their ingredients\
  \ are the same.\nIn other words, at least two of four ingredients of the first dish\
  \ should also be present in the second dish.\nThe order of ingredients doesn't matter.\n\
  Your task is to examine T pairs of dishes.\nFor each pair, check if the two dishes\
  \ are similar and print \"similar\" or \"dissimilar\" accordingly.\n\n-----Input-----\n\
  The first line of the input contains an integer T denoting the number of test cases.\
  \ The description of T test cases follows.\n\nThe first line of each test case contains\
  \ four distinct strings, denoting ingredients needed for the first dish.\nEach ingredient\
  \ is represented by a string of length between 2 and 10 inclusive, consisting of\
  \ lowercase English letters.\n\nThe second line of each test case describes the\
  \ second dish in the same format.\n\n-----Output-----\nFor each test case, output\
  \ a single line containing the answer — \"similar\" if at least half of the ingredients\
  \ are same, and \"dissimilar\" otherwise (without the quotes).\n\n-----Constraints-----\n\
  - 1 ≤ T ≤ 200\n- The length of each string will be between 2 and 10 inclusive.\n\
  \n-----Example-----\nInput:\n5\neggs sugar flour salt\nsugar eggs milk flour\naa\
  \ ab ac ad\nac ad ae af\ncookies sugar grass lemon\nlemon meat chili wood\none two\
  \ three four\none two three four\ngibberish jibberish lalalalala popopopopo\njibberisz\
  \ gibberisz popopopopu lalalalalu\n\nOutput:\nsimilar\nsimilar\ndissimilar\nsimilar\n\
  dissimilar\n\n-----Explanation-----\nTest case 1. The first dish consists of ingredients:\
  \ eggs, sugar, flour, salt, while the second dish consists of: sugar, eggs, milk,\
  \ flour. Three of four ingredients are present in both dishes (eggs, sugar, flour)\
  \ so the two dishes are similar.\nTest case 2. This example shows that strings in\
  \ the input don't necessarily represent real food.\nThe answer is again \"similar\"\
  , because two ingredients are present in both dishes (\"ac\" and \"ad\").\nTest\
  \ case 3. The only common ingredient is lemon, so the answer is \"dissimilar\".\n\
  Remember that at least two ingredients should be present in both dishes."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def check_similar_dishes (dish1 dish2 : List String) : String :=\
  \ sorry\n\ntheorem check_similar_dishes_valid_output\n  (dish1 dish2 : List String)\n\
  \  (h1 : dish1.length ≥ 4)\n  (h2 : dish2.length ≥ 4) :\n  (check_similar_dishes\
  \ dish1 dish2 = \"similar\") ∨ \n  (check_similar_dishes dish1 dish2 = \"dissimilar\"\
  ) := sorry\n"
"vc-theorems": "theorem check_similar_dishes_common_elements\n  (dish1 dish2 : List\
  \ String)\n  (h1 : dish1.length ≥ 4)\n  (h2 : dish2.length ≥ 4) :\n  let common\
  \ := (dish1.filter (fun x => dish2.contains x)).length\n  check_similar_dishes dish1\
  \ dish2 = \n    if common ≥ 2 then \"similar\" else \"dissimilar\" := sorry\n\n\
  /--\ninfo: 'similar'\n-/\n#guard_msgs in\n#eval check_similar_dishes [\"eggs\",\
  \ \"sugar\", \"flour\", \"salt\"] [\"sugar\", \"eggs\", \"milk\", \"flour\"]\n\n\
  /--\ninfo: 'similar'\n-/\n#guard_msgs in\n#eval check_similar_dishes [\"aa\", \"\
  ab\", \"ac\", \"ad\"] [\"ac\", \"ad\", \"ae\", \"af\"]\n\n/--\ninfo: 'dissimilar'\n\
  -/\n#guard_msgs in\n#eval check_similar_dishes [\"cookies\", \"sugar\", \"grass\"\
  , \"lemon\"] [\"lemon\", \"meat\", \"chili\", \"wood\"]\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
