"vc-description": "Modify the `kebabize` function so that it converts a camel case\
  \ string into a kebab case.\n\nNotes:\n  - the returned string should only contain\
  \ lowercase letters"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def kebabize (s : String) : String := sorry\n\ntheorem kebabize_contains_only_lowercase_and_hyphens\
  \ (s : String) : \n  ∀ c, c ∈ (kebabize s).data → c = '-' ∨ (c.toNat ≥ 97 ∧ c.toNat\
  \ ≤ 122) := sorry\n\n\n"
"vc-theorems": "theorem kebabize_no_hyphen_at_bounds (s : String) :\n  (kebabize s).length\
  \ > 0 → \n    (kebabize s).data[0]! ≠ '-' ∧ \n    (kebabize s).data[(kebabize s).length\
  \ - 1]! ≠ '-' := sorry\n\n\ntheorem kebabize_length_upper_bound (s : String) :\n\
  \  let num_capitals : Nat := (s.data.filter Char.isUpper).length;\n  let num_letters\
  \ : Nat := (s.data.filter Char.isAlpha).length;\n  (kebabize s).length ≤ num_letters\
  \ + num_capitals := sorry"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded_and_plausible"
