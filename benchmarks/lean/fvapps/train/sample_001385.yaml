"vc-description": "Harrenhal is the largest castle in the Seven Kingdoms and is the\
  \ seat of House Whent in the Riverlands, on the north shore of the Gods Eye lake.\
  \ Since the War of Conquest, however, it has become a dark and ruinous place.\n\
  (c) A Wiki of Ice and Fire\n\nNow Harrenhal is too dangerous since it's a nice place\
  \ for bandits to hide, or even for rebels to start planning overthrowing of the\
  \ king. So, the current Lord of the Seven Kingdoms has decided, that it's time to\
  \ completely ruin the castle. For that puposes, he's planning to send some military\
  \ troops.\nIn this problem we assume, that Harrenhal can be described as a string\
  \ H, which consists only of symbols 'a' and 'b'. Harrenhal is completely ruined\
  \ if and only if the length of H is equal to zero.\nSo, how to make H empty? Send\
  \ a military troop! When a military troop of the king reach the castle, they delete\
  \ some palindromic subsequence S of H. For example, let H = 'abbabaab'. Then the\
  \ current military troop can choose S = 'ababa'(Let's make symbols of S bold in\
  \ H: 'abbabaab'). After deleting S, H will be equal to 'bab'. Military troops are\
  \ free to choose any possible palindromic subsequence of H.\nYour task is pretty\
  \ simple: determine the minimal number of military troops, that the Lord of the\
  \ Seven Kingdoms has to send in order to ruin Harrenhal.\n\n-----Note-----\n\nMaybe,\
  \ some of you aren't familiar with definitions from the statement. Here're some\
  \ articles that could help you to understand the problem correctly:\n\n- Subsequence:\
  \ http://en.wikipedia.org/wiki/Subsequence\n- Palindrome: http://en.wikipedia.org/wiki/Palindrome\n\
  \n-----Input-----\nThe first line of the input contains an integer T, denoting the\
  \ number of test cases.\nThe next T lines contain a string H each, denoting the\
  \ string, that describes the current state of Harrenhal for the corresponding test\
  \ cases.\nIt's guaranteed, that each H consists only of symbols 'a' and 'b'.\n\n\
  -----Output-----\nThe output should contain exactly T lines. i'th line of the output\
  \ should contain the only integer: the minimal number of military troops, that the\
  \ Lord of the Seven Kingdoms has to send in order to ruin Harrenhal for the corresponding\
  \ test cases.\n\n-----Constraints-----\n- 1 ≤ |H| ≤ 100000, for each H.\n- Subtask\
  \ 1(30 points): each H in the input is a palindrome, 1 ≤ T ≤ 6;\n- Subtask 2(70\
  \ points): 1 ≤ T ≤ 9.\n\n-----Example-----\nInput:\n1\nabbabaab\n\nOutput:\n2\n\n\
  -----Explanation-----\nThere're multiple ways to ruin Harrenhal in the example test.\
  \ Let's consider one of them.\nThe first troop can delete S = 'ababa'('abbabaab').\
  \ After that, H = 'bab'.\nThe second troop can delete S = 'bab'('bab'). After that,\
  \ H is empty and that's it."
"vc-preamble": "import Imports.AllImports\n\ndef find_min_troops_to_ruin (s: String)\
  \ : Nat :=\nsorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def isPalindrome (s: String) : Bool :=\nsorry\n"
"vc-theorems": "theorem min_troops_bounds (s: String) :\n  let result := find_min_troops_to_ruin\
  \ s\n  0 ≤ result ∧ result ≤ 2 :=\nsorry\n\n\ntheorem empty_string_troops (s: String)\
  \ :\n  s = \"\" → find_min_troops_to_ruin s = 0 :=\nsorry\n\n\ntheorem palindrome_troops\
  \ (s: String) :\n  s ≠ \"\" ∧ isPalindrome s → find_min_troops_to_ruin s = 1 :=\n\
  sorry\n\n\ntheorem non_palindrome_troops (s: String) :\n  s ≠ \"\" ∧ ¬isPalindrome\
  \ s → find_min_troops_to_ruin s = 2 :=\nsorry\n\n/--\ninfo: 2\n-/\n#guard_msgs in\n\
  #eval find_min_troops_to_ruin \"abbabaab\"\n\n/--\ninfo: 1\n-/\n#guard_msgs in\n\
  #eval find_min_troops_to_ruin \"abba\"\n\n/--\ninfo: 2\n-/\n#guard_msgs in\n#eval\
  \ find_min_troops_to_ruin \"ab\"\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
