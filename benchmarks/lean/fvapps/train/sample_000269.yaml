"vc-description": "Think about Zuma Game. You have a row of balls on the table, colored\
  \ red(R), yellow(Y), blue(B), green(G), and white(W). You also have several balls\
  \ in your hand.\n\nEach time, you may choose a ball in your hand, and insert it\
  \ into the row (including the leftmost place and rightmost place). Then, if there\
  \ is a group of 3 or more balls in the same color touching, remove these balls.\
  \ Keep doing this until no more balls can be removed.\n\nFind the minimal balls\
  \ you have to insert to remove all the balls on the table. If you cannot remove\
  \ all the balls, output -1.\n\n\nExamples:\nInput: \"WRRBBW\", \"RB\"\nOutput: -1\n\
  Explanation: WRRBBW -> WRR[R]BBW -> WBBW -> WBB[B]W -> WW\n\nInput: \"WWRRBBWW\"\
  , \"WRBRW\"\nOutput: 2\nExplanation: WWRRBBWW -> WWRR[R]BBWW -> WWBBWW -> WWBB[B]WW\
  \ -> WWWW -> empty\n\nInput:\"G\", \"GGGGG\"\nOutput: 2\nExplanation: G -> G[G]\
  \ -> GG[G] -> empty \n\nInput: \"RBYYBBRRB\", \"YRBGB\"\nOutput: 3\nExplanation:\
  \ RBYYBBRRB -> RBYY[Y]BBRRB -> RBBBRRB -> RRRB -> B -> B[B] -> BB[B] -> empty \n\
  \n\n\nNote:\n\nYou may assume that the initial row of balls on the table won’t have\
  \ any 3 or more consecutive balls with the same color.\nThe number of balls on the\
  \ table won't exceed 20, and the string represents these balls is called \"board\"\
  \ in the input.\nThe number of balls in your hand won't exceed 5, and the string\
  \ represents these balls is called \"hand\" in the input.\nBoth input strings will\
  \ be non-empty and only contain characters 'R','Y','B','G','W'."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def find_min_step (board: String) (hand: String) : Int := sorry\n\
  \ntheorem find_min_step_returns_valid_result \n  (board: String) (hand: String)\
  \ : \n  find_min_step board hand ≥ -1 := sorry\n"
"vc-theorems": "theorem find_min_step_empty_board\n  (hand: String) :\n  find_min_step\
  \ \"\" hand = 0 := sorry \n\n\ntheorem find_min_step_empty_hand_nonempty_board\n\
  \  (board: String) (h1: board.length > 0) :\n  find_min_step board \"\" = -1 :=\
  \ sorry\n\n\ntheorem find_min_step_empty_empty : \n  find_min_step \"\" \"\" = 0\
  \ := sorry\n\n/--\ninfo: -1\n-/\n#guard_msgs in\n#eval find_min_step \"WRRBBW\"\
  \ \"RB\"\n\n/--\ninfo: 2\n-/\n#guard_msgs in\n#eval find_min_step \"WWRRBBWW\" \"\
  WRBRW\"\n\n/--\ninfo: 2\n-/\n#guard_msgs in\n#eval find_min_step \"G\" \"GGGGG\"\
  \n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
