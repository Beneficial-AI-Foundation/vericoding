"vc-description": "Given an array of integers, find if the array contains any duplicates.\n\
  \nYour function should return true if any value appears at least twice in the array,\
  \ and it should return false if every element is distinct.\n\nExample 1:\n\n\nInput:\
  \ [1,2,3,1]\nOutput: true\n\nExample 2:\n\n\nInput: [1,2,3,4]\nOutput: false\n\n\
  Example 3:\n\n\nInput: [1,1,1,3,3,4,3,2,4,2]\nOutput: true"
"vc-preamble": "import Imports.AllImports\n\ndef contains_duplicate (nums : List Int)\
  \ : Bool :=\n  sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def eraseDups (nums : List Int) : List Int :=\n  sorry\n"
"vc-theorems": "theorem contains_duplicate_matches_set_size {nums : List Int} :\n\
  \  contains_duplicate nums = (nums.length ≠ (eraseDups nums).length) :=\n  sorry\n\
  \n\ntheorem contains_duplicate_set_membership {nums : List Int} :\n  contains_duplicate\
  \ nums = ∃ i j, i < j ∧ j < nums.length ∧ nums[i]! = nums[j]! :=\n  sorry\n\n\n\
  theorem unique_list_returns_false {nums : List Int} \n  (h : ∀ i j, i < j → j <\
  \ nums.length → nums[i]! ≠ nums[j]!) :\n  ¬contains_duplicate nums :=\n  sorry\n\
  \n\ntheorem repeated_element_returns_true {nums : List Int} (h : nums ≠ []) :\n\
  \  contains_duplicate (nums ++ nums.take 1) :=\n  sorry\n\n/--\ninfo: True\n-/\n\
  #guard_msgs in\n#eval contains_duplicate [1, 2, 3, 1]\n\n/--\ninfo: False\n-/\n\
  #guard_msgs in\n#eval contains_duplicate [1, 2, 3, 4]\n\n/--\ninfo: True\n-/\n#guard_msgs\
  \ in\n#eval contains_duplicate [1, 1, 1, 3, 3, 4, 3, 2, 4, 2]\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
