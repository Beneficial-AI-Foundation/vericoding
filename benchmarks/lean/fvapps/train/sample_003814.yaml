"vc-description": "You received a whatsup message from an unknown number. Could it\
  \ be from that girl/boy with a foreign accent you met yesterday evening?\n\nWrite\
  \ a simple regex to check if the string contains the word hallo in different languages.\n\
  \nThese are the languages of the possible people you met the night before:\n\n*\
  \ hello - english\n* ciao - italian\n* salut - french\n* hallo - german\n* hola\
  \ - spanish\n* ahoj - czech republic\n* czesc - polish\n\nBy the way, how cool is\
  \ the czech republic hallo!!\n\n\nPS. you can assume the input is a string.\nPPS.\
  \ to keep this a beginner exercise you don't need to check if the greeting is a\
  \ subset of word ('Hallowen' can pass the test)\n\nPS. regex should be case insensitive\
  \ to pass the tests"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def validate_hello (s : String) : Bool := sorry\n\ndef isSubstrOf\
  \ (substr str : String) : Bool := sorry\n"
"vc-theorems": "theorem validate_hello_case_insensitive (s : String) :\n  (∃ x ∈ [\"\
  hello\", \"ciao\", \"salut\", \"hallo\", \"hola\", \"ahoj\", \"czesc\"], \n    isSubstrOf\
  \ x s.toLower) ↔ validate_hello s := sorry\n\ntheorem validate_hello_with_valid_greeting\
  \ (greeting : String) (extra : String) \n  (h : greeting ∈ [\"hello\", \"ciao\"\
  , \"salut\", \"hallo\", \"hola\", \"ahoj\", \"czesc\"]) :\n  validate_hello (greeting\
  \ ++ extra) = true := sorry\n\n\ntheorem validate_hello_empty_or_whitespace (s :\
  \ String) :\n  s.trim = \"\" → validate_hello s = false := sorry\n\n/--\ninfo: True\n\
  -/\n#guard_msgs in\n#eval validate_hello \"hello there\"\n\n/--\ninfo: True\n-/\n\
  #guard_msgs in\n#eval validate_hello \"Hola amigo\"\n\n/--\ninfo: False\n-/\n#guard_msgs\
  \ in\n#eval validate_hello \"namaste\"\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
