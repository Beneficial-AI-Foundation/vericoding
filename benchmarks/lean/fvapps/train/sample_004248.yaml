"vc-description": "# Task\nGiven array of integers `sequence` and some integer `fixedElement`,\
  \ output the number of `even` values in sequence before the first occurrence of\
  \ `fixedElement` or `-1` if and only if `fixedElement` is not contained in sequence.\n\
  \n\n\n# Input/Output\n\n\n`[input]` integer array `sequence`\n\nA non-empty array\
  \ of positive integers.\n\n`4 ≤ sequence.length ≤ 100`\n\n`1 ≤ sequence[i] ≤ 9`\n\
  \n`[input]` integer `fixedElement`\n\nAn positive integer\n\n`1 ≤ fixedElement ≤\
  \ 9`\n\n`[output]` an integer\n\n\n# Example\n\nFor `sequence = [1, 4, 2, 6, 3,\
  \ 1] and fixedElement = 6`, the output should be `2`.\n\nThere are `2` even numbers\
  \ before `6`: `4 and 2`\n\nFor `sequence = [2, 2, 2, 1] and fixedElement = 3`, the\
  \ output should be `-1`.\n\nThere is no `3` appears in `sequence`. So returns `-1`.\n\
  \nFor `sequence = [1, 3, 4, 3] and fixedElement = 3`, the output should be `0`.\n\
  \n`3` appears in `sequence`, but there is no even number before `3`."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def even_numbers_before_fixed (sequence : List Int) (fixed : Int)\
  \ : Int :=\n  sorry\n"
"vc-theorems": "theorem not_found_returns_neg_one (sequence : List Int) (fixed : Int)\
  \ : \n  ¬(fixed ∈ sequence) → even_numbers_before_fixed sequence fixed = -1 :=\n\
  \  sorry\n\n\ntheorem count_evens_before_first_occurrence (sequence : List Int)\
  \ (fixed : Int) :\n  fixed ∈ sequence →\n  even_numbers_before_fixed sequence fixed\
  \ = \n    ((sequence.take (sequence.findIdx (· = fixed))).filter (·.mod 2 = 0)).length\
  \ :=\n  sorry\n\n\ntheorem result_is_nonneg_when_found (sequence : List Int) (fixed\
  \ : Int) :\n  fixed ∈ sequence →\n  even_numbers_before_fixed sequence fixed ≥ 0\
  \ :=\n  sorry\n\n/--\ninfo: 2\n-/\n#guard_msgs in\n#eval even_numbers_before_fixed\
  \ [1, 4, 2, 6, 3, 1] 6\n\n/--\ninfo: -1\n-/\n#guard_msgs in\n#eval even_numbers_before_fixed\
  \ [2, 2, 2, 1] 3\n\n/--\ninfo: 0\n-/\n#guard_msgs in\n#eval even_numbers_before_fixed\
  \ [1, 3, 4, 3] 3\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded_and_plausible"
