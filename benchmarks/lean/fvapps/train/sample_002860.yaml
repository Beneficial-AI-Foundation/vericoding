"vc-description": "Failed Sort - Bug Fixing #4\nOh no, Timmy's Sort doesn't seem to\
  \ be working? Your task is to fix the sortArray function to sort all numbers in\
  \ ascending order"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def sort_array (x : String) : String := sorry\n\ntheorem sort_array_sorted_int\
  \ (n : Int) : \n  String.all (sort_array (toString n)) (fun c => c.isDigit) := sorry\n"
"vc-theorems": "theorem sort_array_length_preserved_int (n : Int) : \n  (sort_array\
  \ (toString n)).length = (toString n).length := sorry\n\n\ntheorem sort_array_sorted_str\
  \ (s : String) : \n  ∀ i : Fin (s.length-1), (sort_array s).get ⟨i⟩ ≤ (sort_array\
  \ s).get ⟨i+1⟩ := sorry\n\n\ntheorem sort_array_length_preserved_str (s : String)\
  \ :\n  (sort_array s).length = s.length := sorry\n\n\ntheorem sort_array_same_chars\
  \ (s : String) :\n  s.toList.length = (sort_array s).toList.length ∧\n  ∀ c, c ∈\
  \ s.toList ↔ c ∈ (sort_array s).toList := sorry\n\n\ntheorem sort_array_empty :\n\
  \  sort_array \"\" = \"\" := sorry\n\n/--\ninfo: '12345'\n-/\n#guard_msgs in\n#eval\
  \ sort_array \"54321\"\n\n/--\ninfo: '12345'\n-/\n#guard_msgs in\n#eval sort_array\
  \ \"34251\"\n\n/--\ninfo: '11111'\n-/\n#guard_msgs in\n#eval sort_array \"11111\"\
  \n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
