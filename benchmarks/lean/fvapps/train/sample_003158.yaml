"vc-description": "# Number encrypting: cypher\n## Part I of Number encrypting Katas\n\
  ***\n\n## Introduction\nBack then when the internet was coming up, most search functionalities\
  \ simply looked for keywords in text to show relevant documents. Hackers weren't\
  \ very keen on having their information displayed on websites, bulletin boards,\
  \ newsgroups or any other place, so they started to replace certain letters in words.\
  \ It started out with simple vowel substitutions like a 4 instead of an A, or a\
  \ 3 instead of an E. This meant that topics like cracking or hacking remained undetected.\n\
  \nHere we will use a reduced version of the *Leet Speak alphabet*, but you can find\
  \ more information [here](http://www.gamehouse.com/blog/leet-speak-cheat-sheet/)\
  \ or at [Wikipedia](https://en.wikipedia.org/wiki/Leet).\n\n## Task\nYou will receive\
  \ a string composed by English words, `string`. You will have to return a cyphered\
  \ version of that string.\n\nThe numbers corresponding to each letter are represented\
  \ at the table below. Notice that different letters can share the same number. In\
  \ those cases, one letter will be upper case and the other one lower case.\n\n\n\
  \  .cell {\n    border: 1px solid white;\n    text-align: center;\n    width: 7%;\n\
  \  }\n  \n  .title {\n    border: 1px solid white;\n    border-bottom: 1px solid\
  \ white;\n    text-align: center;\n    min-width: 11em;\n  }\n  \n  .no-border {border:\
  \ none}\n  \n  table {\n    margin-bottom: 10px\n  }\n\n\n\n  \n    \n    1\n  \
  \  2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    0\n  \n  \n    Upper\
  \ case\n    I\n    R\n    E\n    A\n    S\n    G\n    T\n    B\n    \n    O\n  \n\
  \  \n    Lower case\n    l\n    z\n    e\n    a\n    s\n    b\n    t\n    \n   \
  \ g\n    o\n  \n  \n\n\n\nAny character that is not at the table, does not change\
  \ when cyphered.\n\n## Examples\n\n  * **Input:** \"Hello World\". **Output**: \"\
  H3110 W0r1d\"\n  * **Input:** \"I am your father\". **Output**: \"1 4m y0ur f47h3r\"\
  \n  * **Input:** \"I do not know what else I can test. Be cool. Good luck\". **Output**:\
  \ \"1 d0 n07 kn0w wh47 3153 1 c4n 7357. 83 c001. 600d 1uck\"\n\n## Part II\nIf you\
  \ liked this Kata, you can find the [part II: *Number encrypting: decypher*](https://www.codewars.com/kata/number-encrypting-decypher),\
  \ where your goal is to decypher the strings."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def cypher (s : String) : String := sorry\n\ntheorem cypher_length_preserved\
  \ (s : String) : \n  (cypher s).length = s.length := sorry\n"
"vc-theorems": "theorem cypher_idempotent (s : String) :\n  cypher (cypher s) = cypher\
  \ s := sorry\n\n\ntheorem cypher_maps_chars_correctly (s : String) :\n  cypher s\
  \ = s.map (fun c => match c with\n    | 'I' => '1' | 'R' => '2' | 'E' => '3' | 'A'\
  \ => '4' \n    | 'S' => '5' | 'G' => '6' | 'T' => '7' | 'B' => '8'\n    | 'l' =>\
  \ '1' | 'z' => '2' | 'e' => '3' | 'a' => '4'\n    | 's' => '5' | 'b' => '6' | 't'\
  \ => '7' | 'g' => '9'\n    | 'o' => '0' | 'O' => '0'\n    | c => c) := sorry\n\n\
  \ntheorem cypher_preserves_unmapped (s : String) (c : Char) :\n  c ∉ ['I', 'R',\
  \ 'E', 'A', 'S', 'G', 'T', 'B', 'l', 'z', 'e', 'a', 's', 'b', 't', 'g', 'o', 'O']\
  \ →\n  (c ∈ s.data → c ∈ (cypher s).data) := sorry\n\n/--\ninfo: 'H3110 W0r1d'\n\
  -/\n#guard_msgs in\n#eval cypher \"Hello World\"\n\n/--\ninfo: '1 4m y0ur f47h3r'\n\
  -/\n#guard_msgs in\n#eval cypher \"I am your father\"\n\n/--\ninfo: '1 d0 n07 kn0w\
  \ wh47 3153 1 c4n 7357. 83 c001. 600d 1uck'\n-/\n#guard_msgs in\n#eval cypher \"\
  I do not know what else I can test. Be cool. Good luck\"\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
