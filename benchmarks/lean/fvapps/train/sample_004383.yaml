"vc-description": "## Objective\n\nGiven a number `n` we will define it's sXORe to\
  \ be `0 XOR 1 XOR 2 ... XOR n` where `XOR` is the [bitwise XOR operator](https://en.wikipedia.org/wiki/Bitwise_operation#XOR).\n\
  \nWrite a function that takes `n` and returns it's sXORe.\n\n## Examples\n|    n\
  \    | sXORe n\n|---------|--------         \n| 0       | 0\n| 1       | 1\n| 50\
  \      | 51\n| 1000000 | 1000000\n---"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def sxore (n : Nat) : Nat := sorry\n\ntheorem sxore_matches_manual_xor\
  \ (n : Nat) : \n  sxore n = (List.range (n + 1)).foldl Nat.xor 0 := sorry\n"
"vc-theorems": "theorem sxore_output_pattern (n : Nat) :\n  (n % 4 = 0 → sxore n =\
  \ n) ∧\n  (n % 4 = 1 → sxore n = 1) ∧ \n  (n % 4 = 2 → sxore n = n + 1) ∧\n  (n\
  \ % 4 = 3 → sxore n = 0) := sorry"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded_and_plausible"
