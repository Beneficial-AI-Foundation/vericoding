"vc-description": "Given an array nums of positive integers, return the longest possible\
  \ length of an array prefix of nums, such that it is possible to remove exactly\
  \ one element from this prefix so that every number that has appeared in it will\
  \ have the same number of occurrences.\nIf after removing one element there are\
  \ no remaining elements, it's still considered that every appeared number has the\
  \ same number of ocurrences (0).\n \nExample 1:\nInput: nums = [2,2,1,1,5,3,3,5]\n\
  Output: 7\nExplanation: For the subarray [2,2,1,1,5,3,3] of length 7, if we remove\
  \ nums[4]=5, we will get [2,2,1,1,3,3], so that each number will appear exactly\
  \ twice.\n\nExample 2:\nInput: nums = [1,1,1,2,2,2,3,3,3,4,4,4,5]\nOutput: 13\n\n\
  Example 3:\nInput: nums = [1,1,1,2,2,2]\nOutput: 5\n\nExample 4:\nInput: nums =\
  \ [10,2,8,9,3,8,1,5,2,3,7,6]\nOutput: 8\n\n \nConstraints:\n\n2 <= nums.length <=\
  \ 10^5\n1 <= nums[i] <= 10^5"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def max_equal_freq (nums: List Nat) : Nat :=\n  sorry\n"
"vc-theorems": "theorem max_equal_freq_returns_valid_length (nums: List Nat) : \n\
  \  nums ≠ [] → 0 ≤ max_equal_freq nums ∧ max_equal_freq nums ≤ nums.length :=\n\
  \  sorry\n\n\ntheorem max_equal_freq_handles_unique_values (nums: List Nat) :\n\
  \  nums ≠ [] → (∀ (i j : Fin nums.length), i ≠ j → nums.get i ≠ nums.get j) →\n\
  \  max_equal_freq nums = nums.length :=\n  sorry\n\n\ntheorem max_equal_freq_handles_two_frequencies\
  \ (nums: List Nat) (i: Fin nums.length) :\n  nums.length ≥ 2 →\n  let nums' := nums.eraseDups\
  \ ++ [nums.get i]\n  max_equal_freq nums' = nums'.length :=\n  sorry\n\n\ntheorem\
  \ max_equal_freq_handles_single_value {n: Nat} (k: Nat) :\n  k > 0 →\n  let nums\
  \ := List.replicate k n\n  max_equal_freq nums = nums.length :=\n  sorry\n\n/--\n\
  info: 7\n-/\n#guard_msgs in\n#eval max_equal_freq [2, 2, 1, 1, 5, 3, 3, 5]\n\n/--\n\
  info: 5\n-/\n#guard_msgs in\n#eval max_equal_freq [1, 1, 1, 2, 2, 2]\n\n/--\ninfo:\
  \ 13\n-/\n#guard_msgs in\n#eval max_equal_freq [1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4,\
  \ 4, 5]\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
