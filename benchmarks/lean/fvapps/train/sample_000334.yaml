"vc-description": "Given a positive integer n, find the least number of perfect square\
  \ numbers (for example, 1, 4, 9, 16, ...) which sum to n.\n\nExample 1:\n\n\nInput:\
  \ n = 12\nOutput: 3 \nExplanation: 12 = 4 + 4 + 4.\n\nExample 2:\n\n\nInput: n =\
  \ 13\nOutput: 2\nExplanation: 13 = 4 + 9."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def sqrt (n : Nat) : Nat := sorry\n\ndef numSquares (n : Nat) :\
  \ Nat := sorry\n"
"vc-theorems": "theorem numSquares_bounds (n : Nat) (h : n ≥ 1) : \n  1 ≤ numSquares\
  \ n ∧ numSquares n ≤ 4 := sorry\n\n\n\n\ntheorem numSquares_four_pattern (k m :\
  \ Nat) (h : 4^k * (8*m + 7) > 0) :\n  numSquares (4^k * (8*m + 7)) = 4 := sorry\n\
  \n/--\ninfo: 3\n-/\n#guard_msgs in\n#eval numSquares 12\n\n/--\ninfo: 2\n-/\n#guard_msgs\
  \ in\n#eval numSquares 13\n\n/--\ninfo: 4\n-/\n#guard_msgs in\n#eval numSquares\
  \ 7\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
