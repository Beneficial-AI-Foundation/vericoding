"vc-description": "Chef has a number N, Cheffina challenges the chef to check the\
  \ divisibility of all the permutation of N by 3. If any of the permutations is divisible\
  \ by 3 then print 1 else print 0.\n\n-----Input:-----\n- First-line will contain\
  \ $T$, the number of test cases. Then the test cases follow. \n- Each test case\
  \ contains a single line of input, two integers $N$. \n\n-----Output:-----\nFor\
  \ each test case, output in a single line answer 1 or 0.\n\n-----Constraints-----\n\
  - $1 \\leq T \\leq 10^6$\n- $1 \\leq N \\leq 10^6$\n\n-----Sample Input:-----\n\
  2\n18\n308\n\n-----Sample Output:-----\n1\n0"
"vc-preamble": "import Imports.AllImports\n\ndef check_permutation_divisible_by_3\
  \ (n : Nat) : Nat := sorry\n\ndef sum_digits (n : Nat) : Nat := sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def get_digits (n : Nat) : List Nat := sorry\n\ndef sort_digits\
  \ (n : Nat) : Nat := sorry\n"
"vc-theorems": "theorem check_permutation_returns_binary (n : Nat) :\n  check_permutation_divisible_by_3\
  \ n = 0 âˆ¨ check_permutation_divisible_by_3 n = 1 := sorry\n\n/--\ninfo: 1\n-/\n\
  #guard_msgs in\n#eval check_permutation_divisible_by_3 18\n\n/--\ninfo: 0\n-/\n\
  #guard_msgs in\n#eval check_permutation_divisible_by_3 308\n\n/--\ninfo: 1\n-/\n\
  #guard_msgs in\n#eval check_permutation_divisible_by_3 123\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
