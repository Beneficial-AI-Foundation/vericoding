"vc-description": "Write a comparator for a list of phonetic words for the letters\
  \ of the [greek alphabet](https://en.wikipedia.org/wiki/Greek_alphabet).\n\nA comparator\
  \ is:\n> *a custom comparison function of two arguments (iterable elements) which\
  \ should return a negative, zero or positive number depending on whether the first\
  \ argument is considered smaller than, equal to, or larger than the second argument*\n\
  \n*(source: https://docs.python.org/2/library/functions.html#sorted)*\n\nThe greek\
  \ alphabet is preloded for you as `greek_alphabet`:\n\n```python\ngreek_alphabet\
  \ = (\n    'alpha', 'beta', 'gamma', 'delta', 'epsilon', 'zeta', \n    'eta', 'theta',\
  \ 'iota', 'kappa', 'lambda', 'mu', \n    'nu', 'xi', 'omicron', 'pi', 'rho', 'sigma',\n\
  \    'tau', 'upsilon', 'phi', 'chi', 'psi', 'omega')\n```\n\n## Examples\n\n```python\n\
  greek_comparator('alpha', 'beta')   <  0\ngreek_comparator('psi', 'psi')      ==\
  \ 0\ngreek_comparator('upsilon', 'rho')  >  0\n```"
"vc-preamble": "import Imports.AllImports\n\ndef greek_index (l : GreekLetter) : Nat\
  \ :=\n  match l with\n  | .alpha => 0 | .beta => 1 | .gamma => 2 | .delta => 3\n\
  \  | .epsilon => 4 | .zeta => 5 | .eta => 6 | .theta => 7\n  | .iota => 8 | .kappa\
  \ => 9 | .lambda => 10 | .mu => 11\n  | .nu => 12 | .xi => 13 | .omicron => 14 |\
  \ .pi => 15\n  | .rho => 16 | .sigma => 17 | .tau => 18 | .upsilon => 19\n  | .phi\
  \ => 20 | .chi => 21 | .psi => 22 | .omega => 23\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def greek_comparator (a b : GreekLetter) : Int :=\n  sorry\n"
"vc-theorems": "theorem greek_comparator_reflexive (a : GreekLetter) : \n  greek_comparator\
  \ a a = 0 :=\nsorry\n\n\ntheorem greek_comparator_antisymmetric (a b : GreekLetter)\
  \ :\n  greek_comparator a b = -(greek_comparator b a) :=\nsorry \n\n\ntheorem greek_comparator_transitive\
  \ (a b c : GreekLetter) :\n  greek_comparator a b > 0 → greek_comparator b c > 0\
  \ → greek_comparator a c > 0 :=\nsorry\n\n\ntheorem greek_comparator_position {a\
  \ b : GreekLetter} :\n  a = b → greek_comparator a b = 0 :=\nsorry\n\n\ntheorem\
  \ greek_comparator_order {a b : GreekLetter} :\n  greek_index a < greek_index b\
  \ → greek_comparator a b < 0 :=\nsorry\n\n\ntheorem greek_comparator_order_reverse\
  \ {a b : GreekLetter} :\n  greek_index a > greek_index b → greek_comparator a b\
  \ > 0 :=\nsorry\n\n/--\ninfo: 0\n-/\n#guard_msgs in\n#eval greek_comparator \"chi\"\
  \ \"chi\"\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded"
