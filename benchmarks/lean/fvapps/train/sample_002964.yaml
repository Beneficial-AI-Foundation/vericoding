"vc-description": "###Lucky number\n\nWrite a function to find if a number is lucky\
  \ or not. If the sum of all digits is 0 or multiple of 9 then the number is lucky.\n\
  \n`1892376 => 1+8+9+2+3+7+6 = 36`. 36 is divisble by 9, hence number is lucky.\n\
  \n\nFunction will return `true` for lucky numbers and `false` for others."
"vc-preamble": "import Imports.AllImports\n\ndef is_lucky (n : Nat) : Bool :=\n  sorry\n\
  \n\ndef sum_of_digits (n : Nat) : Nat :=\n  sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def concat_digits (a b : Nat) : Nat :=\n  sorry\n"
"vc-theorems": "theorem lucky_digit_sum_property (n : Nat) :\n  is_lucky n = (sum_of_digits\
  \ n = 0 ∨ sum_of_digits n % 9 = 0) :=\nsorry\n\n\ntheorem lucky_concatenation (n\
  \ : Nat) :\n  is_lucky n → (\n    is_lucky (concat_digits n 9) ∧  \n    is_lucky\
  \ (concat_digits n 99)\n  ) :=\nsorry\n\n\ntheorem lucky_edge_cases :\n  is_lucky\
  \ 0 ∧ is_lucky 9 ∧ is_lucky 99 :=\nsorry\n\n/--\ninfo: True\n-/\n#guard_msgs in\n\
  #eval is_lucky 1892376\n\n/--\ninfo: False\n-/\n#guard_msgs in\n#eval is_lucky 189237\n\
  \n/--\ninfo: True\n-/\n#guard_msgs in\n#eval is_lucky 0\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
