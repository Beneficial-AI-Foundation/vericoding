vc-description: |-
  ###Lucky number

  Write a function to find if a number is lucky or not. If the sum of all digits is 0 or multiple of 9 then the number is lucky.

  `1892376 => 1+8+9+2+3+7+6 = 36`. 36 is divisble by 9, hence number is lucky.


  Function will return `true` for lucky numbers and `false` for others.
vc-preamble: |
  import Imports.AllImports

  def is_lucky (n : Nat) : Bool :=
    sorry


  def sum_of_digits (n : Nat) : Nat :=
    sorry
vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>
vc-definitions: |
  def concat_digits (a b : Nat) : Nat :=
    sorry
vc-theorems: |
  theorem lucky_digit_sum_property (n : Nat) :
    is_lucky n = (sum_of_digits n = 0 ∨ sum_of_digits n % 9 = 0) :=
  sorry


  theorem lucky_concatenation (n : Nat) :
    is_lucky n → (
      is_lucky (concat_digits n 9) ∧  
      is_lucky (concat_digits n 99)
    ) :=
  sorry


  theorem lucky_edge_cases :
    is_lucky 0 ∧ is_lucky 9 ∧ is_lucky 99 :=
  sorry

  /--
  info: True
  -/
  #guard_msgs in
  #eval is_lucky 1892376

  /--
  info: False
  -/
  #guard_msgs in
  #eval is_lucky 189237

  /--
  info: True
  -/
  #guard_msgs in
  #eval is_lucky 0
vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded
