"vc-description": "# Task\n\nElections are in progress!\n\nGiven an array of numbers\
  \ representing votes given to each of the candidates, and an integer which is equal\
  \ to the number of voters who haven't cast their vote yet, find the number of candidates\
  \ who still have a chance to win the election.\n\nThe winner of the election must\
  \ secure strictly more votes than any other candidate. If two or more candidates\
  \ receive the same (maximum) number of votes, assume there is no winner at all.\n\
  \n**Note**: big arrays will be tested.\n\n# Examples\n\n```\nvotes = [2, 3, 5, 2]\n\
  voters = 3\n\nresult = 2\n```\n\n* Candidate `#3` may win, because he's already\
  \ leading.\n* Candidate `#2` may win, because with 3 additional votes he may become\
  \ the new leader.\n* Candidates `#1` and `#4` have no chance, because in the best\
  \ case scenario each of them can only tie with the candidate `#3`.\n\n___\n\n```\n\
  votes = [3, 1, 1, 3, 1]\nvoters = 2\n\nresult = 2\n```\n\n* Candidate `#1` and `#4`\
  \ can become leaders if any of them gets the votes.\n* If any other candidate gets\
  \ the votes, they will get tied with candidates `#1` and `#4`.\n\n___\n\n```\nvotes\
  \ = [1, 3, 3, 1, 1]\nvoters = 0\n\nresult = 0\n```\n\n* There're no additional votes\
  \ to cast, and there's already a tie."
"vc-preamble": "import Imports.AllImports\n\ndef elections_winners (votes: List Nat)\
  \ (k: Nat) : Nat :=\n  sorry\n\n\ndef list_maximum (l: List Nat) (h: l.length >\
  \ 0) : Nat :=\n  sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def list_minimum (l: List Nat) (h: l.length > 0) : Nat :=\n  sorry\n"
"vc-theorems": "theorem elections_winners_properties_result_bounds\n  (votes: List\
  \ Nat) (k: Nat) (h: votes.length > 0) :\n  let result := elections_winners votes\
  \ k\n  0 ≤ result ∧ result ≤ votes.length :=\n  sorry\n\n\ntheorem elections_winners_k_zero_result\
  \ \n  (votes: List Nat) (h: votes.length > 0) :\n  let result := elections_winners\
  \ votes 0\n  result = 0 ∨ result = 1 :=\n  sorry\n\n/--\ninfo: 2\n-/\n#guard_msgs\
  \ in\n#eval elections_winners [2, 3, 5, 2] 3\n\n/--\ninfo: 0\n-/\n#guard_msgs in\n\
  #eval elections_winners [1, 3, 3, 1, 1] 0\n\n/--\ninfo: 2\n-/\n#guard_msgs in\n\
  #eval elections_winners [3, 1, 1, 3, 1] 2\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded_and_plausible"
