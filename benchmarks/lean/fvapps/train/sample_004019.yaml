"vc-description": "Your task is to make function, which returns the sum of a sequence\
  \ of integers.\n\nThe sequence is defined by 3 non-negative values: **begin**, **end**,\
  \ **step**.\n\nIf **begin** value is greater than the **end**, function should returns\
  \ **0**\n\n*Examples*\n\n~~~if-not:nasm\n\n~~~\n\nThis is the first kata in the\
  \ series:\n\n1) Sum of a sequence (this kata)  \n2) [Sum of a Sequence [Hard-Core\
  \ Version]](https://www.codewars.com/kata/sum-of-a-sequence-hard-core-version/javascript)"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def sequenceSum (a b c : Int) : Int :=\n  sorry\n"
"vc-theorems": "theorem sequence_sum_zero_when_start_greater_than_end\n  {s e p :\
  \ Int}\n  (h1 : p > 0)\n  (h2 : s > e) :\n  sequenceSum s e p = 0 :=\nsorry\n\n\n\
  theorem sequence_sum_equals_arithmetic_sum\n  {s e p : Int}\n  (h1 : p > 0)\n  (h2\
  \ : s ≤ e) :\n  let n := (e - s) / p + 1\n  sequenceSum s e p = n * (2 * s + (n\
  \ - 1) * p) / 2 :=\nsorry\n\n\ntheorem sequence_sum_equals_manual_sum\n  {s e p\
  \ : Int}\n  (h1 : p > 0)\n  (h2 : s ≤ e) :\n  sequenceSum s e p = sequenceSum s\
  \ e p :=\nsorry\n\n\ntheorem sequence_sum_equal_bounds\n  {s p : Int}\n  (h1 : p\
  \ > 0) :\n  sequenceSum s s p = s :=\nsorry\n\n/--\ninfo: 12\n-/\n#guard_msgs in\n\
  #eval sequence_sum 2 6 2\n\n/--\ninfo: 15\n-/\n#guard_msgs in\n#eval sequence_sum\
  \ 1 5 1\n\n/--\ninfo: 0\n-/\n#guard_msgs in\n#eval sequence_sum 16 15 3\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded"
