"vc-description": "Write a program that reads numbers until -1 is not given.\nThe\
  \ program finds how many of the given numbers are more than 30, $N$.\nIt also finds\
  \ the average weighted sum of even numbers, $A$.\nThe weight of the $i$th number\
  \ is defined as the position of the number (1 based indexing) times the number.\
  \ To find the average weighted sum, you need to add all these weights for the even\
  \ numbers, then divide the sum by the sum of the positions of the numbers.\n\n-----Input:-----\n\
  - First line will contain $T$, number of testcases. Then the testcases follow. \n\
  - Each testcase contains some numbers, terminated by -1\n\n-----Output:-----\nFor\
  \ each testcase, output in a single line the count of numbers that are greater than\
  \ 30, $N$, and the average weighted sum of the even numbers, $A$, separated by a\
  \ space. Make sure to set the precision of the average weighted sum to 2 places\
  \ after the decimal point.\n\n-----Constraints-----\n- $1 \\leq T \\leq 1000$\n\
  - $2 \\leq N \\leq 1000$\n\n-----Sample Input:-----\n1\n33 100 77 42 12 -1\n\n-----Sample\
  \ Output:-----\n4 38.91\n\n-----EXPLANATION:-----\nIn the series of numbers 33 100\
  \ 77 42 12 -1, the count of numbers greater than 30 is 4\nThe average weighted sum\
  \ of the even numbers is given by:\n((2 * 100) + (4 * 42) + (5 * 12)) / (2 + 4 +\
  \ 5)"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def solve_weighted_sum (numbers : List Int) : Int × Float := sorry\n\
  \ntheorem no_great_numbers {nums : List Int} (h : ∀ n ∈ nums, n ≤ 30) :\n  (solve_weighted_sum\
  \ (nums ++ [-1])).1 = 0 := sorry\n"
"vc-theorems": "theorem all_great_numbers {nums : List Int} (h : ∀ n ∈ nums, n > 30)\
  \ :\n  (solve_weighted_sum (nums ++ [-1])).1 = nums.length := sorry\n\n\ntheorem\
  \ average_bounds {nums : List Int} (h : ∀ n ∈ nums, n ≥ 0) : \n  let avg := (solve_weighted_sum\
  \ (nums ++ [-1])).2\n  avg = 0 ∨ avg ≥ 0 := sorry"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded"
