"vc-description": "The goal of this Kata is to reduce the passed integer to a single\
  \ digit (if not already) by converting the number to binary, taking the sum of the\
  \ binary digits, and if that sum is not a single digit then repeat the process.\n\
  \n- n will be an integer such that 0 < n < 10^20\n- If the passed integer is already\
  \ a single digit there is no need to reduce\n\nFor example given 5665 the function\
  \ should return 5:\n\n```\n5665 --> (binary) 1011000100001\n1011000100001 --> (sum\
  \ of binary digits) 5\n```\n\n\nGiven 123456789 the function should return 1:\n\n\
  ```\n123456789 --> (binary) 111010110111100110100010101\n111010110111100110100010101\
  \ --> (sum of binary digits) 16\n16 --> (binary) 10000\n10000 --> (sum of binary\
  \ digits) 1\n```"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def single_digit (n : Nat) : Nat :=\n  sorry\n"
"vc-theorems": "theorem single_digit_result_bounds (n : Nat) :\n  0 ≤ single_digit\
  \ n ∧ single_digit n ≤ 9 :=\n  sorry\n\n\ntheorem single_digit_fixed_point (n :\
  \ Nat) :\n  single_digit (single_digit n) = single_digit n :=\n  sorry\n\n\ntheorem\
  \ single_digit_identity (n : Nat) (h : n ≤ 9) :\n  single_digit n = n :=\n  sorry\n\
  \n/--\ninfo: 5\n-/\n#guard_msgs in\n#eval single_digit 5\n\n/--\ninfo: 8\n-/\n#guard_msgs\
  \ in\n#eval single_digit 999\n\n/--\ninfo: 1\n-/\n#guard_msgs in\n#eval single_digit\
  \ 1234444123\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded_and_plausible"
