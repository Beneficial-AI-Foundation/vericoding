"vc-description": "Challenge:\n\nGiven a two-dimensional array, return a new array\
  \ which carries over only those arrays from the original, which were not empty and\
  \ whose items are all of the same type (i.e. homogenous). For simplicity, the arrays\
  \ inside the array will only contain characters and integers.\n\nExample:\n\nGiven\
  \ [[1, 5, 4], ['a', 3, 5], ['b'], [], ['1', 2, 3]], your function should return\
  \ [[1, 5, 4], ['b']].\n\nAddendum:\n\nPlease keep in mind that for this kata, we\
  \ assume that empty arrays are not homogenous.\n\nThe resultant arrays should be\
  \ in the order they were originally in and should not have its values changed.\n\
  \nNo implicit type casting is allowed. A subarray [1, '2'] would be considered illegal\
  \ and should be filtered out."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def filter_homogenous {α} (arrays : List (List α)) : List (List\
  \ α) := sorry\n\ntheorem filter_homogenous_subset {α} (arrays : List (List α)) :\n\
  \  ∀ x, x ∈ filter_homogenous arrays → x ∈ arrays := sorry\n"
"vc-theorems": "theorem filter_homogenous_nonempty {α} (arrays : List (List α)) :\n\
  \  ∀ x, x ∈ filter_homogenous arrays → x ≠ [] := sorry\n\n-- Note: Since Lean's\
  \ type system is much stronger than Python's runtime type checking,\n-- we can't\
  \ directly translate the type checking properties. Instead we'll focus on the\n\
  -- structural properties we can express:\n\n\ntheorem filter_homogenous_subset_and_nonempty\
  \ {α} (arrays : List (List α)) :\n  let result := filter_homogenous arrays\n  (∀\
  \ x, x ∈ result → x ∈ arrays) ∧\n  (∀ x, x ∈ result → x ≠ []) := sorry\n\n\ntheorem\
  \ filter_homogenous_int_arrays (arrays : List (List Int)) :\n  let result := filter_homogenous\
  \ arrays\n  (∀ arr, arr ∈ result → arr ≠ []) ∧\n  (∀ arr, arr ∈ result → arr ∈ arrays)\
  \ := sorry\n\n/--\ninfo: expected1\n-/\n#guard_msgs in\n#eval filter_homogenous\
  \ [[1, 5, 4], [\"a\", 3, 5], [\"b\"], [], [\"1\", 2, 3]]\n\n/--\ninfo: expected2\n\
  -/\n#guard_msgs in\n#eval filter_homogenous [[123, 234, 432], [\"\", \"abc\"], [\"\
  \"], [\"\", 1], [\"\", \"1\"], []]\n\n/--\ninfo: expected3\n-/\n#guard_msgs in\n\
  #eval filter_homogenous [[1, 2, 3], [\"1\", \"2\", \"3\"], [\"1\", 2, 3]]\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
