"vc-description": "There are N dominoes in a line, and we place each domino vertically\
  \ upright.\nIn the beginning, we simultaneously push some of the dominoes either\
  \ to the left or to the right.\n\nAfter each second, each domino that is falling\
  \ to the left pushes the adjacent domino on the left.\nSimilarly, the dominoes falling\
  \ to the right push their adjacent dominoes standing on the right.\nWhen a vertical\
  \ domino has dominoes falling on it from both sides, it stays still due to the balance\
  \ of the forces.\nFor the purposes of this question, we will consider that a falling\
  \ domino expends no additional force to a falling or already fallen domino.\nGiven\
  \ a string \"S\" representing the initial state. S[i] = 'L', if the i-th domino\
  \ has been pushed to the left; S[i] = 'R', if the i-th domino has been pushed to\
  \ the right; S[i] = '.', if the i-th domino has not been pushed.\nReturn a string\
  \ representing the final state. \nExample 1:\nInput: \".L.R...LR..L..\"\nOutput:\
  \ \"LL.RR.LLRRLL..\"\n\nExample 2:\nInput: \"RR.L\"\nOutput: \"RR.L\"\nExplanation:\
  \ The first domino expends no additional force on the second domino.\n\nNote:\n\n\
  0 <= N <= 10^5\nString dominoes contains only 'L', 'R' and '.'"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def push_dominoes (s : String) : String := sorry\n\ntheorem length_preserved\
  \ (s : String) :\n  s.all (fun c => c = '.' ∨ c = 'L' ∨ c = 'R') →\n  (push_dominoes\
  \ s).length = s.length := sorry\n"
"vc-theorems": "theorem valid_chars_preserved (s : String) :\n  s.all (fun c => c\
  \ = '.' ∨ c = 'L' ∨ c = 'R') →\n  (push_dominoes s).all (fun c => c = '.' ∨ c =\
  \ 'L' ∨ c = 'R') := sorry\n\n\ntheorem idempotent (s : String) :\n  s.all (fun c\
  \ => c = '.' ∨ c = 'L' ∨ c = 'R') →\n  push_dominoes (push_dominoes s) = push_dominoes\
  \ s := sorry\n\n\ntheorem no_dots_unchanged (s : String) :\n  s.all (fun c => c\
  \ = 'L' ∨ c = 'R') →\n  push_dominoes s = s := sorry\n\n\ntheorem all_dots_stay_dots\
  \ (s : String) :\n  s.all (fun c => c = '.') →\n  (push_dominoes s).all (fun c =>\
  \ c = '.') := sorry\n\n/--\ninfo: 'LL.RR.LLRRLL..'\n-/\n#guard_msgs in\n#eval push_dominoes\
  \ \".L.R...LR..L..\"\n\n/--\ninfo: 'RR.L'\n-/\n#guard_msgs in\n#eval push_dominoes\
  \ \"RR.L\"\n\n/--\ninfo: '...'\n-/\n#guard_msgs in\n#eval push_dominoes \"...\"\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
