"vc-description": "You are given an array x of n positive numbers. You start at point\
  \ (0,0) and moves x[0] metres to the north, then x[1] metres to the west,\n    x[2]\
  \ metres to the south,\n    x[3] metres to the east and so on. In other words, after\
  \ each move your direction changes\n    counter-clockwise.\n\n\n    Write a one-pass\
  \ algorithm with O(1) extra space to determine, if your path crosses itself, or\
  \ not.\n\n\n\nExample 1:\n\nGiven x = [2, 1, 1, 2],\n?????\n?   ?\n???????>\n  \
  \  ?\n\nReturn true (self crossing)\n\n\n\n\nExample 2:\n\nGiven x = [1, 2, 3, 4],\n\
  ????????\n?      ?\n?\n?\n?????????????>\n\nReturn false (not self crossing)\n\n\
  \n\n\nExample 3:\n\nGiven x = [1, 1, 1, 1],\n?????\n?   ?\n?????>\n\nReturn true\
  \ (self crossing)\n\n\n\nCredits:Special thanks to @dietpepsi for adding this problem\
  \ and creating all test cases."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def isSelfCrossing (moves : List Int) : Bool := sorry\n\ntheorem\
  \ short_sequences_never_cross (moves: List Int)\n  (h: moves.length < 4)\n  (h_nonneg\
  \ : ∀ x ∈ moves, x ≥ 0) :\n  ¬(isSelfCrossing moves) := sorry\n"
"vc-theorems": "theorem equal_square_forms_crossing (moves: List Int)\n  (h_len: moves.length\
  \ = 4)\n  (h_pos: ∀ x ∈ moves, x > 0)\n  (h_equal: ∀ i j, i < moves.length → j <\
  \ moves.length → moves[i]! = moves[j]!) :\n  isSelfCrossing moves := sorry\n\n\n\
  theorem growing_spiral_never_crosses (moves: List Int)\n  (h_len: moves.length =\
  \ 4)\n  (h_pos: ∀ x ∈ moves, x > 0)\n  (h_increasing: ∀ i, i + 1 < moves.length\
  \ → moves[i]! < moves[i+1]!) :\n  ¬(isSelfCrossing moves) := sorry\n\n\ntheorem\
  \ negative_moves_invalid (moves: List Int)\n  (h: ∃ x ∈ moves, x < 0) :\n  isSelfCrossing\
  \ moves = false := sorry\n\n\ntheorem delayed_crossing_occurs (moves: List Int)\n\
  \  (h_len: moves.length = 6)\n  (h_nonneg: ∀ x ∈ moves, x ≥ 0)\n  (h_cross: moves[5]!\
  \ ≥ moves[3]! ∧ moves[4]! = moves[2]!) :\n  isSelfCrossing moves := sorry\n\n/--\n\
  info: True\n-/\n#guard_msgs in\n#eval is_self_crossing [2, 1, 1, 2]\n\n/--\ninfo:\
  \ False\n-/\n#guard_msgs in\n#eval is_self_crossing [1, 2, 3, 4]\n\n/--\ninfo: True\n\
  -/\n#guard_msgs in\n#eval is_self_crossing [1, 1, 1, 1]\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
