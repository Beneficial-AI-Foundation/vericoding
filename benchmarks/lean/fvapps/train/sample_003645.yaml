"vc-description": "A new school year is approaching, which also means students will\
  \ be taking tests. \n\nThe tests in this kata are to be graded in different ways.\
  \ A certain number of points will be given for each correct answer and a certain\
  \ number of points will be deducted for each incorrect answer. For ommitted answers,\
  \ points will either be awarded, deducted, or no points will be given at all.\n\n\
  Return the number of points someone has scored on varying tests of different lengths.\n\
  \nThe given parameters will be:\n\n* An array containing a series of `0`s, `1`s,\
  \ and `2`s, where `0` is a correct answer, `1` is an omitted answer, and `2` is\
  \ an incorrect answer.\n* The points awarded for correct answers\n* The points awarded\
  \ for omitted answers (note that this may be negative)\n* The points **deducted**\
  \ for incorrect answers (hint: this value has to be subtracted)\n\n\n**Note:**\n\
  The input will always be valid (an array and three numbers)\n\n\n## Examples\n\n\
  \\#1:\n```\n[0, 0, 0, 0, 2, 1, 0], 2, 0, 1  -->  9\n```\nbecause:\n* 5 correct answers:\
  \ `5*2 = 10`\n* 1 omitted answer: `1*0 = 0`\n* 1 wrong answer: `1*1 = 1`\n\nwhich\
  \ is: `10 + 0 - 1 = 9`\n\n\\#2:\n```\n[0, 1, 0, 0, 2, 1, 0, 2, 2, 1], 3, -1, 2)\
  \  -->  3\n```\nbecause: `4*3 + 3*-1 - 3*2 = 3`"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def score_test (tests : List Nat) (r w o : Int) : Int :=\n  sorry\n"
"vc-theorems": "theorem score_test_properties (tests : List Nat) (r w o : Int)\n \
  \ (h : ∀ x ∈ tests, x ≤ 2) (h2 : tests.length > 0) :\n  score_test tests r w o =\
  \ \n    (tests.filter (· = 0)).length * r + \n    (tests.filter (· = 1)).length\
  \ * o - \n    (tests.filter (· = 2)).length * w ∧\n  tests.length = (tests.filter\
  \ (· = 0)).length + \n                 (tests.filter (· = 1)).length + \n      \
  \           (tests.filter (· = 2)).length :=\n  sorry\n\n\ntheorem all_right_answers\
  \ (tests : List Nat) (r w o : Int)\n  (h : ∀ x ∈ tests, x = 0) :\n  score_test tests\
  \ r w o = tests.length * r :=\n  sorry\n\n\ntheorem all_omitted (tests : List Nat)\
  \ (r w o : Int)\n  (h : ∀ x ∈ tests, x = 1) :\n  score_test tests r w o = tests.length\
  \ * o :=\n  sorry\n\n\ntheorem all_wrong (tests : List Nat) (r w o : Int)\n  (h\
  \ : ∀ x ∈ tests, x = 2) :\n  score_test tests r w o = tests.length * (-w) :=\n \
  \ sorry\n\n/--\ninfo: 9\n-/\n#guard_msgs in\n#eval score_test [0, 0, 0, 0, 2, 1,\
  \ 0] 2 0 1\n\n/--\ninfo: 3\n-/\n#guard_msgs in\n#eval score_test [0, 1, 0, 0, 2,\
  \ 1, 0, 2, 2, 1] 3 -1 2\n\n/--\ninfo: 70\n-/\n#guard_msgs in\n#eval score_test [0,\
  \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] 5 -1 2\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
