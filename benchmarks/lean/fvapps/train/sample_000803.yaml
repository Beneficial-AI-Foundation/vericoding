"vc-description": "Chef likes problems which using some math. Now he asks you to solve\
  \ next one. You have 4 integers, Chef wondering is there non-empty subset which\
  \ has sum equals 0.\n\n-----Input-----\nThe first line of input contains T - number\
  \ of test cases. \nEach of the next T lines containing four pairwise distinct integer\
  \ numbers - a, b, c, d.\n\n-----Output-----\nFor each test case output \"Yes\",\
  \ if possible to get 0 by choosing non-empty subset of {a, b, c, d} with sum equal\
  \ 0, or \"No\" in another case.\n\n-----Constraints-----\n- 1 ≤ T ≤ 103\n- -106\
  \ ≤ a, b, c, d ≤ 106 \n\n-----Example-----\nInput:\n3\n1 2 0 3\n1 2 4 -1\n1 2 3\
  \ 4\n\nOutput:\nYes\nYes\nNo\n\n-----Explanation-----\nExample case 1. We can choose\
  \ subset {0} \nExample case 2. We can choose subset {-1, 1}"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def can_get_zero_sum_subset (a b c d : Int) : String := sorry\n\
  \ntheorem zerosum_gives_yes_result {a b c d : Int} (h : a = 0 ∨ b = 0 ∨ c = 0 ∨\
  \ d = 0) : \n  can_get_zero_sum_subset a b c d = \"Yes\" := sorry\n"
"vc-theorems": "theorem opposite_pairs_give_yes_result {a b c d : Int} \n  (h : a\
  \ = -b ∨ a = -c ∨ a = -d ∨ b = -c ∨ b = -d ∨ c = -d) :\n  can_get_zero_sum_subset\
  \ a b c d = \"Yes\" := sorry\n\n\ntheorem all_positive_gives_no_result {a b c d\
  \ : Int} \n  (h : a > 0 ∧ b > 0 ∧ c > 0 ∧ d > 0) :\n  can_get_zero_sum_subset a\
  \ b c d = \"No\" := sorry\n\n\ntheorem all_negative_gives_no_result {a b c d : Int}\n\
  \  (h : a < 0 ∧ b < 0 ∧ c < 0 ∧ d < 0) :\n  can_get_zero_sum_subset a b c d = \"\
  No\" := sorry\n\n\ntheorem result_is_yes_or_no (a b c d : Int) :\n  (can_get_zero_sum_subset\
  \ a b c d = \"Yes\") ∨ \n  (can_get_zero_sum_subset a b c d = \"No\") := sorry\n\
  \n\ntheorem single_zero_gives_yes (x : Int) :\n  can_get_zero_sum_subset x 0 (x+1)\
  \ (x+2) = \"Yes\" := sorry\n\n\ntheorem opposite_pair_gives_yes (x : Int) :\n  can_get_zero_sum_subset\
  \ x (-x) (x+1) (x+2) = \"Yes\" := sorry\n\n\ntheorem all_positive_sequence_gives_no\
  \ (x : Int) (h : x > 0) :\n  can_get_zero_sum_subset x (x+1) (x+2) (x+3) = \"No\"\
  \ := sorry"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded"
