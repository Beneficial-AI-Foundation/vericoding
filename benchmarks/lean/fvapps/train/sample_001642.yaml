"vc-description": "Spider-Man (\"Spidey\") needs to get across town for a date with\
  \ Mary Jane and his web-shooter is low on web fluid. He travels by slinging his\
  \ web rope to latch onto a building rooftop, allowing him to swing to the opposite\
  \ end of the latch point.\nWrite a function that, when given a list of buildings,\
  \ returns a list of optimal rooftop latch points for minimal web expenditure.\n\
  Input\nYour function will receive an array whose elements are subarrays in the form\
  \ [h,w] where h and w represent the height and width, respectively, of each building\
  \ in sequence\nOutput\nAn array of latch points (integers) to get from 0 to the\
  \ end of the last building in the input list\nTechnical Details\n\nAn optimal latch\
  \ point is one that yields the greatest horizontal distance gain relative to length\
  \ of web rope used. Specifically, the highest horizontal distance yield per length\
  \ unit of web rope used. Give this value rounded down to the nearest integer as\
  \ a distance from Spidey's origin point (0)\nAt the start of each swing, Spidey\
  \ selects a latch point based on his current position.\nAt the end of each swing,\
  \ Spidey ends up on the opposite side of the latch point equal to his distance from\
  \ the latch point before swing.\nSpidey's initial altitude is 50, and will always\
  \ be the same at the start and end of each swing. His initial horizontal position\
  \ is 0.\nTo avoid collision with people/traffic below, Spidey must maintain a minimum\
  \ altitude of 20 at all times.\nBuilding height (h) range limits: 125 <= h < 250\n\
  Building width (w) range limits: 50 <= w <= 100\nInputs will always be valid.\n\n\
  Test Example\n\n- Spidey's initial position is at `0`. His first latch point is\
  \ marked at `76` (horizontal position) on `buildings[0]`.\n- At the end of the swing,\
  \ Spidey's position is at the point marked `B` with a horizontal position of `152`.\
  \ The green arc represents Spidey's path during swing.\n- The marker on the 3rd\
  \ building and the arc going from point `B` to point `C` represent the latch point\
  \ (`258`) and arc path for the next swing.\n\n```python\nbuildings = [[162,76],\
  \ [205,96], [244,86], [212,68], [174,57], [180,89], [208,70], [214,82], [181,69],\
  \ [203,67]]\n\nspidey_swings(buildings)# [76,258,457,643,748]"
"vc-preamble": "import Imports.AllImports\n\ndef spidey_swings (buildings : BuildingParams)\
  \ : List Int :=\n  sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def sum_widths (buildings : BuildingParams) : Int :=\n  List.foldl\
  \ (fun acc b => acc + b.width) 0 buildings\n\n@[simp] theorem spidey_swings_nonempty\
  \ {buildings : BuildingParams} \n  (h : buildings ≠ []) : \n  (spidey_swings buildings).length\
  \ > 0 :=\nsorry\n"
"vc-theorems": "theorem spidey_swings_result_elements_increasing {buildings : BuildingParams}\n\
  \  (h : buildings ≠ []) :\n  ∀ i, i < (spidey_swings buildings).length - 1 → \n\
  \    (spidey_swings buildings)[i]! < (spidey_swings buildings)[i+1]! :=\nsorry\n\
  \n\ntheorem spidey_swings_within_bounds {buildings : BuildingParams}\n  (h : buildings\
  \ ≠ []) :\n  let total_width := sum_widths buildings\n  ∀ pos ∈ spidey_swings buildings,\
  \ 0 ≤ pos ∧ pos ≤ total_width :=\nsorry\n\n\ntheorem spidey_swings_min_height {buildings\
  \ : BuildingParams}\n  (h : buildings ≠ []) \n  (b : Building) (hb : b ∈ buildings)\
  \ :\n  b.height ≥ 50 :=\nsorry\n\n\ntheorem spidey_swings_uniform_height_bound \n\
  \  {buildings : BuildingParams}\n  (h₁ : buildings ≠ [])\n  (h₂ : ∀ (b : Building),\
  \ b ∈ buildings → b.height = 100)\n  (h₃ : ∀ (b : Building), b ∈ buildings → 10\
  \ ≤ b.width ∧ b.width ≤ 20)\n  (h₄ : buildings.length ≤ 5) :\n  (spidey_swings buildings).getLast!\
  \ < sum_widths buildings :=\nsorry\n\n/--\ninfo: [76, 258, 457, 643, 748]\n-/\n\
  #guard_msgs in\n#eval spidey_swings [[162, 76], [205, 96], [244, 86], [212, 68],\
  \ [174, 57], [180, 89], [208, 70], [214, 82], [181, 69], [203, 67]]\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
