"vc-description": "There are N islands in the sea, enumerated from 1 to N. Each of\
  \ them is so small that we can consider them as points on a plane. You are given\
  \ the Cartesian coordinates of all islands. X-axis is directed towards East and\
  \ Y-axis is directed towards North.\nYou need to illuminate all the islands. To\
  \ do this, you can place lighthouses on some of the islands. You can't place more\
  \ than one lighthouse on any single island. Each lighthouse can light only one of\
  \ the 4 quadrants: North-Western, North-Eastern, South-Western or South-Eastern.\
  \ If some island is located on the border of an illuminated quadrant, it is considered\
  \ to be illuminated as well. Note that this means that a lighthouse always illuminates\
  \ it's own island as well.\nFind the smallest possible number of lighthouses required\
  \ to illuminate all the islands (say L). Describe their configurations — positions\
  \ and quadrants illuminated — as well.\n\n-----Input-----\nThe first line of input\
  \ contains an integer T denoting the number of test cases. The description of T\
  \ test cases follows.\nThe first line of each test case contains a single integer\
  \ N denoting the number of islands.\nThe ith of the following N lines contains two\
  \ integers Xi and Yi denoting the coordinates of the ith island.\n\n-----Output-----\n\
  For each test case, first line of output must contain minimum number of lighthouses\
  \ required to illuminate all islands, L.\nFollowing L lines must describe configuration\
  \ of the lighthouses, one configuration per line. Description of a lighthouse configuration\
  \ consists of the number of the island where the lighthouse is placed, and the direction\
  \ of the quadrant (NW for North-Western, NE for North-Eastern, SW for South-Western,\
  \ SE for South-Eastern) illuminated by it, separated by a single space.\nIf there\
  \ are many possible placements, output any one of them.\n\n-----Constraints-----\n\
  - 1 ≤ T ≤ 1000\n- 1 ≤ N ≤ 105\n- The sum of N over all test cases doesn't exceed\
  \ 5*105\n- Absolute value of each coordinate doesn't exceed 109\n- No two given\
  \ islands coincide.\n\n-----Subtasks-----\nSubtask 1: (15 points)\n- 1 ≤ N ≤ 8\n\
  - Absolute value of each coordinate doesn't exceed 50\n\nSubtask 2: (85 points)\n\
  - Original constraints\n\n-----Example-----\nInput:\n2\n5\n0 0\n1 0\n2 0\n0 -1\n\
  0 -2\n4\n5 0\n-5 0\n0 5\n0 -5\n\nOutput:\n1\n3 SW\n2\n4 NE\n2 NE\n\n-----Explanation-----\n\
  Example case 1. Also we can place lighthouse on 1st or 5th island.\nExample case\
  \ 2. Notice that some islands can be illuminated by more than 1 lighthouse."
"vc-preamble": "import Imports.AllImports\n\ndef LighthouseConfig := Nat × Direction\n\
  \ndef solve_lighthouse_placement (coords : List IslandCoord) : List LighthouseConfig\
  \ :=\n  sorry\n\n\ndef format_output (configs : List LighthouseConfig) : List String\
  \ :=\n  sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def direction_to_string : Direction → String\n  | Direction.NE\
  \ => \"NE\"\n  | Direction.SE => \"SE\"\n  | Direction.SW => \"SW\"\n  | Direction.NW\
  \ => \"NW\"\n"
"vc-theorems": "theorem lighthouse_placement_valid {coords : List IslandCoord} :\n\
  \  let result := solve_lighthouse_placement coords\n  (∀ x ∈ result, x.1 ≤ coords.length)\
  \ ∧ \n  (1 ≤ result.length ∧ result.length ≤ 2) := \nsorry\n\n\ntheorem format_output_valid\
  \ {coords : List IslandCoord} :\n  let lighthouse_configs := solve_lighthouse_placement\
  \ coords\n  let result := format_output lighthouse_configs\n  (result.head? = some\
  \ (toString lighthouse_configs.length)) ∧\n  (result.length = lighthouse_configs.length\
  \ + 1) :=\nsorry"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded"
