"vc-description": "You are given three sequences: $a_1, a_2, \\ldots, a_n$; $b_1,\
  \ b_2, \\ldots, b_n$; $c_1, c_2, \\ldots, c_n$.\n\nFor each $i$, $a_i \\neq b_i$,\
  \ $a_i \\neq c_i$, $b_i \\neq c_i$.\n\nFind a sequence $p_1, p_2, \\ldots, p_n$,\
  \ that satisfy the following conditions:\n\n\n\n $p_i \\in \\{a_i, b_i, c_i\\}$\n\
  \n $p_i \\neq p_{(i \\mod n) + 1}$.\n\nIn other words, for each element, you need\
  \ to choose one of the three possible values, such that no two adjacent elements\
  \ (where we consider elements $i,i+1$ adjacent for $i<n$ and also elements $1$ and\
  \ $n$) will have equal value.\n\nIt can be proved that in the given constraints\
  \ solution always exists. You don't need to minimize/maximize anything, you need\
  \ to find any proper sequence.\n\n\n-----Input-----\n\nThe first line of input contains\
  \ one integer $t$ ($1 \\leq t \\leq 100$): the number of test cases.\n\nThe first\
  \ line of each test case contains one integer $n$ ($3 \\leq n \\leq 100$): the number\
  \ of elements in the given sequences.\n\nThe second line contains $n$ integers $a_1,\
  \ a_2, \\ldots, a_n$ ($1 \\leq a_i \\leq 100$).\n\nThe third line contains $n$ integers\
  \ $b_1, b_2, \\ldots, b_n$ ($1 \\leq b_i \\leq 100$).\n\nThe fourth line contains\
  \ $n$ integers $c_1, c_2, \\ldots, c_n$ ($1 \\leq c_i \\leq 100$).\n\nIt is guaranteed\
  \ that $a_i \\neq b_i$, $a_i \\neq c_i$, $b_i \\neq c_i$ for all $i$.\n\n\n-----Output-----\n\
  \nFor each test case, print $n$ integers: $p_1, p_2, \\ldots, p_n$ ($p_i \\in \\\
  {a_i, b_i, c_i\\}$, $p_i \\neq p_{i \\mod n + 1}$).\n\nIf there are several solutions,\
  \ you can print any.\n\n\n-----Example-----\nInput\n5\n3\n1 1 1\n2 2 2\n3 3 3\n\
  4\n1 2 1 2\n2 1 2 1\n3 4 3 4\n7\n1 3 3 1 1 1 1\n2 4 4 3 2 2 4\n4 2 2 2 4 4 2\n3\n\
  1 2 1\n2 3 3\n3 1 2\n10\n1 1 1 2 2 2 3 3 3 1\n2 2 2 3 3 3 1 1 1 2\n3 3 3 1 1 1 2\
  \ 2 2 3\n\nOutput\n1 2 3\n1 2 1 2\n1 3 4 3 2 4 2\n1 3 2\n1 2 3 1 2 3 1 2 3 2\n\n\
  \n\n-----Note-----\n\nIn the first test case $p = [1, 2, 3]$.\n\nIt is a correct\
  \ answer, because:\n\n  $p_1 = 1 = a_1$, $p_2 = 2 = b_2$, $p_3 = 3 = c_3$  $p_1\
  \ \\neq p_2 $, $p_2 \\neq p_3 $, $p_3 \\neq p_1$ \n\nAll possible correct answers\
  \ to this test case are: $[1, 2, 3]$, $[1, 3, 2]$, $[2, 1, 3]$, $[2, 3, 1]$, $[3,\
  \ 1, 2]$, $[3, 2, 1]$.\n\nIn the second test case $p = [1, 2, 1, 2]$.\n\nIn this\
  \ sequence $p_1 = a_1$, $p_2 = a_2$, $p_3 = a_3$, $p_4 = a_4$. Also we can see,\
  \ that no two adjacent elements of the sequence are equal.\n\nIn the third test\
  \ case $p = [1, 3, 4, 3, 2, 4, 2]$.\n\nIn this sequence $p_1 = a_1$, $p_2 = a_2$,\
  \ $p_3 = b_3$, $p_4 = b_4$, $p_5 = b_5$, $p_6 = c_6$, $p_7 = c_7$. Also we can see,\
  \ that no two adjacent elements of the sequence are equal."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def solve_sequence (n : Nat) (a b c : List Nat) : List Nat :=\n\
  \  sorry\n"
"vc-theorems": "theorem solve_sequence_length {n : Nat} {a b c : List Nat} \n  (h1\
  \ : n ≥ 2)\n  (h2 : a.length = n)\n  (h3 : b.length = n) \n  (h4 : c.length = n)\n\
  \  (h5 : ∀ i, i < n → a[i]! = 1)\n  (h6 : ∀ i, i < n → b[i]! = 2)\n  (h7 : ∀ i,\
  \ i < n → c[i]! = 3) :\n  (solve_sequence n a b c).length = n := sorry\n\n\ntheorem\
  \ solve_sequence_elements {n : Nat} {a b c : List Nat}\n  (h1 : n ≥ 2)\n  (h2 :\
  \ a.length = n)\n  (h3 : b.length = n)\n  (h4 : c.length = n)\n  (h5 : ∀ i, i <\
  \ n → a[i]! = 1)\n  (h6 : ∀ i, i < n → b[i]! = 2)\n  (h7 : ∀ i, i < n → c[i]! =\
  \ 3) :\n  ∀ i, i < n → (solve_sequence n a b c)[i]! ∈ [1, 2, 3] := sorry\n\n/--\n\
  info: n3\n-/\n#guard_msgs in\n#eval len solve_sequence(n3, a3, b3, c3)\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
