"vc-description": "Given integers n and k, find the lexicographically k-th smallest\
  \ integer in the range from 1 to n.\n\nNote: 1 ≤ k ≤ n ≤ 109.\n\nExample:\n\nInput:\n\
  n: 13   k: 2\n\nOutput:\n10\n\nExplanation:\nThe lexicographical order is [1, 10,\
  \ 11, 12, 13, 2, 3, 4, 5, 6, 7, 8, 9], so the second smallest number is 10."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def find_kth_number (n k : Nat) : Nat :=\n  sorry\n"
"vc-theorems": "theorem find_kth_number_fixed_cases :\n  find_kth_number 13 2 = 10\
  \ ∧ \n  find_kth_number 10 3 = 2 ∧\n  find_kth_number 100 10 = 17 ∧\n  find_kth_number\
  \ 20 1 = 1 ∧\n  find_kth_number 50 5 = 13 := by\n  sorry\n\n/--\ninfo: 10\n-/\n\
  #guard_msgs in\n#eval find_kth_number 13 2\n\n/--\ninfo: 2\n-/\n#guard_msgs in\n\
  #eval find_kth_number 10 3\n\n/--\ninfo: 17\n-/\n#guard_msgs in\n#eval find_kth_number\
  \ 100 10\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
