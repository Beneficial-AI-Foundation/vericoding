"vc-description": "Given a string S, count the number of distinct, non-empty subsequences\
  \ of S .\nSince the result may be large, return the answer modulo 10^9 + 7.\n \n\
  Example 1:\nInput: \"abc\"\nOutput: 7\nExplanation: The 7 distinct subsequences\
  \ are \"a\", \"b\", \"c\", \"ab\", \"ac\", \"bc\", and \"abc\".\n\n\nExample 2:\n\
  Input: \"aba\"\nOutput: 6\nExplanation: The 6 distinct subsequences are \"a\", \"\
  b\", \"ab\", \"ba\", \"aa\" and \"aba\".\n\n\nExample 3:\nInput: \"aaa\"\nOutput:\
  \ 3\nExplanation: The 3 distinct subsequences are \"a\", \"aa\" and \"aaa\".\n\n\
  \n\n \n \nNote:\n\nS contains only lowercase letters.\n1 <= S.length <= 2000"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def distinctSubseqCount (s : String) : Nat :=\n  sorry\n"
"vc-theorems": "theorem output_bounds {s : String} (h : s.length > 0) : \n  let result\
  \ := distinctSubseqCount s\n  0 ≤ result ∧ result < 10^9 + 7 :=\n  sorry\n\n\ntheorem\
  \ all_same_char {s : String} (h1 : s.length > 0) \n  (h2 : ∀ i : String.Pos, s.get\
  \ i = 'a') :\n  distinctSubseqCount s = s.length :=\n  sorry\n\n\ntheorem length_property\
  \ {s : String} (h : s.length > 0) :\n  distinctSubseqCount s ≥ s.length :=\n  sorry\n\
  \n/--\ninfo: 7\n-/\n#guard_msgs in\n#eval distinct_subseq_count \"abc\"\n\n/--\n\
  info: 6\n-/\n#guard_msgs in\n#eval distinct_subseq_count \"aba\"\n\n/--\ninfo: 3\n\
  -/\n#guard_msgs in\n#eval distinct_subseq_count \"aaa\"\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded"
