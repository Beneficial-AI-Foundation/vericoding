"vc-description": "All strings in Chefland are beautiful because they are binary strings\
  \ (a binary string contains only characters '0' and '1'). The beauty of a binary\
  \ string $S$ is defined as the number of pairs $(i, j)$ ($1 \\le i \\le j \\le |S|$)\
  \ such that the substring $S_i, S_{i+1}, \\ldots, S_j$ is special.\nFor a binary\
  \ string $U$, let's denote the number of occurrences of the characters '1' and '0'\
  \ in $U$ by $cnt_1$ and $cnt_0$ respectively; then, $U$ is special if $cnt_0 = cnt_1\
  \ \\cdot cnt_1$.\nToday, Chef's friend Araspa is celebrating her birthday. Chef\
  \ wants to give Araspa the most beautiful binary string he can find. Currently,\
  \ he is checking out binary strings in a shop, but he needs your help to calculate\
  \ their beauties. Tell Chef the beauty of each binary string he gives you.\n\n-----Input-----\n\
  - The first line of the input contains a single integer $T$ denoting the number\
  \ of test cases. The description of $T$ test cases follows.\n- The first and only\
  \ line of each test case contains a single string $S$.\n\n-----Output-----\nFor\
  \ each test case, print a single line containing one integer — the beauty of the\
  \ string $S$.\n\n-----Constraints-----\n- $1 \\le T \\le 10$\n- $1 \\le |S| \\le\
  \ 10^5$\n- each character of $S$ is '0' or '1'\n\n-----Example Input-----\n2\n010001\n\
  10\n\n-----Example Output-----\n4\n1\n\n-----Explanation-----\nExample case 1: The\
  \ special substrings correspond to $(i, j) = (1, 2), (1, 6), (2, 3), (5, 6)$."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def String.isBinaryString (s : String) : Bool := s.all (fun c =>\
  \ c == '0' || c == '1')\n\ndef count_special_substrings (s : String) : Nat :=\n\
  \  sorry\n\n\n\n\n"
"vc-theorems": "theorem count_special_substrings_all_zeros (s : String) \n    (h :\
  \ s.all (· = '0') = true) :\n    count_special_substrings s = 0 :=\n  sorry\n\n\
  /--\ninfo: 4\n-/\n#guard_msgs in\n#eval count_special_substrings \"010001\"\n\n\
  /--\ninfo: 1\n-/\n#guard_msgs in\n#eval count_special_substrings \"10\"\n\n/--\n\
  info: 1\n-/\n#guard_msgs in\n#eval count_special_substrings \"1100\"\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
