"vc-description": "The chef is trying to solve some pattern problems, Chef wants your\
  \ help to code it. Chef has one number K to form new pattern. Help the chef to code\
  \ this pattern problem.\n\n-----Input:-----\n- First line will contain $T$, number\
  \ of testcases. Then the testcases follow. \n- Each testcase contains of a single\
  \ line of input, one integer $K$. \n\n-----Output:-----\nFor each testcase, output\
  \ as pattern.\n\n-----Constraints-----\n- $1 \\leq T \\leq 100$\n- $1 \\leq K \\\
  leq 100$\n\n-----Sample Input:-----\n2\n2\n4\n\n-----Sample Output:-----\n2\n12\n\
  012\n12\n2\n\n4\n34\n234\n1234\n01234\n1234\n234\n34\n4\n\n-----EXPLANATION:-----\n\
  No need, else pattern can be decode easily."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def pattern_triangle (k : Nat) : List String := sorry\n\ntheorem\
  \ pattern_triangle_symmetry (k : Nat) :\n  pattern_triangle k = (pattern_triangle\
  \ k).reverse := sorry\n"
"vc-theorems": "theorem pattern_triangle_length (k : Nat) :\n  (pattern_triangle k).length\
  \ = 2 * k + 1 := sorry\n\n\ntheorem pattern_triangle_first_last (k : Nat) :\n  (pattern_triangle\
  \ k).head! = toString k ∧ \n  (pattern_triangle k).getLast! = toString k := sorry\n\
  \n\ntheorem pattern_triangle_digits (k : Nat) : \n  ∀ s ∈ pattern_triangle k, (∀\
  \ c ∈ s.data, c.isDigit) := sorry\n\n\ntheorem pattern_triangle_middle_row (k :\
  \ Nat) {h : k < (pattern_triangle k).length}: \n  let middle := (pattern_triangle\
  \ k)[k]'h\n  middle.take 1 = \"0\" ∧ \n  middle.takeRight 1 = toString k := sorry\n\
  \n\ntheorem pattern_triangle_row_lengths_monotone (k : Nat) :\n  let rows := pattern_triangle\
  \ k\n  let lens := rows.map String.length\n  let mid := lens.length / 2\n  (∀ i\
  \ j, i < j → j < mid → i < lens.length → j < lens.length → lens[i]! ≤ lens[j]!)\
  \ ∧\n  (∀ i j, mid ≤ i → i < j → i < lens.length → j < lens.length → lens[i]! ≥\
  \ lens[j]!) := sorry\n\n\ntheorem pattern_triangle_zero :\n  pattern_triangle 0\
  \ = [\"0\"] := sorry"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded"
