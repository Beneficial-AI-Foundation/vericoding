"vc-description": "Writing light novels is the most important thing in Linova's life.\
  \ Last night, Linova dreamed about a fantastic kingdom. She began to write a light\
  \ novel for the kingdom as soon as she woke up, and of course, she is the queen\
  \ of it.\n\n[Image] \n\nThere are $n$ cities and $n-1$ two-way roads connecting\
  \ pairs of cities in the kingdom. From any city, you can reach any other city by\
  \ walking through some roads. The cities are numbered from $1$ to $n$, and the city\
  \ $1$ is the capital of the kingdom. So, the kingdom has a tree structure.\n\nAs\
  \ the queen, Linova plans to choose exactly $k$ cities developing industry, while\
  \ the other cities will develop tourism. The capital also can be either industrial\
  \ or tourism city.\n\nA meeting is held in the capital once a year. To attend the\
  \ meeting, each industry city sends an envoy. All envoys will follow the shortest\
  \ path from the departure city to the capital (which is unique).\n\nTraveling in\
  \ tourism cities is pleasant. For each envoy, his happiness is equal to the number\
  \ of tourism cities on his path.\n\nIn order to be a queen loved by people, Linova\
  \ wants to choose $k$ cities which can maximize the sum of happinesses of all envoys.\
  \ Can you calculate the maximum sum for her?\n\n\n-----Input-----\n\nThe first line\
  \ contains two integers $n$ and $k$ ($2\\le n\\le 2 \\cdot 10^5$, $1\\le k< n$)\
  \  — the number of cities and industry cities respectively.\n\nEach of the next\
  \ $n-1$ lines contains two integers $u$ and $v$ ($1\\le u,v\\le n$), denoting there\
  \ is a road connecting city $u$ and city $v$.\n\nIt is guaranteed that from any\
  \ city, you can reach any other city by the roads.\n\n\n-----Output-----\n\nPrint\
  \ the only line containing a single integer  — the maximum possible sum of happinesses\
  \ of all envoys.\n\n\n-----Examples-----\nInput\n7 4\n1 2\n1 3\n1 4\n3 5\n3 6\n\
  4 7\n\nOutput\n7\nInput\n4 1\n1 2\n1 3\n2 4\n\nOutput\n2\nInput\n8 5\n7 5\n1 7\n\
  6 1\n3 7\n8 3\n2 1\n4 5\n\nOutput\n9\n\n\n-----Note-----\n\n[Image]\n\nIn the first\
  \ example, Linova can choose cities $2$, $5$, $6$, $7$ to develop industry, then\
  \ the happiness of the envoy from city $2$ is $1$, the happiness of envoys from\
  \ cities $5$, $6$, $7$ is $2$. The sum of happinesses is $7$, and it can be proved\
  \ to be the maximum one.\n\n[Image]\n\nIn the second example, choosing cities $3$,\
  \ $4$ developing industry can reach a sum of $3$, but remember that Linova plans\
  \ to choose exactly $k$ cities developing industry, then the maximum sum is $2$."
"vc-preamble": "import Imports.AllImports\n\ndef isValidTree (n : Nat) (edges : List\
  \ (Nat × Nat)) : Bool :=\nsorry \n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def maxHappiness (n k : Nat) (edges : List (Nat × Nat)) : Nat :=\n\
  sorry\n"
"vc-theorems": "theorem maxHappiness_valid_tree (n : Nat) (k : Nat) \n  (edges : List\
  \ (Nat × Nat)) :\n  isValidTree n edges → True :=\nsorry\n\n\ntheorem maxHappiness_nonnegative\
  \ (n : Nat) (k : Nat)\n  (edges : List (Nat × Nat)) :\n  isValidTree n edges → maxHappiness\
  \ n k edges ≥ 0 :=\nsorry\n\n\ntheorem maxHappiness_zero_when_k_geq_n (n : Nat)\
  \ (k : Nat)\n  (edges : List (Nat × Nat)) :\n  isValidTree n edges →\n  k ≥ n →\n\
  \  maxHappiness n k edges = 0 :=\nsorry\n\n/--\ninfo: 7\n-/\n#guard_msgs in\n#eval\
  \ max_happiness 7 4 [(1, 2), (1, 3), (1, 4), (3, 5), (3, 6), (4, 7)]\n\n/--\ninfo:\
  \ 2\n-/\n#guard_msgs in\n#eval max_happiness 4 1 [(1, 2), (1, 3), (2, 4)]\n\n/--\n\
  info: 9\n-/\n#guard_msgs in\n#eval max_happiness 8 5 [(7, 5), (1, 7), (6, 1), (3,\
  \ 7), (8, 3), (2, 1), (4, 5)]\n"
"vc-postamble": "-- Apps difficulty: competition\n-- Assurance level: unguarded"
