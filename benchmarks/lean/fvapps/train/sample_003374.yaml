vc-description: |-
  Your coworker was supposed to write a simple helper function to capitalize a string (that contains a single word) before they went on vacation.

  Unfortunately, they have now left and the code they gave you doesn't work. Fix the helper function they wrote so that it works as intended (i.e. make the first character in the string "word" upper case).

  Don't worry about numbers, special characters, or non-string types being passed to the function. The string lengths will be from 1 character up to 10 characters, but will never be empty.
vc-preamble: |-
  import Imports.AllImports
vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>
vc-definitions: |
  def capitalize_word (s : String) : String := sorry

  theorem capitalize_word_length (word : String) (h : word.length > 0) :
    (capitalize_word word).length = word.length := sorry
vc-theorems: |
  theorem capitalize_word_case (word : String) (h : word.length > 0) :
    ∃ first rest, word = String.mk (first :: rest) → 
    capitalize_word word = String.mk (first.toUpper :: rest.map Char.toLower) := sorry


  theorem capitalize_word_idempotent (word : String) (h : word.length > 0) :
    capitalize_word (capitalize_word word) = capitalize_word word := sorry


  theorem capitalize_word_empty :
    capitalize_word "" = "" := sorry

  /--
  info: 'Word'
  -/
  #guard_msgs in
  #eval capitalize_word "word"

  /--
  info: 'I'
  -/
  #guard_msgs in
  #eval capitalize_word "i"

  /--
  info: 'Glasswear'
  -/
  #guard_msgs in
  #eval capitalize_word "glasswear"
vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded
