"vc-description": "Chef wants to host some Division-3 contests. Chef has $N$ setters\
  \ who are busy creating new problems for him. The $i^{th}$ setter has made $A_i$\
  \ problems where $1 \\leq i \\leq N$.    \nA Division-3 contest should have exactly\
  \ $K$ problems. Chef wants to plan for the next $D$ days using the problems that\
  \ they have currently. But Chef cannot host more than one Division-3 contest in\
  \ a day.\nGiven these constraints, can you help Chef find the maximum number of\
  \ Division-3 contests that can be hosted in these $D$ days?\n\n-----Input:-----\n\
  - The first line of input contains a single integer $T$ denoting the number of test\
  \ cases. The description of $T$ test cases follows.\n- The first line of each test\
  \ case contains three space-separated integers - $N$, $K$ and $D$ respectively.\n\
  - The second line of each test case contains $N$ space-separated integers $A_1,\
  \ A_2, \\ldots, A_N$ respectively. \n\n-----Output:-----\nFor each test case, print\
  \ a single line containing one integer ― the maximum number of Division-3 contests\
  \ Chef can host in these $D$ days.\n\n-----Constraints-----\n- $1 \\leq T \\leq\
  \ 10^3$\n- $1 \\leq N \\leq 10^2$\n- $1 \\le K \\le 10^9$ \n- $1 \\le D \\le 10^9$\n\
  - $1 \\le A_i \\le 10^7$ for each valid $i$\n\n-----Subtasks-----\nSubtask #1 (40\
  \ points):\n- $N = 1$\n- $1 \\le A_1 \\le 10^5$\nSubtask #2 (60 points): Original\
  \ constraints\n\n-----Sample Input:-----\n5\n1 5 31\n4\n1 10 3\n23\n2 5 7\n20 36\n\
  2 5 10\n19 2\n3 3 300\n1 1 1\n\n-----Sample Output:-----\n0\n2\n7\n4\n1\n\n-----Explanation:-----\n\
  - \nExample case 1: Chef only has $A_1 = 4$ problems and he needs $K = 5$ problems\
  \ for a Division-3 contest. So Chef won't be able to host any Division-3 contest\
  \ in these 31 days. Hence the first output is $0$.\n- \nExample case 2: Chef has\
  \ $A_1 = 23$ problems and he needs $K = 10$ problems for a Division-3 contest. Chef\
  \ can choose any $10+10 = 20$ problems and host $2$ Division-3 contests in these\
  \ 3 days. Hence the second output is $2$.\n- \nExample case 3: Chef has $A_1 = 20$\
  \ problems from setter-1 and $A_2 = 36$ problems from setter-2, and so has a total\
  \ of $56$ problems. Chef needs $K = 5$ problems for each Division-3 contest. Hence\
  \ Chef can prepare $11$ Division-3 contests. But since we are planning only for\
  \ the next $D = 7$ days and Chef cannot host more than $1$ contest in a day, Chef\
  \ cannot host more than $7$ contests. Hence the third output is $7$."
"vc-preamble": "import Imports.AllImports\n\ndef List.sum : List Nat → Nat \n  | []\
  \ => 0\n  | (x::xs) => x + sum xs\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def solve_division3_contests (N K D : Nat) (A : List Nat) : Nat\
  \ := sorry\n\ntheorem result_bounded_by_D (N K D : Nat) (A : List Nat) (h1 : N ≥\
  \ 1) (h2 : K ≥ 1) (h3 : D ≥ 1) :\n  solve_division3_contests N K D A ≤ D := sorry\n\
  \n\n"
"vc-theorems": "theorem result_is_nonnegative (N K D : Nat) (A : List Nat) (h1 : N\
  \ ≥ 1) (h2 : K ≥ 1) (h3 : D ≥ 1) :\n  solve_division3_contests N K D A ≥ 0 := sorry\n\
  \n\ntheorem zero_days_gives_zero (N K : Nat) (A : List Nat) (h1 : N ≥ 1) (h2 : K\
  \ ≥ 1) :\n  solve_division3_contests N K 0 A = 0 := sorry\n\n/--\ninfo: 0\n-/\n\
  #guard_msgs in\n#eval solve_division3_contests 1 5 31 [4]\n\n/--\ninfo: 2\n-/\n\
  #guard_msgs in\n#eval solve_division3_contests 1 10 3 [23]\n\n/--\ninfo: 7\n-/\n\
  #guard_msgs in\n#eval solve_division3_contests 2 5 7 [20, 36]\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
