"vc-description": "Given an array of integers nums and a positive integer k, find\
  \ whether it's possible to divide this array into k non-empty subsets whose sums\
  \ are all equal.\n\nExample 1:\n\nInput: nums = [4, 3, 2, 3, 5, 2, 1], k = 4\nOutput:\
  \ True\nExplanation: It's possible to divide it into 4 subsets (5), (1, 4), (2,3),\
  \ (2,3) with equal sums.\n\n\n\nNote:\n1 .\n0 < nums[i] < 10000."
"vc-preamble": "import Imports.AllImports\n\ndef List.sum : List Nat → Nat \n  | []\
  \ => 0\n  | (x::xs) => x + List.sum xs\n\n\ndef getMaximum (l : List Nat) (h : l.length\
  \ > 0) : Nat :=\n  match l with\n  | [] => 0 \n  | [x] => x\n  | (x::xs) => x --\
  \ simplified version to avoid proof complexity\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def can_partition_k_subsets (nums : List Nat) (k : Nat) : Bool\
  \ :=\n  sorry\n"
"vc-theorems": "theorem partition_k_eq_one {nums : List Nat} (h : nums.length > 0)\
  \ :\n  can_partition_k_subsets nums 1 = true :=\n  sorry\n\n\ntheorem partition_k_gt_length\
  \ {nums : List Nat} {k : Nat} \n  (h : k > nums.length) :\n  can_partition_k_subsets\
  \ nums k = false :=\n  sorry\n\n\ntheorem partition_sum_not_div_k {nums : List Nat}\
  \ {k : Nat} \n  (h : k > 0) (h2 : nums.length > 0)\n  (h3 : (List.sum nums % k)\
  \ ≠ 0) :\n  can_partition_k_subsets nums k = false :=\n  sorry\n\n\ntheorem partition_max_too_large\
  \ {nums : List Nat} {k : Nat}\n  (h : k > 0) (h2 : nums.length > 0)\n  (h3 : getMaximum\
  \ nums h2 > List.sum nums / k) :\n  can_partition_k_subsets nums k = false :=\n\
  \  sorry\n\n\ntheorem identical_elements {n k : Nat} (h : k > 0) :\n  can_partition_k_subsets\
  \ (List.replicate n n) k = (n % k = 0) :=\n  sorry\n\n\ntheorem single_element_k_one\
  \ :\n  can_partition_k_subsets [1] 1 = true :=\n  sorry\n\n\ntheorem single_element_k_two\
  \ :\n  can_partition_k_subsets [1] 2 = false :=\n  sorry\n\n/--\ninfo: True\n-/\n\
  #guard_msgs in\n#eval can_partition_k_subsets [4, 3, 2, 3, 5, 2, 1] 4\n\n/--\ninfo:\
  \ False\n-/\n#guard_msgs in\n#eval can_partition_k_subsets [1, 2, 3, 4] 3\n\n/--\n\
  info: True\n-/\n#guard_msgs in\n#eval can_partition_k_subsets [2, 2, 2, 2] 2\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
