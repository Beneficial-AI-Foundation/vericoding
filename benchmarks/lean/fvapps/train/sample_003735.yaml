"vc-description": "`{a, e, i, o, u, A, E, I, O, U}`\n\nNatural Language Understanding\
  \ is the subdomain of Natural Language Processing where people used to design AI\
  \ based applications have ability to understand the human languages. HashInclude\
  \ Speech Processing team has a project named Virtual Assistant. For this project\
  \ they appointed you as a data engineer (who has good knowledge of creating clean\
  \ datasets by writing efficient code). As a data engineer your first task is to\
  \ make vowel recognition dataset. In this task you have to find the presence of\
  \ vowels in all possible substrings of the given string. For each given string you\
  \ have to return the total number of vowels.\n\n## Example\n\nGiven a string `\"\
  baceb\"` you can split it into substrings: `b, ba, bac, bace, baceb, a, ac, ace,\
  \ aceb, c, ce, ceb, e, eb, b`. The number of vowels in each of these substrings\
  \ is `0, 1, 1, 2, 2, 1, 1, 2, 2, 0, 1, 1, 1, 1, 0`; if you sum up these number,\
  \ you get `16` - the expected output.\n\n**Note**: your solution should have linear\
  \ time complexity."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def isVowel (c : Char) : Bool := sorry\n\ndef vowel_recognition\
  \ (s : String) : Nat := sorry\n"
"vc-theorems": "theorem vowel_recognition_is_natural (s : String) :\n  vowel_recognition\
  \ s â‰¥ 0 :=\nsorry\n\n\n\n\n\n\ntheorem case_insensitive (s : String) :\n  vowel_recognition\
  \ s.toUpper = vowel_recognition s.toLower :=\nsorry\n\n/--\ninfo: 0\n-/\n#guard_msgs\
  \ in\n#eval vowel_recognition \"bbbb\"\n\n/--\ninfo: 16\n-/\n#guard_msgs in\n#eval\
  \ vowel_recognition \"baceb\"\n\n/--\ninfo: 35\n-/\n#guard_msgs in\n#eval vowel_recognition\
  \ \"aeiou\"\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded_and_plausible"
