"vc-description": "Chef Jessie has a lot of recipes with her (N). She often remembered\
  \ the starting few characters of the recipe and forgot the rest. As all the great\
  \ chefs do, Jessie also numbered the recipes depending on the priority. So, given\
  \ the list of recipes along with their priorities answer Jessie’s queries.\nJessie’s\
  \ queries are as follows:\n\nShe gives you the first few characters of a recipe;\
  \ you have to print the complete recipe with the highest priority.\nNote:\n\nEvery\
  \ recipe has a unique priority\n\n-----Input-----\n\nFirst line contains an integer\
  \ N - the number of recipes.\n\nFollowed by N strings Si along with an integer each\
  \ Vi.\nSi stands for the recipe and Vi for the priority.\n\nIt is followed by an\
  \ integer Q - the number of queries.\n\nFollowed by Q strings Qi.\n\nEach string\
  \ Si, Qi contain only lowercase Latin alphabets ('a' - 'z') and '-'.\n\n-----Output-----\n\
  Q – lines, each contain the answer for each of the query.\n\nIf for a query no recipe\
  \ matches print \"NO\". (Without quotes)\nConstraints:\n0 <= N <= 1000\n\n0 <= Q\
  \ <= 1000\n\n-10^9 <= Vi <= 10^9\n\n1 <= |Si| <= 1000 (length of Si)\n\n1 <= |Qi|\
  \ <= 1000 (length of Qi)\n\n-----Example-----\nInput:\n4\nflour-with-eggs 100\n\
  chicken-ham -10\nflour-without-eggs 200\nfish-with-pepper 1100\n6\nf\nflour-with\n\
  flour-with-\nc\nfl\nchik\n\nOutput:\nfish-with-pepper\nflour-without-eggs\nflour-with-eggs\n\
  chicken-ham\nflour-without-eggs\nNO"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def find_highest_priority_recipe (recipes: List String) (priorities:\
  \ List Int) (queries: List String) : List String :=\n  sorry\n"
"vc-theorems": "theorem recipe_result_length (recipes: List String) (priorities: List\
  \ Int) (queries: List String) :\n  recipes.length = priorities.length →\n  (find_highest_priority_recipe\
  \ recipes priorities queries).length = queries.length :=\n  sorry\n\n\ntheorem result_contents\
  \ (recipes: List String) (priorities: List Int) (queries: List String) : \n  recipes.length\
  \ = priorities.length →\n  ∀ r ∈ find_highest_priority_recipe recipes priorities\
  \ queries, \n    r = \"NO\" ∨ r ∈ recipes :=\n  sorry\n\n\n\n\n\n\ntheorem empty_inputs\
  \ :\n  find_highest_priority_recipe [] [] [] = [] ∧\n  find_highest_priority_recipe\
  \ [\"recipe\"] [1] [] = [] :=\n  sorry"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
