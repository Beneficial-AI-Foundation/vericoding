"vc-description": "# Task\n\nThere are `n` bears in the orchard and they picked a\
  \ lot of apples. \n\nThey distribute apples like this:\n\n```\nThe first bear divided\
  \ the apple into n piles, each with the same number. leaving an apple at last, and\
  \ the apple was thrown away. Then he took 1 pile and left the n-1 pile.\n\nThe second\
  \ bear divided the apple into n piles, each with the same number. leaving an apple\
  \ at last, and the apple was thrown away. Then he took 1 pile and left the n-1 pile.\n\
  \nand so on..\n```\n\nHmm.. your task is coming, please calculate the minimum possible\
  \ number of these apples (before they start distributing)\n\n# Input/Output\n\n\n\
  `[input]` integer `n`\n\nThe number of bears.\n\n`2 <= n <= 9` (JS, Crystal and\
  \ C)\n`2 <= n <= 50` (Ruby and Python)\n\n`[output]` an integer\n\nThe minimum possible\
  \ number of apples.\n\n# Example\n\nFor `n = 5`, the output should be `3121`.\n\n\
  ```\n5 bears distribute apples:\n\n1st bear divided the apples into 5 piles, each\
  \ pile has 624 apples, and 1 apple was thrown away.\n3121 - 1 = 624 x 5\n1st bear\
  \ took 1 pile of apples, 2496 apples left.\n3121 - 1 - 624 = 2496\n\n2nd bear divided\
  \ the apples into 5 piles, each pile has 499 apples, and 1 apple was thrown away.\n\
  2496 - 1 = 499 x 5\n2nd bear took 1 pile of apples, 1996 apples left.\n2496 - 1\
  \ - 499 = 1996\n\n3rd bear divided the apples into 5 piles, each pile has 399 apples,\
  \ and 1 apple was thrown away.\n1996 - 1 = 399 x 5\n3rd bear took 1 pile of apples,\
  \ 1596 apples left.\n1996 - 1 - 399 = 1596\n\n4th bear divided the apples into 5\
  \ piles, each pile has 319 apples, and 1 apple was thrown away.\n1596 - 1 = 319\
  \ x 5\n4th bear took 1 pile of apples, 1276 apples left.\n1596 - 1 - 319 = 1276\n\
  \n5th bear divided the apples into 5 piles, each pile has 255 apples, and 1 apple\
  \ was thrown away.\n1276 - 1 = 255 x 5\n5th bear took 1 pile of apples, 1020 apples\
  \ left.\n1276 - 1 - 255 = 1020\n```"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def how_many_apples (n: Nat) : Nat :=\n  sorry\n"
"vc-theorems": "theorem apples_always_positive {n: Nat} (h: n ≥ 2) :\n  how_many_apples\
  \ n > 0 :=\n  sorry \n\n\ntheorem apples_increases (n: Nat) (h: n ≥ 2) :  \n  how_many_apples\
  \ n > how_many_apples (n-1) :=\n  sorry\n\n\ntheorem minimum_case :\n  how_many_apples\
  \ 2 = 7 :=\n  sorry\n\n/--\ninfo: 7\n-/\n#guard_msgs in\n#eval how_many_apples 2\n\
  \n/--\ninfo: 3121\n-/\n#guard_msgs in\n#eval how_many_apples 5\n\n/--\ninfo: 25\n\
  -/\n#guard_msgs in\n#eval how_many_apples 3\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded_and_plausible"
