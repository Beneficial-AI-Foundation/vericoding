"vc-description": "Given an array A of integers, return the length of the longest\
  \ arithmetic subsequence in A.\nRecall that a subsequence of A is a list A[i_1],\
  \ A[i_2], ..., A[i_k] with 0 <= i_1 < i_2 < ... < i_k <= A.length - 1, and that\
  \ a sequence B is arithmetic if B[i+1] - B[i] are all the same value (for 0 <= i\
  \ < B.length - 1).\n \nExample 1:\nInput: A = [3,6,9,12]\nOutput: 4\nExplanation:\
  \ \nThe whole array is an arithmetic sequence with steps of length = 3.\n\nExample\
  \ 2:\nInput: A = [9,4,7,2,10]\nOutput: 3\nExplanation: \nThe longest arithmetic\
  \ subsequence is [4,7,10].\n\nExample 3:\nInput: A = [20,1,15,3,10,5,8]\nOutput:\
  \ 4\nExplanation: \nThe longest arithmetic subsequence is [20,15,10,5].\n\n \nConstraints:\n\
  \n2 <= A.length <= 1000\n0 <= A[i] <= 500"
"vc-preamble": "import Imports.AllImports\n\ndef longestArithSeqLength (arr : List\
  \ Int) : Nat :=\n  sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def countMaxOccurrences (arr : List Int) : Nat :=\n  let counts\
  \ := arr.map (λ x => arr.count x)\n  counts.foldl Nat.max 0\n"
"vc-theorems": "theorem min_length_at_least_two {arr : List Int} (h : arr.length ≥\
  \ 1) :\n  longestArithSeqLength arr ≥ 2 :=\n  sorry\n\n\ntheorem dupes_counted_properly\
  \ {arr : List Int} (h : arr.length ≥ 2) :\n  longestArithSeqLength arr ≥ countMaxOccurrences\
  \ arr :=\n  sorry\n\n\ntheorem arithmetic_sequence_preserved {arr : List Int} (h₁\
  \ : arr.length ≥ 3) (h₂ : arr.length ≤ 10) :\n  let diff := arr[1]! - arr[0]!\n\
  \  let arithSeq := (List.range arr.length).map (λ i => arr[0]! + diff * (Int.ofNat\
  \ i))\n  longestArithSeqLength arithSeq = arithSeq.length :=\n  sorry\n\n\ntheorem\
  \ reverse_same_result {arr : List Int} (h : arr.length ≥ 2) :\n  longestArithSeqLength\
  \ arr = longestArithSeqLength arr.reverse :=\n  sorry\n\n/--\ninfo: 4\n-/\n#guard_msgs\
  \ in\n#eval longestArithSeqLength [3, 6, 9, 12]\n\n/--\ninfo: 3\n-/\n#guard_msgs\
  \ in\n#eval longestArithSeqLength [9, 4, 7, 2, 10]\n\n/--\ninfo: 4\n-/\n#guard_msgs\
  \ in\n#eval longestArithSeqLength [20, 1, 15, 3, 10, 5, 8]\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
