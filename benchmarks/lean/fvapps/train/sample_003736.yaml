"vc-description": "# History\n\nThis kata is a sequel of my [Mixbonacci](https://www.codewars.com/kata/mixbonacci/python)\
  \ kata. Zozonacci is a special integer sequence named after [**ZozoFouchtra**](https://www.codewars.com/users/ZozoFouchtra),\
  \ who came up with this kata idea in the [Mixbonacci discussion](https://www.codewars.com/kata/mixbonacci/discuss/python).\
  \ \n\nThis sequence combines the rules for computing the n-th elements of fibonacci,\
  \ jacobstal, pell, padovan, tribonacci and tetranacci sequences according to a given\
  \ pattern.\n\n# Task\n\nCompute the first `n` elements of the Zozonacci sequence\
  \ for a given pattern `p`.\n\n## Rules\n\n1. `n` is given as integer and `p` is\
  \ given as a list of as abbreviations as strings (e.g. `[\"fib\", \"jac\", \"pad\"\
  ]`)\n2. When `n` is 0 or `p` is empty return an empty list.\n3. The first four elements\
  \ of the sequence are determined by the first abbreviation in the pattern (see the\
  \ table below).\n4. Compute the fifth element using the formula corespoding to the\
  \ first element of the pattern, the sixth element using the formula for the second\
  \ element and so on. (see the table below and the examples)\n5. If `n` is more than\
  \ the length of `p` repeat the pattern.\n\n\n```\n+------------+--------------+------------------------------------------+---------------------+\n\
  |  sequence  | abbreviation |         formula for n-th element         | first four\
  \ elements |\n+------------|--------------+------------------------------------------|---------------------|\n\
  | fibonacci  |     fib      | a[n] = a[n-1] + a[n-2]                   |     0,\
  \ 0, 0, 1      |\n| jacobsthal |     jac      | a[n] = a[n-1] + 2 * a[n-2]     \
  \          |     0, 0, 0, 1      |\n| padovan    |     pad      | a[n] = a[n-2]\
  \ + a[n-3]                   |     0, 1, 0, 0      |\n| pell       |     pel   \
  \   | a[n] = 2 * a[n-1] + a[n-2]               |     0, 0, 0, 1      |\n| tetranacci\
  \ |     tet      | a[n] = a[n-1] + a[n-2] + a[n-3] + a[n-4] |     0, 0, 0, 1   \
  \   |\n| tribonacci |     tri      | a[n] = a[n-1] + a[n-2] + a[n-3]          |\
  \     0, 0, 0, 1      |\n+------------+--------------+------------------------------------------+---------------------+\n\
  ```\n\n## Example\n\n```\nzozonacci([\"fib\", \"tri\"], 7) == [0, 0, 0, 1, 1, 2,\
  \ 3]\n\nExplanation: \n\n          b     d\n       /-----\\/----\\\n[0, 0, 0, 1,\
  \ 1, 2, 3]\n \\--------/  \n     | \\--------/\n     a     c\n\na - [0, 0, 0, 1]\
  \ as \"fib\" is the first abbreviation\nb - 5th element is 1 as the 1st element\
  \ of the pattern is \"fib\": 1 = 0 + 1\nc - 6th element is 2 as the 2nd element\
  \ of the pattern is \"tri\": 2 = 0 + 1 + 1\nd - 7th element is 3 as the 3rd element\
  \ of the pattern is \"fib\" (see rule no. 5): 3 = 2 + 1\n```\n\n## Sequences\n\n\
  * [fibonacci](https://oeis.org/A000045) : 0, 1, 1, 2, 3 ...\n* [padovan](https://oeis.org/A000931):\
  \ 1, 0, 0, 1, 0 ...\n* [jacobsthal](https://oeis.org/A001045): 0, 1, 1, 3, 5 ...\n\
  * [pell](https://oeis.org/A000129): 0, 1, 2, 5, 12 ...\n* [tribonacci](https://oeis.org/A000073):\
  \ 0, 0, 1, 1, 2 ...\n* [tetranacci](https://oeis.org/A000078): 0, 0, 0, 1, 1 ..."
"vc-preamble": "import Imports.AllImports\n\ndef zozonacci (pattern : List String)\
  \ (n : Nat) : List Nat := sorry\n\ndef isNonNegative (l : List Nat) : Prop := \n\
  \  ∀ x ∈ l, x ≥ 0\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def isMonotonicFrom (l : List Nat) (start : Nat) : Prop :=\n  ∀\
  \ i v1 v2, start ≤ i → i < l.length - 1 → l[i]? = some v1 → l[i+1]? = some v2 →\
  \ v1 ≤ v2\n"
"vc-theorems": "theorem empty_pattern_returns_empty (n : Nat) :\n  zozonacci [] n\
  \ = [] := sorry\n\n/--\ninfo: []\n-/\n#guard_msgs in\n#eval zozonacci [] 10\n\n\
  /--\ninfo: [0, 0, 0, 1, 1, 2, 3, 5, 8, 13]\n-/\n#guard_msgs in\n#eval zozonacci\
  \ [\"fib\"] 10\n\n/--\ninfo: [0, 0, 0, 1, 1, 2, 3]\n-/\n#guard_msgs in\n#eval zozonacci\
  \ [\"fib\", \"tri\"] 7\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded_and_plausible"
