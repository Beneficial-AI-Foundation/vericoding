"vc-description": "Given an array of integers, find the one that appears an odd number\
  \ of times.\n\nThere will always be only one integer that appears an odd number\
  \ of times."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def find_it (seq: List Int) : Int := sorry\n\n\n\ntheorem find_it_exists_in_odds\
  \ {seq: List Int} (h: seq ≠ []) :\n  let result := find_it seq\n  let odds := seq.filter\
  \ (fun x => seq.count x % 2 = 1)\n  odds ≠ [] → odds.contains result := sorry"
"vc-theorems": "/--\ninfo: 5\n-/\n#guard_msgs in\n#eval find_it [20, 1, -1, 2, -2,\
  \ 3, 3, 5, 5, 1, 2, 4, 20, 4, -1, -2, 5]\n\n/--\ninfo: -1\n-/\n#guard_msgs in\n\
  #eval find_it [1, 1, 2, -2, 5, 2, 4, 4, -1, -2, 5]\n\n/--\ninfo: 10\n-/\n#guard_msgs\
  \ in\n#eval find_it [10]\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded_and_plausible"
