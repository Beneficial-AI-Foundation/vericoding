"vc-description": "There was a big bank robbery in Tablecity. In order to catch the\
  \ thief, the President called none other than Albert – Tablecity’s Chief of Police.\
  \ Albert does not know where the thief is located, but he does know how he moves.\n\
  \nTablecity can be represented as 1000 × 2 grid, where every cell represents one\
  \ district. Each district has its own unique name “(X, Y)”, where X and Y are the\
  \ coordinates of the district in the grid. The thief’s movement is as \n\nEvery\
  \ hour the thief will leave the district (X, Y) he is currently hiding in, and move\
  \ to one of the districts: (X - 1, Y), (X + 1, Y), (X - 1, Y - 1), (X - 1, Y + 1),\
  \ (X + 1, Y - 1), (X + 1, Y + 1) as long as it exists in Tablecity. \n\nBelow is\
  \ an example of thief’s possible movements if he is located in district (7,1):\n\
  \n[Image]\n\nAlbert has enough people so that every hour he can pick any two districts\
  \ in Tablecity and fully investigate them, making sure that if the thief is located\
  \ in one of them, he will get caught. Albert promised the President that the thief\
  \ will be caught in no more than 2015 hours and needs your help in order to achieve\
  \ that.\n\n\n-----Input-----\n\nThere is no input for this problem. \n\n\n-----Output-----\n\
  \nThe first line of output contains integer N – duration of police search in hours.\
  \ Each of the following N lines contains exactly 4 integers X_{i}1, Y_{i}1, X_{i}2,\
  \ Y_{i}2 separated by spaces, that represent 2 districts (X_{i}1, Y_{i}1), (X_{i}2,\
  \ Y_{i}2) which got investigated during i-th hour. Output is given in chronological\
  \ order (i-th line contains districts investigated during i-th hour) and should\
  \ guarantee that the thief is caught in no more than 2015 hours, regardless of thief’s\
  \ initial position and movement.  N ≤ 2015  1 ≤ X ≤ 1000  1 ≤ Y ≤ 2 \n\n\n-----Examples-----\n\
  Input\nВ этой задаче нет примеров ввода-вывода.\nThis problem doesn't have sample\
  \ input and output.\nOutput\nСмотрите замечание ниже.\nSee the note below.\n\n\n\
  -----Note-----\n\nLet's consider the following output:\n\n2\n\n5 1 50 2\n\n8 1 80\
  \ 2\n\nThis output is not guaranteed to catch the thief and is not correct. It is\
  \ given to you only to show the expected output format. There exists a combination\
  \ of an initial position and a movement strategy such that the police will not catch\
  \ the thief.\n\nConsider the following initial position and thief’s movement:\n\n\
  In the first hour, the thief is located in district (1,1). Police officers will\
  \ search districts (5,1) and (50,2) and will not find him.\n\nAt the start of the\
  \ second hour, the thief moves to district (2,2). Police officers will search districts\
  \ (8,1) and (80,2) and will not find him.\n\nSince there is no further investigation\
  \ by the police, the thief escaped!"
"vc-preamble": "import Imports.AllImports\n\ndef Coordinates := (Nat × Nat × Nat ×\
  \ Nat)\ndef SearchPlan := (Nat × List Coordinates)\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def generate_police_search_plan : SearchPlan :=\nsorry\n\n-- Output\
  \ format theorem"
"vc-theorems": "theorem search_plan_output_format (plan : SearchPlan) : \n  let (N,\
  \ coords) := plan\n  ∀ c ∈ coords, ∃ x1 y1 x2 y2 : Nat, c = (x1, y1, x2, y2) :=\n\
  sorry\n\n-- Length consistency theorem\n\ntheorem search_plan_length_consistency\
  \ (plan : SearchPlan) :\n  let (N, coords) := plan\n  List.length coords = N ∧\n\
  \  N ≤ 2015 :=\nsorry\n\n-- Coordinate bounds theorem\n\ntheorem search_plan_coordinate_bounds\
  \ (plan : SearchPlan) :\n  let (N, coords) := plan\n  ∀ c ∈ coords,\n    let (x1,\
  \ y1, x2, y2) := c\n    1 ≤ x1 ∧ x1 ≤ 1000 ∧\n    1 ≤ y1 ∧ y1 ≤ 2 ∧\n    1 ≤ x2\
  \ ∧ x2 ≤ 1000 ∧\n    1 ≤ y2 ∧ y2 ≤ 2 :=\nsorry\n\n-- Search plan validity theorem\n\
  \ntheorem search_plan_validity (coords : List Coordinates) (h : coords.length ≥\
  \ 1) :\n  ∀ c ∈ coords,\n    let (x1, y1, x2, y2) := c\n    1 ≤ x1 ∧ x1 ≤ 1000 ∧\n\
  \    1 ≤ y1 ∧ y1 ≤ 2 ∧ \n    1 ≤ x2 ∧ x2 ≤ 1000 ∧\n    1 ≤ y2 ∧ y2 ≤ 2 :=\nsorry\n\
  \n/--\ninfo: N\n-/\n#guard_msgs in\n#eval len []\n\n/--\ninfo: N\n-/\n#guard_msgs\
  \ in\n#eval len coords\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
