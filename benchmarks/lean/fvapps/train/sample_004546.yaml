"vc-description": "The [Linear Congruential Generator (LCG)](https://en.wikipedia.org/wiki/Linear_congruential_generator)\
  \ is one of the oldest pseudo random number generator functions.\n\nThe algorithm\
  \ is as follows:\n\n## Xn+1=(aXn + c) mod m\nwhere:\n* `a`/`A` is the multiplier\
  \ (we'll be using `2`)\n* `c`/`C` is the increment (we'll be using `3`)\n* `m`/`M`\
  \ is the modulus (we'll be using `10`)\n\nX0 is the seed.\n\n# Your task\n\nDefine\
  \ a method `random`/`Random` in the class `LCG` that provides the next random number\
  \ based on a seed. You never return the initial seed value.\n\nSimilar to [random](https://docs.python.org/3/library/random.html#random.random)\
  \ return the result as a floating point number in the range `[0.0, 1.0)`\n\n# Example\n\
  \n```python\n# initialize the generator with seed = 5\nLCG(5)\n\n# first random\
  \ number (seed = 5)\nLCG.random() = 0.3      # (2 * 5 + 3) mod 10 = 3 --> return\
  \ 0.3\n\n# next random number (seed = 3)\nLCG.random() = 0.9      # (2 * 3 + 3)\
  \ mod 10 = 9 --> return 0.9\n\n# next random number (seed = 9)\nLCG.random() = 0.1\n\
  \n# next random number (seed = 1)\nLCG.random() = 0.5\n```"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def LCG.random (self : LCG) : Float := sorry\n\ntheorem lcg_output_range\
  \ (seed : Nat) (h : seed ≤ 9) :\n  let lcg := LCG.mk seed\n  let result := lcg.random\n\
  \  0 ≤ result ∧ result ≤ 1 := sorry\n"
"vc-theorems": "theorem lcg_deterministic (seed : Nat) (h : seed ≤ 9) :\n  let lcg1\
  \ := LCG.mk seed\n  let lcg2 := LCG.mk seed\n  lcg1.random = lcg2.random := sorry\n\
  \n\ntheorem lcg_decimal_output (seed : Nat) (h : seed ≤ 9) :\n  let lcg := LCG.mk\
  \ seed\n  let result := lcg.random\n  Float.round (result * 10) = result * 10 :=\
  \ sorry\n\n\ntheorem lcg_period :\n  ∀ (s : Nat), ∃ (n : Nat), n ≤ 10 ∧\n  (let\
  \ lcg := LCG.mk s\n   let seq := List.range n |>.map (λ _ => lcg.random)\n   ∃ (i\
  \ j : Nat), i < j ∧ j < seq.length ∧ \n   seq.get ⟨i, by sorry⟩ = seq.get ⟨j, by\
  \ sorry⟩) := sorry"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
