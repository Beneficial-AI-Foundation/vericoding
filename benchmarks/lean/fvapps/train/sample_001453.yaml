"vc-description": "You are given a grid with dimension $n$ x $m$ and two points with\
  \ coordinates $X(x1,y1)$ and $Y(x2,y2)$ . Your task is to find the number of ways\
  \ in which one can go from point $A(0, 0)$ to point $B (n, m)$ using the $shortest$\
  \ possible path such that the shortest path neither passes through $X$ nor through\
  \ $Y$. \n\nConsider the above 4 x 4 grid . Our shortest path can't pass through\
  \ points (1,3) and (3,3) (marked by yellow dots). One of the possible shortest path\
  \ is from $A$ to $C$ and then from $C$ to $B$.\n\n-----Input:-----\n- First line\
  \ contains $T$, number of testcases. Then the testcases follow. \n- Each testcase\
  \ contains of a single line of input, six space separated integers $n, m, x1, y1,\
  \ x2, y2$. \n\n-----Output:-----\n- For each testcase, output in a single line number\
  \ of ways modulo $998244353$.\n\n-----Constraints-----\n- $1 \\leq T \\leq 10^5$\n\
  - $3 \\leq n,m \\leq 10^5$\n- $1 \\leq x1, x2 \\leq n - 1$\n- $1 \\leq y1, y2 \\\
  leq m - 1$\n- $x1 \\leq x2$\n- $y1 \\leq y2$\n- $X$ and $Y$ never coincide.\n\n\
  -----Sample Input:-----\n1\n3 3 1 1 1 2\n\n-----Sample Output:-----\n5"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def count_shortest_paths (n m x1 y1 x2 y2 : Nat) : Nat :=\nsorry\n"
"vc-theorems": "theorem count_shortest_paths_non_negative\n  (n m x1 y1 x2 y2 : Nat)\n\
  \  (hn : n > 0)\n  (hm : m > 0)\n  (hx1 : x1 ≤ n)\n  (hy1 : y1 ≤ m)\n  (hx2 : x2\
  \ ≤ n) \n  (hy2 : y2 ≤ m) :\n  count_shortest_paths n m x1 y1 x2 y2 ≥ 0 :=\nsorry\n\
  \n\ntheorem count_shortest_paths_upper_bound\n  (n m x1 y1 x2 y2 : Nat)\n  (hn :\
  \ n > 0)\n  (hm : m > 0)\n  (hx1 : x1 ≤ n)\n  (hy1 : y1 ≤ m)\n  (hx2 : x2 ≤ n)\n\
  \  (hy2 : y2 ≤ m) :\n  count_shortest_paths n m x1 y1 x2 y2 < 998244353 :=\nsorry\n\
  \n\ntheorem count_shortest_paths_known_case :\n  count_shortest_paths 3 3 1 1 1\
  \ 2 = 5 :=\nsorry\n\n/--\ninfo: 5\n-/\n#guard_msgs in\n#eval count_shortest_paths\
  \ 3 3 1 1 1 2\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
