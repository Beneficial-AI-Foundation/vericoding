"vc-description": "There is a tree with N vertices numbered 1 to N.\nThe i-th edge\
  \ in this tree connects Vertex a_i and Vertex b_i, and the color and length of that\
  \ edge are c_i and d_i, respectively.\nHere the color of each edge is represented\
  \ by an integer between 1 and N-1 (inclusive). The same integer corresponds to the\
  \ same color, and different integers correspond to different colors.\nAnswer the\
  \ following Q queries:\n - Query j (1 \\leq j \\leq Q): assuming that the length\
  \ of every edge whose color is x_j is changed to y_j, find the distance between\
  \ Vertex u_j and Vertex v_j. (The changes of the lengths of edges do not affect\
  \ the subsequent queries.)\n\n-----Constraints-----\n - 2 \\leq N \\leq 10^5\n -\
  \ 1 \\leq Q \\leq 10^5\n - 1 \\leq a_i, b_i \\leq N\n - 1 \\leq c_i \\leq N-1\n\
  \ - 1 \\leq d_i \\leq 10^4\n - 1 \\leq x_j \\leq N-1\n - 1 \\leq y_j \\leq 10^4\n\
  \ - 1 \\leq u_j < v_j \\leq N\n - The given graph is a tree.\n - All values in input\
  \ are integers.\n\n-----Input-----\nInput is given from Standard Input in the following\
  \ format:\nN Q\na_1 b_1 c_1 d_1\n:\na_{N-1} b_{N-1} c_{N-1} d_{N-1}\nx_1 y_1 u_1\
  \ v_1\n:\nx_Q y_Q u_Q v_Q\n\n-----Output-----\nPrint Q lines. The j-th line (1 \\\
  leq j \\leq Q) should contain the answer to Query j.\n\n-----Sample Input-----\n\
  5 3\n1 2 1 10\n1 3 2 20\n2 4 4 30\n5 2 1 40\n1 100 1 4\n1 100 1 5\n3 1000 3 4\n\n\
  -----Sample Output-----\n130\n200\n60\n\nThe graph in this input is as follows:\n\
  \nHere the edges of Color 1 are shown as solid red lines, the edge of Color 2 is\
  \ shown as a bold green line, and the edge of Color 4 is shown as a blue dashed\
  \ line.\n - Query 1: Assuming that the length of every edge whose color is 1 is\
  \ changed to 100, the distance between Vertex 1 and Vertex 4 is 100 + 30 = 130.\n\
  \ - Query 2: Assuming that the length of every edge whose color is 1 is changed\
  \ to 100, the distance between Vertex 1 and Vertex 5 is 100 + 100 = 200.\n - Query\
  \ 3: Assuming that the length of every edge whose color is 3 is changed to 1000\
  \ (there is no such edge), the distance between Vertex 3 and Vertex 4 is 20 + 10\
  \ + 30 = 60. Note that the edges of Color 1 now have their original lengths."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def solve_tree_distance_queries (n : Nat) (root : Nat) (edges :\
  \ List (Nat × Nat × Nat × Nat)) \n  (queries : List (Nat × Nat × Nat × Nat)) : List\
  \ Nat := sorry\n"
"vc-theorems": "theorem star_tree_leaf_distance {n : Nat} (h1 : n ≥ 3) :\n  let edges\
  \ := List.range (n-1) |> List.map (fun i => (1, i+2, 1, 1))\n  let queries := [(1,\
  \ 1, 2, 3)]\n  (solve_tree_distance_queries n 1 edges queries).head! = 2 := sorry\n\
  \n\ntheorem star_tree_properties {n : Nat} (h1 : n ≥ 3) :\n  let edges := List.range\
  \ (n-1) |> List.map (fun i => (1, i+2, 1, 1))\n  ∀ a b : Nat, \n    a ≠ 1 → b ≠\
  \ 1 → a ≤ n → b ≤ n →\n    let queries := [(1, 1, a, b)]\n    (solve_tree_distance_queries\
  \ n 1 edges queries).head! = 2 := sorry"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
