"vc-description": "The special score(ssc) of an array of integers will be the sum\
  \ of each integer multiplied by its corresponding index plus one in the array.\n\
  \nE.g.: with the array  ```[6, 12, -1]```\n```\narr =   [6,      12,       -1 ]\n\
  ssc =   1*6  +  2* 12 +  3.(*1) = 6 + 24 - 3 = 27\n```\nThe array given in the example\
  \ has six(6) permutations and are with the corresponding ssc:\n```\nPermutations\
  \      Special Score (ssc)\n[6, 12, -1]      1*6 + 2*12 + 3*(-1) = 27\n[6, -1, 12]\
  \       1*6 + 2*(-1) + 3*12 = 40\n[-1, 6, 12]       1*(-1) + 2*6 + 3*12 = 47\n[-1,\
  \ 12, 6]       1*(-1) + 2*12 + 3*6 = 41\n[12, -1, 6]       1*12 + 2*(-1) + 3*6 =\
  \ 28\n[12, 6, -1]       1*12 + 2*6 + 3*(-1) = 21\n```\nThe total sum of the ```ssc's```\
  \ of all the possible permutations is: ```27 + 40 + 47 + 41 + 28 + 21 = 204```\n\
  \nThe maximum value for the ```ssc``` is ```47```.\n\nThe minimum value for the\
  \ ```ssc``` is ```21```.\n\nWe need a special function ```ssc_forperm()``` that\
  \ receives an array of uncertain number of elements (the elements may occur more\
  \ than once) and may output a list of dictionaries with the following data:\n```\n\
  [{\"total perm\":__}, {\"total ssc\": ___}, {\"max ssc\": __}, {\"min ssc\": __}]\n\
  ```\nFor the example we have above will be:\n```python\nssc_forperm([6, 12, -1])\
  \ = [{\"total perm\":6}, {\"total ssc:204}, {\"max ssc\":47}, {\"min ssc\":21}]\n\
  ```\nYou may assume that you will never receive an empty array.\n\nAlso you will\
  \ never receive an array with the same element in all the positions like [1, 1,\
  \ 1, 1 ,1], but you may have elements occuring twice or more like [1, 1, 1, 2, 3]\n\
  \nEnjoy it!!"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def ssc_forperm (arr : List Int) : Record :=\n  sorry\n"
"vc-theorems": "theorem ssc_forperm_result_bounds (arr : List Int) \n  (h : arr.length\
  \ = 3) :\n  let result := ssc_forperm arr\n  result.minSsc ≤ result.maxSsc := by\n\
  \  sorry\n\n\ntheorem ssc_forperm_total_perms (arr : List Int)\n  (h : arr.length\
  \ = 3) :\n  let result := ssc_forperm arr\n  let num_unique := arr.eraseDups.length\n\
  \  (num_unique = 3 → result.totalPerm = 6) ∧\n  (num_unique = 2 → result.totalPerm\
  \ = 3) ∧\n  (num_unique = 1 → result.totalPerm = 1) := by\n  sorry\n\n\ntheorem\
  \ ssc_forperm_total_ssc_multiple (arr : List Int)\n  (h : arr.length = 3) :\n  let\
  \ result := ssc_forperm arr\n  result.totalSsc % result.totalPerm = 0 := by\n  sorry\n\
  \n\ntheorem ssc_forperm_special_case : \n  ssc_forperm [1,1,2] = {\n    totalPerm\
  \ := 3,\n    totalSsc := 21,\n    maxSsc := 7,\n    minSsc := 7\n  } := by\n  sorry"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded"
