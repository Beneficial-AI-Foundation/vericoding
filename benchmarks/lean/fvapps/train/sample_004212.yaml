vc-description: |-
  You throw a ball vertically upwards with an initial speed `v (in km per hour)`. The height `h` of the ball at each time `t`
  is given by `h = v*t - 0.5*g*t*t` where `g` is Earth's gravity `(g ~ 9.81 m/s**2)`. A device is recording at every **tenth
  of second** the height of the ball.
  For example with `v = 15 km/h` the device gets something of the following form:
  `(0, 0.0), (1, 0.367...), (2, 0.637...), (3, 0.808...), (4, 0.881..) ...`
  where the first number is the time in tenth of second and the second number the height in meter.
  # Task
  Write a function `max_ball` with parameter `v (in km per hour)` that returns the `time in tenth of second`
  of the maximum height recorded by the device.
  # Examples:
  `max_ball(15) should return 4`

  `max_ball(25) should return 7`
  # Notes
  - Remember to convert the velocity from km/h to m/s or from m/s in km/h when necessary.
  - The maximum height recorded by the device is not necessarily the maximum height reached by the ball.
vc-preamble: |-
  import Imports.AllImports
vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>
vc-definitions: |
  def max_ball (velocity : Float) : Int :=
    sorry
vc-theorems: |
  theorem max_ball_nonnegative (v : Float) :
    v > 0 → max_ball v ≥ 0 := 
    sorry


  theorem max_ball_roughly_linear (v : Float) :
    v > 0 → (Float.ofInt (max_ball v) - v * 0.28) ≤ 1 ∧ 
            (Float.ofInt (max_ball v) - v * 0.28) ≥ -1 :=
    sorry


  theorem max_ball_monotonic (v₁ v₂ : Float) :
    v₁ > v₂ → v₂ > 0 → max_ball v₁ ≥ max_ball v₂ :=
    sorry

  /--
  info: 4
  -/
  #guard_msgs in
  #eval max_ball 15

  /--
  info: 7
  -/
  #guard_msgs in
  #eval max_ball 25

  /--
  info: 10
  -/
  #guard_msgs in
  #eval max_ball 37
vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded
