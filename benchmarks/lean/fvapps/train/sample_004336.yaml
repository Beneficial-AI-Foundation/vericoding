"vc-description": "You are given two positive integer lists with a random number of\
  \ elements (1 <= n <= 100). Create a [GCD](https://en.wikipedia.org/wiki/Greatest_common_divisor)\
  \ matrix and calculate the average of all values. \n\nReturn a float value rounded\
  \ to 3 decimal places. \n\n\n## Example\n\n```\na = [1, 2, 3]\nb = [4, 5, 6]\n\n\
  #       a =    1  2  3     b =\ngcd(a, b) = [ [1, 2, 1],   # 4\n              [1,\
  \ 1, 1],   # 5\n              [1, 2, 3] ]  # 6\n\naverage(gcd(a, b)) = 1.444\n```"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def gcdMatrix (a : List Nat) (b : List Nat) : Nat :=\n  sorry\n"
"vc-theorems": "theorem gcdMatrix_bounds {a b : List Nat} (ha : ∀ x ∈ a, x > 0) (hb\
  \ : ∀ x ∈ b, x > 0) :\n  ∃ min max : Nat,\n    (∀ x ∈ a, ∀ y ∈ b, Nat.gcd x y ≥\
  \ min) ∧ \n    (∀ x ∈ a, ∀ y ∈ b, Nat.gcd x y ≤ max) ∧\n    min ≤ gcdMatrix a b\
  \ ∧ gcdMatrix a b ≤ max :=\n  sorry\n\n\ntheorem gcdMatrix_positive {a b : List\
  \ Nat} (ha : ∀ x ∈ a, x > 0) (hb : ∀ x ∈ b, x > 0) :\n  gcdMatrix a b > 0 :=\n \
  \ sorry\n\n\ntheorem gcdMatrix_identical_inputs {a b : List Nat} (ha : ∀ x ∈ a,\
  \ x = List.head! a)\n  (hb : ∀ x ∈ b, x = List.head! b) (heq : List.head! a = List.head!\
  \ b) :\n  gcdMatrix a b = List.head! a :=\n  sorry\n\n\ntheorem gcdMatrix_multiples\
  \ {a b : List Nat} (ha : List.length a = 1)\n  (hb : ∀ y ∈ b, y % List.head! a =\
  \ 0) :\n  gcdMatrix a b = List.head! a :=\n  sorry\n\n\ntheorem gcdMatrix_coprime\
  \ : gcdMatrix [2,3,5,7] [11,13,17,19] = 1 :=\n  sorry\n\n/--\ninfo: 1.444\n-/\n\
  #guard_msgs in\n#eval gcd_matrix [1, 2, 3] [4, 5, 6]\n\n/--\ninfo: 5.0\n-/\n#guard_msgs\
  \ in\n#eval gcd_matrix [5, 5, 5] [10, 10, 10]\n\n/--\ninfo: 2.0\n-/\n#guard_msgs\
  \ in\n#eval gcd_matrix [4, 7, 2, 10, 99, 4] [55, 32, 1, 344, 35234, 3]\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
