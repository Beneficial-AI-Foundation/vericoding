"vc-description": "```if:python,php\nIn this kata you will have to write a function\
  \ that takes `litres` and `price_per_litre` as arguments. Purchases of 2 or more\
  \ litres get a discount of 5 cents per litre, purchases of 4 or more litres get\
  \ a discount of 10 cents per litre, and so on every two litres, up to a maximum\
  \ discount of 25 cents per litre. But total discount per litre cannot be more than\
  \ 25 cents. Return the toal cost rounded to 2 decimal places. Also you can guess\
  \ that there will not be negative or non-numeric inputs.\n\nGood Luck!\n```\n\n\
  ```if:csharp,java,javascript\nIn this kata you will have to write a function that\
  \ takes `litres` and `pricePerLitre` as arguments. Purchases of 2 or more litres\
  \ get a discount of 5 cents per litre, purchases of 4 or more litres get a discount\
  \ of 10 cents per litre, and so on every two litres, up to a maximum discount of\
  \ 25 cents per litre. But total discount per litre cannot be more than 25 cents.\
  \ Return the toal cost rounded to 2 decimal places. Also you can guess that there\
  \ will not be negative or non-numeric inputs.\n\nGood Luck!\n```"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def fuelPrice (litres : Float) (price : Float) : Float :=\n  sorry\n"
"vc-theorems": "theorem fuel_price_discount_steps (litres : Float) (price : Float)\n\
  \  (h₁ : litres ≥ 0) (h₂ : litres ≤ 1000)\n  (h₃ : price ≥ 0.25) (h₄ : price ≤ 100)\
  \ :\n  let maxDiscount := min ((Float.floor (litres/2)) * 0.05) 0.25\n  let discountedPrice\
  \ := price - maxDiscount\n  fuelPrice litres price = discountedPrice * litres :=\
  \ sorry\n\n/--\ninfo: 212.5\n-/\n#guard_msgs in\n#eval fuel_price 10 21.5\n\n/--\n\
  info: 390\n-/\n#guard_msgs in\n#eval fuel_price 40 10\n\n/--\ninfo: 83.7\n-/\n#guard_msgs\
  \ in\n#eval fuel_price 15 5.83\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
