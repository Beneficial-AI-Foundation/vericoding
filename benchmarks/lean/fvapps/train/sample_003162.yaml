"vc-description": "You're writing an excruciatingly detailed alternate history novel\
  \ set in a world where [Daniel Gabriel Fahrenheit](https://en.wikipedia.org/wiki/Daniel_Gabriel_Fahrenheit)\
  \ was never born.\n\nSince Fahrenheit never lived the world kept on using the [Rømer\
  \ scale](https://en.wikipedia.org/wiki/R%C3%B8mer_scale), invented by fellow Dane\
  \ [Ole Rømer](https://en.wikipedia.org/wiki/Ole_R%C3%B8mer) to this very day, skipping\
  \ over the Fahrenheit and Celsius scales entirely.\n\nYour magnum opus contains\
  \ several thousand references to temperature, but those temperatures are all currently\
  \ in degrees Celsius. You don't want to convert everything by hand, so you've decided\
  \ to write a function, `celsius_to_romer()` that takes a temperature in degrees\
  \ Celsius and returns the equivalent temperature in degrees Rømer.\n\nFor example:\
  \ `celsius_to_romer(24)` should return `20.1`."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def celsius_to_romer (celsius : Float) : Float := sorry\n\ntheorem\
  \ celsius_to_romer_zero_point :\n  let romer := celsius_to_romer 0\n  (romer - 7.5).abs\
  \ < 0.0000000001 := by sorry\n"
"vc-theorems": "theorem celsius_to_romer_conversion_formula (celsius : Float) \n \
  \   (h1 : celsius ≥ -273.15) (h2 : celsius ≤ 1000) :\n  let romer := celsius_to_romer\
  \ celsius\n  let expected := (celsius * 21 / 40) + 7.5\n  (romer - expected).abs\
  \ < 0.0000000001 := by sorry"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded"
