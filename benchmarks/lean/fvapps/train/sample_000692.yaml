"vc-description": "The notorious hacker group \"Sed\" managed to obtain a string $S$\
  \ from their secret sources. The string contains only lowercase English letters\
  \ along with the character '?'.\nA substring of $S$ is a contiguous subsequence\
  \ of that string. For example, the string \"chef\" is a substring of the string\
  \ \"codechef\", but the string \"codeh\" is not a substring of \"codechef\".\nA\
  \ substring of $S$ is good if it is possible to choose a lowercase English letter\
  \ $C$ such that the following process succeeds:\n- Create a string $R$, which is\
  \ a copy of the substring, but with each '?' replaced by the letter $c$. Note that\
  \ all occurrences of '?' must be replaced by the same letter.\n- For each lowercase\
  \ English letter:\n- Compute the number of times it occurs in $S$ and the number\
  \ of times it occurs in $R$; let's denote them by $A$ and $B$ respectively. The\
  \ '?' characters in the original string $S$ are ignored when computing $A$.\n- Check\
  \ the parity of $A$ and $B$. If they do not have the same parity, i.e. one of them\
  \ is even while the other is odd, then this process fails.\n- If the parities of\
  \ the number of occurrences in $S$ and $R$ are the same for each letter, the process\
  \ succeeds.\nFor different substrings, we may choose different values of $C$.\n\
  Help Sed find the number of good substrings in the string $S$.\n\n-----Input-----\n\
  - The first line of the input contains a single integer $T$ denoting the number\
  \ of test cases. The description of $T$ test cases follows.\n- The first and only\
  \ line of each test case contains a single string $S$.\n\n-----Output-----\nFor\
  \ each test case, print a single line containing one integer â€• the number of good\
  \ substrings.\n\n-----Constraints-----\n- $1 \\le T \\le 10^5$\n- $1 \\le S \\le\
  \ 10^5$\n- $S$ contains only lowercase English letters ('a' through 'z') and '?'\n\
  - the sum of $|S|$ over all test cases does not exceed $10^5$\n\n-----Example Input-----\n\
  5\naa?\na???\n????\nasfhaslskfak\naf??avvnfed?fav?faf????\n\n-----Example Output-----\n\
  2\n6\n4\n2\n27\n\n-----Explanation-----\nExample case 1: All letters occur an even\
  \ number of times in $S$. The six substrings of $S$ are \"a\", \"a\", \"?\", \"\
  aa\", \"a?\" and \"aa?\" (note that \"a\" is counted twice). Which of them are good?\n\
  - \"a\" is not good as 'a' occurs an odd number of times in this substring and there\
  \ are no '?' to replace.\n- \"?\" is also not good as replacing '?' by any letter\
  \ causes this letter to occur in $R$ an odd number of times.\n- \"aa\" is a good\
  \ substring because each letter occurs in it an even number of times and there are\
  \ no '?' to replace.\n- \"a?\" is also a good substring. We can replace '?' with\
  \ 'a'. Then, $R$ is \"aa\" and each letter occurs in this string an even number\
  \ of times. Note that replacing '?' e.g. with 'b' would not work ($R$ would be \"\
  ab\", where both 'a' and 'b' occur an odd number of times), but we may choose the\
  \ replacement letter $C$ appropriately.\n- \"aa?\" is not a good substring. For\
  \ any replacement letter $C$, we find that $C$ occurs an odd number of times in\
  \ $R$.\nExample case 2: We especially note that \"a???\" is not a good substring.\
  \ Since all '?' have to be replaced by the same character, we can only get strings\
  \ of the form \"aaaa\", \"abbb\", \"accc\", etc., but none of them match the criteria\
  \ for a good substring.\nExample case 3: Any substring with even length is good."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def solve (s : String) : Nat := sorry\n\ntheorem solve_single_wildcard\
  \ : solve \"aa?\" = 2 := sorry\n"
"vc-theorems": "theorem solve_multi_wildcard : solve \"a???\" = 6 := sorry\n\ntheorem\
  \ solve_all_wildcards : solve \"????\" = 4 := sorry"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded"
