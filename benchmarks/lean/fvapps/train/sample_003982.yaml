vc-description: |-
  An Arithmetic Progression is defined as one in which there is a constant difference between the consecutive terms of a given series of numbers. You are provided with consecutive elements of an Arithmetic Progression. There is however one hitch: exactly one term from the original series is missing from the set of numbers which have been given to you. The rest of the given series is the same as the original AP.  Find the missing term.  

  You have to write a function that receives a list, list size will always be at least 3 numbers. The missing term will never be the first or last one.

  ## Example
  ```python
  find_missing([1, 3, 5, 9, 11]) == 7
  ```

  PS: This is a sample question of the facebook engineer challenge on interviewstreet.
  I found it quite fun to solve on paper using math, derive the algo that way.
  Have fun!
vc-preamble: |
  import Imports.AllImports

  def find_missing (seq : List Int) : Int :=
    sorry


  def list_range_int (n : Nat) : List Int :=
    (List.range n).map Int.ofNat
vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>
vc-definitions: |
  def is_arithmetic_seq (seq : List Int) : Bool :=
  sorry
vc-theorems: |
  theorem find_missing_complete_sequence
    (start step : Int)
    (length : Nat)
    (h1 : length ≥ 3)
    (h2 : length ≤ 10)
    (h3 : -100 ≤ start)
    (h4 : start ≤ 100)
    (h5 : 1 ≤ step)
    (h6 : step ≤ 20) :
    let full_seq := (list_range_int length).map (fun i => start + i * step)
    let i := length / 2
    let seq_with_missing := (full_seq.take i) ++ (full_seq.drop (i+1))
    find_missing seq_with_missing = (full_seq.get! i) :=
  sorry


  theorem find_missing_existing_arithmetic
    {seq : List Int}
    (h1 : seq.length ≥ 3)
    (h2 : seq.length ≤ 20)
    (h3 : is_arithmetic_seq seq = true) :
    let diff := seq.get! 1 - seq.get! 0
    ∃ i, i < seq.length - 1 ∧ 
         seq.get! (i+1) - seq.get! i ≠ diff →
         find_missing seq = seq.get! i + diff :=
  sorry

  /--
  info: 5
  -/
  #guard_msgs in
  #eval find_missing [1, 2, 3, 4, 6, 7, 8, 9]

  /--
  info: 7
  -/
  #guard_msgs in
  #eval find_missing [1, 3, 5, 9, 11]

  /--
  info: 2
  -/
  #guard_msgs in
  #eval find_missing [1, 3, 4]
vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: guarded
