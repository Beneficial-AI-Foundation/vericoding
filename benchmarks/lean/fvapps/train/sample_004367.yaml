"vc-description": "#Description\n\nEverybody has probably heard of the animal heads\
  \ and legs problem from the earlier years at school. It goes:\n\n```“A farm contains\
  \ chickens and cows. There are x heads and y legs. How many chickens and cows are\
  \ there?” ```\n\nWhere x <= 1000 and y <=1000\n\n#Task\n\nAssuming there are no\
  \ other types of animals, work out how many of each animal are there. \n\n```Return\
  \ a tuple in Python - (chickens, cows) and an array list - [chickens, cows]/{chickens,\
  \ cows} in all other languages```\n\nIf either the heads & legs is negative, the\
  \ result of your calculation is negative or the calculation is a float return \"\
  No solutions\" (no valid cases).\n\nIn the form:\n```python\n(Heads, Legs) = (72,\
  \ 200)\n\nVALID - (72, 200) =>             (44 , 28) \n                        \
  \     (Chickens, Cows)\n\nINVALID - (72, 201) => \"No solutions\"\n```\n\nHowever,\
  \ ```if 0 heads and 0 legs are given always return [0, 0]``` since zero heads must\
  \ give zero animals.\n\nThere are many different ways to solve this, but they all\
  \ give the same answer.\n\nYou will only be given integers types - however negative\
  \ values (edge cases) will be given. \n\nHappy coding!"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def animals (heads legs : Int) : Option (Int × Int) :=\n  sorry\n"
"vc-theorems": "theorem valid_combinations\n  (chickens cows : Int)\n  (h_chickens\
  \ : chickens ≥ 0)\n  (h_cows : cows ≥ 0)\n  (h_chickens_bound : chickens ≤ 1000)\n\
  \  (h_cows_bound : cows ≤ 1000) :\n  animals (chickens + cows) (2*chickens + 4*cows)\
  \ = some (chickens, cows) :=\nsorry\n\n\ntheorem invalid_combinations\n  (heads\
  \ legs : Int)\n  (h_invalid : ¬(heads ≥ 0 ∧ legs ≥ 0 ∧ legs % 2 = 0 ∧\n        \
  \       (let possible_chickens := 2*heads - legs/2\n                let possible_cows\
  \ := legs/2 - heads\n                possible_chickens ≥ 0 ∧ possible_cows ≥ 0)))\
  \ :\n  animals heads legs = none :=\nsorry\n\n\ntheorem zero_case :\n  animals 0\
  \ 0 = some (0, 0) :=\nsorry\n\n\ntheorem impossible_leg_counts\n  (heads : Int)\n\
  \  (h_heads_pos : heads > 0)\n  (h_heads_bound : heads ≤ 1000) : \n  animals heads\
  \ (2*heads - 1) = none :=\nsorry\n\n/--\ninfo: (44, 28)\n-/\n#guard_msgs in\n#eval\
  \ animals 72 200\n\n/--\ninfo: (0, 0)\n-/\n#guard_msgs in\n#eval animals 0 0\n\n\
  /--\ninfo: 'No solutions'\n-/\n#guard_msgs in\n#eval animals 25 555\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
