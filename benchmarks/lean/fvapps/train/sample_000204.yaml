"vc-description": "In the world of Dota2, there are two parties: the Radiant and the\
  \ Dire.\n\n\n\nThe Dota2 senate consists of senators coming from two parties. Now\
  \ the senate wants to make a decision about a change in the Dota2 game. The voting\
  \ for this change is a round-based procedure. In each round, each senator can exercise\
  \ one of the two rights:\n\nBan one senator's right: A senator can make another\
  \ senator lose all his rights in this and all the following rounds.\nAnnounce the\
  \ victory: If this senator found the senators who still have rights to vote are\
  \ all from the same party, he can announce the victory and make the decision about\
  \ the change in the game.\n\n\n\n\nGiven a string representing each senator's party\
  \ belonging. The character 'R' and 'D' represent the Radiant party and the Dire\
  \ party respectively. Then if there are n senators, the size of the given string\
  \ will be n.\n\n\n\nThe round-based procedure starts from the first senator to the\
  \ last senator in the given order. This procedure will last until the end of voting.\
  \ All the senators who have lost their rights will be skipped during the procedure.\n\
  \n\n\nSuppose every senator is smart enough and will play the best strategy for\
  \ his own party, you need to predict which party will finally announce the victory\
  \ and make the change in the Dota2 game. The output should be Radiant or Dire.\n\
  \n\nExample 1:\n\nInput: \"RD\"\nOutput: \"Radiant\"\nExplanation: The first senator\
  \ comes from Radiant and he can just ban the next senator's right in the round 1.\
  \ And the second senator can't exercise any rights any more since his right has\
  \ been banned. And in the round 2, the first senator can just announce the victory\
  \ since he is the only guy in the senate who can vote.\n\n\n\n\nExample 2:\n\nInput:\
  \ \"RDD\"\nOutput: \"Dire\"\nExplanation: \nThe first senator comes from Radiant\
  \ and he can just ban the next senator's right in the round 1. And the second senator\
  \ can't exercise any rights anymore since his right has been banned. And the third\
  \ senator comes from Dire and he can ban the first senator's right in the round\
  \ 1. And in the round 2, the third senator can just announce the victory since he\
  \ is the only guy in the senate who can vote.\n\n\n\nNote:\n\nThe length of the\
  \ given string will in the range [1, 10,000]."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def predict_party_victory (senate : String) : String := sorry\n\
  \ntheorem predict_party_victory_valid_output (senate : String) :\n  senate.length\
  \ > 0 → \n  (predict_party_victory senate = \"Radiant\" ∨ predict_party_victory\
  \ senate = \"Dire\") := sorry\n"
"vc-theorems": "theorem predict_party_victory_all_radiant (senate : String) :\n  senate.length\
  \ > 0 → \n  (∀ c, c ∈ senate.data → c = 'R') →\n  predict_party_victory senate =\
  \ \"Radiant\" := sorry\n\n\ntheorem predict_party_victory_all_dire (senate : String)\
  \ :\n  senate.length > 0 → \n  (∀ c, c ∈ senate.data → c = 'D') →\n  predict_party_victory\
  \ senate = \"Dire\" := sorry\n\n\ntheorem predict_party_victory_deterministic (senate\
  \ : String) :\n  senate.length > 0 →\n  predict_party_victory senate = predict_party_victory\
  \ senate := sorry\n\n\ntheorem predict_party_victory_repeating_pattern (n : Nat)\
  \ :\n  n > 0 →\n  predict_party_victory (String.join (List.replicate n \"RD\"))\
  \ = predict_party_victory \"RD\" := sorry\n\n/--\ninfo: 'Radiant'\n-/\n#guard_msgs\
  \ in\n#eval predict_party_victory \"RD\"\n\n/--\ninfo: 'Dire'\n-/\n#guard_msgs in\n\
  #eval predict_party_victory \"RDD\"\n\n/--\ninfo: 'Radiant'\n-/\n#guard_msgs in\n\
  #eval predict_party_victory \"RRDDD\"\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
