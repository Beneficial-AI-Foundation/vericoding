"vc-description": "Now that Chef has finished baking and frosting his cupcakes, it's\
  \ time to package them. Chef has N cupcakes, and needs to decide how many cupcakes\
  \ to place in each package. Each package must contain the same number of cupcakes.\
  \ Chef will choose an integer A between 1 and N, inclusive, and place exactly A\
  \ cupcakes into each package.  Chef makes as many packages as possible. Chef then\
  \ gets to eat the remaining cupcakes. Chef enjoys eating cupcakes very much. Help\
  \ Chef choose the package size A that will let him eat as many cupcakes as possible.\n\
  \n-----Input-----\n\nInput begins with an integer T, the number of test cases. Each\
  \ test case consists of a single integer N, the number of cupcakes.\n\n-----Output-----\n\
  \nFor each test case, output the package size that will maximize the number of leftover\
  \ cupcakes. If multiple package sizes will result in the same number of leftover\
  \ cupcakes, print the largest such size.\n\n-----Constraints-----\n- 1 ≤ T ≤ 1000\n\
  - 2 ≤ N ≤ 100000000 (108)\n\n-----Sample Input-----\n2\n2\n5\n\n-----Sample Output-----\n\
  2\n3\n\n-----Explanation-----\n\nIn the first test case, there will be no leftover\
  \ cupcakes regardless of the size Chef chooses, so he chooses the largest possible\
  \ size.  In the second test case, there will be 2 leftover cupcakes."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def solve_packaging (n : Nat) : Nat := sorry\n\ntheorem package_size_formula\
  \ {n : Nat} (h : n > 0) : \n  solve_packaging n = n / 2 + 1 := sorry\n"
"vc-theorems": "theorem package_size_positive {n : Nat} (h : n > 0) :\n  solve_packaging\
  \ n > 0 := sorry\n\n\ntheorem package_size_bounded {n : Nat} (h : n > 0) :\n  solve_packaging\
  \ n ≤ n := sorry\n\n\ntheorem package_size_maximizes_leftovers {n : Nat} (h : n\
  \ > 0) :\n  ∀ k : Nat, k > 0 → k < solve_packaging n → \n    n % k ≤ n % (solve_packaging\
  \ n) := sorry\n\n/--\ninfo: 2\n-/\n#guard_msgs in\n#eval solve_packaging 2\n\n/--\n\
  info: 3\n-/\n#guard_msgs in\n#eval solve_packaging 5\n\n/--\ninfo: 4\n-/\n#guard_msgs\
  \ in\n#eval solve_packaging 7\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
