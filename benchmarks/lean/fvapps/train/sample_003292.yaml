"vc-description": "Complete the  function `scramble(str1, str2)` that returns `true`\
  \ if a portion of ```str1``` characters can be rearranged to match ```str2```, otherwise\
  \ returns ```false```.\n\n**Notes:**\n* Only lower case letters will be used (a-z).\
  \ No punctuation or digits will be included.\n* Performance needs to be considered\n\
  \n## Examples\n\n```python\nscramble('rkqodlw', 'world') ==> True\nscramble('cedewaraaossoqqyt',\
  \ 'codewars') ==> True\nscramble('katas', 'steak') ==> False\n```"
"vc-preamble": "import Imports.AllImports\n\ndef scramble (s1 s2 : String) : Bool\
  \ :=\n  sorry\n\n-- Helper function to count char occurrences in string"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def countChar (s : String) (c : Char) : Nat :=\n  sorry\n\n-- If\
  \ scramble returns true, first string is at least as long as second"
"vc-theorems": "theorem scramble_length_property (s1 s2 : String) :\n  s1.length >\
  \ 0 → s2.length > 0 → scramble s1 s2 = true → s1.length ≥ s2.length :=\n  sorry\n\
  \n-- A string can always be scrambled to form itself\n\ntheorem scramble_identical_strings\
  \ (s : String) : \n  s.length > 0 → scramble s s = true :=\n  sorry\n\n-- If scramble\
  \ is true, all chars in s2 appear at least as many times in s1\n\ntheorem scramble_subset_property\
  \ (s1 s2 : String) (c : Char) :\n  s1.length > 0 → s2.length > 0 → scramble s1 s2\
  \ = true →\n  (countChar s2 c) ≤ (countChar s1 c) :=\n  sorry\n\n-- Any non-empty\
  \ string can be scrambled to form empty string\n\ntheorem scramble_empty_second_string\
  \ (s : String) :\n  s.length > 0 → scramble s \"\" = true :=\n  sorry\n\n-- Empty\
  \ string cannot form non-empty string\n\ntheorem scramble_empty_first_string (c\
  \ : Char) :\n  scramble \"\" (String.singleton c) = false :=\n  sorry\n\n-- Strings\
  \ with disjoint character sets cannot be scrambled\n\ntheorem scramble_disjoint_alphabets\
  \ (s1 s2 : String) :\n  s1.length > 0 → s2.length > 0 →\n  (∀ c, s1.contains c →\
  \ ¬s2.contains c) →\n  scramble s1 s2 = false :=\n  sorry\n\n/--\ninfo: True\n-/\n\
  #guard_msgs in\n#eval scramble \"rkqodlw\" \"world\"\n\n/--\ninfo: True\n-/\n#guard_msgs\
  \ in\n#eval scramble \"cedewaraaossoqqyt\" \"codewars\"\n\n/--\ninfo: False\n-/\n\
  #guard_msgs in\n#eval scramble \"katas\" \"steak\"\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
