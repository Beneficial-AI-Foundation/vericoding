"vc-description": "You are given $N$ gears numbered $1$ through $N$. For each valid\
  \ $i$, gear $i$ has $A_i$ teeth. In the beginning, no gear is connected to any other.\
  \ Your task is to process $M$ queries and simulate the gears' mechanism. There are\
  \ three types of queries:\n- Type 1: Change the number of teeth of gear $X$ to $C$.\n\
  - Type 2: Connect two gears $X$ and $Y$.\n- Type 3: Find the speed of rotation of\
  \ gear $Y$ if gear $X$ rotates with speed $V$.\nIt is known that if gear $i$ is\
  \ directly connected to gear $j$ and gear $i$ rotates with speed $V$, then gear\
  \ $j$ will rotate with speed $-V A_i / A_j$, where the sign of rotation speed denotes\
  \ the direction of rotation (so minus here denotes rotation in the opposite direction).\
  \ You may also notice that gears can be blocked in some cases. This happens when\
  \ some gear would have to rotate in different directions. If a gear is connected\
  \ to any blocked gear, it is also blocked. For example, if three gears are connected\
  \ to each other, this configuration can not rotate at all, and if we connect a fourth\
  \ gear to these three, it will also be blocked and not rotate.\n\n-----Input-----\n\
  - The first line of the input contains two space-separated integers $N$ and $M$.\n\
  - The second line contains $N$ space-separated integers $A_1, A_2, \\dots, A_N$.\n\
  - The following $M$ lines describe queries. Each of these lines begins with an integer\
  \ $T$ denoting the type of the current query.\n- If $T = 1$, it is followed by a\
  \ space and two space-separated integers $X$ and $C$.\n- If $T = 2$, it is followed\
  \ by a space and two space-separated integers $X$ and $Y$.\n- If $T = 3$, it is\
  \ followed by a space and three space-separated integers $X$, $Y$ and $V$.\n\n-----Output-----\n\
  For each query of type 3, print a single line containing two integers separated\
  \ by a slash '/' — the numerator and denominator of the rotation speed of the given\
  \ gear expressed as an irreducible fraction (even if this speed is an integer),\
  \ or $0$ if the gear does not rotate at all.\n\n-----Constraints-----\n- $1 \\le\
  \ N \\le 10^5$\n- $1 \\le M \\le 2\\cdot 10^5$\n- $6 \\le A_i \\le 10^6$ for each\
  \ valid $i$\n- $1 \\le X, Y \\le N$\n- $1 \\le C, V \\le 10^6$\n\n-----Subtasks-----\n\
  Subtask #1 (30 points):\n- $N \\le 2,000$\n- $M \\le 5,000$\nSubtask #2 (70 points):\
  \ original constraints\n\n-----Example Input-----\n4 10\n6 8 10 13\n3 1 2 2\n2 1\
  \ 2\n3 1 2 3\n2 2 3\n1 1 7\n3 1 3 10\n2 3 1\n3 1 3 2\n2 1 4\n3 1 4 6\n\n-----Example\
  \ Output-----\n0\n-9/4\n7/1\n0\n0\n\n-----Explanation-----\nFor the first query\
  \ of type 3, there are no connections between gears, so the answer is $0$.\nFor\
  \ the second query of type 3, we can calculate the rotation speed using the formula\
  \ $-3\\cdot\\frac{6}{8} = \\frac{-9}{4}$.\nFor the third query of type 3, we can\
  \ use the formula twice, so the speed of the second gear is $-10\\cdot\\frac{7}{8}\
  \ = -\\frac{35}{4}$, and the speed of the third gear is $-(-\\frac{35}{4})\\frac{8}{10}\
  \ = \\frac{7}{1}$.\nFor the last query of type 3, all gears are blocked."
"vc-preamble": "import Imports.AllImports\n\ndef find (d : Dsu) (x : Nat) : Nat :=\
  \ sorry\ndef union (d : Dsu) (x y : Nat) : Dsu := sorry\n\n\ndef stringContainsSlash\
  \ (s : String) : Bool := \n  s.any (fun c => c = '/')\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def solve_gears (speeds : List Nat) (queries : List (List Nat))\
  \ : List String := sorry\n\nvariable (n : Nat) (speeds : List Nat) (queries : List\
  \ (List Nat)) (d : Dsu)\n"
"vc-theorems": "theorem basic_gear_properties \n  (h1 : n ≥ 2) \n  (h2 : speeds.length\
  \ ≥ 2)\n  (h3 : queries.length ≥ 1) :\n  let result := solve_gears speeds queries\n\
  \  (∀ r ∈ result, r = \"0\" ∨ stringContainsSlash r) := sorry\n\n\ntheorem dsu_reflexivity\n\
  \  (h1 : n ≥ 2)\n  (h2 : speeds.length ≥ 2) :\n  ∀ i < n, find d i = find d i :=\
  \ sorry\n\n\ntheorem dsu_initial_state\n  (h1 : n ≥ 2)\n  (h2 : speeds.length ≥\
  \ 2) :\n  (∀ x ∈ d.zero, ¬x) ∧ \n  (∀ x ∈ d.dr, x = 1) := sorry\n\n\ntheorem dsu_union_symmetry\n\
  \  (h1 : n ≥ 2)\n  (h2 : speeds.length ≥ 2) :\n  find (union d 0 1) 0 = find (union\
  \ d 0 1) 1 := sorry\n\n\ntheorem three_gear_ratio\n  (h1 : n ≥ 3)\n  (h2 : speeds.length\
  \ ≥ 3) :\n  let queries := [[2, 1, 2], [2, 2, 3], [3, 1, 3, 1]]\n  let result :=\
  \ solve_gears speeds queries\n  match result.getLast? with\n  | some s => s = \"\
  0\" ∨ stringContainsSlash s\n  | none => False := sorry"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded"
