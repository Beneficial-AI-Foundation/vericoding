"vc-description": "Find the difference between two collections. The difference means\
  \ that either the character is present in one collection or it is present in other,\
  \ but not in both. Return a sorted set with difference.\n\nThe collections can contain\
  \ any character and can contain duplicates.\n\nFor instance:\n\nA = [a,a,t,e,f,i,j]\n\
  \nB = [t,g,g,i,k,f]\n\ndifference = [a,e,g,j,k]"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def List.diff : List α → List α → List α \n  | xs, ys => sorry\n\
  \n-- Elements in result must come from input lists"
"vc-theorems": "theorem diff_elements_from_inputs {α} (a b : List α) (x : α) :\n \
  \ x ∈ List.diff a b → x ∈ a ∨ x ∈ b\n  := sorry\n\n-- Elements in result must be\
  \ unique \n\ntheorem diff_unique {α} (a b : List α) :\n  List.Nodup (List.diff a\
  \ b)\n  := sorry\n\n-- If inputs are same (up to permutation), result is empty\n\
  \ntheorem diff_same {α} (a b : List α) :\n  a = b → List.diff a b = []\n  := sorry\n\
  \n-- Symmetric property\n\ntheorem diff_symmetric {α} (a b : List α) :\n  List.diff\
  \ a b = List.diff b a\n  := sorry\n\n-- Identity property\n\ntheorem diff_identity\
  \ {α} (xs : List α) :\n  List.diff xs xs = []\n  := sorry\n\n/--\ninfo: []\n-/\n\
  #guard_msgs in\n#eval diff [\"a\", \"b\"] [\"a\", \"b\"]\n\n/--\ninfo: []\n-/\n\
  #guard_msgs in\n#eval diff [] []\n\n/--\ninfo: ['a', 'e', 'g', 'j', 'k']\n-/\n#guard_msgs\
  \ in\n#eval diff [\"a\", \"a\", \"t\", \"e\", \"f\", \"i\", \"j\"] [\"t\", \"g\"\
  , \"g\", \"i\", \"k\", \"f\"]\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
