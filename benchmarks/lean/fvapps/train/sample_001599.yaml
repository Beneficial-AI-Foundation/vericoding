"vc-description": "# How many ways can you make the sum of a number?\n\nFrom wikipedia:\
  \ https://en.wikipedia.org/wiki/Partition_(number_theory)#\n\n>In number theory\
  \ and combinatorics, a partition of a positive integer *n*, also called an *integer\
  \ partition*, is a way of writing n as a sum of positive integers. Two sums that\
  \ differ only in the order of their summands are considered the same partition.\
  \ If order matters, the sum becomes a composition. For example, 4 can be partitioned\
  \ in five distinct ways:\n```\n4\n3 + 1\n2 + 2\n2 + 1 + 1\n1 + 1 + 1 + 1\n```\n\n\
  ## Examples\n\n### Basic\n\n```python\nexp_sum(1) # 1\nexp_sum(2) # 2  -> 1+1 ,\
  \ 2\nexp_sum(3) # 3 -> 1+1+1, 1+2, 3\nexp_sum(4) # 5 -> 1+1+1+1, 1+1+2, 1+3, 2+2,\
  \ 4\nexp_sum(5) # 7 -> 1+1+1+1+1, 1+1+1+2, 1+1+3, 1+2+2, 1+4, 5, 2+3\n\nexp_sum(10)\
  \ # 42\n```\n\n### Explosive\n\n```python\nexp_sum(50) # 204226\nexp_sum(80) # 15796476\n\
  exp_sum(100) # 190569292\n```\n\nSee [here](http://www.numericana.com/data/partition.htm)\
  \ for more examples."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def exp_sum (n : Int) : Int := sorry\n\n-- Test negative numbers\
  \ always return 0"
"vc-theorems": "theorem exp_sum_negative (n : Int) (h : n < 0) :\n  exp_sum n = 0\
  \ := sorry\n\n-- Test known values\n\ntheorem exp_sum_0 : exp_sum 0 = 1 := sorry\n\
  theorem exp_sum_1 : exp_sum 1 = 1 := sorry\n\ntheorem exp_sum_2 : exp_sum 2 = 2\
  \ := sorry\ntheorem exp_sum_3 : exp_sum 3 = 3 := sorry\n\ntheorem exp_sum_4 : exp_sum\
  \ 4 = 5 := sorry\ntheorem exp_sum_5 : exp_sum 5 = 7 := sorry\n\ntheorem exp_sum_20\
  \ : exp_sum 20 = 627 := sorry\ntheorem exp_sum_30 : exp_sum 30 = 5604 := sorry\n\
  \ntheorem exp_sum_40 : exp_sum 40 = 37338 := sorry\ntheorem exp_sum_43 : exp_sum\
  \ 43 = 63261 := sorry\n\ntheorem exp_sum_60 : exp_sum 60 = 966467 := sorry\ntheorem\
  \ exp_sum_70 : exp_sum 70 = 4087968 := sorry\n\ntheorem exp_sum_90 : exp_sum 90\
  \ = 56634173 := sorry\ntheorem exp_sum_200 : exp_sum 200 = 3972999029388 := sorry\n\
  \ntheorem exp_sum_275 : exp_sum 275 = 1520980492851175 := sorry\n\n-- Test unknown\
  \ values error\n\ntheorem exp_sum_unknown (n : Int) \n  (h1 : n > 275 ∨ (n > 5 ∧\
  \ n ≠ 20 ∧ n ≠ 30 ∧ n ≠ 40 ∧ n ≠ 43 ∧ n ≠ 60 ∧ n ≠ 70 ∧ n ≠ 90 ∧ n ≠ 200 ∧ n ≠ 275))\
  \ :\n  exp_sum n = 0 := sorry\n\n/--\ninfo: 1\n-/\n#guard_msgs in\n#eval exp_sum\
  \ 1\n\n/--\ninfo: 2\n-/\n#guard_msgs in\n#eval exp_sum 2\n\n/--\ninfo: 3\n-/\n#guard_msgs\
  \ in\n#eval exp_sum 3\n\n/--\ninfo: 5\n-/\n#guard_msgs in\n#eval exp_sum 4\n\n/--\n\
  info: 7\n-/\n#guard_msgs in\n#eval exp_sum 5\n\n/--\ninfo: 627\n-/\n#guard_msgs\
  \ in\n#eval exp_sum 20\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded"
