"vc-description": "As a part of this Kata, you need to create a function that when\
  \ provided with a triplet, returns the index of the numerical element that lies\
  \ between the other two elements.\n\nThe input to the function will be an array\
  \ of three distinct numbers (Haskell: a tuple).\n\nFor example:\n\n    gimme([2,\
  \ 3, 1]) => 0\n\n*2* is the number that fits between *1* and *3* and the index of\
  \ *2* in the input array is *0*.\n\nAnother example (just to make sure it is clear):\n\
  \n    gimme([5, 10, 14]) => 1\n    \n*10* is the number that fits between *5* and\
  \ *14* and the index of *10* in the input array is *1*."
"vc-preamble": "import Imports.AllImports\n\ndef gimme (arr : List Float) : Nat :=\n\
  \  sorry\n\n\ndef sort (xs : List Float) : List Float :=\n  sorry\n\n\ndef sortInt\
  \ (xs : List Int) : List Int :=\n  sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def gimmeInt (arr : List Int) : Nat :=\n  sorry\n"
"vc-theorems": "theorem gimme_in_range {arr : List Float} (h : arr.length = 3) :\n\
  \  let res := gimme arr\n  0 ≤ res ∧ res ≤ 2 :=\nsorry\n\n\ntheorem gimme_gives_middle\
  \ {arr : List Float} (h : arr.length = 3) :\n  let sorted := sort arr\n  let res\
  \ := gimme arr\n  arr[res]! = sorted[1]! :=\nsorry\n\n\ntheorem gimme_integers_in_range\
  \ {arr : List Int} (h : arr.length = 3) :\n  let res := gimmeInt arr\n  0 ≤ res\
  \ ∧ res ≤ 2 :=\nsorry\n\n\ntheorem gimme_integers_middle {arr : List Int} (h : arr.length\
  \ = 3) :\n  let sorted := sortInt arr\n  let res := gimmeInt arr\n  arr[res]! =\
  \ sorted[1]! :=\nsorry\n\n\ntheorem gimme_preserves_input {arr : List Float} (h\
  \ : arr.length = 3) :\n  let original := arr\n  let _ := gimme arr\n  arr = original\
  \ :=\nsorry\n\n/--\ninfo: 0\n-/\n#guard_msgs in\n#eval gimme [2, 3, 1]\n\n/--\n\
  info: 1\n-/\n#guard_msgs in\n#eval gimme [5, 10, 14]\n\n/--\ninfo: 0\n-/\n#guard_msgs\
  \ in\n#eval gimme [-0.41, -23, 4]\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
