"vc-description": "You get any card as an argument. Your task is to return a suit\
  \ of this card.\n\nOur deck (is preloaded):\n```python\nDECK = ['2S','3S','4S','5S','6S','7S','8S','9S','10S','JS','QS','KS','AS',\n\
  \        '2D','3D','4D','5D','6D','7D','8D','9D','10D','JD','QD','KD','AD',\n  \
  \      '2H','3H','4H','5H','6H','7H','8H','9H','10H','JH','QH','KH','AH',\n    \
  \    '2C','3C','4C','5C','6C','7C','8C','9C','10C','JC','QC','KC','AC']\n```\n\n\
  ```python\n('3C') -> return 'clubs'\n('3D') -> return 'diamonds'\n('3H') -> return\
  \ 'hearts'\n('3S') -> return 'spades'\n```"
"vc-preamble": "import Imports.AllImports\n\ndef valid_suits := [\"C\", \"S\", \"\
  D\", \"H\"]\ndef valid_ranks := [\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\"\
  ,\"10\",\"J\",\"Q\",\"K\",\"A\"] "
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def suit_map := [(\"C\", \"clubs\"), (\"S\", \"spades\"), (\"D\"\
  , \"diamonds\"), (\"H\", \"hearts\")]\n\ndef define_suit (card : String) : String\
  \ :=\n  sorry\n"
"vc-theorems": "theorem define_suit_valid (rank : String) (suit : String)\n  (h1 :\
  \ rank ∈ valid_ranks)\n  (h2 : suit ∈ valid_suits) :\n  ∃ result, result ∈ [\"clubs\"\
  , \"spades\", \"diamonds\", \"hearts\"] ∧\n  define_suit (rank ++ suit) = result\
  \ := \n  sorry\n\n\ntheorem define_suit_invalid (card : String) \n  (h : ∃ rank,\
  \ rank ∈ valid_ranks ∧ card = rank ++ \"X\") :\n  ¬∃ result, define_suit card =\
  \ result :=\n  sorry\n\n/--\ninfo: 'clubs'\n-/\n#guard_msgs in\n#eval define_suit\
  \ \"3C\"\n\n/--\ninfo: 'spades'\n-/\n#guard_msgs in\n#eval define_suit \"QS\"\n\n\
  /--\ninfo: 'hearts'\n-/\n#guard_msgs in\n#eval define_suit \"JH\"\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
