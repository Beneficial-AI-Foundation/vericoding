"vc-description": "In this Kata, you will be given an integer array and your task\
  \ is to return the sum of elements occupying prime-numbered indices. \n\n~~~if-not:fortran\n\
  The first element of the array is at index `0`.\n~~~\n\n~~~if:fortran\nThe first\
  \ element of an array is at index `1`.\n~~~\n\n\nGood luck! \n\nIf you like this\
  \ Kata, try:\n\n[Dominant primes](https://www.codewars.com/kata/59ce11ea9f0cbc8a390000ed).\
  \ It takes this idea a step further.\n\n[Consonant value](https://www.codewars.com/kata/59c633e7dcc4053512000073)"
"vc-preamble": "import Imports.AllImports\n\ndef is_prime (n : Nat) : Bool :=\n  sorry\n\
  \n\ndef total (arr : List Int) : Int :=\n  sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def sqrt (n : Nat) : Nat :=\n  sorry\n\n\n"
"vc-theorems": "theorem total_empty_property (arr : List Int) :\n  arr = [] → total\
  \ arr = 0 :=\nsorry\n\n\ntheorem total_properties (arr : List Int) :\n  total arr\
  \ = (List.enum arr).foldl (fun acc (i, x) => if is_prime i then acc + x else acc)\
  \ 0 :=\nsorry\n\n\ntheorem total_sign (arr : List Int) :\n  total arr ≥ 0 ∨ ∃ x\
  \ ∈ arr, x < 0 :=\nsorry\n\n/--\ninfo: 0\n-/\n#guard_msgs in\n#eval total []\n\n\
  /--\ninfo: 7\n-/\n#guard_msgs in\n#eval total [1, 2, 3, 4]\n\n/--\ninfo: 21\n-/\n\
  #guard_msgs in\n#eval total [1, 2, 3, 4, 5, 6, 7, 8]\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded_and_plausible"
