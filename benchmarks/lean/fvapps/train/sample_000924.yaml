"vc-description": "Chef has a string of size $N$ which consists only lowercase English\
  \ alphabet. The chef doesn't like the consonant alphabet at all. So he is thinking\
  \ of changing every single consonant alphabet to any vowel alphabet. There is some\
  \ cost for performing this operation.\n- Number all alphabet [a,b,c,……,z] as [1,2,3,…..,26]\n\
  - So if you want to change c to e then cost will be |e-c| = |5-3| = 2\nYou need\
  \ the answer at what minimum cost chef can change every single consonant alphabet\
  \ to any vowel alphabet. \n\n-----Input:-----\n- First-line will contain $T$, the\
  \ number of test cases. Then the test cases follow. \n- Each test case contains\
  \ of a single line of input, a string of lowercase alphabet. \n\n-----Output:-----\n\
  For each test case, output in a single line answer.\n\n-----Constraints-----\n-\
  \ $1 \\leq T \\leq 100$\n- $1 \\leq |s| \\leq 10^2$\n\n-----Sample Input:-----\n\
  2\naeiou\ndbcc  \n\n-----Sample Output:-----\n0\n6\n\n-----EXPLANATION:-----\nIn\
  \ the first test case, all characters are already vowel so we don't need to change.\n\
  In the second tect case\n|e-d|=|5-4|=1\n|a-b|=|1-2|=1\n|a-c|=|1-3|=2\n|a-c|=|1-3|=2\n\
  1+1+2+2=6"
"vc-preamble": "import Imports.AllImports\n\ndef isVowel (c : Char) : Bool := \n \
  \ c = 'a' ∨ c = 'e' ∨ c = 'i' ∨ c = 'o' ∨ c = 'u'\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def minCostVowelTransform (s : String) : Nat :=\nsorry\n"
"vc-theorems": "theorem min_cost_non_negative (s : String) :\n  minCostVowelTransform\
  \ s ≥ 0 :=\nsorry\n\n\ntheorem vowels_zero_cost (s : String) :\n  (∀ c ∈ s.data,\
  \ isVowel c) → minCostVowelTransform s = 0 :=\nsorry\n\n\ntheorem cost_is_sum_of_min_distances\
  \ (s : String) :\n  minCostVowelTransform s = \n    s.data.foldl (fun acc c =>\n\
  \      if isVowel c then \n        acc\n      else\n        acc + ['a', 'e', 'i',\
  \ 'o', 'u'].foldl (fun min_dist v =>\n          min min_dist (if c.toNat ≥ v.toNat\
  \ then c.toNat - v.toNat else v.toNat - c.toNat)\n        ) 1000000\n    ) 0 :=\n\
  sorry\n\n\ntheorem non_vowels_positive_cost (s : String) :\n  s ≠ \"\" →\n  (∀ c\
  \ ∈ s.data, ¬isVowel c) →\n  minCostVowelTransform s > 0 :=\nsorry\n\n/--\ninfo:\
  \ 0\n-/\n#guard_msgs in\n#eval min_cost_vowel_transform \"aeiou\"\n\n/--\ninfo:\
  \ 6\n-/\n#guard_msgs in\n#eval min_cost_vowel_transform \"dbcc\"\n\n/--\ninfo: 3\n\
  -/\n#guard_msgs in\n#eval min_cost_vowel_transform \"bc\"\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded"
