"vc-description": "Ram and Shyam are sitting next to each other, hoping to cheat on\
  \ an exam. However, the examination board has prepared $p$ different sets of questions\
  \ (numbered $0$ through $p-1$), which will be distributed to the students in the\
  \ following way:\n- The students are assigned roll numbers — pairwise distinct positive\
  \ integers.\n- If a student's roll number is $r$, this student gets the $((r-1)\\\
  %p)$-th set of questions.\nObviously, Ram and Shyam can cheat only if they get the\
  \ same set of questions.\nYou are given the roll numbers of Ram and Shyam: $A$ and\
  \ $B$ respectively. Find the number of values of $p$ for which they can cheat, or\
  \ determine that there is an infinite number of such values.\n\n-----Input-----\n\
  - The first line of the input contains a single integer $T$ denoting the number\
  \ of test cases. The description of $T$ test cases follows.\n- The first and only\
  \ line of each test case contains two space-separated integers $A$ and $B$.\n\n\
  -----Output-----\nFor each test case, print a single line — the number of values\
  \ of $p$ for which Ram and Shyam can cheat, or $-1$ if there is an infinite number\
  \ of such values.\n\n-----Constraints-----\n- $1 \\le T \\le 100$\n- $1 \\le A,\
  \ B \\le 10^8$\n\n-----Example Input-----\n1\n2 6\n\n-----Example Output-----\n\
  3\n\n-----Explanation-----\nExample case 1: They can cheat for $p = 1$, $p = 2$\
  \ or $p = 4$."
"vc-preamble": "import Imports.AllImports\n\ndef solve_cheat_possibilities (a b :\
  \ Nat) : Int :=\n  sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def countDivisors (n : Nat) : Nat :=\n  sorry\n"
"vc-theorems": "theorem same_numbers_returns_negative_one \n  {x : Nat} (h : x > 0)\
  \ (h2 : x ≤ 1000) :\n  solve_cheat_possibilities x x = -1 := \n  sorry\n\n\ntheorem\
  \ result_is_symmetric\n  {a b : Nat} (h1 : a > 0) (h2 : b > 0) (h3 : a ≤ 1000) (h4\
  \ : b ≤ 1000) :\n  solve_cheat_possibilities a b = solve_cheat_possibilities b a\
  \ :=\n  sorry\n\n\ntheorem result_is_nonnegative_for_different\n  {a b : Nat} (h1\
  \ : a > 0) (h2 : b > 0) (h3 : a ≤ 1000) (h4 : b ≤ 1000) (h5 : a ≠ b) :\n  solve_cheat_possibilities\
  \ a b ≥ 0 :=\n  sorry\n\n\ntheorem perfect_squares_have_odd_factors\n  {n : Nat}\
  \ (h1 : n > 0) (h2 : n ≤ 100) :\n  solve_cheat_possibilities 0 (n * n) % 2 = 1 :=\n\
  \  sorry\n\n/--\ninfo: 3\n-/\n#guard_msgs in\n#eval solve_cheat_possibilities 2\
  \ 6\n\n/--\ninfo: -1\n-/\n#guard_msgs in\n#eval solve_cheat_possibilities 5 5\n\n\
  /--\ninfo: 3\n-/\n#guard_msgs in\n#eval solve_cheat_possibilities 10 14\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
