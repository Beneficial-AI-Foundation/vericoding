"vc-description": "Write function RemoveExclamationMarks which removes all exclamation\
  \ marks from a given string."
"vc-preamble": "import Imports.AllImports\n\ndef countChars (s : String) (c : Char)\
  \ : Nat := \n  sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def remove_exclamation_marks (s : String) : String :=\n  sorry\n"
"vc-theorems": "theorem no_exclamation_in_result (s : String) :\n  ¬(remove_exclamation_marks\
  \ s).contains '!' := by sorry\n\n\ntheorem length_after_removal (s : String) :\n\
  \  (remove_exclamation_marks s).length = s.length - (countChars s '!') := by sorry\n\
  \n\ntheorem result_equals_remove_exclamation (s : String) :\n  (remove_exclamation_marks\
  \ s).replace \"!\" \"\" = remove_exclamation_marks s := by sorry\n\n\ntheorem unchanged_without_exclamation\
  \ (s : String) (h : ¬s.contains '!') :\n  remove_exclamation_marks s = s := by sorry\n\
  \n\ntheorem concatenation_property (s₁ s₂ : String) :\n  remove_exclamation_marks\
  \ s₁ ++ remove_exclamation_marks s₂ = \n  remove_exclamation_marks (s₁ ++ s₂) :=\
  \ by sorry\n\n/--\ninfo: 'Hello World'\n-/\n#guard_msgs in\n#eval remove_exclamation_marks\
  \ \"Hello World!\"\n\n/--\ninfo: 'Hi Hello'\n-/\n#guard_msgs in\n#eval remove_exclamation_marks\
  \ \"Hi! Hello!\"\n\n/--\ninfo: 'Oh, no'\n-/\n#guard_msgs in\n#eval remove_exclamation_marks\
  \ \"Oh, no!!!\"\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
