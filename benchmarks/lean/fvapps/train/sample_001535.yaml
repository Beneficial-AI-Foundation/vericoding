"vc-description": "Chef is in need of money, so he decided to play a game with Ramsay.\
  \ In this game, there are $N$ rows of coins (numbered $1$ through $N$). For each\
  \ valid $i$, the $i$-th row contains $C_i$ coins with values $A_{i, 1}, A_{i, 2},\
  \ \\ldots, A_{i, C_i}$.\nChef and Ramsay alternate turns; Chef plays first. In each\
  \ turns, the current player can choose one row that still contains coins and take\
  \ one of the coins remaining in this row. Chef may only take the the first (leftmost)\
  \ remaining coin in the chosen row, while Ramsay may only take the last (rightmost)\
  \ remaining coin in the chosen row. The game ends when there are no coins left.\n\
  Each player wants to maximise the sum of values of the coins he took. Assuming that\
  \ both Chef and Ramsay play optimally, what is the maximum amount of money (sum\
  \ of values of coins) Chef can earn through this game?\n\n-----Input-----\n- The\
  \ first line of the input contains a single integer $T$ denoting the number of test\
  \ cases. The description of $T$ test cases follows.\n- The first line of each test\
  \ case contains a single integer $N$.\n- $N$ lines follow. For each valid $i$, the\
  \ $i$-th of these lines contains an integer $C_i$, followed by a space and $C_i$\
  \ space-separated integers $A_{i, 1}, A_{i, 2}, \\ldots, A_{i, C_i}$.\n\n-----Output-----\n\
  For each test case, print a single line containing one integer ― the maximum amount\
  \ of money Chef can earn.\n\n-----Constraints-----\n- $1 \\le T \\le 10$\n- $1 \\\
  le N \\le 10^4$\n- $1 \\le C_i \\le 10$ for each valid $i$\n- $1 \\le A_{i, j} \\\
  le 10^5$ for each valid $i$ and $j$\n\n-----Subtasks-----\nSubtask #1 (20 points):\
  \ $N = 1$\nSubtask #2 (80 points): original constraints\n\n-----Example Input-----\n\
  1\n2\n4 5 2 3 4\n2 1 6\n\n-----Example Output-----\n8\n\n-----Explanation-----\n\
  Example case 1: One optimal sequence of moves is: Chef takes the coin with value\
  \ $5$, Ramsay takes $4$, Chef takes $2$, Ramsay takes $3$, Chef takes $1$ and Ramsay\
  \ takes $6$. At the end, Chef has $5+2+1 = 8$ units of money."
"vc-preamble": "import Imports.AllImports\n\ndef sum_list : List Nat → Nat \n  | []\
  \ => 0\n  | x :: xs => x + sum_list xs\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def calculate_chef_money (rows: List (List Nat)) : Nat := sorry\n\
  \ntheorem chef_money_nonnegative (rows: List (List Nat)) :\n  calculate_chef_money\
  \ rows ≥ 0 := sorry"
"vc-theorems": "/--\ninfo: 8\n-/\n#guard_msgs in\n#eval calculate_chef_money [[4,\
  \ 5, 2, 3, 4], [2, 1, 6]]\n\n/--\ninfo: 1\n-/\n#guard_msgs in\n#eval calculate_chef_money\
  \ [[2, 1, 2]]\n\n/--\ninfo: 12\n-/\n#guard_msgs in\n#eval calculate_chef_money [[3,\
  \ 5, 2, 3], [4, 1, 6, 4, 2]]\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
