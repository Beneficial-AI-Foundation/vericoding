"vc-description": "Write a function that calculates the original product price, without\
  \ VAT.\n\n## Example\nIf a product price is `200.00` and VAT is `15%`, then the\
  \ final product price (with VAT) is: `200.00 + 15% = 230.00`\n\nThus, if your function\
  \ receives `230.00` as input, it should return `200.00`\n\n**Notes:** \n\n* VAT\
  \ is *always* `15%` for the purposes of this Kata.\n* Round the result to 2 decimal\
  \ places.\n* If `null` value given then return `-1`"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def excluding_vat_price (price : Int) : Float := sorry\n\ntheorem\
  \ excluding_vat_price_nonnegative (price : Int) (h : price ≥ 0) :\n  excluding_vat_price\
  \ price ≥ 0 := sorry\n"
"vc-theorems": "theorem excluding_vat_price_less_than_input (price : Int) (h : price\
  \ > 0) :\n  excluding_vat_price price < (Float.ofInt price) := sorry\n\n\ntheorem\
  \ excluding_vat_price_zero :\n  excluding_vat_price 0 = 0 := sorry\n\n\ntheorem\
  \ excluding_vat_price_example_115 :\n  excluding_vat_price 115 = 100 := sorry\n\n\
  \ntheorem excluding_vat_price_example_230 :\n  excluding_vat_price 230 = 200 :=\
  \ sorry\n\n/--\ninfo: 200.0\n-/\n#guard_msgs in\n#eval excluding_vat_price 230.0\n\
  \n/--\ninfo: 106.96\n-/\n#guard_msgs in\n#eval excluding_vat_price 123\n\n/--\n\
  info: -1\n-/\n#guard_msgs in\n#eval excluding_vat_price None\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
