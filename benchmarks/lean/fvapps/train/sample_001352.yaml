"vc-description": "Dhruvil has always been a studious person and will be completing\
  \ his Engineering soon. He is always kneen about solving problems and is preparing\
  \ hard for his next interview at Hackerrank. He has practiced lots of problems and\
  \ now he came across this problem.\nGiven a message containing English letters(A-Z),\
  \ it is being encoded to numbers using the following mapping:\n'A' -> 1,'B' -> 2\
  \ ……………… 'Z' -> 26.\nNow, given a non-empty string containing only digits, help\
  \ Dhruvil determine the total number of ways to decode it.\nWhile decoding you need\
  \ to choose a substring of charachters and not a subsequence. Also a chosen substring\
  \ should not contain any leading \"0\"s, but can contain trailing \"0\"s. Since\
  \ the output can be very large print the answer as modulo 10^9 + 7 i.e 1000000007.\n\
  \n-----Input:-----\nThe first line of the input consists of single integer T, the\
  \ number of test cases.\nEach test case consists of a string.\n\n-----Output:-----\n\
  For each test case print a single integer - the total number of ways to decode the\
  \ digit string.\n\n-----Constraints-----\n- $1 \\leq T \\leq 1000$\n- $2 \\leq S\
  \ \\leq 10^9$\n\n-----Sample Input:-----\n2\n12\n\n226\n\n-----Sample Output:-----\n\
  2\n\n3\n\n-----EXPLANATION:-----\nThere are 2 possible ways. It could be decoded\
  \ as \"AB\" {1,2} or \"L\" {12}.\nThere are 3 possible ways. It could be decoded\
  \ as \"BZ\" {2,26}, \"VF\" {22,6}, or \"BBF\" {2,2,6}."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def decode_string (s : String) : Nat := sorry\n\n\n\n\n\ntheorem\
  \ decode_string_empty :\n  decode_string \"\" = 0 := sorry\n"
"vc-theorems": "theorem decode_string_single_zero :\n  decode_string \"0\" = 0 :=\
  \ sorry\n\n\ntheorem decode_string_leading_zero :\n  decode_string \"01\" = 0 :=\
  \ sorry\n\n\ntheorem decode_string_single_digit {d : Char} \n  (h1 : d.isDigit)\n\
  \  (h2 : d ≠ '0') :\n  decode_string (String.mk [d]) = 1 := sorry\n\n\ntheorem decode_string_twelve\
  \ :\n  decode_string \"12\" = 2 := sorry\n\n\ntheorem decode_string_226 :\n  decode_string\
  \ \"226\" = 3 := sorry\n\n\ntheorem decode_string_eleven :\n  decode_string \"11\"\
  \ = 2 := sorry\n\n/--\ninfo: 2\n-/\n#guard_msgs in\n#eval decode_string \"12\"\n\
  \n/--\ninfo: 3\n-/\n#guard_msgs in\n#eval decode_string \"226\"\n\n/--\ninfo: 3\n\
  -/\n#guard_msgs in\n#eval decode_string \"123\"\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
