"vc-description": "**Background**   \nYou most probably know, that the *kilo* used\
  \ by IT-People differs from the\n*kilo* used by the rest of the world. Whereas *kilo*\
  \ in kB is (mostly) intrepreted as 1024 Bytes (especially by operating systems)\
  \ the non-IT *kilo* denotes the factor 1000 (as in \"1 kg is 1000g\"). The same\
  \ goes for the prefixes mega, giga, tera, peta and so on.\nTo avoid misunderstandings\
  \ (like your hardware shop selling you a 1E+12 Byte harddisk as 1 TB, whereas  your\
  \ Windows states that it has only 932 GB, because the shop uses factor 1000 whereas\
  \ operating systems use factor 1024 by default) the  International Electrotechnical\
  \ Commission has proposed to use **kibibyte** for 1024 Byte.The according unit symbol\
  \ would be **KiB**. Other Prefixes would be respectivly:   \n\n```\n1 MiB = 1024\
  \ KiB   \n1 GiB = 1024 MiB   \n1 TiB = 1024 GiB     \n```\n\n**Task**   \nYour task\
  \ is to write a conversion function between the kB and the KiB-Units. The function\
  \ receives as parameter a memory size including a unit and converts into the corresponding\
  \ unit of the other system:\n\n\n```\nmemorysizeConversion ( \"10 KiB\") -> \"10.24\
  \ kB\"   \nmemorysizeConversion ( \"1 kB\") -> \"0.977 KiB\"   \nmemorysizeConversion\
  \ ( \"10 TB\") -> \"9.095 TiB\"   \nmemorysizeConversion ( \"4.1 GiB\") -> \"4.402\
  \ GB\"   \n```\n\n**Hints**\n- the parameter always contains a (fractioned) number,\
  \ a whitespace and a valid unit\n- units are case sensitive, valid units are **kB\
  \ MB GB TB KiB MiB GiB TiB**\n- result must be rounded to 3 decimals (round half\
  \ up,no trailing zeros) see examples above\n\n**Resources**\nIf you want to read\
  \ more on ...ibi-Units:  \nhttps://en.wikipedia.org/wiki/Kibibyte"
"vc-preamble": "import Imports.AllImports\n\ndef memorysize_conversion (s : String)\
  \ : String := sorry\n\ndef binary_units := [\"KiB\", \"MiB\", \"GiB\", \"TiB\"]"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def metric_units := [\"kB\", \"MB\", \"GB\", \"TB\"]\n\ndef isValidIndex\
  \ (i : Nat) : Prop :=\n  i < 4\n"
"vc-theorems": "theorem binary_units_length : binary_units.length = 4 := sorry\ntheorem\
  \ metric_units_length : metric_units.length = 4 := sorry\n\n\ntheorem binary_to_metric_unit_preservation\
  \ {value : Float} {unit_idx : Nat}\n  (h1 : 0.000001 ≤ value) (h2 : value ≤ 1000000)\n\
  \  (h3 : isValidIndex unit_idx) :\n  let input := s!\"{value} {binary_units[unit_idx]}\"\
  \n  let result := memorysize_conversion input\n  result.endsWith metric_units[unit_idx]\
  \ := sorry\n\n\ntheorem metric_to_binary_unit_preservation {value : Float} {unit_idx\
  \ : Nat}\n  (h1 : 0.000001 ≤ value) (h2 : value ≤ 1000000)\n  (h3 : isValidIndex\
  \ unit_idx) :\n  let input := s!\"{value} {metric_units[unit_idx]}\"\n  let result\
  \ := memorysize_conversion input\n  result.endsWith binary_units[unit_idx] := sorry\n\
  \n/--\ninfo: '1.024 kB'\n-/\n#guard_msgs in\n#eval memorysize_conversion \"1 KiB\"\
  \n\n/--\ninfo: '9.095 TiB'\n-/\n#guard_msgs in\n#eval memorysize_conversion \"10\
  \ TB\"\n\n/--\ninfo: '4.402 GB'\n-/\n#guard_msgs in\n#eval memorysize_conversion\
  \ \"4.1 GiB\"\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
