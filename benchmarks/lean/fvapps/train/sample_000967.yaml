"vc-description": "The game of billiards involves two players knocking 3 balls around\n\
  on a green baize table. Well, there is more to it, but for our\npurposes this is\
  \ sufficient.\nThe game consists of several rounds and in each round both players\n\
  obtain a score, based on how well they played. Once all the rounds\nhave been played,\
  \ the total score of each player is determined by\nadding up the scores in all the\
  \ rounds and the player with the higher\ntotal score is declared the winner.\nThe\
  \ Siruseri Sports Club organises an annual billiards game where\nthe top two players\
  \ of Siruseri play against each other. The Manager\nof Siruseri Sports Club decided\
  \ to add his own twist to the game by\nchanging the rules for determining the winner.\
  \ In his version, at the\nend of each round, the cumulative score for each player\
  \ is calculated, and the leader and her current lead are found. Once\nall the rounds\
  \ are over the player who had the maximum lead at the\nend of any round in the game\
  \ is declared the winner.\n\nConsider the following score sheet for a game with\
  \ 5 rounds:\nRoundPlayer 1Player 2114082289134390110411210658890\n\nThe total scores\
  \ of both players, the leader and the lead after\neach round for this game is given\
  \ below:RoundPlayer 1Player 2LeaderLead114082Player 1582229216Player 1133319326Player\
  \ 274431432Player 215519522Player 23\nNote that the above table contains the cumulative\
  \ scores.\nThe winner of this game is Player 1 as he had the maximum lead (58\n\
  at the end of round 1) during the game.\nYour task is to help the Manager find the\
  \ winner and the winning\nlead. You may assume that the scores will be such that\
  \ there will\nalways be a single winner.  That is, there are no ties.\nInput\nThe\
  \ first line of the input will contain a single integer N (N\n≤ 10000) indicating\
  \ the number of rounds in the game.  Lines\n2,3,...,N+1 describe the scores of the\
  \ two players in the N rounds.\nLine i+1 contains two integer Si and Ti, the scores\
  \ of the Player 1\nand 2 respectively, in round i.  You may assume that 1 ≤ Si ≤\n\
  1000 and 1 ≤ Ti ≤ 1000.  \nOutput\nYour output must consist of a single line containing\
  \ two integers\nW and L, where W is 1 or 2 and indicates the winner and L is the\n\
  maximum lead attained by the winner.\nExample\nInput:\n5\n140 82\n89 134\n90 110\n\
  112 106\n88 90\n\nOutput:\n1 58"
"vc-preamble": "import Imports.AllImports\n\ndef find_winner_and_max_lead (rounds\
  \ : List (Nat × Nat)) : Nat × Nat :=\nsorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def get_max_leads (rounds : List (Nat × Nat)) : Nat × Nat :=\n\
  \  rounds.foldl (fun acc r =>\n    let p1Total := acc.1 + r.1\n    let p2Total :=\
  \ acc.2 + r.2\n    if p1Total > p2Total \n    then (p1Total - p2Total, acc.2)\n\
  \    else (acc.1, p2Total - p1Total)\n  ) (0, 0)"
"vc-theorems": "theorem winner_is_valid (rounds : List (Nat × Nat)) :\n  let (winner,\
  \ _) := find_winner_and_max_lead rounds\n  winner = 1 ∨ winner = 2 := \nsorry\n\n\
  \ntheorem max_lead_nonnegative (rounds : List (Nat × Nat)) :\n  let (_, maxLead)\
  \ := find_winner_and_max_lead rounds\n  maxLead ≥ 0 :=\nsorry\n\n\n/--\ninfo: (1,\
  \ 58)\n-/\n#guard_msgs in\n#eval find_winner_and_max_lead [(140, 82), (89, 134),\
  \ (90, 110), (112, 106), (88, 90)]\n\n/--\ninfo: (1, 15)\n-/\n#guard_msgs in\n#eval\
  \ find_winner_and_max_lead [(10, 5), (20, 15), (30, 25)]\n\n/--\ninfo: (2, 15)\n\
  -/\n#guard_msgs in\n#eval find_winner_and_max_lead [(5, 10), (15, 20), (25, 30)]\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
