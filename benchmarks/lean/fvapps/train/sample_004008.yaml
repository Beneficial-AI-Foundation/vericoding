"vc-description": "Your program will receive an array of complex numbers represented\
  \ as strings. Your task is to write the  `complexSum` function which have to return\
  \ the sum as a string.\n\nComplex numbers can be written in the form of `a+bi`,\
  \ such as `2-3i` where `2` is the real part, `3` is the imaginary part, and `i`\
  \ is the \"imaginary unit\". \n\nWhen you add two complex numbers, the real and\
  \ the imaginary part needs to be added separately,so for example `2+3i + 5-i = (2+5)+(3i-i)\
  \ = 7+2i`\n\nBoth the complex and the imaginary part can be 0, so `123`, `-2i` or\
  \ `i` are also complex numbers.\n\nComplex numbers must be returned in their shortest\
  \ form, so e.g. `0+1*i` should be just `i`, and `10+0i` should be `10`. This is\
  \ also how you will get them!\n\nFor simplicity, the coefficients will always be\
  \ integers. If the array is empty, return `0`.\n\nHave fun! :)"
"vc-preamble": "import Imports.AllImports\n\ndef complex_sum (arr : List String) :\
  \ String := sorry\n\ndef complex_str (real imag : Int) : String := sorry\n\n\ndef\
  \ real_part (s : String) : Int := sorry\ndef imag_part (s : String) : Int := sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def list_sum (l : List Int) : Int := sorry\n\n-- Sum of complex\
  \ numbers is equal to sum of separate numbers"
"vc-theorems": "theorem complex_sum_equals_separate_sums {arr : List String} : \n\
  \  ∀ (real_sum imag_sum : Int), \n  complex_sum arr = complex_str real_sum imag_sum\
  \ →\n  real_sum = list_sum (arr.map real_part) ∧ \n  imag_sum = list_sum (arr.map\
  \ imag_part) := sorry\n\n-- Sum of pure imaginary numbers has no real part\n\ntheorem\
  \ pure_imaginary_sum {arr : List String} :\n  arr.all (λ s => s = \"i\") →\n  complex_sum\
  \ arr = complex_str 0 arr.length := sorry\n\n-- Empty list sums to zero\n\ntheorem\
  \ empty_list_sums_to_zero :\n  complex_sum [] = \"0\" := sorry\n\n-- List of zeros\
  \ sums to zero \n\ntheorem zeros_sum_to_zero {arr : List String} :\n  arr.all (λ\
  \ s => s = \"0\") →\n  complex_sum arr = \"0\" := sorry\n\n/--\ninfo: '5+2i'\n-/\n\
  #guard_msgs in\n#eval complex_sum [\"2+3i\", \"3-i\"]\n\n/--\ninfo: '6i'\n-/\n#guard_msgs\
  \ in\n#eval complex_sum [\"i\", \"2i\", \"3i\"]\n\n/--\ninfo: '0'\n-/\n#guard_msgs\
  \ in\n#eval complex_sum []\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
