"vc-description": "A very passive-aggressive co-worker of yours was just fired. While\
  \ he was gathering his things, he quickly inserted a bug into your system which\
  \ renamed everything to what looks like jibberish. He left two notes on his desk,\
  \ one reads: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\" while the\
  \ other reads: \"Uif usjdl up uijt lbub jt tjnqmf kvtu sfqmbdf fwfsz mfuufs xjui\
  \ uif mfuufs uibu dpnft cfgpsf ju\".\n\n\nRather than spending hours trying to find\
  \ the bug itself, you decide to try and decode it. \n\n\nIf the input is not a string,\
  \ your function must return \"Input is not a string\". Your function must be able\
  \ to handle capital and lower case letters. You will not need to worry about punctuation."
"vc-preamble": "import Imports.AllImports\n\ndef Char.ascii? (c : Char) : Bool :=\
  \ sorry\ndef Char.alpha? (c : Char) : Bool := sorry\n\n\ndef String.containsAsciiLetter\
  \ (s : String) : Bool := \n  s.data.any (fun c => c.ascii? && c.alpha?)\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def one_down (s : String) : String := sorry\n\ntheorem one_down_maintains_string_type\
  \ {s : String} :\n  let res := one_down s\n  ∃ s', res = s' := sorry\n"
"vc-theorems": "theorem one_down_differs_if_contains_ascii_letter {s : String} :\n\
  \  s.containsAsciiLetter → \n  one_down s ≠ s := sorry\n\n\ntheorem one_down_preserves_length\
  \ {s : String} :\n  (one_down s).length = s.length := sorry\n\n\ntheorem one_down_preserves_non_letters\
  \ {s : String} {i : Fin s.length} :\n  ¬(s.data[i.val]?.map (·.alpha?) |>.getD false)\
  \ →\n  (one_down s).data[i.val]? = s.data[i.val]? := sorry\n\n\ntheorem one_down_non_string_input\
  \ {α : Type} [ToString α] (x : α) :\n  one_down (toString x) = \"Input is not a\
  \ string\" := sorry\n\n/--\ninfo: expected\n-/\n#guard_msgs in\n#eval one_down \"\
  Ifmmp\"\n\n/--\ninfo: expected\n-/\n#guard_msgs in\n#eval one_down 45\n\n/--\ninfo:\
  \ expected\n-/\n#guard_msgs in\n#eval one_down \"BMM DBQT NBZCF\"\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
