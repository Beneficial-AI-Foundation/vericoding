"vc-description": "Complete the function that counts the number of unique consonants\
  \ in a string (made up of printable ascii characters).\n\nConsonants are letters\
  \ used in English other than `\"a\", \"e\", \"i\", \"o\", \"u\"`. We will count\
  \ `\"y\"` as a consonant.\n\nRemember, your function needs to return the number\
  \ of unique consonants - disregarding duplicates. For example, if the string passed\
  \ into the function reads `\"add\"`, the function should return `1` rather than\
  \ `2`, since `\"d\"` is a duplicate.\n\nSimilarly, the function should also disregard\
  \ duplicate consonants of differing cases. For example, `\"Dad\"` passed into the\
  \ function should return `1` as `\"d\"` and `\"D\"` are duplicates.\n\n## Examples\n\
  \n```\n\"add\" ==> 1\n\"Dad\" ==> 1\n\"aeiou\" ==> 0\n\"sillystring\" ==> 7\n\"\
  abcdefghijklmnopqrstuvwxyz\" ==> 21\n\"Count my unique consonants!!\" ==> 7\n```"
"vc-preamble": "import Imports.AllImports\n\ndef count_consonants (s : List Char)\
  \ : Nat :=\n  sorry\n\n\ndef isConsonant (c : Char) : Bool :=\n  sorry\n\n\ndef\
  \ isVowel (c : Char) : Bool :=\n  sorry\n\n\ndef toLower (c : Char) : Char :=\n\
  \  sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def toCharList (s : String) : List Char :=\n  sorry\n"
"vc-theorems": "theorem count_consonants_bounds {s : List Char} :\n  0 ≤ count_consonants\
  \ s ∧ count_consonants s ≤ 21 :=\n  sorry\n\n\ntheorem count_consonants_case_insensitive\
  \ {s : List Char} :\n  count_consonants s = count_consonants (List.map toLower s)\
  \ :=\n  sorry \n\n\ntheorem count_consonants_letters_only {s s' : List Char}\n \
  \ (h : s' = List.filter Char.isAlpha s) :\n  count_consonants s = count_consonants\
  \ s' :=\n  sorry\n\n\ntheorem count_consonants_vowels_only {s : List Char}\n  (h\
  \ : ∀ c, c ∈ s → isVowel c) :\n  count_consonants s = 0 :=\n  sorry\n\n\ntheorem\
  \ count_consonants_consonants_only {s : List Char} {n : Nat}\n  (h1 : ∀ c, c ∈ s\
  \ → isConsonant c)\n  (h2 : n = (List.map toLower s).eraseDups.length) :\n  count_consonants\
  \ s = n :=\n  sorry\n\n/--\ninfo: 7\n-/\n#guard_msgs in\n#eval count_consonants\
  \ \"sillystring\"\n\n/--\ninfo: 0\n-/\n#guard_msgs in\n#eval count_consonants \"\
  aeiou\"\n\n/--\ninfo: 21\n-/\n#guard_msgs in\n#eval count_consonants \"abcdefghijklmnopqrstuvwxyz\"\
  \n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded"
