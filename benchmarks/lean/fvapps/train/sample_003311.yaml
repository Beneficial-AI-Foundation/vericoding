"vc-description": "Your task is to determine how many files of the copy queue you\
  \ will be able to save into your Hard Disk Drive. The files must be saved in the\
  \ order they appear in the queue. \n\n### Input:\n\n* Array of file sizes `(0 <=\
  \ s <= 100)`\n* Capacity of the HD `(0 <= c <= 500)`\n\n### Output:\n\n* Number\
  \ of files that can be fully saved in the HD. \n\n### Examples:\n\n```\nsave([4,4,4,3,3],\
  \ 12) -> 3\n# 4+4+4 <= 12, but 4+4+4+3 > 12\n```\n\n```\nsave([4,4,4,3,3], 11) ->\
  \ 2\n# 4+4 <= 11, but 4+4+4 > 11\n```\n\nDo not expect any negative or invalid inputs."
"vc-preamble": "import Imports.AllImports\n\ndef sum (l : List Nat) : Nat :=\n  match\
  \ l with\n  | [] => 0\n  | x::xs => x + sum xs\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def save (sizes : List Nat) (hd : Nat) : Nat :=\n  sorry\n"
"vc-theorems": "theorem save_valid_result_range (sizes : List Nat) (hd : Nat) (h :\
  \ sizes.length > 0) :\n  let result := save sizes hd\n  0 ≤ result ∧ result ≤ sizes.length\
  \ :=\nsorry\n\n/--\ninfo: 3\n-/\n#guard_msgs in\n#eval save [4, 4, 4, 3, 3] 12\n\
  \n/--\ninfo: 2\n-/\n#guard_msgs in\n#eval save [4, 4, 4, 3, 3] 11\n\n/--\ninfo:\
  \ 6\n-/\n#guard_msgs in\n#eval save [4, 8, 15, 16, 23, 42] 108\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded_and_plausible"
