"vc-description": "Shubham recently learned the lexicographical order in strings.\n\
  \nNow, he has two strings s1  and  s2  of the equal size and Shubham wants to compare\
  \ those two strings lexicographically.\n\nHelp Shubham with the strings comparison.\n\
  \nNote:\n\nLetters are case insensitive. \n\n\n-----Input-----\n\nFirst line contains\
  \ a integer T denoting the number of test cases. Each test case contains two strings\
  \ of equal size in two separate lines.\n\n-----Output-----\n\nFor each test case,\n\
  \nIf s1 < s2, print \"first\".\n\nIf s1 > s2, print \"second\".\n\nIf s1=s2, print\
  \ \"equal\".\n\n\nin separate lines.\n\n-----Constraints-----\n\n- 1 ≤ T ≤ 10^2\n\
  - 1 ≤ Length of the string ≤ 500\n\n-----Example-----\nInput:\n2\nabc\nacb\nAB\n\
  ba\n\nOutput:\nfirst\nfirst"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def compare_strings (s1 s2 : String) : ComparisonResult := sorry\n\
  \ntheorem compare_strings_reflexive (s : String) :\n  s.length > 0 → compare_strings\
  \ s s = ComparisonResult.equal := sorry\n"
"vc-theorems": "theorem compare_strings_inverse (s1 s2 : String) :\n  s1.length >\
  \ 0 → s2.length > 0 →\n  match compare_strings s1 s2 with\n  | ComparisonResult.first\
  \ => compare_strings s2 s1 = ComparisonResult.second\n  | ComparisonResult.second\
  \ => compare_strings s2 s1 = ComparisonResult.first\n  | ComparisonResult.equal\
  \ => compare_strings s2 s1 = ComparisonResult.equal\n  := sorry\n\n\ntheorem compare_strings_ascii_order\
  \ (s1 s2 : String) :\n  s1.length > 0 → s2.length > 0 →\n  (if s1.take (min s1.length\
  \ s2.length) < s2.take (min s1.length s2.length) then\n    compare_strings (s1.take\
  \ (min s1.length s2.length)) (s2.take (min s1.length s2.length)) = ComparisonResult.first\n\
  \  else if s1.take (min s1.length s2.length) > s2.take (min s1.length s2.length)\
  \ then  \n    compare_strings (s1.take (min s1.length s2.length)) (s2.take (min\
  \ s1.length s2.length)) = ComparisonResult.second\n  else\n    compare_strings (s1.take\
  \ (min s1.length s2.length)) (s2.take (min s1.length s2.length)) = ComparisonResult.equal)\n\
  \  := sorry"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded"
