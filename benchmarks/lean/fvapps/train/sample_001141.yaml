"vc-description": "You are playing a Billiards-like game on an $N \\times N$ table,\
  \ which has its four corners at the points $\\{(0, 0), (0, N), (N, 0),$ and $(N,\
  \ N)\\}$. You start from a coordinate $(x,y)$,  $(0 < x < N, 0 <  y < N)$ and shoot\
  \ the ball at an angle $45^{\\circ}$ with the horizontal. On hitting the sides,\
  \ the ball continues to move with the same velocity and ensuring that the angle\
  \ of incidence is equal to the angle of reflection with the normal, i.e, it is reflected\
  \ with zero frictional loss. On hitting either of the four corners, the ball stops\
  \ there and doesn’t move any further. \nFind the coordinates of the point of collision,\
  \ when the ball hits the sides for the $K^{th}$ time. If the ball stops before hitting\
  \ the sides $K$ times, find the coordinates of the corner point where the ball stopped\
  \ instead.\n\n-----Input:-----\n- The first line of the input contains an integer\
  \ $T$, the number of testcases.\n- Each testcase contains a single line of input,\
  \ which has four space separated integers - $N$, $K$, $x$, $y$, denoting the size\
  \ of the board, the number of collisions to report the answer for, and the starting\
  \ coordinates.\n\n-----Output:-----\nFor each testcase, print the coordinates of\
  \ the ball when it hits the sides for the $K^{th}$ time, or the coordinates of the\
  \ corner point if it stopped earlier.\n\n-----Constraints-----\n- $1 \\leq T \\\
  leq 10^5$\n- $2 \\leq N \\leq 10^9$\n- $1 \\leq K \\leq 10^9$\n\n-----Subtasks-----\n\
  - $30$ points :  Sum of $K$ over all test cases $\\le 10^7$\n- $70$ points : Original\
  \ constraints.\n\n-----Sample Input:-----\n2\n5 5 4 4\n5 2 3 1\n\n-----Sample Output:-----\n\
  5 5\n3 5\n\n-----Explanation:-----\n- Sample Case $1$ : \nWe are given a $5$ by\
  \ $5$ board. We shoot the ball from coordinates $(4,4)$, and we need to find its\
  \ coordinates after it has collided with sides $5$ times. However, after shooting,\
  \ the ball goes directly to the corner $(5,5)$, and stops there. So we report the\
  \ coordinates $(5,5)$.\n\n- Sample Case $2$ : \nWe are given a $5$ by $5$ board.\
  \ We shoot the ball from the coordinates $(3,1)$, and we need to find its coordinates\
  \ after it has collided with the sides twice. After shooting, it first hits the\
  \ right side at $(5,3)$, and then the top side at $(3,5)$. So, we report $(3,5)$."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def solve_pool_shots (N K x y : Nat) : Nat × Nat := sorry\n\ntheorem\
  \ solve_pool_shots_bounds \n  (N K x y : Nat) (h1 : x ≤ N) (h2 : y ≤ N) :\n  let\
  \ (rx, ry) := solve_pool_shots N K x y\n  rx ≤ N ∧ ry ≤ N := sorry\n"
"vc-theorems": "theorem solve_pool_shots_boundary \n  (N K x y : Nat) (h1 : x ≤ N)\
  \ (h2 : y ≤ N) (h3 : x ≠ y) :\n  let (rx, ry) := solve_pool_shots N K x y\n  rx\
  \ = 0 ∨ rx = N ∨ ry = 0 ∨ ry = N := sorry\n\n\ntheorem solve_pool_shots_cycle\n\
  \  (N K x y : Nat) (h1 : x ≤ N) (h2 : y ≤ N) :\n  solve_pool_shots N K x y = solve_pool_shots\
  \ N (K + 4) x y := sorry\n\n\ntheorem solve_pool_shots_equal_pos\n  (N K pos : Nat)\
  \ (h : pos ≤ N) :\n  solve_pool_shots N K pos pos = (N, N) := sorry\n\n/--\ninfo:\
  \ (5, 5)\n-/\n#guard_msgs in\n#eval solve_pool_shots 5 5 4 4\n\n/--\ninfo: (3, 5)\n\
  -/\n#guard_msgs in\n#eval solve_pool_shots 5 2 3 1\n\n/--\ninfo: (6, 10)\n-/\n#guard_msgs\
  \ in\n#eval solve_pool_shots 10 1 3 7\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
