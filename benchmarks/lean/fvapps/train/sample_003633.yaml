vc-description: |-
  Below is a right-angled triangle:

  ```
    |\
    | \
    |  \
    |   \ 
  o |    \ h 
    |     \
    |    θ \
    |_______\ 
       a
  ```

  Your challange is to write a function (```missingAngle``` in C/C#, ```missing_angle``` in Ruby), that calculates the angle θ in degrees to the nearest integer. You will be given three arguments representing each side: o, h and a. One of the arguments equals zero. Use the length of the two other sides to calculate θ. You will not be expected to handle any erronous data in your solution.
vc-preamble: |
  import Imports.AllImports

  def Float.toDegrees (x : Float) : Float :=
    sorry


  def Int.toFloat (x : Int) : Float :=
    sorry
vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>
vc-definitions: |
  def missing_angle (h a o : Float) : Int :=
    sorry
vc-theorems: |
  theorem missing_angle_output_range (h a o : Float) :
    h > 0 ∨ a > 0 ∨ o > 0 →
    let angle := missing_angle h a o
    0 ≤ angle ∧ angle ≤ 90 :=
  sorry


  theorem missing_angle_with_missing_hyp (a o : Float) :
    a > 0 ∧ o > 0 →
    let angle := missing_angle 0 a o
    (Int.toFloat angle - Float.toDegrees ((o/a).atan)).abs ≤ 1 :=
  sorry


  theorem missing_angle_with_missing_adj (h o : Float) :
    h > 0 ∧ o > 0 →
    let angle := missing_angle h 0 o  
    (Int.toFloat angle - Float.toDegrees ((o/h).asin)).abs ≤ 1 :=
  sorry


  theorem missing_angle_with_missing_opp (h a : Float) :
    h > 0 ∧ a > 0 →
    let angle := missing_angle h a 0
    (Int.toFloat angle - Float.toDegrees ((a/h).acos)).abs ≤ 1 :=
  sorry


  theorem missing_angle_two_zeros (o : Float) :
    o > 0 →
    ¬∃angle, missing_angle 0 0 o = angle :=
  sorry


  theorem missing_angle_invalid_triangle (h a : Float) :
    h > 0 ∧ a > 0 →
    a > h →
    ¬∃angle, missing_angle h a 0 = angle :=
  sorry

  /--
  info: 37
  -/
  #guard_msgs in
  #eval missing_angle 0 400 300

  /--
  info: 37
  -/
  #guard_msgs in
  #eval missing_angle 5 4 0

  /--
  info: 39
  -/
  #guard_msgs in
  #eval missing_angle 8 0 5
vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: guarded
