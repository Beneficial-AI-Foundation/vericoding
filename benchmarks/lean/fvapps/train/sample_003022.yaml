"vc-description": "Bleatrix Trotter the sheep has devised a strategy that helps her\
  \ fall asleep faster. First, she picks a number N. Then she starts naming N, 2 ×\
  \ N, 3 × N, and so on.\nWhenever she names a number, she thinks about all of the\
  \ digits in that number. She keeps track of which digits (0, 1, 2, 3, 4, 5, 6, 7,\
  \ 8, and 9) she has seen at least once so far as part of any number she has named.\
  \ Once she has seen each of the ten digits at least once, she will fall asleep.\n\
  Bleatrix must start with N and must always name (i + 1) × N directly after i × N.\n\
  For example, suppose that Bleatrix picks N = 1692. She would count as follows:\n\
  \nN = 1692. Now she has seen the digits 1, 2, 6, and 9.\n2N = 3384. Now she has\
  \ seen the digits 1, 2, 3, 4, 6, 8, and 9.\n3N = 5076. Now she has seen all ten\
  \ digits, and falls asleep.\n\nThe purpose of this kata is to return the last number\
  \ Bleatrix Trotter sees before falling asleep.\nInput\nWill always be positive integer\
  \ or zero\n\nOutput\nThe last number Bleatrix Trotter sees or \"INSOMNIA\" (-1 in\
  \ Rust and C++) if she will count forever\n\nPlease note, this challenge is not\
  \ my idea. It's from Google Code Jam 2016"
"vc-preamble": "import Imports.AllImports\n\ndef trotter (n: Int) : Int := sorry\n\
  \n-- Define the special case"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def isInsomnia (n: Int) : Bool := sorry\n\ntheorem trotter_positive_multiple\
  \ {n : Int} (h : n > 0) :\n  ∃ k : Int, trotter n = n * k ∧ k > 0 := sorry \n"
"vc-theorems": "theorem trotter_zero :\n  isInsomnia (trotter 0) = true := sorry\n\
  \n\ntheorem trotter_nonzero {n : Int} (h : n > 0) :\n  trotter n > 0 := sorry\n\n\
  \ntheorem trotter_grows {n : Int} (h : n > 0) :\n  trotter n ≥ n := sorry\n\n/--\n\
  info: 5076\n-/\n#guard_msgs in\n#eval trotter 1692\n\n/--\ninfo: 90\n-/\n#guard_msgs\
  \ in\n#eval trotter 2\n\n/--\ninfo: 'INSOMNIA'\n-/\n#guard_msgs in\n#eval trotter\
  \ 0\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
