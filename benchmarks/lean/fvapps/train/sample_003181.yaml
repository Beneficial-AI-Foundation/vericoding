"vc-description": "Your colleagues have been looking over you shoulder. When you should\
  \ have been doing your boring real job, you've been using the work computers to\
  \ smash in endless hours of codewars.\n\nIn a team meeting, a terrible, awful person\
  \ declares to the group that you aren't working. You're in trouble. You quickly\
  \ have to gauge the feeling in the room to decide whether or not you should gather\
  \ your things and leave. \n\n```if-not:java\nGiven an object (meet) containing team\
  \ member names as keys, and their happiness rating out of 10 as the value, you need\
  \ to assess the overall happiness rating of the group. If <= 5, return 'Get Out\
  \ Now!'. Else return 'Nice Work Champ!'.\n```\n```if:java\nGiven a `Person` array\
  \ (meet) containing team members, you need to assess the overall happiness rating\
  \ of the group. If <= 5, return \"Get Out Now!\". Else return \"Nice Work Champ!\"\
  .\n\nThe `Person` class looks like:\n~~~java\nclass Person {\n  final String name;\
  \    // team memnber's name\n  final int happiness;  // happiness rating out of\
  \ 10\n}\n~~~\n```\n\nHappiness rating will be total score / number of people in\
  \ the room.\n\nNote that your boss is in the room (boss), their score is worth double\
  \ it's face value (but they are still just one person!).\n\nThe Office II - Boredom\
  \ Score\nThe Office III - Broken Photocopier\nThe Office IV - Find a Meeting Room\n\
  The Office V - Find a Chair"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def outed (meet : Array (String × Nat)) (boss : String) : String\
  \ :=\n  sorry\n"
"vc-theorems": "theorem outed_result_valid (meet : Array (String × Nat)) (boss : String)\
  \ :\n  (outed meet boss = \"Get Out Now!\") ∨ (outed meet boss = \"Nice Work Champ!\"\
  ) :=\n  sorry\n\n\ntheorem outed_avg_determines_result (meet : Array (String × Nat))\
  \ (boss : String) :\n  let total := (meet.map (fun x => x.2)).foldl (· + ·) 0\n\
  \  let avg := total / meet.size\n  (avg > 5 → outed meet boss = \"Nice Work Champ!\"\
  ) ∧\n  (avg ≤ 5 → outed meet boss = \"Get Out Now!\") :=\n  sorry\n\n\ntheorem outed_all_happy\
  \ (meet : Array (String × Nat)) (boss : String) \n  (h : ∀ x ∈ meet, x.2 = 10) :\n\
  \  outed meet boss = \"Nice Work Champ!\" :=\n  sorry\n\n\ntheorem outed_all_unhappy\
  \ (meet : Array (String × Nat)) (boss : String)\n  (h : ∀ x ∈ meet, x.2 = 0) :\n\
  \  outed meet boss = \"Get Out Now!\" :=\n  sorry\n\n/--\ninfo: 'Get Out Now!'\n\
  -/\n#guard_msgs in\n#eval outed {\"tim\": 0, \"jim\": 2, \"randy\": 0, \"sandy\"\
  : 7, \"andy\": 0, \"katie\": 5, \"laura\": 1, \"saajid\": 2, \"alex\": 3, \"john\"\
  : 2, \"mr\": 0} \"laura\"\n\n/--\ninfo: 'Nice Work Champ!'\n-/\n#guard_msgs in\n\
  #eval outed {\"tim\": 1, \"jim\": 3, \"randy\": 9, \"sandy\": 6, \"andy\": 7, \"\
  katie\": 6, \"laura\": 9, \"saajid\": 9, \"alex\": 9, \"john\": 9, \"mr\": 8} \"\
  katie\"\n\n/--\ninfo: 'Get Out Now!'\n-/\n#guard_msgs in\n#eval outed {\"tim\":\
  \ 2, \"jim\": 4, \"randy\": 0, \"sandy\": 5, \"andy\": 8, \"katie\": 6, \"laura\"\
  : 2, \"saajid\": 2, \"alex\": 3, \"john\": 2, \"mr\": 8} \"john\"\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
