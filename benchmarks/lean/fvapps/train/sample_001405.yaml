"vc-description": "The XOR pair representation (XPR) of a positive integer $N$ is\
  \ defined as a pair of integers $(A, B)$ such that:\n- $1 \\le A \\le B \\le N$\n\
  - $A \\oplus B = N$\n- if there is no way to choose $A$ and $B$ satisfying the above\
  \ conditions, $A = B = -1$\n- otherwise, the value of $A$ should be the smallest\
  \ possible\nThese conditions uniquely define the XPR. Next, we define a function\
  \ $F(N)$ = the value of $B$ in $XPR(N)$, and a function $G(L, R) = \\sum\\limits_{i=L}^R\
  \ F(i)$.\nYou are given $L$ and $R$. Compute $G(L, R)$.\n\n-----Input-----\n- The\
  \ first line of the input contains a single integer $T$ denoting the number of test\
  \ cases. The description of $T$ test cases follows.\n- The first and only line of\
  \ each test case contains two space-separated integers $L$ and $R$.\n\n-----Output-----\n\
  For each test case, print a single line containing one integer â€” the value of the\
  \ function $G(L, R)$.\n\n-----Constraints-----\n- $1 \\le T \\le 10^5$\n- $1 \\\
  le L \\le R \\le 10^9$\n\n-----Example Input-----\n5\n1 10\n3 6\n4 10\n10 17\n100\
  \ 159\n\n-----Example Output-----\n28\n9\n28\n79\n7485"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def solveXorPairs (l r : Nat) : Nat := sorry\n\ntheorem solveXorPairs_known_cases_1\
  \ : solveXorPairs 1 10 = 28 := sorry\n"
"vc-theorems": "theorem solveXorPairs_known_cases_2 : solveXorPairs 3 6 = 9 := sorry\n\
  \ntheorem solveXorPairs_known_cases_3 : solveXorPairs 4 10 = 28 := sorry  \n\n\n\
  theorem solveXorPairs_known_cases_4 : solveXorPairs 10 17 = 79 := sorry\n\ntheorem\
  \ solveXorPairs_known_cases_5 : solveXorPairs 100 159 = 7485 := sorry"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded"
