"vc-description": "Given an array nums of n integers where n > 1,  return an array\
  \ output such that output[i] is equal to the product of all the elements of nums\
  \ except nums[i].\n\nExample:\n\n\nInput:  [1,2,3,4]\nOutput: [24,12,8,6]\n\n\n\
  Note: Please solve it without division and in O(n).\n\nFollow up:\nCould you solve\
  \ it with constant space complexity? (The output array does not count as extra space\
  \ for the purpose of space complexity analysis.)"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def productExceptSelf (nums : List Int) : List Int := sorry\n\n\
  theorem productExceptSelf_length (nums : List Int) (h : nums ≠ []) : \n  (productExceptSelf\
  \ nums).length = nums.length := sorry\n"
"vc-theorems": "theorem productExceptSelf_property {nums : List Int} {i : Fin nums.length}\n\
  \  (h1 : nums.length ≥ 2) (h2 : ∀ x ∈ nums, -10 ≤ x ∧ x ≤ 10) :\n  let result :=\
  \ productExceptSelf nums\n  have h3 : result.length = nums.length := productExceptSelf_length\
  \ nums (by \n    intro h\n    have := h1\n    rw [h] at this\n    contradiction)\n\
  \  result.get ⟨i, by rw [h3]; exact i.isLt⟩ = \n    (List.toArray nums).foldl (fun\
  \ acc x => acc * x) 1 := sorry\n\n\ntheorem all_ones_case (nums : List Int) (h :\
  \ ∀ x ∈ nums, x = 1) :\n  ∀ x ∈ (productExceptSelf nums), x = 1 := sorry\n\n\ntheorem\
  \ reciprocal_products {nums : List Int} {i j : Fin nums.length}\n  (h1 : nums.length\
  \ ≥ 2) (h2 : ∀ x ∈ nums, -10 ≤ x ∧ x ≤ 10)\n  (hi : nums.get i ≠ 0) (hj : nums.get\
  \ j ≠ 0) :\n  let result := productExceptSelf nums\n  have h3 : result.length =\
  \ nums.length := productExceptSelf_length nums (by \n    intro h\n    have := h1\n\
  \    rw [h] at this\n    contradiction)\n  result.get ⟨i, by rw [h3]; exact i.isLt⟩\
  \ * nums.get i = \n  result.get ⟨j, by rw [h3]; exact j.isLt⟩ * nums.get j := sorry\n\
  \n/--\ninfo: [24, 12, 8, 6]\n-/\n#guard_msgs in\n#eval product_except_self #[1,\
  \ 2, 3, 4]\n\n/--\ninfo: [60, 40, 30, 24]\n-/\n#guard_msgs in\n#eval product_except_self\
  \ #[2, 3, 4, 5]\n\n/--\ninfo: [1, 1, 1, 1]\n-/\n#guard_msgs in\n#eval product_except_self\
  \ #[1, 1, 1, 1]\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
