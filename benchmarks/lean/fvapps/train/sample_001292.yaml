"vc-description": "-----General Statement:-----\nRead a number in scientific notation\
  \ and output its equivalent decimal value.\n\n-----Input:-----\nAll data is on a\
  \ single line. The first integer indicates how many pairs of numbers follow. The\
  \ first of each pair is A, the base number, and the second is E, the power of 10.\n\
  \n-----Output:-----\nRound each answer to 2 decimal places. Trailing zeros to the\
  \ right of the decimal point are required. A leading zero to the left of the decimal\
  \ point is not required.\nThe output is to be formatted exactly like that for the\
  \ sample output given below.\n\n-----Assumptions:-----\nE is in the range –10 ..\
  \ 10. A is 1 or larger but less than 10.\nDiscussion: \nIf A = 3.926 and E = 4,\
  \ the number represented is 3.926 X 104 or 39260, which is 39260.00 when rounded\
  \ to 2 decimal places.\n\n-----Sample Input:-----\n4 4.296 3 3.8 -2 1.8 2 2.8678\
  \ 1\n\n-----Sample Output:-----\n4296.00\n0.04\n180.00\n28.68"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def scientific_to_decimal (input : String) : List String :=\n \
  \ sorry\n\n/-- For any valid scientific notation input string:\n    1. The length\
  \ of the result matches n (first number in input)\n    2. Each result string contains\
  \ exactly one decimal point\n    3. Each result string has exactly 2 decimal places\n\
  \    4. Each result string represents a valid floating point number -/"
"vc-theorems": "theorem valid_scientific_notation_properties\n    (input : String)\n\
  \    (n : Nat)\n    (is_valid : True) :\n    let result := scientific_to_decimal\
  \ input\n    (result.length = n\n    ∧ ∀ r ∈ result,\n        (r.contains '.')\n\
  \        ∧ ((r.splitOn \".\").get! 1).length = 2) := by\n  sorry\n\n/-- Invalid\
  \ inputs (strings containing non-numeric characters except '.' and '-')\n    result\
  \ in errors -/\n\ntheorem invalid_input_errors\n    (input : String)\n    (h : ¬∀\
  \ part ∈ input.splitOn \" \",\n         part.replace \".\" \"\" |>.replace \"-\"\
  \ \"\" |>.all Char.isDigit) :\n    False := by\n  sorry"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded"
