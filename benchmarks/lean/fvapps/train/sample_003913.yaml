"vc-description": "# Story\n\nDue to lack of maintenance the minute-hand has fallen\
  \ off Town Hall clock face.\n\nAnd because the local council has lost most of our\
  \ tax money to a Nigerian email scam there are no funds to fix the clock properly.\
  \ \n\nInstead, they are asking for volunteer programmers to write some code that\
  \ tell the time by only looking at the remaining hour-hand!\n\nWhat a bunch of cheapskates!\n\
  \nCan you do it?\n\n# Kata\n\nGiven the ```angle``` (in degrees) of the hour-hand,\
  \ return the time in HH:MM format. Round _down_ to the nearest minute.\n\n# Examples\n\
  \n* ```12:00``` = 0 degrees\n\n\n* ```03:00``` = 90 degrees\n\n\n* ```06:00``` =\
  \ 180 degrees\n\n\n* ```09:00``` = 270 degrees\n\n\n* ```12:00``` = 360 degrees\n\
  \n# Notes\n\n* 0 <= ```angle``` <= 360"
"vc-preamble": "import Imports.AllImports\n\ndef what_time_is_it (angle : Float) :\
  \ String := sorry\n\ndef str_to_hours_mins (s : String) : Nat × Nat := sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def angle_to_total_mins (angle : Float) : Float := sorry\n\ntheorem\
  \ time_format_valid {angle : Float} (h : 0 ≤ angle ∧ angle ≤ 360) : \n  let result\
  \ := what_time_is_it angle\n  let (hours, mins) := str_to_hours_mins result\n  result.length\
  \ = 5 ∧ \n  hours ≥ 1 ∧ hours ≤ 12 ∧\n  mins ≥ 0 ∧ mins ≤ 59 := sorry\n"
"vc-theorems": "theorem time_calculation_consistent {angle : Float} (h : 0 ≤ angle\
  \ ∧ angle ≤ 360) :\n  let result := what_time_is_it angle\n  let (hours, mins) :=\
  \ str_to_hours_mins result\n  let expected_total_mins := angle / 360 * 12 * 60\n\
  \  let actual_total_mins := (hours % 12) * 60 + mins\n  (expected_total_mins - actual_total_mins.toFloat).abs\
  \ < 2 := sorry\n\n\ntheorem hour_boundaries_correct (angle : Nat) (h : angle < 360)\
  \ :\n  let result := what_time_is_it angle.toFloat\n  let (hours, _) := str_to_hours_mins\
  \ result\n  if angle < 30 then hours = 12\n  else hours = angle / 30 := sorry\n\n\
  \ntheorem specific_angles_correct :\n  (str_to_hours_mins (what_time_is_it 0)).1\
  \ = 12 ∧\n  (str_to_hours_mins (what_time_is_it 30)).1 = 1 ∧\n  (str_to_hours_mins\
  \ (what_time_is_it 330)).1 = 11 := sorry\n\n/--\ninfo: '12:00'\n-/\n#guard_msgs\
  \ in\n#eval what_time_is_it 0\n\n/--\ninfo: '03:00'\n-/\n#guard_msgs in\n#eval what_time_is_it\
  \ 90\n\n/--\ninfo: '01:30'\n-/\n#guard_msgs in\n#eval what_time_is_it 45\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
