"vc-description": "# Task\n \"AL-AHLY\" and \"Zamalek\" are the best teams in Egypt,\
  \ but \"AL-AHLY\" always wins the matches between them. \"Zamalek\" managers want\
  \ to know what is the best match they've played so far.\n \n The best match is the\
  \ match they lost with the minimum goal difference. If there is more than one match\
  \ with the same difference, choose the one \"Zamalek\" scored more goals in.\n \n\
  \ Given the information about all matches they played, return the `index` of the\
  \ best match (`0-based`). If more than one valid result, return the smallest index.\n\
  \n# Example\n\n For `ALAHLYGoals = [6,4] and zamalekGoals = [1,2]`, the output should\
  \ be 1.\n \n Because `4 - 2` is less than `6 - 1`\n \n For `ALAHLYGoals = [1,2,3,4,5]\
  \ and zamalekGoals = [0,1,2,3,4]`, the output should be 4.\n \n The goal difference\
  \ of all matches are 1, but at 4th match \"Zamalek\" scored more goals in. So the\
  \ result is `4`.\n \n# Input/Output\n\n\n -  `[input]` integer array `ALAHLYGoals`\n\
  \n  The number of goals \"AL-AHLY\" scored in each match.\n\n\n - `[input]` integer\
  \ array `zamalekGoals`\n\n  The number of goals \"Zamalek\" scored in each match.\
  \ It is guaranteed that zamalekGoals[i] < ALAHLYGoals[i] for each element.\n\n\n\
  \ - `[output]` an integer\n\n  Index of the best match."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def best_match (al_ahly: List Nat) (zamalek: List Nat) : Nat :=\
  \ sorry\n\ntheorem best_match_valid_index (al_ahly: List Nat) (zamalek: List Nat)\
  \ \n    (h: al_ahly.length = zamalek.length) (h2: al_ahly.length > 0) :\n  let result\
  \ := best_match al_ahly zamalek\n  0 ≤ result ∧ result < al_ahly.length := sorry\n"
"vc-theorems": "theorem best_match_has_min_diff (al_ahly: List Nat) (zamalek: List\
  \ Nat)\n    (h: al_ahly.length = zamalek.length) (h2: al_ahly.length > 0) :\n  let\
  \ result := best_match al_ahly zamalek\n  let diff := al_ahly[result]! - zamalek[result]!\n\
  \  ∀ i, i < al_ahly.length → al_ahly[i]! - zamalek[i]! ≥ diff := sorry\n\n\ntheorem\
  \ best_match_max_zamalek (al_ahly: List Nat) (zamalek: List Nat)\n    (h: al_ahly.length\
  \ = zamalek.length) (h2: al_ahly.length > 0) :\n  let result := best_match al_ahly\
  \ zamalek\n  let diff := al_ahly[result]! - zamalek[result]!\n  ∀ i, i < al_ahly.length\
  \ → \n    al_ahly[i]! - zamalek[i]! = diff → \n    zamalek[i]! ≤ zamalek[result]!\
  \ := sorry\n\n/--\ninfo: 1\n-/\n#guard_msgs in\n#eval best_match [6, 4] [1, 2]\n\
  \n/--\ninfo: 4\n-/\n#guard_msgs in\n#eval best_match [1, 2, 3, 4, 5] [0, 1, 2, 3,\
  \ 4]\n\n/--\ninfo: 2\n-/\n#guard_msgs in\n#eval best_match [3, 4, 3] [1, 1, 2]\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded"
