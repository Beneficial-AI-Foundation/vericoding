"vc-description": "Your task is to return the sum of Triangular Numbers up-to-and-including\
  \ the `nth` Triangular Number.\n\nTriangular Number: \"any of the series of numbers\
  \ (1, 3, 6, 10, 15, etc.) obtained by continued summation of the natural numbers\
  \ 1, 2, 3, 4, 5, etc.\"\n\n```\n[01]\n02 [03]\n04 05 [06]\n07 08 09 [10]\n11 12\
  \ 13 14 [15]\n16 17 18 19 20 [21]\n```\n\ne.g. If `4` is given: `1 + 3 + 6 + 10\
  \ = 20`.\n\nTriangular Numbers cannot be negative so return 0 if a negative number\
  \ is given."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def sumTriangularNumbers (n : Int) : Int :=\n  sorry\n"
"vc-theorems": "theorem sum_triangular_negative_returns_zero {n : Int}\n  (h : n ≤\
  \ 0) : sumTriangularNumbers n = 0 := sorry\n\n\ntheorem sum_triangular_positive_properties\
  \ {n : Int} \n  (h : n > 0) : \n  sumTriangularNumbers n > 0 ∧ \n  sumTriangularNumbers\
  \ n = n * (n + 1) * (n + 2) / 6 := sorry\n\n\ntheorem sum_triangular_increasing\
  \ {n : Int}\n  (h : n > 1) : sumTriangularNumbers n > sumTriangularNumbers (n-1)\
  \ := sorry\n\n/--\ninfo: 20\n-/\n#guard_msgs in\n#eval sum_triangular_numbers 4\n\
  \n/--\ninfo: 56\n-/\n#guard_msgs in\n#eval sum_triangular_numbers 6\n\n/--\ninfo:\
  \ 0\n-/\n#guard_msgs in\n#eval sum_triangular_numbers -3\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
