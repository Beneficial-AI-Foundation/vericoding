"vc-description": "# Introduction \n\nKa ka ka cypher is a cypher used by small children\
  \ in some country. When a girl wants to pass something to the other girls and there\
  \ are some boys nearby, she can use Ka cypher. So only the other girls are able\
  \ to understand her. \nShe speaks using KA, ie.: \n`ka thi ka s ka bo ka y ka i\
  \ ka s ka u ka gly` what simply means `this boy is ugly`. \n\n\n# Task \n\nWrite\
  \ a function `KaCokadekaMe` (`ka_co_ka_de_ka_me` in Python) that accepts a string\
  \ word and returns encoded message using ka cypher. \nOur rules:\n- The encoded\
  \ word should start from `ka`.\n- The `ka` goes after vowel (a,e,i,o,u)\n- When\
  \ there is multiple vowels together, the `ka` goes only after the last `vowel`\n\
  - When the word is finished by a vowel, do not add the `ka` after\n\n# Input/Output\n\
  \nThe `word` string consists of only lowercase and uppercase characters. There is\
  \ only 1 word to convert - no white spaces.\n\n# Example\n\n```\nKaCokadekaMe(\"\
  a\");  //=> \"kaa\"\nKaCokadekaMe(\"ka\");  //=> \"kaka\"\nKaCokadekaMe(\"aa\");\
  \ //=> \"kaaa\"  \nKaCokadekaMe(\"Abbaa\"); //=> kaAkabbaa\nKaCokadekaMe(\"maintenance\"\
  ); //=> kamaikantekanakance\nKaCokadekaMe(\"Woodie\"); //=> kaWookadie\nKacokadekaMe(\"\
  Incomprehensibilities\"); //=> kaIkancokamprekahekansikabikalikatiekas\n```\n\n\
  # Remark\n\nKa cypher's country residents, please don't hate me for simplifying\
  \ the way how we divide the words into \"syllables\" in the Kata. I don't want to\
  \ make it too hard for other nations ;-P"
"vc-preamble": "import Imports.AllImports\n\ndef ka_co_ka_de_ka_me (s: String) : String\
  \ := sorry\n\n/- Helper functions -/\n\ndef isVowel (c: Char) : Bool := sorry\n\
  def removeKa (s: String) : String := sorry"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def getConsonants (s: String) : String := sorry\n\ntheorem ka_prefix\
  \ (word: String) :\n  String.isPrefixOf \"ka\" (ka_co_ka_de_ka_me word) := sorry\n"
"vc-theorems": "theorem length_increases (word: String) : \n  word.length > 0 → (ka_co_ka_de_ka_me\
  \ word).length > word.length := sorry\n\n\ntheorem all_vowels (word: String) :\n\
  \  (∀ c ∈ word.data, isVowel c) →\n  ka_co_ka_de_ka_me word = \"ka\" ++ word :=\
  \ sorry\n\n\ntheorem consonants_unchanged (word: String) :\n  getConsonants word\
  \ = getConsonants (removeKa (ka_co_ka_de_ka_me word)) := sorry\n\n/--\ninfo: 'kaa'\n\
  -/\n#guard_msgs in\n#eval ka_co_ka_de_ka_me \"a\"\n\n/--\ninfo: 'kamaikantekanakance'\n\
  -/\n#guard_msgs in\n#eval ka_co_ka_de_ka_me \"maintenance\"\n\n/--\ninfo: 'kaIkancokamprekahekansikabikalikatiekas'\n\
  -/\n#guard_msgs in\n#eval ka_co_ka_de_ka_me \"Incomprehensibilities\"\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
