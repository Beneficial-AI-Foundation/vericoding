"vc-description": "You are given an array of `n+1` integers `1` through `n`. In addition\
  \ there is a single duplicate integer.\n\nThe array is unsorted.\n\nAn example valid\
  \ array would be `[3, 2, 5, 1, 3, 4]`. It has the integers `1` through `5` and `3`\
  \ is duplicated. `[1, 2, 4, 5, 5]` would not be valid as it is missing `3`.\n\n\
  You should return the duplicate value as a single integer."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def find_dup (arr : List Nat) : Nat := sorry\n\ntheorem find_dup_correct\
  \ (n : Nat) (duplicate : Nat) \n  (h1 : n ≥ 2)\n  (h2 : duplicate < n)\n  (h3 :\
  \ duplicate > 0)\n  (arr : List Nat)\n  (h4 : arr = (List.range (n-1)).append [duplicate])\
  \ :\n  find_dup arr = duplicate ∧ \n  (arr.filter (λ x => x = duplicate)).length\
  \ = 2 ∧\n  ∀ x ∈ arr, x ≤ n-1 := sorry"
"vc-theorems": "/--\ninfo: 1\n-/\n#guard_msgs in\n#eval find_dup [1, 1, 2, 3]\n\n\
  /--\ninfo: 2\n-/\n#guard_msgs in\n#eval find_dup [1, 2, 2, 3]\n\n/--\ninfo: 1\n\
  -/\n#guard_msgs in\n#eval find_dup [5, 4, 3, 2, 1, 1]\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded"
