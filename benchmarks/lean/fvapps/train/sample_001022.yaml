"vc-description": "Chef has a binary array in an unsorted manner. Cheffina challenges\
  \ chef to find the transition point in the sorted (ascending) binary array. Here\
  \ indexing is starting from 0.\nNote: Transition point always exists.\n\n-----Input:-----\n\
  - First-line will contain $T$, the number of test cases. Then the test cases follow.\
  \ \n- Each test case contains two lines of input, $N$.\n- N space-separated binary\
  \ numbers. \n\n-----Output:-----\nFor each test case, output in a single line answer.\n\
  \n-----Constraints-----\n- $1 \\leq T \\leq 10$\n- $1 \\leq N \\leq 10^5$\n\n-----Sample\
  \ Input:-----\n1\n5\n0 1 0 0 1\n\n-----Sample Output:-----\n3\n\n-----EXPLANATION:-----\n\
  binary array in sorted form will look like = [0, 0, 0, 1, 1]"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def find_transition_point (n : Nat) (arr : List Nat) : Option Nat\
  \ :=\n  sorry\n"
"vc-theorems": "theorem find_transition_point_valid_index (n : Nat) (arr : List Nat)\
  \ :\n  let result := find_transition_point n arr\n  ∀ i, result = some i → i < n\
  \ := \n  sorry\n\n\ntheorem find_transition_point_zeros_before (n : Nat) (arr :\
  \ List Nat) :\n  let result := find_transition_point n arr\n  ∀ i, result = some\
  \ i →\n  ∀ j < i, arr[j]! = 0 := \n  sorry\n\n\ntheorem find_transition_point_first_one\
  \ (n : Nat) (arr : List Nat) :\n  let result := find_transition_point n arr\n  ∀\
  \ i, result = some i →\n  i < n →\n  arr[i]! = 1 :=\n  sorry\n\n\ntheorem find_transition_point_no_ones\
  \ (n : Nat) (arr : List Nat) :\n  (∀ x ∈ arr, x ≠ 1) →\n  find_transition_point\
  \ n arr = none :=\n  sorry\n\n\ntheorem find_transition_point_all_ones (n : Nat)\
  \ :\n  n > 0 →\n  find_transition_point n (List.replicate n 1) = some 0 :=\n  sorry\n\
  \n\ntheorem find_transition_point_all_zeros (n : Nat) :\n  n > 0 →\n  find_transition_point\
  \ n (List.replicate n 0) = none :=\n  sorry\n\n/--\ninfo: 3\n-/\n#guard_msgs in\n\
  #eval find_transition_point 5 [0, 1, 0, 0, 1]\n\n/--\ninfo: 1\n-/\n#guard_msgs in\n\
  #eval find_transition_point 3 [1, 0, 1]\n\n/--\ninfo: 3\n-/\n#guard_msgs in\n#eval\
  \ find_transition_point 4 [0, 0, 0, 1]\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
