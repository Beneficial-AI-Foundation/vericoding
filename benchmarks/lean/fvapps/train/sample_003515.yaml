"vc-description": "To celebrate the start of the Rio Olympics (and the return of 'the\
  \ Last Leg' on C4 tonight) this is an Olympic inspired kata.\n\nGiven a string of\
  \ random letters, you need to examine each. Some letters naturally have 'rings'\
  \ in them. 'O' is an obvious example, but 'b', 'p', 'e', 'A', etc are all just as\
  \ applicable. 'B' even has two!! Please note for this kata you can count lower case\
  \ 'g' as only one ring.\n\nYour job is to count the 'rings' in each letter and divide\
  \ the total number by 2. Round the answer down. Once you have your final score:\n\
  \nif score is 1 or less,  return 'Not even a medal!';\nif score is 2, return 'Bronze!';\n\
  if score is 3, return 'Silver!';\nif score is more than 3, return 'Gold!';\n\nDots\
  \ over i's and any other letters don't count as rings."
"vc-preamble": "import Imports.AllImports\n\ndef CHARS_WITH_RINGS := \"abdegopqABBDOPQR\"\
  \n\ndef olympic_ring (s : String) : String := sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def POSSIBLE_OUTPUTS := [\"Not even a medal!\", \"Bronze!\", \"\
  Silver!\", \"Gold!\"]\n\ntheorem output_in_possible_values (s : String) : \n  olympic_ring\
  \ s ∈ POSSIBLE_OUTPUTS := sorry\n"
"vc-theorems": "theorem empty_string_not_medal (s : String) :\n  (∀ c, c ∈ s.data\
  \ → c ∉ CHARS_WITH_RINGS.data) → \n  olympic_ring s = \"Not even a medal!\" := sorry\n\
  \n\ntheorem no_ring_chars_not_medal (s : String) :\n  (∀ c, c ∈ s.data → c ∉ CHARS_WITH_RINGS.data)\
  \ →\n  olympic_ring s = \"Not even a medal!\" := sorry\n\n/--\ninfo: 'Bronze!'\n\
  -/\n#guard_msgs in\n#eval olympic_ring \"wHjMudLwtoPGocnJ\"\n\n/--\ninfo: 'Not even\
  \ a medal!'\n-/\n#guard_msgs in\n#eval olympic_ring \"JKniLfLW\"\n\n/--\ninfo: 'Gold!'\n\
  -/\n#guard_msgs in\n#eval olympic_ring \"IMBAWejlGRTDWetPS\"\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
