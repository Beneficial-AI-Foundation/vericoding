"vc-description": "=====Function Descriptions=====\nfloor\nThe tool floor returns\
  \ the floor of the input element-wise.\nThe floor of x is the largest integer i\
  \ where i≤x.\n\nimport numpy\n\nmy_array = numpy.array([1.1, 2.2, 3.3, 4.4, 5.5,\
  \ 6.6, 7.7, 8.8, 9.9])\nprint numpy.floor(my_array)         #[ 1.  2.  3.  4.  5.\
  \  6.  7.  8.  9.]\n\nceil\nThe tool ceil returns the ceiling of the input element-wise.\n\
  The ceiling of x is the smallest integer i where i≥x.\n\nimport numpy\n\nmy_array\
  \ = numpy.array([1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8, 9.9])\nprint numpy.ceil(my_array)\
  \          #[  2.   3.   4.   5.   6.   7.   8.   9.  10.]\n\nrint\nThe rint tool\
  \ rounds to the nearest integer of input element-wise.\n\nimport numpy\n\nmy_array\
  \ = numpy.array([1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8, 9.9])\nprint numpy.rint(my_array)\
  \          #[  1.   2.   3.   4.   6.   7.   8.   9.  10.]\n\n=====Problem Statement=====\n\
  You are given a 1-D array, A. Your task is to print the floor, ceil and rint of\
  \ all the elements of A.\n\n=====Input Format=====\nA single line of input containing\
  \ the space separated elements of array A.\n\n=====Output Format=====\nOn the first\
  \ line, print the floor of A.\nOn the second line, print the ceil of A.\nOn the\
  \ third line, print the rint of A."
"vc-preamble": "import Imports.AllImports\n\ndef array_transforms (input : String)\
  \ : Array Float × Array Float × Array Float := sorry\n\ndef transform_list (numbers\
  \ : List Float) : Array Float × Array Float × Array Float := sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def int_to_float (n : Int) : Float := sorry\n\ntheorem array_transforms_properties\
  \ {numbers : List Float} (h : numbers.length > 0) :\n  let (floor_arr, ceil_arr,\
  \ rint_arr) := transform_list numbers\n  let h_sizes : floor_arr.size = numbers.length\
  \ ∧ ceil_arr.size = numbers.length ∧ rint_arr.size = numbers.length := by sorry\n\
  \  \n  ∀ i : Fin numbers.length,\n    let idx : Nat := i.val\n    let h_floor :\
  \ idx < floor_arr.size := by sorry\n    let h_ceil : idx < ceil_arr.size := by sorry\n\
  \    let h_rint : idx < rint_arr.size := by sorry\n    \n    -- Properties for each\
  \ element\n    floor_arr[idx]'h_floor ≤ numbers[idx] ∧\n    ceil_arr[idx]'h_ceil\
  \ ≥ numbers[idx] ∧\n    floor_arr[idx]'h_floor ≤ rint_arr[idx]'h_rint ∧ \n    rint_arr[idx]'h_rint\
  \ ≤ ceil_arr[idx]'h_ceil ∧\n    ceil_arr[idx]'h_ceil - floor_arr[idx]'h_floor ≤\
  \ 1 ∧\n    (rint_arr[idx]'h_rint - numbers[idx]).abs ≤ 0.5 := sorry\n"
"vc-theorems": "theorem array_transforms_integers (n : Int) :\n  let res := array_transforms\
  \ (toString n)\n  let floor_arr := res.1\n  let ceil_arr := res.2.1\n  let rint_arr\
  \ := res.2.2\n  let h_size : 0 < floor_arr.size := by sorry\n  \n  floor_arr = ceil_arr\
  \ ∧\n  floor_arr = rint_arr ∧\n  floor_arr[0]'h_size = int_to_float n := sorry"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
