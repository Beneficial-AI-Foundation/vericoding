"vc-description": "There are $5$ cities in the country.\nThe map of the country is\
  \ given below.\nThe tour starts from the red city.\n\nEach road is associated with\
  \ a character.\nInitially, there is an empty string.\nEvery time a road has been\
  \ travelled the character associated gets appended to the string.\nAt the green\
  \ city either the string can be printed or the tour can be continued.\nIn the problem,\
  \ you are given a string tell whether it is possible to print the string while following\
  \ the rules of the country?\n\n-----Input:-----\n- First line will contain $T$,\
  \ number of testcases. Then the testcases follow. \n- Each testcase contains a single\
  \ line of input, a string $ s  $. The string consists only of $0's$ and $1's$.\n\
  \n-----Output:-----\nFor each testcase, output \"YES\" or \"NO\" depending on the\
  \ input.\n\n-----Constraints-----\n- \n$1 \\leq T \\leq 10000$\n- \n$1 \\leq length\
  \ of each string \\leq 10000$\n- \n$ 1 \\leq Summation length \\leq 10^5$\n\n-----Sample\
  \ Input:-----\n1\n100\n\n-----Sample Output:-----\nNO\n\n-----EXPLANATION:-----"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def solve_string_tour (s: String) : String := sorry\n\ntheorem\
  \ short_strings_return_no \n    (s: String) \n    (h: s.length < 4) :\n    solve_string_tour\
  \ s = \"NO\" := sorry\n"
"vc-theorems": "theorem strings_ending_1000_return_yes\n    (s: String)\n    (h1:\
  \ s.length ≥ 4)\n    (h2: s.endsWith \"1000\") :\n    solve_string_tour s = \"YES\"\
  \ := sorry\n\n\ntheorem strings_not_ending_1000_return_no\n    (s: String)\n   \
  \ (h1: s.length ≥ 4)\n    (h2: ¬ s.endsWith \"1000\") :\n    solve_string_tour s\
  \ = \"NO\" := sorry\n\n/--\ninfo: 'NO'\n-/\n#guard_msgs in\n#eval solve_string_tour\
  \ \"100\"\n\n/--\ninfo: 'YES'\n-/\n#guard_msgs in\n#eval solve_string_tour \"1000\"\
  \n\n/--\ninfo: 'YES'\n-/\n#guard_msgs in\n#eval solve_string_tour \"11000\"\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
