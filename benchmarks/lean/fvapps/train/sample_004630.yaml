"vc-description": "The built-in print function for Python class instances is not very\
  \ entertaining.\n\nIn this Kata, we will implement a function ```show_me(instname)```\
  \ that takes an instance name as parameter and returns the string \"Hi, I'm one\
  \ of those (classname)s! Have a look at my (attrs).\", where (classname) is the\
  \ class name and (attrs) are the class's attributes. If (attrs) contains only one\
  \ element, just write it. For more than one element (e.g. a, b, c), it should list\
  \ all elements sorted by name in ascending order (e.g. \"...look at my a, b and\
  \ c\").\n\nExample:\nFor an instance ```porsche = Vehicle(2, 4, 'gas')``` of the\
  \ class\n```\nclass Vehicle:\n  def __init__(self, seats, wheels, engine):\n   \
  \ self.seats = seats\n    self.wheels = wheels\n    self.engine = engine\n```\n\
  the function call ```show_me(porsche)``` should return the string 'Hi, I'm one of\
  \ those Vehicles! Have a look at my engine, seats and wheels.'\n\nHints:\nFor simplicity\
  \ we assume that the parameter \"instname\" is always a class instance."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def show_me {α : Type} (obj : α) : String := sorry\n\nclass SingleAttr\
  \ where\n  attr : String\nderiving Inhabited\n\nclass TestClass where\n  a : Nat\
  \ \n  b : Nat\n  c : Nat\nderiving Inhabited\n"
"vc-theorems": "theorem single_attribute {attr_name : String} (h : attr_name ≠ \"\"\
  ) :\n  let obj := SingleAttr.mk attr_name\n  let result := show_me obj\n  result.contains\
  \ (attr_name.get ⟨0⟩) ∧ ¬result.contains '&' := sorry\n\n\ntheorem multiple_attributes\
  \ :\n  let obj := TestClass.mk 1 2 3\n  let result := show_me obj\n  result.startsWith\
  \ \"Hi, I'm one of those TestClasss!\" ∧ \n  result.contains '&' ∧\n  result.contains\
  \ 'a' ∧ \n  result.contains 'b' ∧\n  result.contains 'c' ∧\n  result.endsWith \"\
  a, b and c.\" := sorry\n\n/--\ninfo: \"Hi, I'm one of those Vehicles! Have a look\
  \ at my engine, seats and wheels.\"\n-/\n#guard_msgs in\n#eval show_me Vehicle(2,\
  \ 4, \"gas\")\n\n/--\ninfo: \"Hi, I'm one of those Pets! Have a look at my name.\"\
  \n-/\n#guard_msgs in\n#eval show_me Pet(\"Rover\")\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
