"vc-description": "This is a spin off of my first [kata](http://www.codewars.com/kata/56bc28ad5bdaeb48760009b0).\
  \ You are given a list of character sequences as a comma separated string. Write\
  \ a function which returns another string containing all the character sequences\
  \ except the first and the last ones, separated by spaces. If the input string is\
  \ empty, or the removal of the first and last items would cause the string to be\
  \ empty, return a null value."
"vc-preamble": "import Imports.AllImports\n\ndef String.count (s : String) (c : Char)\
  \ : Nat :=\n  sorry\n\n\ndef String.strip (s : String) : String :=\n  sorry\n\n\n\
  def array (s : String) : Option String :=\n  sorry\n\n/- Helper functions -/"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def joinWithSpaces (xs : List String) : String :=\n  sorry\n\n\
  /- Main theorems that match property tests -/\n"
"vc-theorems": "theorem array_none_when_not_enough_commas (s : String) :\n  s.count\
  \ ',' < 2 →\n  array s = none :=\nsorry\n\n\ntheorem array_processes_middle_elements\
  \ (s : String) :\n  s.count ',' ≥ 2 →\n  array s = some (joinWithSpaces (List.map\
  \ String.strip (List.drop 1 (List.take (List.length (String.splitOn \",\" s) - 1)\
  \ (String.splitOn \",\" s))))) :=\nsorry\n\n/--\ninfo: None\n-/\n#guard_msgs in\n\
  #eval array \"\"\n\n/--\ninfo: None\n-/\n#guard_msgs in\n#eval array \"1\"\n\n/--\n\
  info: None\n-/\n#guard_msgs in\n#eval array \"1,2\"\n\n/--\ninfo: '2'\n-/\n#guard_msgs\
  \ in\n#eval array \"1,2,3\"\n\n/--\ninfo: '2 3'\n-/\n#guard_msgs in\n#eval array\
  \ \"1,2,3,4\"\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
