"vc-description": "# Task\n Pero has been into robotics recently, so he decided to\
  \ make a robot that checks whether a deck of poker cards is complete.\n\n He’s already\
  \ done a fair share of work - he wrote a programme that recognizes the suits of\
  \ the cards. For simplicity’s sake, we can assume that all cards have a suit and\
  \ a number.\n\n The suit of the card is one of the characters `\"P\", \"K\", \"\
  H\", \"T\"`, and the number of the card is an integer between `1` and `13`. The\
  \ robot labels each card in the format `TXY` where `T` is the suit and `XY` is the\
  \ number. If the card’s number consists of one digit, then X = 0. For example, the\
  \ card of suit `\"P\"` and number `9` is labelled `\"P09\"`.\n\n A complete deck\
  \ has `52` cards in total. For each of the four suits there is exactly one card\
  \ with a number between `1` and `13`.\n\n The robot has read the labels of all the\
  \ cards in the deck and combined them into the string `s`.\n \n Your task is to\
  \ help Pero finish the robot by writing a program that reads the string made out\
  \ of card labels and returns the number of cards that are missing for each suit.\n\
  \n If there are two same cards in the deck, return array with `[-1, -1, -1, -1]`\
  \ instead.\n\n# Input/Output\n\n\n - `[input]` string `s`\n\n  A correct string\
  \ of card labels. 0 ≤ |S| ≤ 1000\n\n\n - `[output]` an integer array\n\n  Array\
  \ of four elements, representing the number of missing card of suits `\"P\", \"\
  K\", \"H\", and \"T\"` respectively. If there are two same cards in the deck, return\
  \ `[-1, -1, -1, -1]` instead.\n\n\n# Example\n\n For `s = \"P01K02H03H04\"`, the\
  \ output should be `[12, 12, 11, 13]`.\n \n `1` card from `\"P\"` suit, `1` card\
  \ from `\"K\"` suit, `2` cards from `\"H\"` suit, no card from `\"T\"` suit.\n \n\
  \ For `s = \"H02H10P11H02\"`, the output should be `[-1, -1, -1, -1]`.\n \n There\
  \ are two same cards `\"H02\"` in the string `s`."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def cardsAndPero (s : String) : List Int := sorry\n\ntheorem cardsAndPero_empty_string\
  \ :\n  cardsAndPero \"\" = [13,13,13,13] := sorry\n"
"vc-theorems": "theorem cardsAndPero_three_pikes :\n  cardsAndPero \"P01P02P03\" =\
  \ [10,13,13,13] := sorry\n\n\ntheorem cardsAndPero_one_of_each :\n  cardsAndPero\
  \ \"P01K01H01\" = [12,12,12,13] := sorry\n\n\ntheorem cardsAndPero_duplicate_card\
  \ :\n  cardsAndPero \"P01P01\" = [-1,-1,-1,-1] := sorry\n\n\ntheorem cardsAndPero_all_suits\
  \ :\n  cardsAndPero \"P01K02H03T04\" = [12,12,12,12] := sorry\n\n/--\ninfo: [12,\
  \ 12, 11, 13]\n-/\n#guard_msgs in\n#eval cards_and_pero \"P01K02H03H04\"\n\n/--\n\
  info: [-1, -1, -1, -1]\n-/\n#guard_msgs in\n#eval cards_and_pero \"H02H10P11H02\"\
  \n\n/--\ninfo: [12, 12, 12, 12]\n-/\n#guard_msgs in\n#eval cards_and_pero \"P10K10H10T01\"\
  \n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded"
