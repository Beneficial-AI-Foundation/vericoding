"vc-description": "The Head Chef is receiving a lot of orders for cooking the best\
  \ of the problems lately. For this, he organized an hiring event to hire some talented\
  \ Chefs. He gave the following problem to test the skills of the participating Chefs.\
  \ Can you solve this problem and be eligible for getting hired by Head Chef.\n\n\
  A non-negative number n is said to be magical if it satisfies the following property.\
  \ Let S denote the multi-set of numbers corresponding to the non-empty subsequences\
  \ of the digits of the number n in decimal representation. Please note that the\
  \ numbers in the set S can have leading zeros. Let us take an element s of the multi-set\
  \ S, prod(s) denotes the product of all the digits of number s in decimal representation.\
  \ \nThe number n will be called magical if sum of prod(s) for all elements s in\
  \ S, is even. \n\nFor example, consider a number 246, its all possible non-empty\
  \ subsequence will be S = {2, 4, 6, 24, 46, 26, 246}. Products of digits of these\
  \ subsequences will be {prod(2) = 2, prod(4) = 4, prod(6) = 6, prod(24) = 8, prod(46)\
  \ = 24, prod(26) = 12, prod(246) = 48, i.e. {2, 4, 6, 8, 24, 12, 48}. Sum of all\
  \ of these is 104, which is even. Hence 246 is a magical number.\n\nPlease note\
  \ that multi-set S can contain repeated elements, e.g. if number is 55, then S =\
  \ {5, 5, 55}. Products of digits of these subsequences will be {prod(5) = 5, prod(5)\
  \ = 5, prod(55) = 25}, i.e. {5, 5, 25}. Sum of all of these is 35 which is odd.\
  \ Hence 55 is not a \nmagical number.\n\nConsider a number 204, then S = {2, 0,\
  \ 4, 20, 04, 24, 204}. Products of digits of these subsequences will be {2, 0, 4,\
  \ 0, 0, 8, 0}. Sum of all these elements will be 14 which is even. So 204 is a magical\
  \ number.\n\nThe task was to simply find the Kth magical number.\n\n-----Input-----\n\
  - First line of the input contains an integer T denoting the number of test cases.\n\
  - Each of the next T lines contains a single integer K.\n\n-----Output-----\nFor\
  \ each test case, print a single integer corresponding to the Kth magical number.\n\
  \n-----Constraints-----\n- 1 ≤ T ≤ 105\n- 1 ≤ K ≤ 1012.\n\n-----Subtasks-----\n\
  Subtask #1 : (20 points)\n- 1 ≤ T ≤ 100\n- 1 ≤ K ≤ 104.\n\nSubtask 2 : (80 points)\
  \ Original Constraints\n\n-----Example-----\nInput:\n2\n2\n5\n\nOutput:\n2\n8\n\n\
  -----Explanation-----\nExample case 1.\n2 is the 2nd magical number, since it satisfies\
  \ the property of the magical number. The first magical number will be of course\
  \ 0."
"vc-preamble": "import Imports.AllImports\n\ndef base5 (n : Nat) : List Nat := sorry\n\
  \ndef seq (n : Nat) : Nat := sorry\n\n\ndef get_kth_magical_number (k : Nat) : Nat\
  \ := sorry \n\ndef digitList (n : Nat) : List Nat := sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def isEvenDigit (n : Nat) : Bool := sorry\n\ntheorem base5_zero\
  \ :\n  base5 0 = [] := sorry\n"
"vc-theorems": "theorem base5_digits_bounded (n : Nat) :\n  ∀ d ∈ base5 n, 0 ≤ d ∧\
  \ d ≤ 4 := sorry\n\n\n\n\n\n\n\n\n\n\ntheorem magical_increasing (k : Nat) :\n \
  \ k > 1 →\n  get_kth_magical_number (k-1) < get_kth_magical_number k := sorry\n\n\
  /--\ninfo: 2\n-/\n#guard_msgs in\n#eval get_kth_magical_number 2\n\n/--\ninfo: 8\n\
  -/\n#guard_msgs in\n#eval get_kth_magical_number 5\n\n/--\ninfo: 0\n-/\n#guard_msgs\
  \ in\n#eval get_kth_magical_number 1\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
