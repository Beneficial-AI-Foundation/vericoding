"vc-description": "Using his tip-top physique, Kim has now climbed up the mountain\
  \ where the base is located. Kim has found the door to the (supposedly) super secret\
  \ base. Well, it is super secret, but obviously no match for Kim's talents. \nThe\
  \ door is guarded by a row of $N$ buttons. Every button has a single number $A_i$\
  \ written on it. Surprisingly, more than one button can have the same number on\
  \ it. Kim recognises this as Soum's VerySafe door, for which you need to press two\
  \ buttons to enter the password. More importantly, the sum of the two numbers on\
  \ the buttons you press must be odd. Kim can obviously break through this door easily,\
  \ but he also wants to know how many different pairs of buttons he can pick in order\
  \ to break through the door.\nCan you help Kim find the number of different pairs\
  \ of buttons he can press to break through the door? \nNote: Two pairs are considered\
  \ different if any of the buttons pressed in the pair is different (by position\
  \ of the button pressed). Two pairs are not considered different if they're the\
  \ same position of buttons, pressed in a different order. \nPlease refer to the\
  \ samples for more details.\n\n-----Input:-----\n- The first line contains a single\
  \ integer $T$, representing the number of testcases. $2T$ lines follow, 2 for each\
  \ testcase.\n- For each testcase, the first line contains a single integer $N$,\
  \ the number of buttons.\n- The second line of each testcase contains $N$ space-separated\
  \ integers, $A_1, A_2, \\ldots, A_N$, representing the numbers written on each button.\n\
  \n-----Output:-----\nPrint a single number, $K$, representing the number of pairs\
  \ of buttons in $A$ which have an odd sum.\n\n-----Subtasks-----\nFor all subtasks,\
  \  $1 \\leq T \\leq 10$, $1 \\leq N \\leq 100000$, and $1 \\leq A_i \\leq 100000$\
  \ for all $A_i$.\nSubtask 1 [15 points] : $N \\leq 2$, There are at most 2 buttons\n\
  Subtask 2 [45 points] : $N \\leq 1000$, There are at most 1000 buttons\nSubtask\
  \ 3 [40 points] : No additional constraints.\n\n-----Sample Input:-----\n3\n4\n\
  3 5 3 4\n2\n5 7\n1\n4\n\n-----Sample Output:-----\n3\n0\n0\n\n-----EXPLANATION:-----\n\
  This section uses 1-indexing.\nIn the first sample, the buttons are: $[3, 5, 3,\
  \ 4]$\n$A[1] +  A[4] = 3 + 4 = 7$ which is odd.\n$A[2] +  A[4] = 5 + 4 = 9$ which\
  \ is odd.\n$A[3] +  A[4] = 3 + 4 = 7$ which is odd.\nIn total, there are 3 pairs\
  \ with an odd sum, so the answer is 3.\nIn the second sample, the buttons are: $[5,\
  \ 7]$. There are no odd pairs, so the answer is $0$.\nIn the third sample, the buttons\
  \ are: $[4]$. There are no pairs at all, so the answer is $0$."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def count_odd_button_sums (n : Nat) (buttons : List Nat) : Nat\
  \ := sorry\n\ntheorem result_non_negative (n : Nat) (buttons : List Nat) :\n  count_odd_button_sums\
  \ n buttons â‰¥ 0 := sorry\n\n\n\n\n\n\n"
"vc-theorems": "theorem single_button_gives_zero (n : Nat) :\n  count_odd_button_sums\
  \ 1 [n] = 0 := sorry\n\n/--\ninfo: 3\n-/\n#guard_msgs in\n#eval count_odd_button_sums\
  \ 4 [3, 5, 3, 4]\n\n/--\ninfo: 0\n-/\n#guard_msgs in\n#eval count_odd_button_sums\
  \ 2 [5, 7]\n\n/--\ninfo: 0\n-/\n#guard_msgs in\n#eval count_odd_button_sums 1 [4]\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
