"vc-description": "Complete the `greatestProduct` method so that it'll find the greatest\
  \ product of five consecutive digits in the given string of digits.\n\nFor example:\n\
  \nThe input string always has more than five digits.\n\nAdapted from Project Euler."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def greatest_product (s : String) : Nat := sorry\n\ndef digit_product\
  \ (s : String) : Nat := sorry\n\n\n"
"vc-theorems": "theorem zero_gives_zero_window {s : String} (h : s.length ≥ 5) :\n\
  \  let with_zero := s.take 3 ++ \"0\" ++ s.drop 3\n  if with_zero.contains '0' then\n\
  \    greatest_product with_zero = 0 ∨ ∃ d, d ∈ with_zero.data ∧ d.toNat > 0\n  else\
  \ True := sorry\n\n/--\ninfo: 3240\n-/\n#guard_msgs in\n#eval greatest_product \"\
  123834539327238239583\"\n\n/--\ninfo: 3240\n-/\n#guard_msgs in\n#eval greatest_product\
  \ \"395831238345393272382\"\n\n/--\ninfo: 5292\n-/\n#guard_msgs in\n#eval greatest_product\
  \ \"92494737828244222221111111532909999\"\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded_and_plausible"
