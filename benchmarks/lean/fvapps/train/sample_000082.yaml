"vc-description": "Being tired of participating in too many Codeforces rounds, Gildong\
  \ decided to take some rest in a park. He sat down on a bench, and soon he found\
  \ two rabbits hopping around. One of the rabbits was taller than the other.\n\n\
  He noticed that the two rabbits were hopping towards each other. The positions of\
  \ the two rabbits can be represented as integer coordinates on a horizontal line.\
  \ The taller rabbit is currently on position $x$, and the shorter rabbit is currently\
  \ on position $y$ ($x \\lt y$). Every second, each rabbit hops to another position.\
  \ The taller rabbit hops to the positive direction by $a$, and the shorter rabbit\
  \ hops to the negative direction by $b$.\n\n [Image] \n\nFor example, let's say\
  \ $x=0$, $y=10$, $a=2$, and $b=3$. At the $1$-st second, each rabbit will be at\
  \ position $2$ and $7$. At the $2$-nd second, both rabbits will be at position $4$.\n\
  \nGildong is now wondering: Will the two rabbits be at the same position at the\
  \ same moment? If so, how long will it take? Let's find a moment in time (in seconds)\
  \ after which the rabbits will be at the same point.\n\n\n-----Input-----\n\nEach\
  \ test contains one or more test cases. The first line contains the number of test\
  \ cases $t$ ($1 \\le t \\le 1000$).\n\nEach test case contains exactly one line.\
  \ The line consists of four integers $x$, $y$, $a$, $b$ ($0 \\le x \\lt y \\le 10^9$,\
  \ $1 \\le a,b \\le 10^9$) — the current position of the taller rabbit, the current\
  \ position of the shorter rabbit, the hopping distance of the taller rabbit, and\
  \ the hopping distance of the shorter rabbit, respectively.\n\n\n-----Output-----\n\
  \nFor each test case, print the single integer: number of seconds the two rabbits\
  \ will take to be at the same position.\n\nIf the two rabbits will never be at the\
  \ same position simultaneously, print $-1$.\n\n\n-----Example-----\nInput\n5\n0\
  \ 10 2 3\n0 10 3 3\n900000000 1000000000 1 9999999\n1 2 1 1\n1 3 1 1\n\nOutput\n\
  2\n-1\n10\n-1\n1\n\n\n\n-----Note-----\n\nThe first case is explained in the description.\n\
  \nIn the second case, each rabbit will be at position $3$ and $7$ respectively at\
  \ the $1$-st second. But in the $2$-nd second they will be at $6$ and $4$ respectively,\
  \ and we can see that they will never be at the same position since the distance\
  \ between the two rabbits will only increase afterward."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def solve_rabbits (x y a b : Int) : Int := sorry\n\ntheorem solve_rabbits_correct\
  \ (x y a b jumps : Int) \n  (ha : a > 0) (hb : b > 0) (hjumps : jumps ≥ 0)\n  (hy\
  \ : y = x + (a + b) * jumps) :\n  solve_rabbits x y a b = jumps := sorry\n"
"vc-theorems": "theorem solve_rabbits_impossible (x y a b distance : Int)\n  (ha :\
  \ a > 0) (hb : b > 0) (hdist : distance > 0)\n  (hy : y = x + distance)\n  (h_not_div\
  \ : ¬(distance % (a + b) = 0)) : \n  solve_rabbits x y a b = -1 := sorry\n\n/--\n\
  info: 2\n-/\n#guard_msgs in\n#eval solve_rabbits 0 10 2 3\n\n/--\ninfo: -1\n-/\n\
  #guard_msgs in\n#eval solve_rabbits 0 10 3 3\n\n/--\ninfo: 10\n-/\n#guard_msgs in\n\
  #eval solve_rabbits 900000000 1000000000 1 9999999\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
