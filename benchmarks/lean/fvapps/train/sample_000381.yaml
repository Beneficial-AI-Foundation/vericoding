"vc-description": "Define S = [s,n] as the string S which consists of n connected\
  \ strings s. For example, [\"abc\", 3] =\"abcabcabc\". \nOn the other hand, we define\
  \ that string s1 can be obtained from string s2 if we can remove some characters\
  \ from s2 such that it becomes s1. For example, “abc”  can be obtained from “abdbec”\
  \ based on our definition, but it can not be obtained from “acbbe”.\nYou are given\
  \ two non-empty strings s1 and s2 (each at most 100 characters long) and two integers\
  \ 0 ≤ n1 ≤ 106 and 1 ≤ n2 ≤ 106. Now consider the strings S1 and S2, where S1=[s1,n1]\
  \ and S2=[s2,n2]. Find the maximum integer M such that [S2,M] can be obtained from\
  \ S1.\n\nExample:\n\nInput:\ns1=\"acb\", n1=4\ns2=\"ab\", n2=2\n\nReturn:\n2"
"vc-preamble": "import Imports.AllImports\n\ndef getMaxRepetitions (s1: String) (n1:\
  \ Nat) (s2: String) (n2: Nat) : Nat :=\n  sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def is_subsequence (s1 s2: String) : Bool :=\n  sorry\n"
"vc-theorems": "theorem result_non_negative (s1: String) (n1: Nat) (s2: String) (n2:\
  \ Nat) :\n  getMaxRepetitions s1 n1 s2 n2 ≥ 0 :=\n  sorry\n\n\ntheorem result_positive_implies_common_chars\
  \ (s1: String) (n1: Nat) (s2: String) (n2: Nat) :\n  getMaxRepetitions s1 n1 s2\
  \ n2 > 0 → ∃ c, c ∈ s2.data ∧ c ∈ s1.data :=\n  sorry\n\n\ntheorem monotonic_in_n1\
  \ (s1: String) (n1: Nat) (s2: String) (n2: Nat) :\n  getMaxRepetitions s1 (n1 +\
  \ 1) s2 n2 ≥ getMaxRepetitions s1 n1 s2 n2 :=\n  sorry\n\n\ntheorem monotonic_in_s1_length\
  \ (s1: String) (n1: Nat) (s2: String) (n2: Nat) \n  (h1: s1.length > 0) (h2: s2.length\
  \ > 0) :\n  getMaxRepetitions (s1 ++ s1) n1 s2 n2 ≥ getMaxRepetitions s1 n1 s2 n2\
  \ :=\n  sorry\n\n\ntheorem same_string_division (s: String) :\n  getMaxRepetitions\
  \ s 3 s 2 = 3 / 2 :=\n  sorry\n\n\ntheorem impossible_match (s1: String) (n1: Nat)\
  \ :\n  (∀ c, c ∈ s1.data → c ≠ 'c') →\n  getMaxRepetitions s1 n1 \"c\" 1 = 0 :=\n\
  \  sorry\n\n/--\ninfo: 2\n-/\n#guard_msgs in\n#eval getMaxRepetitions \"acb\" 4\
  \ \"ab\" 2\n\n/--\ninfo: 4\n-/\n#guard_msgs in\n#eval getMaxRepetitions \"aaa\"\
  \ 3 \"aa\" 1\n\n/--\ninfo: 4\n-/\n#guard_msgs in\n#eval getMaxRepetitions \"baba\"\
  \ 2 \"ba\" 1\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
