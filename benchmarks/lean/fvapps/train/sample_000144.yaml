"vc-description": "Given an encoded string, return it's decoded string.\n\n\nThe encoding\
  \ rule is: k[encoded_string], where the encoded_string inside the square brackets\
  \ is being repeated exactly k times. Note that k is guaranteed to be a positive\
  \ integer.\n\n\nYou may assume that the input string is always valid; No extra white\
  \ spaces, square brackets are well-formed, etc.\n\nFurthermore, you may assume that\
  \ the original data does not contain any digits and that digits are only for those\
  \ repeat numbers, k. For example, there won't be input like 3a or 2[4].\n\n\nExamples:\n\
  \ns = \"3[a]2[bc]\", return \"aaabcbc\".\ns = \"3[a2[c]]\", return \"accaccacc\"\
  .\ns = \"2[abc]3[cd]ef\", return \"abcabccdcdcdef\"."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def decode_string (s: String) : String := sorry\n\ndef String.containsChar\
  \ (s: String) (c: Char) : Prop := \n  s.data.contains c\n"
"vc-theorems": "theorem decode_string_only_letters (s: String) :\n  ∀ c, String.containsChar\
  \ (decode_string s) c → c.isAlpha := sorry\n\n\ntheorem decode_string_letters_from_input\
  \ (s: String) :\n  ∀ c, String.containsChar (decode_string s) c →\n    ∃ c', String.containsChar\
  \ s c' ∧ c = c' ∧ c'.isAlpha := sorry\n\n\ntheorem decode_string_identity_single\
  \ (c: Char) (h: c.isAlpha) :\n  decode_string (String.singleton c) = String.singleton\
  \ c := sorry\n\n\ntheorem decode_string_identity_plain (s: String) (h: ∀ c, String.containsChar\
  \ s c → c.isAlpha) :\n  decode_string s = s := sorry\n\n\ntheorem decode_string_simple_repeat\
  \ (c: Char) (h: c.isAlpha) :\n  decode_string s!\"2[{String.singleton c}]\" = String.singleton\
  \ c ++ String.singleton c := sorry\n\n/--\ninfo: 'aaabcbc'\n-/\n#guard_msgs in\n\
  #eval decode_string \"3[a]2[bc]\"\n\n/--\ninfo: 'accaccacc'\n-/\n#guard_msgs in\n\
  #eval decode_string \"3[a2[c]]\"\n\n/--\ninfo: 'abcabccdcdcdef'\n-/\n#guard_msgs\
  \ in\n#eval decode_string \"2[abc]3[cd]ef\"\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
