"vc-description": "Given an array arr of 4 digits, find the latest 24-hour time that\
  \ can be made using each digit exactly once.\n24-hour times are formatted as \"\
  HH:MM\", where HH is between 00 and 23, and MM is between 00 and 59. The earliest\
  \ 24-hour time is 00:00, and the latest is 23:59.\nReturn the latest 24-hour time in \"\
  HH:MM\" format.  If no valid time can be made, return an empty string.\n \nExample\
  \ 1:\nInput: A = [1,2,3,4]\nOutput: \"23:41\"\nExplanation: The valid 24-hour times\
  \ are \"12:34\", \"12:43\", \"13:24\", \"13:42\", \"14:23\", \"14:32\", \"21:34\"\
  , \"21:43\", \"23:14\", and \"23:41\". Of these times, \"23:41\" is the latest.\n\
  \nExample 2:\nInput: A = [5,5,5,5]\nOutput: \"\"\nExplanation: There are no valid\
  \ 24-hour times as \"55:55\" is not valid.\n\nExample 3:\nInput: A = [0,0,0,0]\n\
  Output: \"00:00\"\n\nExample 4:\nInput: A = [0,0,1,0]\nOutput: \"10:00\"\n\n \n\
  Constraints:\n\narr.length == 4\n0 <= arr[i] <= 9"
"vc-preamble": "import Imports.AllImports\n\ndef find_latest_time (digits: List Nat)\
  \ : String :=\n  sorry\n\n\ndef is_valid_time_str (s: String) : Bool :=\n  sorry\n\
  \n\ndef time_to_minutes (time: String) : Nat :=\n  sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def is_valid_time (hours mins: Nat) : Prop :=\n  hours < 24 ∧ mins\
  \ < 60\n"
"vc-theorems": "theorem find_latest_time_gives_valid_result {digits: List Nat}\n \
  \ (h1: digits.length = 4)\n  (h2: ∀ d ∈ digits, d ≤ 9) :\n  is_valid_time_str (find_latest_time\
  \ digits) = true :=\n  sorry\n\n\ntheorem find_latest_time_invalid_when_all_large\
  \ {digits: List Nat}\n  (h1: digits.length = 4)\n  (h2: (∀ d ∈ digits, d ≥ 6) ∨\
  \ (∀ d ∈ digits, d > 2)) :\n  find_latest_time digits = \"\" :=\n  sorry\n\n\ntheorem\
  \ find_latest_time_zeros {digits: List Nat}\n  (h1: digits.length = 4)\n  (h2: ∀\
  \ d ∈ digits, d = 0) : \n  find_latest_time digits = \"00:00\" :=\n  sorry\n\n\n\
  theorem find_latest_time_is_maximum {digits: List Nat} {result: String}\n  (h1:\
  \ digits.length = 4)\n  (h2: ∀ d ∈ digits, d ≤ 9)\n  (h3: result = find_latest_time\
  \ digits)\n  (h4: result ≠ \"\") :\n  ∀ (h1 h2 m1 m2: Nat),\n  h1 ∈ digits → h2\
  \ ∈ digits → m1 ∈ digits → m2 ∈ digits →\n  is_valid_time (h1 * 10 + h2) (m1 * 10\
  \ + m2) →\n  time_to_minutes result ≥ (h1 * 10 + h2) * 60 + (m1 * 10 + m2) :=\n\
  \  sorry\n\n/--\ninfo: '23:41'\n-/\n#guard_msgs in\n#eval find_latest_time [1, 2,\
  \ 3, 4]\n\n/--\ninfo: ''\n-/\n#guard_msgs in\n#eval find_latest_time [5, 5, 5, 5]\n\
  \n/--\ninfo: '00:00'\n-/\n#guard_msgs in\n#eval find_latest_time [0, 0, 0, 0]\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
