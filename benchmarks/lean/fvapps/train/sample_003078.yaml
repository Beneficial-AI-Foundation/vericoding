"vc-description": "# Task\n Four men, `a, b, c and d` are standing in a line, one\
  \ behind another. \n \n There's a wall between the first three people (a, b and\
  \ c) and the last one (d).\n \n a, b and c are lined up in order of height, so that\
  \ person a can see the backs of b and c, person b can see the back of c, and c can\
  \ see just the wall.\n\n There are 4 hats, 2 black and 2 white. Each person is given\
  \ a hat. None of them can see their own hat, but person a can see the hats of b\
  \ and c, while person b can see the hat of person c. Neither c nor d can see any\
  \ hats.\n\n Once a person figures out their hat's color, they shouts it. \n \n ![](http://stuffbox.in/wp-content/uploads/2016/08/Guess-hat-colour-604x270.png)\n\
  \ \n Your task is to return the person who will guess their hat first. You can assume\
  \ that they will speak only when they reach a correct conclusion.\n\n# Input/Output\n\
  \n\n - `[input]` string `a`\n\n  a's hat color (\"white\" or \"black\").\n\n\n -\
  \ `[input]` string `b`\n\n  b's hat color (\"white\" or \"black\").\n\n\n - `[input]`\
  \ string `c`\n\n  c's hat color (\"white\" or \"black\").\n\n\n - `[input]` string\
  \ `d`\n\n  d's hat color (\"white\" or \"black\").\n\n\n - `[output]` an integer\n\
  \n The person to guess his hat's color first, `1 for a, 2 for b, 3 for c and 4 for\
  \ d`."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def guess_hat_color : Color → Color → Color → Color → Nat :=\n\
  \  fun _ _ _ _ => sorry\n"
"vc-theorems": "theorem guess_hat_result_valid {a b c d : Color} :\n  (guess_hat_color\
  \ a b c d = 1) ∨ (guess_hat_color a b c d = 2) := \n  sorry\n\n\ntheorem guess_hat_equal_gives_one\
  \ {a b c d : Color} :\n  (guess_hat_color a b c d = 1) = (b = c) :=\n  sorry \n\n\
  \ntheorem guess_hat_unequal_gives_two {a b c d : Color} :\n  (guess_hat_color a\
  \ b c d = 2) = (b ≠ c) :=\n  sorry\n\n\ntheorem guess_hat_preserves_colors (a b\
  \ c d : Color) :\n  (a = Color.black ∨ a = Color.white) ∧\n  (b = Color.black ∨\
  \ b = Color.white) ∧\n  (c = Color.black ∨ c = Color.white) ∧\n  (d = Color.black\
  \ ∨ d = Color.white) :=\n  sorry\n\n/--\ninfo: 2\n-/\n#guard_msgs in\n#eval guess_hat_color\
  \ \"white\" \"black\" \"white\" \"black\"\n\n/--\ninfo: 1\n-/\n#guard_msgs in\n\
  #eval guess_hat_color \"white\" \"black\" \"black\" \"white\"\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded"
