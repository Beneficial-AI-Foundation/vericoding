"vc-description": "You've got a bunch of textual data with embedded phone numbers.\
  \ Write a function `area_code()` that finds and returns just the area code portion\
  \ of the phone number.\n```python\n>>> message = \"The supplier's phone number is\
  \ (555) 867-5309\"\n>>> area_code(message)\n'555'\n```\nThe returned area code should\
  \ be a string, not a number.\nEvery phone number is formatted like in the example,\
  \ and the only non-alphanumeric characters in the string are apostrophes `'` or\
  \ the punctuation used in the phone number."
"vc-preamble": "import Imports.AllImports\n\ndef phone_number_format (a p l: String)\
  \ : String :=\n  s!\"({a}) {p}-{l}\"\n  "
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def area_code (s: String) : String :=\nsorry\n"
"vc-theorems": "theorem area_code_extracts_area_from_standard_format {a p l : String}\n\
  \  (h1: a.length = 3) (h2: p.length = 3) (h3: l.length = 4) :\n  area_code (phone_number_format\
  \ a p l) = a := by\n  sorry\n  \n\ntheorem area_code_extracts_area_with_surrounding_text\
  \ {a p l t1 t2 : String}\n  (h1: a.length = 3) (h2: p.length = 3) (h3: l.length\
  \ = 4) :\n  area_code (t1 ++ phone_number_format a p l ++ t2) = a := by\n  sorry\n\
  \n\ntheorem area_code_empty_parens :\n  area_code \"()\" = \"\" := by\n  sorry\n\
  \n\ntheorem area_code_nested_parens :\n  area_code \"(123(456)789)\" = \"123(456\"\
  \ := by\n  sorry\n\n/--\ninfo: '555'\n-/\n#guard_msgs in\n#eval area_code \"The\
  \ supplier\"s phone number is (555) 867-5309\"\n\n/--\ninfo: '123'\n-/\n#guard_msgs\
  \ in\n#eval area_code \"Grae\"s cell number used to be (123) 456-7890\"\n\n/--\n\
  info: '124'\n-/\n#guard_msgs in\n#eval area_code \"The 102nd district court\"s fax\
  \ line is (124) 816-3264\"\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
