"vc-description": "A category page displays a set number of products per page, with\
  \ pagination at the bottom allowing the user to move from page to page.\n\nGiven\
  \ that you know the page you are on, how many products are in the category in total,\
  \ and how many products are on any given page, how would you output a simple string\
  \ showing which products you are viewing..\n\nexamples\n\nIn a category of 30 products\
  \ with 10 products per page, on page 1 you would see \n\n'Showing 1 to 10 of 30\
  \ Products.'\n\nIn a category of 26 products with 10 products per page, on page\
  \ 3 you would see\n\n'Showing 21 to 26 of 26 Products.'\n\nIn a category of 8 products\
  \ with 10 products per page, on page 1 you would see\n\n'Showing 1 to 8 of 8 Products.'"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def pagination_text (pageNumber pageSize totalProducts : Nat) :\
  \ String := sorry\n\ntheorem pagination_format\n    {pageNumber pageSize totalProducts\
  \ : Nat}\n    (h1 : pageNumber ≥ 1)\n    (h2 : pageNumber ≤ 1000)\n    (h3 : pageSize\
  \ ≥ 1)\n    (h4 : pageSize ≤ 1000)\n    (h5 : totalProducts ≥ 1)\n    (h6 : totalProducts\
  \ ≤ 10000) :\n    let result := pagination_text pageNumber pageSize totalProducts;\n\
  \    -- result starts with \"Showing \"\n    ∃ rest : String, result = \"Showing\
  \ \" ++ rest\n    ∧\n    -- result ends with \" Products.\"\n    ∃ start : String,\
  \ result = start ++ \" Products.\"\n    ∧\n    -- result contains \" to \"\n   \
  \ ∃ before after : String, result = before ++ \" to \" ++ after\n    ∧\n    -- result\
  \ contains \" of \"\n    ∃ before after : String, result = before ++ \" of \" ++\
  \ after := sorry\n"
"vc-theorems": "theorem pagination_numbers\n    {pageNumber pageSize totalProducts\
  \ : Nat}\n    (h1 : pageNumber ≥ 1)\n    (h2 : pageNumber ≤ 1000)\n    (h3 : pageSize\
  \ ≥ 1)\n    (h4 : pageSize ≤ 1000)\n    (h5 : totalProducts ≥ 1)\n    (h6 : totalProducts\
  \ ≤ 10000)\n    (h7 : (pageNumber - 1) * pageSize < totalProducts) :\n    ∃ first\
  \ last total : Nat,\n    first ≤ last\n    ∧ last ≤ total\n    ∧ total = totalProducts\n\
  \    ∧ first = pageSize * (pageNumber - 1) + 1\n    ∧ last ≤ first + pageSize -\
  \ 1 := sorry\n\n\ntheorem pagination_bounds\n    {pageNumber pageSize totalProducts\
  \ : Nat}\n    (h1 : pageNumber ≥ 1)\n    (h2 : pageNumber ≤ 1000)\n    (h3 : pageSize\
  \ ≥ 1)\n    (h4 : pageSize ≤ 1000)\n    (h5 : totalProducts ≥ 1)\n    (h6 : totalProducts\
  \ ≤ 10000) :\n    ∃ first last : Nat,\n    last ≤ totalProducts := sorry\n\n/--\n\
  info: 'Showing 1 to 10 of 30 Products.'\n-/\n#guard_msgs in\n#eval pagination_text\
  \ 1 10 30\n\n/--\ninfo: 'Showing 21 to 26 of 26 Products.'\n-/\n#guard_msgs in\n\
  #eval pagination_text 3 10 26\n\n/--\ninfo: 'Showing 1 to 8 of 8 Products.'\n-/\n\
  #guard_msgs in\n#eval pagination_text 1 10 8\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
