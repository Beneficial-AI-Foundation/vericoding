"vc-description": "Implement atoi which converts a string to an integer.\n\nThe function\
  \ first discards as many whitespace characters as necessary until the first non-whitespace\
  \ character is found. Then, starting from this character, takes an optional initial\
  \ plus or minus sign followed by as many numerical digits as possible, and interprets\
  \ them as a numerical value.\n\nThe string can contain additional characters after\
  \ those that form the integral number, which are ignored and have no effect on the\
  \ behavior of this function.\n\nIf the first sequence of non-whitespace characters\
  \ in str is not a valid integral number, or if no such sequence exists because either\
  \ str is empty or it contains only whitespace characters, no conversion is performed.\n\
  \nIf no valid conversion could be performed, a zero value is returned.\n\nNote:\n\
  \n\n       Only the space character ' ' is considered as whitespace character.\n\
  \       Assume we are dealing with an environment which could only store integers\
  \ within the 32-bit signed integer range: [−231,  231 − 1]. If the numerical value\
  \ is out of the range of representable values, INT_MAX (231 − 1) or INT_MIN (−231)\
  \ is returned.\n\n\nExample 1:\n\n\nInput: \"42\"\nOutput: 42\n\n\nExample 2:\n\n\
  \nInput: \"   -42\"\nOutput: -42\nExplanation: The first non-whitespace character\
  \ is '-', which is the minus sign.\n             Then take as many numerical digits\
  \ as possible, which gets 42.\n\n\nExample 3:\n\n\nInput: \"4193 with words\"\n\
  Output: 4193\nExplanation: Conversion stops at digit '3' as the next character is\
  \ not a numerical digit.\n\n\nExample 4:\n\n\nInput: \"words and 987\"\nOutput:\
  \ 0\nExplanation: The first non-whitespace character is 'w', which is not a numerical\
  \ \n             digit or a +/- sign. Therefore no valid conversion could be performed.\n\
  \nExample 5:\n\n\nInput: \"-91283472332\"\nOutput: -2147483648\nExplanation: The\
  \ number \"-91283472332\" is out of the range of a 32-bit signed integer.\n    \
  \         Thefore INT_MIN (−231) is returned."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def myAtoi (s : String) : Int := sorry\n\ntheorem myAtoi_within_bounds\
  \ (s : String) :\n  -2147483648 ≤ myAtoi s ∧ myAtoi s ≤ 2147483647 := sorry\n"
"vc-theorems": "theorem myAtoi_leading_whitespace (s : String) :\n  myAtoi (\"   \"\
  \ ++ s) = myAtoi s := sorry\n\n\n\n\ntheorem myAtoi_signs_positive (n : Int) \n\
  \  (h : 0 ≤ n ∧ n ≤ 2147483647) :\n  myAtoi (\"+\" ++ toString n) = n := sorry\n\
  \n\ntheorem myAtoi_signs_negative (n : Int)\n  (h : 0 ≤ n ∧ n ≤ 2147483647) :\n\
  \  myAtoi (\"-\" ++ toString n) = -min n 2147483648 := sorry\n\n/--\ninfo: 42\n\
  -/\n#guard_msgs in\n#eval myAtoi \"42\"\n\n/--\ninfo: -42\n-/\n#guard_msgs in\n\
  #eval myAtoi \"   -42\"\n\n/--\ninfo: 4193\n-/\n#guard_msgs in\n#eval myAtoi \"\
  4193 with words\"\n\n/--\ninfo: 0\n-/\n#guard_msgs in\n#eval myAtoi \"words and\
  \ 987\"\n\n/--\ninfo: -2147483648\n-/\n#guard_msgs in\n#eval myAtoi \"-91283472332\"\
  \n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
