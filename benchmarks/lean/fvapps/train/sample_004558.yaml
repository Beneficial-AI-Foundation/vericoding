"vc-description": "Given 2 strings, `a` and `b`, return a string of the form short+long+short,\
  \ with the shorter string on the outside\nand the longer string on the inside. The\
  \ strings will not be the same length, but they may be empty ( length `0` ).\n\n\
  For example:\n\n```python\nsolution(\"1\", \"22\") # returns \"1221\"\nsolution(\"\
  22\", \"1\") # returns \"1221\"\n```"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def solution (a b : String) : String := sorry\n\ntheorem solution_result_structure\
  \ (a b : String) :\n  (String.length a < String.length b → solution a b = a ++ b\
  \ ++ a) ∧ \n  (String.length a ≥ String.length b → solution a b = b ++ a ++ b) :=\
  \ sorry\n"
"vc-theorems": "theorem solution_result_length (a b : String) :\n  String.length (solution\
  \ a b) = \n    2 * min (String.length a) (String.length b) + \n    max (String.length\
  \ a) (String.length b) := sorry\n\n\ntheorem solution_empty_string (s : String)\
  \ :\n  solution \"\" s = s ∧ solution s \"\" = s := sorry\n\n/--\ninfo: '1221'\n\
  -/\n#guard_msgs in\n#eval solution \"1\" \"22\"\n\n/--\ninfo: '1221'\n-/\n#guard_msgs\
  \ in\n#eval solution \"22\" \"1\"\n\n/--\ninfo: 'xyz'\n-/\n#guard_msgs in\n#eval\
  \ solution \"\" \"xyz\"\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
