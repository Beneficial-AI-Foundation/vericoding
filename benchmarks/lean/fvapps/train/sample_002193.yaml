"vc-description": "There are N bags, each containing two white balls. The i-th box\
  \ contains two balls with integers x_i and y_i written on them, respectively.\n\
  For each of these bags, you will paint one of the balls red, and paint the other\
  \ blue.\nAfterwards, the 2N balls will be classified according to color.\nThen,\
  \ we will define the following:\n - R_{max}: the maximum integer written on a ball\
  \ painted in red\n - R_{min}: the minimum integer written on a ball painted in red\n\
  \ - B_{max}: the maximum integer written on a ball painted in blue\n - B_{min}:\
  \ the minimum integer written on a ball painted in blue\nFind the minimum possible\
  \ value of (R_{max} - R_{min}) \\times (B_{max} - B_{min}).\n\n-----Constraints-----\n\
  \ - 1 ≤ N ≤ 200,000\n - 1 ≤ x_i, y_i ≤ 10^9\n\n-----Input-----\nInput is given from\
  \ Standard Input in the following format:\nN\nx_1 y_1\nx_2 y_2\n:\nx_N y_N\n\n-----Output-----\n\
  Print the minimum possible value.\n\n-----Sample Input-----\n3\n1 2\n3 4\n5 6\n\n\
  -----Sample Output-----\n15\n\nThe optimal solution is to paint the balls with x_1,\
  \ x_2, y_3 red, and paint the balls with y_1, y_2, x_3 blue."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def solve_colored_balls (n : Nat) (pairs : List (List Nat)) : Nat\
  \ := sorry\n\ntheorem solve_colored_balls_non_negative (n : Nat) (pairs : List (List\
  \ Nat)) : \n  solve_colored_balls n pairs ≥ 0 := sorry\n"
"vc-theorems": "theorem solve_colored_balls_max_bound (n : Nat) (pairs : List (List\
  \ Nat)) :\n  solve_colored_balls n pairs ≤ (10^9 - 1) * (10^9 - 1) := sorry\n\n\n\
  theorem solve_colored_balls_reverse_invariant (n : Nat) (pairs : List (List Nat))\
  \ \n  (h₁ : ∀ p ∈ pairs, p.length = 2) :\n  solve_colored_balls n pairs = \n  solve_colored_balls\
  \ n (pairs.map (fun p => [p.get ⟨1, sorry⟩, p.get ⟨0, sorry⟩])) := sorry\n\n\ntheorem\
  \ solve_colored_balls_identical_pairs (n : Nat) :\n  solve_colored_balls n (List.replicate\
  \ n [1,1]) = 0 := sorry\n\n\ntheorem solve_colored_balls_edge_case :\n  solve_colored_balls\
  \ 2 [[1,1], [1000000000,1000000000]] = \n  (1000000000-1) * (1000000000-1) := sorry\n\
  \n/--\ninfo: 15\n-/\n#guard_msgs in\n#eval solve_colored_balls 3 [[1, 2], [3, 4],\
  \ [5, 6]]\n\n/--\ninfo: 380\n-/\n#guard_msgs in\n#eval solve_colored_balls 3 [[1010,\
  \ 10], [1000, 1], [20, 1020]]\n\n/--\ninfo: 999999998000000001\n-/\n#guard_msgs\
  \ in\n#eval solve_colored_balls 2 [[1, 1], [1000000000, 1000000000]]\n"
"vc-postamble": "-- Apps difficulty: competition\n-- Assurance level: unguarded"
