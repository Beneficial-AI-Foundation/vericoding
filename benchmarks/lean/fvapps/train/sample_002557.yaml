"vc-description": "Remove the parentheses\n=\nIn this kata you are given a string\
  \ for example:\n\n```python\n\"example(unwanted thing)example\"\n```\n\nYour task\
  \ is to remove everything inside the parentheses as well as the parentheses themselves.\n\
  \nThe example above would return:\n\n```python\n\"exampleexample\"\n```\n\nOther\
  \ than parentheses only letters and spaces can occur in the string. Don't worry\
  \ about other brackets like ```\"[]\"``` and ```\"{}\"``` as these will never appear."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def remove_parentheses (s : String) : String :=\n  sorry\n"
"vc-theorems": "theorem string_without_parens_unchanged (s : String)\n  (h : ∀ c ∈\
  \ s.data, c ≠ '(' ∧ c ≠ ')') :\n  remove_parentheses s = s :=\nsorry\n\n\ntheorem\
  \ nested_parens_give_empty_string (texts : List String)\n  (h₁ : texts ≠ [])\n \
  \ (h₂ : ∀ s ∈ texts, ∀ c ∈ s.data, c ≠ '(' ∧ c ≠ ')') :\n  remove_parentheses (String.join\
  \ (texts.map (fun s => \"(\" ++ s ++ \")\"))) = \"\" :=\nsorry\n\n\ntheorem balanced_parens_give_empty_string_1\
  \ :\n  remove_parentheses \"(())\" = \"\" :=\nsorry\n\n\ntheorem balanced_parens_give_empty_string_2\
  \ :\n  remove_parentheses \"((()))\" = \"\" :=\nsorry\n\n/--\ninfo: 'exampleexample'\n\
  -/\n#guard_msgs in\n#eval remove_parentheses \"example(unwanted thing)example\"\n\
  \n/--\ninfo: 'a'\n-/\n#guard_msgs in\n#eval remove_parentheses \"a(b(c))\"\n\n/--\n\
  info: '  '\n-/\n#guard_msgs in\n#eval remove_parentheses \"(first group) (second\
  \ group) (third group)\"\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
