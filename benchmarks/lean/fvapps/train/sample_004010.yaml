"vc-description": "Variation of this nice kata, the war has expanded and become dirtier\
  \ and meaner; both even and odd numbers will fight with their pointy `1`s. And negative\
  \ integers are coming into play as well, with, ça va sans dire, a negative contribution\
  \ (think of them as spies or saboteurs).\n\nAgain, three possible outcomes: `odds\
  \ win`, `evens win` and `tie`.\n\nExamples:\n\n```python\nbits_war([1,5,12]) =>\
  \ \"odds win\" #1+101 vs 1100, 3 vs 2\nbits_war([7,-3,20]) => \"evens win\" #111-11\
  \ vs 10100, 3-2 vs 2\nbits_war([7,-3,-2,6]) => \"tie\" #111-11 vs -1+110, 3-2 vs\
  \ -1+2\n```"
"vc-preamble": "import Imports.AllImports\n\ndef bits_war (numbers : List Int) : String\
  \ := sorry\n\ndef bitsToCount (n : Int) : Nat := sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def sum_list_nat : List Nat → Nat \n  | [] => 0\n  | x :: xs =>\
  \ x + sum_list_nat xs\n"
"vc-theorems": "theorem bits_war_returns_valid_result (numbers : List Int) (h : numbers.length\
  \ > 0) :\n  (bits_war numbers = \"odds win\") ∨ \n  (bits_war numbers = \"evens\
  \ win\") ∨\n  (bits_war numbers = \"tie\") := sorry\n\n\ntheorem bits_war_all_zeros\
  \ (numbers : List Int) : \n  (∀ n ∈ numbers, n = 0) →\n  bits_war numbers = \"tie\"\
  \ := sorry\n\n\ntheorem bits_war_all_positive (numbers : List Int) (h : numbers.length\
  \ > 0) :\n  (∀ n ∈ numbers, n ≥ 0) →\n  let odd_bits := sum_list_nat ((numbers.filter\
  \ (fun n => n % 2 = 1)).map bitsToCount)\n  let even_bits := sum_list_nat ((numbers.filter\
  \ (fun n => n % 2 = 0)).map bitsToCount)\n  bits_war numbers = if odd_bits > even_bits\
  \ then \"odds win\"\n                     else if even_bits > odd_bits then \"evens\
  \ win\"\n                     else \"tie\" := sorry\n\n/--\ninfo: 'odds win'\n-/\n\
  #guard_msgs in\n#eval bits_war [1, 5, 12]\n\n/--\ninfo: 'evens win'\n-/\n#guard_msgs\
  \ in\n#eval bits_war [7, -3, 20]\n\n/--\ninfo: 'tie'\n-/\n#guard_msgs in\n#eval\
  \ bits_war [7, -3, -2, 6]\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
