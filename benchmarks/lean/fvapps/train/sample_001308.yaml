"vc-description": "Chef likes to play with array elements. His teacher has given him\
  \ an array problem. But now he is busy as Christmas is coming. So, he needs your\
  \ help. Can you help him to solve this problem.\nYou are given an array $(A1,A2,A3……AN)$\
  \ of length $N$. You have to create an another array using the given array in the\
  \ following ways:\n\nFor each valid i, the ith element of the output array will\
  \ be the sum of the ith element and (A[i])th element if $A[i]$ is less equal $N$.\n\
  \nOther wise for each valid i following the step below\n\ni) Divide the value of\
  \ $A[i]$ by 2 untill it will be less than$N$.\n\nii) then find the difference ($D$)\
  \ between $N$ and $A[i]$.\n\niii) the ith element of the output array will be $Dth$\
  \ element.  \n\n-----Input:-----\n- The first line of the input contains a single\
  \ integer $T$ denoting the number of test cases. The description of T test cases\
  \ follows.  \n- The first line of each test case contains a single integer $N$.\
  \  \n- The second line contains $N$ space-separated integers $A1,A2,…,AN$.   \n\n\
  -----Output:-----\n- For each testcase, print new array in each line.\n\n-----Constraints-----\n\
  - $1 \\leq T \\leq 1000$\n- $1 \\leq N \\leq 10^5$\n- $1\\leq A1,A2.....AN \\leq\
  \ 10^7$\n\n-----Sample Input:-----\n2\n\n5\n\n2 4 5 7 9\n\n4\n\n5 4 2 3\n\n-----Sample\
  \ Output:-----\n6 11 14 4 2\n\n4 7 6 5\n\n-----EXPLANATION:-----\nFor 1st test case:\
  \ A1 = 2+4 =6, A2 = 4+7 =11 , A3 = 5+9 =14 , A4 > N (5) ,So A4/2 = 3 then A4 = A[5\
  \ -3] , A4=A[2]=4, And A5 =A[1]=2. Then array becomes 6,11,14,4,2."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def solve_array_transform (n : Nat) (arr : List Nat) : List Nat\
  \ :=\n  sorry\n"
"vc-theorems": "theorem array_transform_length {n : Nat} {arr : List Nat} \n  (h :\
  \ n > 0) (h2 : arr.length > 0) :\n  (solve_array_transform n arr).length = n :=\n\
  sorry\n\n\ntheorem array_transform_elements {n : Nat} {arr : List Nat} \n  (h :\
  \ n > 0) (h2 : arr.length > 0) :\n  ∀ i, i ∈ (solve_array_transform n arr) → Nat.le\
  \ 1 i :=\nsorry\n\n\ntheorem array_transform_valid_indices {n : Nat} {arr : List\
  \ Nat}\n  (h : n > 0) (h2 : arr.length = n) :\n  ∀ i, i < n → arr[i]! ≤ n → \n \
  \   (solve_array_transform n arr)[i]! = arr[i]! + arr[arr[i]! - 1]! :=\nsorry\n\n\
  \ntheorem array_transform_single {n : Nat} \n  (h : n > 0) :\n  let arr := List.replicate\
  \ n 1\n  (solve_array_transform n arr)[0]! = 2 :=\nsorry\n\n\ntheorem array_transform_sequential\
  \ {n : Nat}\n  (h : n > 0) :\n  let arr := List.range n |>.map (·+1)\n  ∀ i, i <\
  \ n → arr[i]! ≤ n →\n    (solve_array_transform n arr)[i]! = arr[i]! + arr[arr[i]!\
  \ - 1]! :=\nsorry\n\n/--\ninfo: expected1\n-/\n#guard_msgs in\n#eval solve_array_transform\
  \ 5 [2, 4, 5, 7, 9]\n\n/--\ninfo: expected2\n-/\n#guard_msgs in\n#eval solve_array_transform\
  \ 4 [5, 4, 2, 3]\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
