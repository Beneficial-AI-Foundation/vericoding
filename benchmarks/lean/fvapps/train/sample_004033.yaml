"vc-description": "Write a function which converts the input string to uppercase.\n\
  \n~~~if:bf\nFor BF all inputs end with \\0, all inputs are lowercases and there\
  \ is no space between. \n~~~"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def make_upper_case (s : String) : String := sorry\n\ntheorem make_upper_case_idempotent\
  \ (s : String) :\n  make_upper_case (make_upper_case s) = make_upper_case s := sorry\n"
"vc-theorems": "theorem make_upper_case_is_upper (s : String) :\n  String.toUpper\
  \ (make_upper_case s) = make_upper_case s := sorry\n\n\ntheorem make_upper_case_upper_lower_chain\
  \ (s : String) :\n  String.toUpper (String.toLower (make_upper_case s)) = make_upper_case\
  \ s := sorry\n\n/--\ninfo: 'HELLO'\n-/\n#guard_msgs in\n#eval make_upper_case \"\
  hello\"\n\n/--\ninfo: 'HELLO WORLD'\n-/\n#guard_msgs in\n#eval make_upper_case \"\
  hello world\"\n\n/--\ninfo: 'HELLO WORLD !'\n-/\n#guard_msgs in\n#eval make_upper_case\
  \ \"heLlO wORLd !\"\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
