"vc-description": "Anas is playing an amazing game on a grid with $N$ rows and $M$\
  \ columns. The rows are numbered $1$ through $N$ from top to bottom and the columns\
  \ are numbered $1$ through $M$ from left to right.\nAnas wants to destroy this grid.\
  \ To do that, he wants to send two heroes from the top left cell to the bottom right\
  \ cell:\n- The first hero visits cells in row-major order: $(1,1) \\rightarrow (1,2)\
  \ \\rightarrow \\ldots \\rightarrow (1,M) \\rightarrow (2,1) \\rightarrow (2,2)\
  \ \\rightarrow \\ldots \\rightarrow (2,M) \\rightarrow \\ldots \\rightarrow (N,M)$.\n\
  - The second hero visits cells in column-major order: $(1,1) \\rightarrow (2,1)\
  \ \\rightarrow \\ldots \\rightarrow (N,1) \\rightarrow (1,2) \\rightarrow (2,2)\
  \ \\rightarrow \\ldots \\rightarrow (N,2) \\rightarrow \\ldots \\rightarrow (N,M)$.\n\
  We know that each hero destroys the first cell he visits, rests in the next $K$\
  \ cells he visits without destroying them, then destroys the next cell he visits,\
  \ rests in the next $K$ cells, destroys the next cell, and so on until he reaches\
  \ (and rests in or destroys) the last cell he visits.\nAnas does not know the value\
  \ of $K$. Therefore, for each value of $K$ between $0$ and $N \\cdot M - 1$ inclusive,\
  \ he wants to calculate the number of cells that will be destroyed by at least one\
  \ hero. Can you help him?\n\n-----Input-----\n- The first line of the input contains\
  \ a single integer $T$ denoting the number of test cases. The description of $T$\
  \ test cases follows.\n- The first and only line of each test case contains two\
  \ space-separated integers $N$ and $M$.\n\n-----Output-----\nFor each test case,\
  \ print a single line containing $N \\cdot M$ space-separated integers as described\
  \ above.\n\n-----Constraints-----\n- $1 \\le T \\le 100$\n- $2 \\le N, M \\le 1,000$\n\
  - the sum of $N \\cdot M$ over all test cases does not exceed $2 \\cdot 10^6$\n\n\
  -----Subtasks-----\nSubtask #1 (30 points):\n- $2 \\le N, M \\le 50$\n- the sum\
  \ of $N \\cdot M$ over all test cases does not exceed $5,000$\nSubtask #2 (70 points):\
  \ original constraints\n\n-----Example Input-----\n1\n2 3\n\n-----Example Output-----\n\
  6 4 3 3 2 1\n\n-----Explanation-----\nExample case 1:\n- $K = 0$: All cells will\
  \ be destroyed by the heroes.\n- $K = 1$: The first hero will destroy the cells\
  \ $[(1,1), (1,3), (2,2)]$, while the second one will destroy the cells $[(1,1),\
  \ (1,2), (1,3)]$.\n- $K = 2$: The first hero will destroy the cells $[(1,1), (2,1)]$,\
  \ while the second one will destroy the cells $[(1,1), (2,2)]$.\n- $K = 3$: The\
  \ first hero will destroy the cells $[(1,1), (2,2)]$, while the second one will\
  \ destroy the cells $[(1,1), (1,3)]$.\n- $K = 4$: The first hero will destroy the\
  \ cells $[(1,1), (2,3)]$ and the second one will also destroy the cells $[(1,1),\
  \ (2,3)]$.\n- $K = 5$ : The first hero will destroy the cell $(1,1)$ and the second\
  \ one will also destroy the cell $(1,1)$."
"vc-preamble": "import Imports.AllImports\n\ndef solve (n m : Nat) : List Nat := sorry\n\
  \ndef cell_advance_hero1 (row col n m k : Nat) : (Nat × Nat) := sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def cell_advance_hero2 (row col n m k : Nat) : (Nat × Nat) := sorry\n\
  \ndef find_destroyed_cells (advance : Nat → Nat → Nat → Nat → Nat → (Nat × Nat))\
  \ (n m k : Nat) : List (Nat × Nat) := sorry\n"
"vc-theorems": "theorem solve_output_range {n m : Nat} (h1 : n > 0) (h2 : m > 0) :\n\
  \  let result := solve n m;\n  List.length result = n * m ∧ \n  ∀ x, x ∈ result\
  \ → 1 ≤ x ∧ x ≤ n * m * 2 := by\n  sorry\n\n\ntheorem solve_first_last {n m : Nat}\
  \ (h1 : n > 0) (h2 : m > 0) :\n  let result := solve n m;\n  List.head! result ≥\
  \ List.getLast! result ∧\n  List.getLast! result ≥ 1 := by\n  sorry\n\n\ntheorem\
  \ cell_advance_hero1_bounds {row col n m k : Nat} (h1 : n > 0) (h2 : m > 0) :\n\
  \  let result := cell_advance_hero1 row col n m k;\n  1 ≤ result.2 ∧ result.2 ≤\
  \ m := by\n  sorry\n\n\ntheorem cell_advance_hero2_bounds {row col n m k : Nat}\
  \ (h1 : n > 0) (h2 : m > 0) :\n  let result := cell_advance_hero2 row col n m k;\n\
  \  1 ≤ result.1 ∧ result.1 ≤ n := by\n  sorry\n\n\ntheorem destroyed_cells_bounds\
  \ {n m k : Nat} (h1 : n > 0) (h2 : m > 0) :\n  let cells1 := find_destroyed_cells\
  \ cell_advance_hero1 n m k;\n  let cells2 := find_destroyed_cells cell_advance_hero2\
  \ n m k;\n  (∀ p ∈ cells1, 1 ≤ p.1 ∧ p.1 ≤ n ∧ 1 ≤ p.2 ∧ p.2 ≤ m) ∧\n  (∀ p ∈ cells2,\
  \ 1 ≤ p.1 ∧ p.1 ≤ n ∧ 1 ≤ p.2 ∧ p.2 ≤ m) := by\n  sorry\n\n\ntheorem destroyed_cells_start\
  \ {n m k : Nat} (h1 : n > 0) (h2 : m > 0) :\n  let cells1 := find_destroyed_cells\
  \ cell_advance_hero1 n m k;\n  let cells2 := find_destroyed_cells cell_advance_hero2\
  \ n m k;\n  (1, 1) ∈ cells1 ∧ (1, 1) ∈ cells2 := by\n  sorry"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded"
