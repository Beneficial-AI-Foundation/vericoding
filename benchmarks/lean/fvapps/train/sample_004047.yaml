"vc-description": "You are currently in the United States of America. The main currency\
  \ here is known as the United States Dollar (USD). You are planning to travel to\
  \ another country for vacation, so you make it today's goal to convert your USD\
  \ (all bills, no cents) into the appropriate currency. This will help you be more\
  \ prepared for when you arrive in the country you will be vacationing in.\n\nGiven\
  \ an integer (`usd`) representing the amount of dollars you have and a string (`currency`)\
  \ representing the name of the currency used in another country, it is your task\
  \ to determine the amount of foreign currency you will receive when you exchange\
  \ your United States Dollars.\n\nHowever, there is one minor issue to deal with\
  \ first. The screens and monitors at the Exchange are messed up. Some conversion\
  \ rates are correctly presented, but other conversion rates are incorrectly presented.\
  \ For some countries, they are temporarily displaying the standard conversion rate\
  \ in the form of a number's binary representation! \n\nYou make some observations.\
  \ If a country's currency begins with a vowel, then the conversion rate is unaffected\
  \ by the technical difficulties. If a country's currency begins with a consonant,\
  \ then the conversion rate has been tampered with.\n\nNormally, the display would\
  \ show 1 USD converting to 111 Japanese Yen. Instead, the display is showing 1 USD\
  \ converts to 1101111 Japanese Yen. You take it upon yourself to sort this out.\
  \ By doing so, your 250 USD rightfully becomes 27750 Japanese Yen.\n\n`\nfunction(250,\
  \ \"Japanese Yen\") => \"You now have 27750 of Japanese Yen.\"\n`\n\nNormally, the\
  \ display would show 1 USD converting to 21 Czech Koruna. Instead, the display is\
  \ showing 1 USD converts to 10101 Czech Koruna. You take it upon yourself to sort\
  \ this out. By doing so, your 325 USD rightfully becomes 6825 Czech Koruna.\n\n\
  `\nfunction(325, \"Czech Koruna\") => \"You now have 6825 of Czech Koruna.\"\n`\n\
  \nUsing your understanding of converting currencies in conjunction with the preloaded\
  \ conversion-rates table, properly convert your dollars into the correct amount\
  \ of foreign currency.\n\n```if:javascript,ruby\nNote: `CONVERSION_RATES` is frozen.\n\
  ```"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def convert_my_dollars (dollars : Float) (currency : String) :\
  \ String :=\n  sorry\n"
"vc-theorems": "theorem convert_my_dollars_valid_format \n  (dollars : Float) \n \
  \ (currency : String) \n  (h1 : dollars ≥ 0)\n  (h2 : dollars ≤ 1000000) :\n  ∃\
  \ amount : Float,\n    convert_my_dollars dollars currency = s!\"You now have {amount}\
  \ of {currency}.\" :=\n  sorry\n\n\ntheorem convert_my_dollars_invalid_currency\n\
  \  (dollars : Nat)\n  (currency : String)\n  (h1 : dollars ≥ 0)\n  (h2 : dollars\
  \ ≤ 1000000) :\n  convert_my_dollars (Float.ofNat dollars) currency = s!\"You now\
  \ have 0 of {currency}.\" :=\n  sorry\n\n\ntheorem convert_my_dollars_scaling\n\
  \  (dollars : Float)\n  (h1 : dollars ≥ 0)\n  (h2 : dollars ≤ 1000000) :\n  let\
  \ result1 := convert_my_dollars dollars \"Armenian Dram\"\n  let result2 := convert_my_dollars\
  \ (2 * dollars) \"Armenian Dram\"\n  ∃ amount1 amount2 : Float,\n    result1 = s!\"\
  You now have {amount1} of Armenian Dram.\" ∧ \n    result2 = s!\"You now have {amount2}\
  \ of Armenian Dram.\" ∧\n    amount2 = 2 * amount1 :=\n  sorry"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded"
