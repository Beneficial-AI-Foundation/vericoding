"vc-description": "On an 8 x 8 chessboard, there is one white rook.  There also may\
  \ be empty squares, white bishops, and black pawns.  These are given as characters\
  \ 'R', '.', 'B', and 'p' respectively. Uppercase characters represent white pieces,\
  \ and lowercase characters represent black pieces.\nThe rook moves as in the rules\
  \ of Chess: it chooses one of four cardinal directions (north, east, west, and south),\
  \ then moves in that direction until it chooses to stop, reaches the edge of the\
  \ board, or captures an opposite colored pawn by moving to the same square it occupies. \
  \ Also, rooks cannot move into the same square as other friendly bishops.\nReturn\
  \ the number of pawns the rook can capture in one move.\n \nExample 1:\n\nInput:\
  \ [[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\"p\",\"\
  .\",\".\",\".\",\".\"],[\".\",\".\",\".\",\"R\",\".\",\".\",\".\",\"p\"],[\".\"\
  ,\".\",\".\",\".\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\".\",\".\",\".\"\
  ,\".\",\".\"],[\".\",\".\",\".\",\"p\",\".\",\".\",\".\",\".\"],[\".\",\".\",\"\
  .\",\".\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\"\
  .\"]]\nOutput: 3\nExplanation: \nIn this example the rook is able to capture all\
  \ the pawns.\n\nExample 2:\n\nInput: [[\".\",\".\",\".\",\".\",\".\",\".\",\".\"\
  ,\".\"],[\".\",\"p\",\"p\",\"p\",\"p\",\"p\",\".\",\".\"],[\".\",\"p\",\"p\",\"\
  B\",\"p\",\"p\",\".\",\".\"],[\".\",\"p\",\"B\",\"R\",\"B\",\"p\",\".\",\".\"],[\"\
  .\",\"p\",\"p\",\"B\",\"p\",\"p\",\".\",\".\"],[\".\",\"p\",\"p\",\"p\",\"p\",\"\
  p\",\".\",\".\"],[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],[\".\",\".\"\
  ,\".\",\".\",\".\",\".\",\".\",\".\"]]\nOutput: 0\nExplanation: \nBishops are blocking\
  \ the rook to capture any pawn.\n\nExample 3:\n\nInput: [[\".\",\".\",\".\",\".\"\
  ,\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\"p\",\".\",\".\",\".\",\".\"],[\"\
  .\",\".\",\".\",\"p\",\".\",\".\",\".\",\".\"],[\"p\",\"p\",\".\",\"R\",\".\",\"\
  p\",\"B\",\".\"],[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],[\".\",\".\"\
  ,\".\",\"B\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\"p\",\".\",\".\",\".\"\
  ,\".\"],[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"]]\nOutput: 3\nExplanation:\
  \ \nThe rook can capture the pawns at positions b5, d6 and f5.\n\n \nNote:\n\nboard.length\
  \ == board[i].length == 8\nboard[i][j] is either 'R', '.', 'B', or 'p'\nThere is\
  \ exactly one cell with board[i][j] == 'R'"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def num_rook_captures (board: Board) : Nat :=\n  sorry\n"
"vc-theorems": "theorem rook_captures_bounds {b : List (List Char)} : \n  b.length\
  \ = 8 ∧ \n  (∀ r ∈ b, r.length = 8) →\n  let board := Board.mk b\n  let captures\
  \ := num_rook_captures board \n  0 ≤ captures ∧ captures ≤ 4 := \n  sorry\n\n\n\
  theorem rook_presence {b : List (List Char)} :\n  b.length = 8 ∧\n  (∀ r ∈ b, r.length\
  \ = 8) →\n  let board := Board.mk b\n  ((b.map (fun row => row.filter (· = 'R'))).join).length\
  \ = 1 :=\n  sorry\n\n\ntheorem blocked_by_bishop {b : List (List Char)} :\n  b.length\
  \ = 8 ∧\n  (∀ r ∈ b, r.length = 8) →\n  let board := Board.mk b\n  let blocked_pawns\
  \ := -- count of pawns blocked by bishops\n    0 -- placeholder\n  num_rook_captures\
  \ board ≤ 4 - blocked_pawns :=\n  sorry\n\n/--\ninfo: 3\n-/\n#guard_msgs in\n#eval\
  \ num_rook_captures [[\".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\"], [\"\
  .\", \".\", \".\", \"p\", \".\", \".\", \".\", \".\"], [\".\", \".\", \".\", \"\
  R\", \".\", \".\", \".\", \"p\"], [\".\", \".\", \".\", \".\", \".\", \".\", \"\
  .\", \".\"], [\".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\"], [\".\", \"\
  .\", \".\", \"p\", \".\", \".\", \".\", \".\"], [\".\", \".\", \".\", \".\", \"\
  .\", \".\", \".\", \".\"], [\".\", \".\", \".\", \".\", \".\", \".\", \".\", \"\
  .\"]]\n\n/--\ninfo: 0\n-/\n#guard_msgs in\n#eval num_rook_captures [[\".\", \".\"\
  , \".\", \".\", \".\", \".\", \".\", \".\"], [\".\", \"p\", \"p\", \"p\", \"p\"\
  , \"p\", \".\", \".\"], [\".\", \"p\", \"p\", \"B\", \"p\", \"p\", \".\", \".\"\
  ], [\".\", \"p\", \"B\", \"R\", \"B\", \"p\", \".\", \".\"], [\".\", \"p\", \"p\"\
  , \"B\", \"p\", \"p\", \".\", \".\"], [\".\", \"p\", \"p\", \"p\", \"p\", \"p\"\
  , \".\", \".\"], [\".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\"], [\".\"\
  , \".\", \".\", \".\", \".\", \".\", \".\", \".\"]]\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded"
