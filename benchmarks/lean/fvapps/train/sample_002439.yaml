"vc-description": "=====Problem Statement=====\nYou are given an integer, N. Your\
  \ task is to print an alphabet rangoli of size N. (Rangoli is a form of Indian folk\
  \ art based on creation of patterns.)\n\nDifferent sizes of alphabet rangoli are\
  \ shown below:\n\n#size 3\n\n----c----\n--c-b-c--\nc-b-a-b-c\n--c-b-c--\n----c----\n\
  \n#size 5\n\n--------e--------\n------e-d-e------\n----e-d-c-d-e----\n--e-d-c-b-c-d-e--\n\
  e-d-c-b-a-b-c-d-e\n--e-d-c-b-c-d-e--\n----e-d-c-d-e----\n------e-d-e------\n--------e--------\n\
  \n#size 10\n\n------------------j------------------\n----------------j-i-j----------------\n\
  --------------j-i-h-i-j--------------\n------------j-i-h-g-h-i-j------------\n----------j-i-h-g-f-g-h-i-j----------\n\
  --------j-i-h-g-f-e-f-g-h-i-j--------\n------j-i-h-g-f-e-d-e-f-g-h-i-j------\n----j-i-h-g-f-e-d-c-d-e-f-g-h-i-j----\n\
  --j-i-h-g-f-e-d-c-b-c-d-e-f-g-h-i-j--\nj-i-h-g-f-e-d-c-b-a-b-c-d-e-f-g-h-i-j\n--j-i-h-g-f-e-d-c-b-c-d-e-f-g-h-i-j--\n\
  ----j-i-h-g-f-e-d-c-d-e-f-g-h-i-j----\n------j-i-h-g-f-e-d-e-f-g-h-i-j------\n--------j-i-h-g-f-e-f-g-h-i-j--------\n\
  ----------j-i-h-g-f-g-h-i-j----------\n------------j-i-h-g-h-i-j------------\n--------------j-i-h-i-j--------------\n\
  ----------------j-i-j----------------\n------------------j------------------\n\n\
  The center of the rangoli has the first alphabet letter a, and the boundary has\
  \ the Nth alphabet letter (in alphabetical order).\n\n=====Input Format=====\nOnly\
  \ one line of input containing N, the size of the rangoli.\n\n=====Constraints=====\n\
  0 < N < 27\n\n=====Output Format=====\nPrint the alphabet rangoli in the format\
  \ explained above."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def print_rangoli (n: Nat) : String := sorry\n\ndef splitLines\
  \ (s: String) : List String := \n  s.split (· = '\\n')\n\n\n\n\n\n\n\n\n\n\n\n\n\
  \n\n"
"vc-theorems": "theorem rangoli_edge_cases (n: Nat) (h: n = 1 ∨ n = 26):\n  let result\
  \ := print_rangoli n\n  result.length > 0 ∧\n  (result.data.filter (· = '\\n')).length\
  \ = 2*n-2 := sorry"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded_and_plausible"
