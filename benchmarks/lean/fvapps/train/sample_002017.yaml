"vc-description": "Our beloved detective, Sherlock is currently trying to catch a\
  \ serial killer who kills a person each day. Using his powers of deduction, he came\
  \ to know that the killer has a strategy for selecting his next victim.\n\nThe killer\
  \ starts with two potential victims on his first day, selects one of these two,\
  \ kills selected victim and replaces him with a new person. He repeats this procedure\
  \ each day. This way, each day he has two potential victims to choose from. Sherlock\
  \ knows the initial two potential victims. Also, he knows the murder that happened\
  \ on a particular day and the new person who replaced this victim.\n\nYou need to\
  \ help him get all the pairs of potential victims at each day so that Sherlock can\
  \ observe some pattern.\n\n\n-----Input-----\n\nFirst line of input contains two\
  \ names (length of each of them doesn't exceed 10), the two initials potential victims.\
  \ Next line contains integer n (1 ≤ n ≤ 1000), the number of days.\n\nNext n lines\
  \ contains two names (length of each of them doesn't exceed 10), first being the\
  \ person murdered on this day and the second being the one who replaced that person.\n\
  \nThe input format is consistent, that is, a person murdered is guaranteed to be\
  \ from the two potential victims at that time. Also, all the names are guaranteed\
  \ to be distinct and consists of lowercase English letters.\n\n\n-----Output-----\n\
  \nOutput n + 1 lines, the i-th line should contain the two persons from which the\
  \ killer selects for the i-th murder. The (n + 1)-th line should contain the two\
  \ persons from which the next victim is selected. In each line, the two names can\
  \ be printed in any order.\n\n\n-----Examples-----\nInput\nross rachel\n4\nross\
  \ joey\nrachel phoebe\nphoebe monica\nmonica chandler\n\nOutput\nross rachel\njoey\
  \ rachel\njoey phoebe\njoey monica\njoey chandler\n\nInput\nicm codeforces\n1\n\
  codeforces technex\n\nOutput\nicm codeforces\nicm technex\n\n\n\n-----Note-----\n\
  \nIn first example, the killer starts with ross and rachel.   After day 1, ross\
  \ is killed and joey appears.  After day 2, rachel is killed and phoebe appears.\
  \  After day 3, phoebe is killed and monica appears.  After day 4, monica is killed\
  \ and chandler appears."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def solve_killer_pairs (initial : String × String) (murders : List\
  \ (String × String)) : List String :=\n  sorry\n"
"vc-theorems": "theorem solve_killer_pairs_result_type \n  (initial : String × String)\
  \ \n  (murders : List (String × String)) :\n  ∀ x ∈ solve_killer_pairs initial murders,\
  \ x.data.all Char.isAlpha :=\n  sorry\n\n\ntheorem solve_killer_pairs_result_length\n\
  \  (initial : String × String)\n  (murders : List (String × String)) :\n  (solve_killer_pairs\
  \ initial murders).length = murders.length + 1 :=\n  sorry\n\n\ntheorem solve_killer_pairs_initial_state\n\
  \  (initial : String × String)\n  (murders : List (String × String)) :\n  (solve_killer_pairs\
  \ initial murders).head! = s!\"{initial.1} {initial.2}\" :=\n  sorry\n\n\ntheorem\
  \ solve_killer_pairs_space_format\n  (initial : String × String)\n  (murders : List\
  \ (String × String)) :\n  ∀ x ∈ solve_killer_pairs initial murders,\n  (x.split\
  \ (· = ' ')).length = 2 :=\n  sorry\n\n\ntheorem solve_killer_pairs_state_transitions\n\
  \  (initial : String × String)\n  (murders : List (String × String)) :\n  ∀ i <\
  \ murders.length,\n  let current := murders.take i |>.foldl \n    (λ acc (m : String\
  \ × String) => \n      if acc.1 = m.1 \n      then (m.2, acc.2)\n      else (acc.1,\
  \ m.2)) \n    initial\n  (solve_killer_pairs initial murders)[i+1]! = s!\"{current.1}\
  \ {current.2}\" :=\n  sorry\n\n/--\ninfo: expected\n-/\n#guard_msgs in\n#eval solve_killer_pairs\
  \ [\"ross\", \"rachel\"] [[\"ross\", \"joey\"], [\"rachel\", \"phoebe\"], [\"phoebe\"\
  , \"monica\"], [\"monica\", \"chandler\"]]\n\n/--\ninfo: expected\n-/\n#guard_msgs\
  \ in\n#eval solve_killer_pairs [\"icm\", \"codeforces\"] [[\"codeforces\", \"technex\"\
  ]]\n\n/--\ninfo: expected\n-/\n#guard_msgs in\n#eval solve_killer_pairs [\"a\",\
  \ \"b\"] [[\"a\", \"c\"], [\"b\", \"d\"], [\"d\", \"e\"]]\n"
"vc-postamble": "-- Apps difficulty: competition\n-- Assurance level: unguarded"
