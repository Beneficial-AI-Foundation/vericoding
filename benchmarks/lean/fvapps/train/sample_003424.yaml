vc-description: |-
  ## Fixed xor

  Write a function that takes two hex strings as input and XORs them against each other. If the strings are different lengths the output should be the length of the shortest string.

  Hint: The strings would first need to be converted to binary to be XOR'd. 

  ## Note:
  If the two strings are of different lengths, the output string should be the same length as the smallest string. This means that the longer string will be cut down to the same size as the smaller string, then xor'd

  ### Further help

  More information on the XOR operation can be found here https://www.khanacademy.org/computing/computer-science/cryptography/ciphers/a/xor-bitwise-operation

  More information of the binary and hex bases can be found here https://www.khanacademy.org/math/algebra-home/alg-intro-to-algebra/algebra-alternate-number-bases/v/number-systems-introduction

  Examples:

  ```python
  fixed_xor("ab3f", "ac") == "07"
  fixed_xor("aadf", "bce2") == "163d"
  fixed_xor("1c0111001f010100061a024b53535009181c", "686974207468652062756c6c277320657965") == "746865206b696420646f6e277420706c6179"
  ```
vc-preamble: |-
  import Imports.AllImports
vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>
vc-definitions: |
  def fixed_xor (a b : String) : String := sorry

  theorem fixed_xor_identity {a b : String} (h : a.length = b.length) :
    let result := fixed_xor a b
    fixed_xor result b = a := sorry
vc-theorems: |
  theorem fixed_xor_commutative {a b : String} (h : a.length = b.length) :
    fixed_xor a b = fixed_xor b a := sorry 


  theorem fixed_xor_with_zeros (hex_str : String) :
    let zeros := String.mk (List.replicate hex_str.length '0')
    fixed_xor hex_str zeros = hex_str := sorry


  theorem fixed_xor_with_self (hex_str : String) :
    let result := fixed_xor hex_str hex_str
    result.data.all (Â· = '0') := sorry

  /--
  info: '07'
  -/
  #guard_msgs in
  #eval fixed_xor "ab3f" "ac"

  /--
  info: '163d'
  -/
  #guard_msgs in
  #eval fixed_xor "aadf" "bce2"

  /--
  info: '746865206b696420646f6e277420706c6179'
  -/
  #guard_msgs in
  #eval fixed_xor "1c0111001f010100061a024b53535009181c" "686974207468652062756c6c277320657965"
vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded
