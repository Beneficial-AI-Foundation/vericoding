"vc-description": "We define a harmonious array is an array where the difference between\
  \ its maximum value and its minimum value is exactly 1.\n\nNow, given an integer\
  \ array, you need to find the length of its longest harmonious subsequence among\
  \ all its possible subsequences.\n\nExample 1:\n\nInput: [1,3,2,2,5,2,3,7]\nOutput:\
  \ 5\nExplanation: The longest harmonious subsequence is [3,2,2,2,3].\n\n\n\nNote:\n\
  The length of the input array will not exceed 20,000."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def find_longest_harmonious_subsequence (nums : List Int) : Nat\
  \ :=\n  sorry\n"
"vc-theorems": "theorem find_longest_harmonious_subsequence_non_negative (nums : List\
  \ Int) :\n  find_longest_harmonious_subsequence nums ≥ 0 :=\nsorry\n\n\ntheorem\
  \ find_longest_harmonious_subsequence_leq_length (nums : List Int) :\n  find_longest_harmonious_subsequence\
  \ nums ≤ nums.length :=\nsorry\n\n\n\n\n\n\ntheorem find_longest_harmonious_subsequence_empty\
  \ (nums : List Int) :\n  nums = [] → find_longest_harmonious_subsequence nums =\
  \ 0 :=\nsorry\n\n/--\ninfo: 5\n-/\n#guard_msgs in\n#eval find_longest_harmonious_subsequence\
  \ [1, 3, 2, 2, 5, 2, 3, 7]\n\n/--\ninfo: 2\n-/\n#guard_msgs in\n#eval find_longest_harmonious_subsequence\
  \ [1, 2, 3, 4]\n\n/--\ninfo: 0\n-/\n#guard_msgs in\n#eval find_longest_harmonious_subsequence\
  \ [1, 1, 1, 1]\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded_and_plausible"
