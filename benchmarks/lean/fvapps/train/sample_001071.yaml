"vc-description": "Polo, the Penguin, likes numbers. He says that the goodness of\
  \ a number is itself multiplied by the number of digits in it's decimal representation.\
  \ For example, the goodness of the integer 474 is 474*3 = 1422.\nHelp him to count\
  \ the sum of goodness of all integers from L to R, inclusive. Since the answer can\
  \ be too large, output it modulo 1,000,000,007 (10^9+7).\n\n-----Input-----\nThe\
  \ first line of the input contains an integer T denoting the number of test cases.\
  \ The description of T test cases follows. The only line of each test case contains\
  \ the pair of integers L and R, separated by a single space.\n\n-----Output-----\n\
  For each test case, output a single line containing the answer to the corresponding\
  \ test case.\n\n-----Constraints-----\n- 1 ≤ T ≤ 1,000\n- 1 ≤ L ≤ R ≤ 1,000,000,000\
  \ (10^9)\n\n-----Example-----\nInput:\n1\n9 12\n\nOutput:\n75\n\n-----Explanation-----\n\
  Example case 1. The answer is 9*1 + 10*2 + 11*2 + 12*2 = 75."
"vc-preamble": "import Imports.AllImports\n\ndef calculate_goodness_sum (a b : Nat)\
  \ : Nat :=\n  sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def MOD := 1000000007\n\n\n\ndef num_digits (n : Nat) : Nat :=\n\
  \  sorry\n\n\n"
"vc-theorems": "theorem monotonic_increasing (n : Nat) (h : 1 < n) (h2 : n ≤ 10000)\
  \ :\n  calculate_goodness_sum 1 (n-1) ≤ calculate_goodness_sum 1 n :=\nsorry\n\n\
  /--\ninfo: 75\n-/\n#guard_msgs in\n#eval calculate_goodness_sum 9 12\n\n/--\ninfo:\
  \ 15\n-/\n#guard_msgs in\n#eval calculate_goodness_sum 1 5\n\n/--\ninfo: 66\n-/\n\
  #guard_msgs in\n#eval calculate_goodness_sum 10 12\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
