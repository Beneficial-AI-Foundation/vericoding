"vc-description": "Given a list of non negative integers, arrange them such that they\
  \ form the largest number.\n\nExample 1:\n\n\nInput: [10,2]\nOutput: \"210\"\n\n\
  Example 2:\n\n\nInput: [3,30,34,5,9]\nOutput: \"9534330\"\n\n\nNote: The result\
  \ may be very large, so you need to return a string instead of an integer."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def largest_number (l : List Nat) : String := sorry\n\ntheorem\
  \ empty_list_returns_zero :\n  largest_number [] = \"0\" := sorry\n"
"vc-theorems": "theorem singleton_zero_returns_zero :\n  largest_number [0] = \"0\"\
  \ := sorry\n\n\ntheorem two_zeros_returns_zero :\n  largest_number [0, 0] = \"0\"\
  \ := sorry\n\n\ntheorem ten_and_two_returns_210 :\n  largest_number [10, 2] = \"\
  210\" := sorry\n\n\ntheorem multiple_numbers_returns_largest_possible :\n  largest_number\
  \ [3, 30, 34, 5, 9] = \"9534330\" := sorry\n\n/--\ninfo: '210'\n-/\n#guard_msgs\
  \ in\n#eval largest_number [10, 2]\n\n/--\ninfo: '9534330'\n-/\n#guard_msgs in\n\
  #eval largest_number [3, 30, 34, 5, 9]\n\n/--\ninfo: '0'\n-/\n#guard_msgs in\n#eval\
  \ largest_number [0, 0]\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
