"vc-description": "# Introduction and Warm-up (Highly recommended)\n\n# [Playing With\
  \ Lists/Arrays Series](https://www.codewars.com/collections/playing-with-lists-slash-arrays)\n\
  ___\n\n# Task\n\n**_Given_** an *array/list [] of integers* , **_Construct_** a\
  \ *product array **_Of same size_** Such That prod[i] is equal to The Product of\
  \ all the elements of Arr[] except Arr[i]*. \n___\n\n# Notes \n\n\n* **_Array/list_**\
  \ size is *at least 2* .\n\n* **_Array/list's numbers_**  Will be **_only Positives_**\
  \ \n\n* **_Repetition_** of numbers in *the array/list could occur*.\n___\n\n# Input\
  \ >> Output Examples \n\n```\nproductArray ({12,20}) ==>  return {20,12}\n```\n\
  ## **_Explanation_**:\n\n* **_The first element_**  *in prod [] array* **_12_**\
  \  *is the product of all array's elements except the first element*\n\n* **_The\
  \ second element_** **_20_**  *is the product of all array's elements except the\
  \ second element* .\n___\n\n```\nproductArray ({1,5,2}) ==> return {10,2,5}\n```\n\
  \n## **_Explanation_**: \n\n\n* **_The first element_**  **_10_** *is the product\
  \ of all array's elements* **_except_** *the first element **_1_***\n\n* **_The\
  \ second element_** **_2_** *is the product of all array's elements* **_except_**\
  \ *the second element* **_5_** \n\n* **_The Third element_** **_5_** *is the product\
  \ of all array's elements* **_except_** *the Third element* **_2_**.\n\n___\n\n\
  ```\nproductArray ({10,3,5,6,2}) return ==> {180,600,360,300,900}\n```\n\n## **_Explanation_**:\
  \ \n\n\n* **_The first element_** **_180_**  *is the product of all array's elements*\
  \ **_except_** *the first element*  **_10_** \n\n* **_The second element_** **_600_**\
  \ *is the product of all array's elements*  **_except_**  *the second element* \
  \ **_3_** \n\n* **_The Third element_** **_360_** *is the product of all array's\
  \ elements* **_except_** *the third element* **_5_**\n\n* **_The Fourth element_**\
  \ **_300_** *is the product of all array's elements* **_except_** *the fourth element*\
  \ **_6_** \n\n* *Finally* ,**_The Fifth element_** **_900_** *is the product of\
  \ all array's elements* **_except_** *the fifth element* **_2_** \n\n___\n# [A more\
  \ challenging version of this kata by Firefly2002](https://www.codewars.com/kata/array-product-sans-n)\n\
  ___\n___\n\n# [Playing with Numbers Series](https://www.codewars.com/collections/playing-with-numbers)\n\
  \n# [Playing With Lists/Arrays Series](https://www.codewars.com/collections/playing-with-lists-slash-arrays)\n\
  \n# [For More Enjoyable Katas](http://www.codewars.com/users/MrZizoScream/authored)\n\
  ___\n\n## ALL translations are welcomed\n\n## Enjoy Learning !!\n# Zizou"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def productArray (nums : List Int) : List Int := sorry\n\ntheorem\
  \ product_array_length \n  (nums : List Int) \n  (h : nums.length ≥ 2) :\n  (productArray\
  \ nums).length = nums.length := sorry\n"
"vc-theorems": "theorem product_array_element_is_product_of_others\n  (nums : List\
  \ Int)\n  (h : nums.length ≥ 2)\n  (i : Nat)\n  (hi : i < nums.length) :\n  let\
  \ result := productArray nums\n  have h_valid : i < result.length := by rw [product_array_length\
  \ nums h]; exact hi\n  result[i]'h_valid = \n    ((List.range nums.length).filter\
  \ (· ≠ i)).foldl \n      (fun acc j => have h_j : j < nums.length := sorry; acc\
  \ * nums[j]'h_j) 1 := sorry\n\n\ntheorem product_array_symmetry\n  (nums : List\
  \ Int)\n  (h : nums.length ≥ 2)\n  (i : Nat)\n  (hi : i < nums.length) :\n  let\
  \ result := productArray nums\n  have h_valid : i < result.length := by rw [product_array_length\
  \ nums h]; exact hi\n  have h_valid_0 : 0 < result.length := by rw [product_array_length\
  \ nums h]; exact Nat.zero_lt_of_lt hi\n  result[i]'h_valid * nums[i]'hi = result[0]'h_valid_0\
  \ * nums[0]'(Nat.zero_lt_of_lt hi) := sorry\n\n/--\ninfo: [20, 12]\n-/\n#guard_msgs\
  \ in\n#eval product_array #[12, 20]\n\n/--\ninfo: [216, 24, 162, 324]\n-/\n#guard_msgs\
  \ in\n#eval product_array #[3, 27, 4, 2]\n\n/--\ninfo: [900, 1170, 2340, 5850, 1300]\n\
  -/\n#guard_msgs in\n#eval product_array #[13, 10, 5, 2, 9]\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
