"vc-description": "=====Problem Statement=====\nYou are given a spreadsheet that contains\
  \ a list of N athletes and their details (such as age, height, weight and so on).\
  \ You are required to sort the data based on the Kth attribute and print the final\
  \ resulting table. Follow the example given below for better understanding.\n\n\
  image\n\nNote that K is indexed from 0 to M-1, where M is the number of attributes.\n\
  Note: If two attributes are the same for different rows, for example, if two atheletes\
  \ are of the same age, print the row that appeared first in the input.\n\n=====Input\
  \ Format=====\nThe first line contains N and M separated by a space.\nThe next N\
  \ lines each contain M elements.\nThe last line contains K.\n\n=====Constraints=====\n\
  1≤N,M≤1000\n0≤K≤M\nEach element ≤ 1000\n\n=====Output Format=====\nPrint the N lines\
  \ of the sorted table. Each line should contain the space separated elements. Check\
  \ the sample below for clarity."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def sort_by_attribute (athletes : List (List Int)) (k : Nat) :\
  \ String := sorry\n\ndef parseResult (s : String) : List (List Int) := sorry\n\n\
  \n\n\n\n\n"
"vc-theorems": "theorem sort_by_attribute_empty_error (k : Nat) :\n  sort_by_attribute\
  \ [] k = \"\" := sorry"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded_and_plausible"
