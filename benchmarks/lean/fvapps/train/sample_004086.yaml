"vc-description": "When provided with a String, capitalize all vowels\n\nFor example:\n\
  \nInput : \"Hello World!\"\n\nOutput : \"HEllO WOrld!\"\n\nNote: Y is not a vowel\
  \ in this kata."
"vc-preamble": "import Imports.AllImports\n\ndef String.swap : String → String\n \
  \ | _ => sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def Char.isVowel (c : Char) : Bool :=\n  let vowels := ['a', 'e',\
  \ 'i', 'o', 'u']\n  sorry\n"
"vc-theorems": "theorem swap_preserves_length (s : String) : \n  (String.swap s).length\
  \ = s.length := sorry \n\n\ntheorem swap_idempotent (s : String) :\n  String.swap\
  \ (String.swap s) = String.swap s := sorry\n\n\ntheorem swap_preserves_non_vowels\
  \ (s : String) (i : String.Pos) :\n  ¬(Char.isVowel (s.get i)) →\n  (String.swap\
  \ s).get i = s.get i := sorry\n\n\ntheorem swap_capitalizes_vowels (s : String)\
  \ (i : String.Pos) :\n  (Char.isVowel (s.get i)) → \n  ((String.swap s).get i).isUpper\
  \ = true ∧\n  ((String.swap s).get i).toLower = (s.get i).toLower := sorry\n\n/--\n\
  info: 'HEllOWOrld!'\n-/\n#guard_msgs in\n#eval swap \"HelloWorld!\"\n\n/--\ninfo:\
  \ 'SUndAy'\n-/\n#guard_msgs in\n#eval swap \"Sunday\"\n\n/--\ninfo: 'AbrAcAdAbrA'\n\
  -/\n#guard_msgs in\n#eval swap \"abracadabra\"\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
