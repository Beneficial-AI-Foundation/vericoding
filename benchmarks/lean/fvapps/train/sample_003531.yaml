"vc-description": "For a pole vaulter, it is very important to begin the approach\
  \ run at the best possible starting mark. This is affected by numerous factors and\
  \ requires fine-tuning in practice. But there is a guideline that will help a beginning\
  \ vaulter start at approximately the right location for the so-called \"three-step\
  \ approach,\" based on the vaulter's body height.\n\nThis guideline was taught to\
  \ me in feet and inches, but due to the international nature of Codewars, I am creating\
  \ this kata to use metric units instead.\n\nYou are given the following two guidelines\
  \ to begin with:\n(1) A vaulter with a height of 1.52 meters should start at 9.45\
  \ meters on the runway.\n(2) A vaulter with a height of 1.83 meters should start\
  \ at 10.67 meters on the runway.\n\nYou will receive a vaulter's height in meters\
  \ (which will always lie in a range between a minimum of 1.22 meters and a maximum\
  \ of 2.13 meters). Your job is to return the best starting mark in meters, rounded\
  \ to two decimal places.\n\nHint: Based on the two guidelines given above, you will\
  \ want to account for the change in starting mark per change in body height. This\
  \ involves a linear relationship. But there is also a constant offset involved.\
  \ If you can determine the rate of change described above, you should be able to\
  \ determine that constant offset."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def starting_mark (height : Float) : Float := sorry\n\ntheorem\
  \ starting_mark_in_range (height : Float)\n  (h1 : 1.52 ≤ height) (h2 : height ≤\
  \ 1.83) :\n  9.45 ≤ starting_mark height ∧ starting_mark height ≤ 10.67 := sorry\n"
"vc-theorems": "theorem starting_mark_linear (height : Float)\n  (h1 : 1.52 ≤ height)\
  \ (h2 : height ≤ 1.83) :\n  let slope := (10.67 - 9.45) / (1.83 - 1.52)\n  let expected\
  \ := 9.45 + slope * (height - 1.52)\n  (starting_mark height - expected).abs < 0.001\
  \ := sorry\n\n\ntheorem starting_mark_rounding (height : Float) :\n  let mark :=\
  \ starting_mark height\n  let decimal := mark - mark.floor\n  decimal < 0.01 :=\
  \ sorry\n\n\ntheorem starting_mark_edge_cases :\n  starting_mark 1.52 = 9.45 ∧\n\
  \  starting_mark 1.83 = 10.67 := sorry\n\n/--\ninfo: 9.45\n-/\n#guard_msgs in\n\
  #eval starting_mark 1.52\n\n/--\ninfo: 10.67\n-/\n#guard_msgs in\n#eval starting_mark\
  \ 1.83\n\n/--\ninfo: 10.36\n-/\n#guard_msgs in\n#eval starting_mark 1.75\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
