"vc-description": "You are given a set of size $m$ with integer elements between $0$\
  \ and $2^{n}-1$ inclusive. Let's build an undirected graph on these integers in\
  \ the following way: connect two integers $x$ and $y$ with an edge if and only if\
  \ $x \\& y = 0$. Here $\\&$ is the bitwise AND operation. Count the number of connected\
  \ components in that graph.\n\n\n-----Input-----\n\nIn the first line of input there\
  \ are two integers $n$ and $m$ ($0 \\le n \\le 22$, $1 \\le m \\le 2^{n}$).\n\n\
  In the second line there are $m$ integers $a_1, a_2, \\ldots, a_m$ ($0 \\le a_{i}\
  \ < 2^{n}$) — the elements of the set. All $a_{i}$ are distinct.\n\n\n-----Output-----\n\
  \nPrint the number of connected components.\n\n\n-----Examples-----\nInput\n2 3\n\
  1 2 3\n\nOutput\n2\n\nInput\n5 5\n5 19 10 20 12\n\nOutput\n2\n\n\n\n-----Note-----\n\
  \nGraph from first sample:\n\n$0$\n\nGraph from second sample:\n\n[Image]"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def count_connected_components (n : Nat) (numbers : List Nat) :\
  \ Nat := sorry\n\ntheorem count_connected_components_properties (n : Nat) (numbers\
  \ : List Nat) \n  (h1 : n > 0) (h2 : n ≤ 10) (h3 : numbers.length > 0)\n  (h4 :\
  \ ∀ x ∈ numbers, x < 2^n) :\n  let result := count_connected_components n numbers;\n\
  \  -- Result is natural number\n  result > 0 \n  ∧ result ≤ numbers.length\n  --\
  \ Function is deterministic \n  ∧ result = count_connected_components n numbers\n\
  \  -- Result invariant under reordering\n  ∧ result = count_connected_components\
  \ n numbers.reverse := sorry\n"
"vc-theorems": "theorem single_number_gives_one_component (n : Nat) \n  (h1 : n >\
  \ 0) (h2 : n ≤ 10) :\n  let number := (2^n) - 1;\n  count_connected_components n\
  \ [number] = 1 := sorry"
"vc-postamble": "-- Apps difficulty: competition\n-- Assurance level: guarded"
