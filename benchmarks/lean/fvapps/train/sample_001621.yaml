vc-description: |-
  Laxman, a great Mathematician and Thinker, gives Sugreev an integer, $N$, and asks him to make an array $A$ of length $N$, such that  $\sum A$i$^3 = X^2$, to prove the purity of the bond of his friendship with Ram. Sugreev is facing difficulty in forming the array. So, help Sugreev to form this array.

  -----Note:-----
  - $A$i must be an integer between $1$ to $10^3$ (both inclusive), where $A$i denotes the $i$$th$ element of the array, $A$.
  - $X$ must be an integer (Any Integer).
  - If there are multiple solutions, satisfying the condition, you can print any "one" solution.

  -----Input:-----
  - First line will contain $T$, number of testcases. Then, the testcases follow. 
  - Each testcase contains a single line of input, integer $N$. 

  -----Output:-----
  For each testcase, output in a single line, array $A$ of $N$ integers, where each element is between $1$ to $1000$ (both inclusive), satisfying the equation $\sum A$i$^3 = X^2$, where $X$ is "any" integer.

  -----Constraints:-----
  - $1 \leq T \leq 10^3$
  - $1 \leq N \leq 10^3$

  -----Sample Input:-----
  2
  1
  6

  -----Sample Output:-----
  4
  5 10 5 10 5 5
vc-preamble: |
  import Imports.AllImports

  def calculate_cube_sum (n : Nat) : Nat :=
  sorry
vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>
vc-definitions: |-
  def is_perfect_square (n : Nat) : Bool :=
  sorry 

  -- Cube sum matches formula
vc-theorems: |-
  theorem cube_sum_matches_formula (n : Nat) : 
    calculate_cube_sum n = ((n * (n + 1)) / 2) ^ 2 :=
  sorry

  -- Perfect squares are identified correctly

  theorem perfect_square_properties (n : Nat) (h : n > 1) :
    (is_perfect_square (n * n) = true) ∧ 
    (is_perfect_square (n * n + 1) = false) ∧
    (is_perfect_square (n * n - 1) = false) :=
  sorry

  -- Product of perfect squares is perfect square

  theorem perfect_square_product (n : Nat) :
    is_perfect_square n = true → is_perfect_square (n * n) = true :=
  sorry
vc-postamble: |-
  -- Apps difficulty: interview
  -- Assurance level: unguarded
