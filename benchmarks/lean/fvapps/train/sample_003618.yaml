"vc-description": "This kata is part of the collection [Mary's Puzzle Books](https://www.codewars.com/collections/marys-puzzle-books).\n\
  \n# Zero Terminated Sum\n\nMary has another puzzle book, and it's up to you to help\
  \ her out! This book is filled with zero-terminated substrings, and you have to\
  \ find the substring with the largest sum of its digits. For example, one puzzle\
  \ looks like this:\n```\n\"72102450111111090\"\n```\nHere, there are 4 different\
  \ substrings: `721`, `245`, `111111`, and `9`. The sums of their digits are `10`,\
  \ `11`, `6`, and `9` respectively. Therefore, the substring with the largest sum\
  \ of its digits is `245`, and its sum is `11`.\n\nWrite a function `largest_sum`\
  \ which takes a string and returns the maximum of the sums of the substrings. In\
  \ the example above, your function should return `11`.\n\n### Notes:\n\n- A substring\
  \ can have length 0. For example, `123004560` has three substrings, and the middle\
  \ one has length 0.\n- All inputs will be valid strings of digits, and the last\
  \ digit will always be `0`."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def largest_sum (s : String) : Nat :=\n  sorry\n"
"vc-theorems": "theorem empty_and_zero :\n  largest_sum \"\" = 0 ∧\n  largest_sum\
  \ \"0\" = 0 ∧\n  largest_sum \"00\" = 0 := sorry\n\n\n\n\ntheorem repeated_digit_sum\
  \ (n : Nat) (d : Nat) \n  (h1 : n > 0) (h2 : n ≤ 10) (h3 : d > 0) (h4 : d ≤ 9) :\n\
  \  largest_sum (String.join (List.replicate n (toString d))) = n * d := sorry\n\n\
  /--\ninfo: 11\n-/\n#guard_msgs in\n#eval largest_sum \"72102450111111090\"\n\n/--\n\
  info: 15\n-/\n#guard_msgs in\n#eval largest_sum \"123004560\"\n\n/--\ninfo: 0\n\
  -/\n#guard_msgs in\n#eval largest_sum \"0\"\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded_and_plausible"
