"vc-description": "You are given two arrays `arr1` and `arr2`, where `arr2` always\
  \ contains integers.\n\nWrite the function `find_array(arr1, arr2)` such that:\n\
  \nFor `arr1 = ['a', 'a', 'a', 'a', 'a']`, `arr2 = [2, 4]`\n`find_array returns ['a',\
  \ 'a']`\n\nFor `arr1 = [0, 1, 5, 2, 1, 8, 9, 1, 5]`, `arr2 = [1, 4, 7]`\n`find_array\
  \ returns [1, 1, 1]`\n\nFor `arr1 = [0, 3, 4]`, `arr2 = [2, 6]`\n`find_array returns\
  \ [4]`\n\nFor `arr1=[\"a\",\"b\",\"c\",\"d\"]` , `arr2=[2,2,2]`,\n`find_array returns\
  \ [\"c\",\"c\",\"c\"]`\n\nFor `arr1=[\"a\",\"b\",\"c\",\"d\"]`, `arr2=[3,0,2]`\n\
  `find_array returns [\"d\",\"a\",\"c\"]`\n\nIf either `arr1` or `arr2` is empty,\
  \ you should return an empty arr (empty list in python,\nempty vector in c++). Note\
  \ for c++ use std::vector arr1, arr2."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def find_array {α : Type} (arr1 : List α) (arr2 : List Nat) : List\
  \ α := sorry \n\ntheorem find_array_length_bound {α : Type} (arr1 : List α) (arr2\
  \ : List Nat) :\n  List.length (find_array arr1 arr2) ≤ min (List.length arr1) (List.length\
  \ arr2) := sorry\n"
"vc-theorems": "theorem find_array_elements_from_arr1 {α : Type} (arr1 : List α) (arr2\
  \ : List Nat) :\n  ∀ x ∈ find_array arr1 arr2, x ∈ arr1 := sorry\n\n\ntheorem find_array_matches_valid_indexes\
  \ {α : Type} (arr1 : List α) (arr2 : List Nat) :\n  find_array arr1 arr2 = arr2.filterMap\
  \ (fun i => if h : i < arr1.length then some (arr1.get ⟨i, h⟩) else none) := sorry\n\
  \n\ntheorem find_array_empty {α : Type} :\n  find_array ([] : List α) ([] : List\
  \ Nat) = [] ∧\n  ∀ (l : List α), find_array l [] = [] ∧\n  ∀ (l : List Nat), find_array\
  \ ([] : List α) l = [] := sorry\n\n\ntheorem find_array_non_empty {α : Type} (arr1\
  \ : List α) (arr2 : List Nat) (h1 : arr1 ≠ []) (h2 : arr2 ≠ []) :\n  ∀ (i : Nat)\
  \ (x : α) (h : i < arr1.length), \n    i ∈ arr2 → \n    x = arr1.get ⟨i, h⟩ →\n\
  \    x ∈ find_array arr1 arr2 := sorry\n\n/--\ninfo: ['a', 'a']\n-/\n#guard_msgs\
  \ in\n#eval find_array [\"a\", \"a\", \"a\", \"a\", \"a\"] [2, 4]\n\n/--\ninfo:\
  \ [1, 1, 1]\n-/\n#guard_msgs in\n#eval find_array [0, 1, 5, 2, 1, 8, 9, 1, 5] [1,\
  \ 4, 7]\n\n/--\ninfo: []\n-/\n#guard_msgs in\n#eval find_array [] [2]\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
