"vc-description": "Johnny has just found the new, great tutorial: \"How to become\
  \ a grandmaster?\". The tutorial tells many strange and unexpected for Johnny things,\
  \ such as you have to be patient or that very important is solving many harder and\
  \ harder problems. \n\nThe boy has found an online judge with tasks divided by topics\
  \ they cover. He has picked $p^{k_i}$ problems from $i$-th category ($p$ is his\
  \ favorite number). He wants to solve them in two weeks (the patience condition\
  \ is too hard for Johnny, so for simplicity, he looks only at easy tasks, which\
  \ can be solved in such a period). Now our future grandmaster has to decide which\
  \ topics to cover first and which the second week. Help him assign topics in such\
  \ a way, that workload is balanced.\n\nFormally, given $n$ numbers $p^{k_i}$, the\
  \ boy wants to divide them into two disjoint sets, minimizing the absolute difference\
  \ between sums of numbers in each set. Find the minimal absolute difference. Output\
  \ the result modulo $10^{9}+7$.\n\n\n-----Input-----\n\nInput consists of multiple\
  \ test cases. The first line contains one integer $t$ $(1 \\leq t \\leq 10^5)$ —\
  \ the number of test cases. Each test case is described as follows:\n\nThe first\
  \ line contains two integers $n$ and $p$ $(1 \\leq n, p \\leq 10^6)$. The second\
  \ line contains $n$ integers $k_i$ $(0 \\leq k_i \\leq 10^6)$.\n\nThe sum of $n$\
  \ over all test cases doesn't exceed $10^6$.\n\n\n-----Output-----\n\nOutput one\
  \ integer — the reminder of division the answer by $1\\,000\\,000\\,007$.\n\n\n\
  -----Example-----\nInput\n4\n5 2\n2 3 4 4 3\n3 1\n2 10 1000\n4 5\n0 1 1 100\n1 8\n\
  89\n\nOutput\n4\n1\n146981438\n747093407\n\n\n\n-----Note-----\n\nYou have to minimize\
  \ the difference, not it's remainder. For example, if the minimum difference is\
  \ equal to $2$, but there is also a distribution where the difference is $10^9 +\
  \ 8$, then the answer is $2$, not $1$.\n\nIn the first test case of the example,\
  \ there're the following numbers: $4$, $8$, $16$, $16$, and $8$. We can divide them\
  \ into such two sets: ${4, 8, 16}$ and ${8, 16}$. Then the difference between the\
  \ sums of numbers in sets would be $4$."
"vc-preamble": "import Imports.AllImports\n\ndef MOD := 1000000007\n\ndef List.sort\
  \ (l: List Nat) : List Nat :=\n  sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def solve_minimized_workload (n: Nat) (p: Nat) (workloads: List\
  \ Nat) : Nat :=\n  sorry\n"
"vc-theorems": "theorem workload_result_bounds (n p: Nat) (workloads: List Nat)\n\
  \  (h1: n > 0) (h2: n ≤ 100) (h3: p > 0) (h4: p ≤ 10)\n  (h5: ∀ w ∈ workloads, w\
  \ ≥ 0 ∧ w ≤ 1000)\n  (h6: workloads.length > 0) (h7: workloads.length ≤ 100) :\n\
  \  let result := solve_minimized_workload n p workloads\n  0 ≤ result ∧ result <\
  \ MOD :=\nsorry\n\n\ntheorem workload_p_one_special_case (n p: Nat) (workloads:\
  \ List Nat)\n  (h1: n > 0) (h2: n ≤ 100) (h3: p = 1)\n  (h4: ∀ w ∈ workloads, w\
  \ ≥ 0 ∧ w ≤ 1000)\n  (h5: workloads.length > 0) (h6: workloads.length ≤ 100) :\n\
  \  let result := solve_minimized_workload n p workloads\n  result = n % 2 ∧ (result\
  \ = 0 ∨ result = 1) :=\nsorry\n\n\ntheorem workload_sort_invariant (n p: Nat) (workloads:\
  \ List Nat)\n  (h1: n > 0) (h2: n ≤ 100) (h3: p > 0) (h4: p ≤ 10)\n  (h5: ∀ w ∈\
  \ workloads, w ≥ 0 ∧ w ≤ 1000)\n  (h6: workloads.length > 0) (h7: workloads.length\
  \ ≤ 100) :\n  solve_minimized_workload n p workloads = \n  solve_minimized_workload\
  \ n p (List.sort workloads) :=\nsorry\n\n\ntheorem workload_length_matches_n (p:\
  \ Nat) (workloads: List Nat)\n  (h1: p > 0) (h2: p ≤ 10)\n  (h3: ∀ w ∈ workloads,\
  \ w ≥ 0 ∧ w ≤ 1000)\n  (h4: workloads.length > 0) (h5: workloads.length ≤ 100) :\n\
  \  let n := workloads.length\n  let result := solve_minimized_workload n p workloads\n\
  \  0 ≤ result ∧ result < MOD :=\nsorry\n\n/--\ninfo: 4\n-/\n#guard_msgs in\n#eval\
  \ solve_minimized_workload 5 2 [2, 3, 4, 4, 3]\n\n/--\ninfo: 1\n-/\n#guard_msgs\
  \ in\n#eval solve_minimized_workload 3 1 [2, 10, 1000]\n\n/--\ninfo: 146981438\n\
  -/\n#guard_msgs in\n#eval solve_minimized_workload 4 5 [0, 1, 1, 100]\n"
"vc-postamble": "-- Apps difficulty: competition\n-- Assurance level: unguarded"
