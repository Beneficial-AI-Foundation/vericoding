"vc-description": "You have a grid with `$m$` rows and `$n$` columns. Return the number\
  \ of unique ways that start from the top-left corner and go to the bottom-right\
  \ corner. You are only allowed to move right and down.\n\nFor example, in the below\
  \ grid of `$2$` rows and `$3$` columns, there are `$10$` unique paths:\n\n```\n\
  o----o----o----o\n|    |    |    |\no----o----o----o\n|    |    |    |\no----o----o----o\n\
  ```\n\n**Note:** there are random tests for grids up to 1000 x 1000 in most languages,\
  \ so a naive solution will not work.\n\n---\n*Hint: use mathematical permutation\
  \ and combination*"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def numberOfRoutes (m n : Nat) : Nat := sorry\n\ntheorem numberOfRoutes_positive\
  \ (m n : Nat) (h1: m > 0) (h2: n > 0) : \n  numberOfRoutes m n > 0 := sorry\n"
"vc-theorems": "theorem numberOfRoutes_symmetric (m n : Nat) :\n  numberOfRoutes m\
  \ n = numberOfRoutes n m := sorry\n\n\ntheorem numberOfRoutes_single_row (n : Nat)\
  \ (h: n > 0) :\n  numberOfRoutes 1 n = n + 1 := sorry\n\n\ntheorem numberOfRoutes_single_col\
  \ (n : Nat) (h: n > 0) :\n  numberOfRoutes n 1 = n + 1 := sorry\n\n\ntheorem numberOfRoutes_minimal\
  \ :\n  numberOfRoutes 1 1 = 2 := sorry\n\n/--\ninfo: 2\n-/\n#guard_msgs in\n#eval\
  \ number_of_routes 1 1\n\n/--\ninfo: 35\n-/\n#guard_msgs in\n#eval number_of_routes\
  \ 3 4\n\n/--\ninfo: 462\n-/\n#guard_msgs in\n#eval number_of_routes 5 6\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded"
