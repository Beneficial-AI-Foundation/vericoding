"vc-description": "Tzuyu gave Nayeon a strip of $N$ cells (numbered $1$ through $N$)\
  \ for her birthday. This strip is described by a sequence $A_1, A_2, \\ldots, A_N$,\
  \ where for each valid $i$, the $i$-th cell is blocked if $A_i = 1$ or free if $A_i\
  \ = 0$. Tzuyu and Nayeon are going to use it to play a game with the following rules:\n\
  - The players alternate turns; Nayeon plays first.\n- Initially, both players are\
  \ outside of the strip. However, note that afterwards during the game, their positions\
  \ are always different.\n- In each turn, the current player should choose a free\
  \ cell and move there. Afterwards, this cell becomes blocked and the players cannot\
  \ move to it again.\n- If it is the current player's first turn, she may move to\
  \ any free cell.\n- Otherwise, she may only move to one of the left and right adjacent\
  \ cells, i.e. from a cell $c$, the current player may only move to the cell $c-1$\
  \ or $c+1$ (if it is free).\n- If a player is unable to move to a free cell during\
  \ her turn, this player loses the game.\nNayeon and Tzuyu are very smart, so they\
  \ both play optimally. Since it is Nayeon's birthday, she wants to know if she can\
  \ beat Tzuyu. Find out who wins.\n\n-----Input-----\n- The first line of the input\
  \ contains a single integer $T$ denoting the number of test cases. The description\
  \ of $T$ test cases follows.\n- The first line of each test case contains a single\
  \ integer $N$.\n- The second line contains $N$ space-separated integers $A_1, A_2,\
  \ \\ldots, A_N$.\n\n-----Output-----\nFor each test case, print a single line containing\
  \ the string \"Yes\" if Nayeon wins the game or \"No\" if Tzuyu wins (without quotes).\n\
  \n-----Constraints-----\n- $1 \\le T \\le 40,000$\n- $2 \\le N \\le 3\\cdot 10^5$\n\
  - $0 \\le A_i \\le 1$ for each valid $i$\n- $A_1 = A_N = 1$\n- the sum of $N$ over\
  \ all test cases does not exceed $10^6$\n\n-----Subtasks-----\nSubtask #1 (50 points):\
  \ $A_i = 0$ for each $i$ ($2 \\le i \\le N-1$)\nSubtask #2 (50 points): original\
  \ constraints\n\n-----Example Input-----\n4\n7\n1 1 0 0 0 1 1\n8\n1 0 1 1 1 0 0\
  \ 1\n4\n1 1 0 1\n4\n1 1 1 1\n\n-----Example Output-----\nYes\nNo\nYes\nNo\n\n-----Explanation-----\n\
  Example case 1: Since both Nayeon and Tzuyu play optimally, Nayeon can start e.g.\
  \ by moving to cell $4$, which then becomes blocked. Tzuyu has to pick either the\
  \ cell $3$ or the cell $5$, which also becomes blocked. Nayeon is then left with\
  \ only one empty cell next to cell $4$ (the one Tzuyu did not pick); after she moves\
  \ there, Tzuyu is unable to move, so she loses the game.\nExample case 2: Regardless\
  \ of what cell Nayeon moves to at the start, Tzuyu will always be able to beat her."
"vc-preamble": "import Imports.AllImports\n\ndef determine_winner (n : Nat) (cells\
  \ : List Nat) : String := sorry\n\ndef is_valid_cell_list (cells : List Nat) : Bool\
  \ := \n  cells.all (fun x => x = 0 ∨ x = 1)\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def count_max_consecutive_zeros (cells : List Nat) : Nat := sorry\n\
  \ntheorem winner_determined_by_max_zeros (n : Nat) (cells : List Nat) \n  (h : is_valid_cell_list\
  \ cells) :\n  determine_winner n cells = \n    if count_max_consecutive_zeros cells\
  \ % 2 = 1 \n    then \"Yes\" \n    else \"No\" := sorry\n"
"vc-theorems": "theorem determine_winner_returns_yes_or_no (n : Nat) (cells : List\
  \ Nat) \n  (h : is_valid_cell_list cells) :\n  determine_winner n cells = \"Yes\"\
  \ ∨ determine_winner n cells = \"No\" := sorry\n\n\ntheorem all_ones_loses (n :\
  \ Nat) : \n  determine_winner n (List.replicate n 1) = \"No\" := sorry\n\n\ntheorem\
  \ all_zeros_winner (n : Nat) :\n  determine_winner n (List.replicate n 0) = \n \
  \   if n % 2 = 1 \n    then \"Yes\"\n    else \"No\" := sorry\n\n/--\ninfo: 'Yes'\n\
  -/\n#guard_msgs in\n#eval determine_winner 7 [1, 1, 0, 0, 0, 1, 1]\n\n/--\ninfo:\
  \ 'No'\n-/\n#guard_msgs in\n#eval determine_winner 8 [1, 0, 1, 1, 1, 0, 0, 1]\n\n\
  /--\ninfo: 'Yes'\n-/\n#guard_msgs in\n#eval determine_winner 4 [1, 1, 0, 1]\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
