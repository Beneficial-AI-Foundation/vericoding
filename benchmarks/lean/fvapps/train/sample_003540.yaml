"vc-description": "Define n!! as\n\nn!! = 1 \\* 3 \\* 5 \\* ... \\* n  if n is odd,\
  \ \n\nn!! = 2 \\* 4 \\* 6 \\* ... \\* n  if n is even. \n\nHence 8!! = 2 \\* 4 \\\
  * 6 \\* 8 = 384, there is no zero at the end. \n30!! has 3 zeros at the end. \n\n\
  For a positive integer n, please count how many zeros are there at \nthe end of\
  \ n!!. \n\nExample: \n\ncount\\_zeros\\_n\\_double\\_fact(30) should return 3"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def count_zeros_n_double_fact (n : Int) : Nat := sorry\n\ntheorem\
  \ count_zeros_non_negative (n : Int) : \n  count_zeros_n_double_fact n ≥ 0 := sorry\n"
"vc-theorems": "theorem odd_numbers_return_zero (n : Int) :\n  n % 2 ≠ 0 → count_zeros_n_double_fact\
  \ n = 0 := sorry\n\n\ntheorem larger_n_has_more_zeros (n : Int) :\n  n % 2 = 0 →\
  \ n ≥ 10 → \n  count_zeros_n_double_fact (2 * n) ≥ count_zeros_n_double_fact n :=\
  \ sorry\n\n\ntheorem small_numbers_have_zero_count (n : Int) :\n  n ≤ 8 → count_zeros_n_double_fact\
  \ n = 0 := sorry\n\n/--\ninfo: 0\n-/\n#guard_msgs in\n#eval count_zeros_n_double_fact\
  \ 8\n\n/--\ninfo: 3\n-/\n#guard_msgs in\n#eval count_zeros_n_double_fact 30\n\n\
  /--\ninfo: 62\n-/\n#guard_msgs in\n#eval count_zeros_n_double_fact 500\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded"
