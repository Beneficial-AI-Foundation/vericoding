"vc-description": "Given an array of n$n$ integers : A1,A2,...,An$ A_1, A_2,... ,\
  \ A_n$, find the longest size subsequence which satisfies the following property:\
  \ The xor of adjacent integers in the subsequence must be non-decreasing.\n\n-----Input:-----\n\
  - First line contains an integer n$n$, denoting the length of the array. \n- Second\
  \ line will contain n$n$ space separated integers, denoting the elements of the\
  \ array.\n\n-----Output:-----\nOutput a single integer denoting the longest size\
  \ of subsequence with the given property.\n\n-----Constraints-----\n- 1≤n≤103$1\
  \ \\leq n \\leq 10^3$\n- 0≤Ai≤1018$0 \\leq A_i \\leq 10^{18}$\n\n-----Sample Input:-----\n\
  8\n1 200 3 0 400 4 1 7\n\n-----Sample Output:-----\n6\n\n-----EXPLANATION:-----\n\
  The subsequence of maximum length is {1, 3, 0, 4, 1, 7} with Xor of adjacent indexes\
  \ as {2,3,4,5,6} (non-decreasing)"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def find_longest_xor_subsequence (n : Nat) (arr : List Nat) : Nat\
  \ :=\n  sorry\n"
"vc-theorems": "theorem length_bounds (n : Nat) (arr : List Nat) (h : arr.length =\
  \ n) (h1 : n > 0) :\n  let result := find_longest_xor_subsequence n arr\n  1 ≤ result\
  \ ∧ result ≤ n :=\n  sorry\n\n\ntheorem same_values_equal_length (n : Nat) (arr\
  \ : List Nat) (h : arr.length = n) (h1 : n > 0) :\n  let first := arr.head?\n  let\
  \ repeated := List.replicate n (first.get!)\n  find_longest_xor_subsequence n repeated\
  \ = n :=\n  sorry\n\n\ntheorem all_zeros_case (n : Nat) (arr : List Nat) (h : arr.length\
  \ = n) (h1 : n > 0) :\n  let zeros := List.replicate n 0\n  find_longest_xor_subsequence\
  \ n zeros = n :=\n  sorry\n\n/--\ninfo: 6\n-/\n#guard_msgs in\n#eval find_longest_xor_subsequence\
  \ 8 [1, 200, 3, 0, 400, 4, 1, 7]\n\n/--\ninfo: 3\n-/\n#guard_msgs in\n#eval find_longest_xor_subsequence\
  \ 4 [1, 2, 3, 4]\n\n/--\ninfo: 3\n-/\n#guard_msgs in\n#eval find_longest_xor_subsequence\
  \ 3 [5, 5, 5]\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
