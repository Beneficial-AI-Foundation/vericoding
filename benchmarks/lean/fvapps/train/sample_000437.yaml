"vc-description": "Given a string which contains only lowercase letters, remove duplicate\
  \ letters so that every letter appear once and only once. You must make sure your\
  \ result is the smallest in lexicographical order among all possible results.\n\
  \ \nExample 1:\n \n \nInput: \"bcabc\"\nOutput: \"abc\"\n \n \nExample 2:\n \n \n\
  Input: \"cbacdcbc\"\nOutput: \"acdb\""
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def remove_duplicate_letters (s : String) : String := sorry\n\n\
  theorem output_is_subset_of_input (s : String) (h : s.length > 0) :\n  ∀ (c : Char),\
  \ c ∈ (remove_duplicate_letters s).data → c ∈ s.data := sorry\n"
"vc-theorems": "theorem output_has_no_duplicates (s : String) (h : s.length > 0) :\n\
  \  ∀ c, (remove_duplicate_letters s).data.count c ≤ 1 := sorry"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
