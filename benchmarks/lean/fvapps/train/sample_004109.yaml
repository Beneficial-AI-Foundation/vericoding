"vc-description": "Your task is to generate the Fibonacci sequence to `n` places,\
  \ with each alternating value as `\"skip\"`. For example:\n\n`\"1 skip 2 skip 5\
  \ skip 13 skip 34\"`\n\nReturn the result as a string\n\nYou can presume that `n`\
  \ is always a positive integer between (and including) 1 and 64."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def skiponacci (n : Nat) : String :=\n  sorry\n"
"vc-theorems": "theorem skiponacci_output_type (n : Nat) (h : n > 0) : \n  (String.splitOn\
  \ (skiponacci n) \" \").length > 0 := sorry\n\n\ntheorem skiponacci_length (n :\
  \ Nat) (h : n > 0) :\n  (String.splitOn (skiponacci n) \" \").length = n := sorry\n\
  \n\ntheorem skiponacci_odd_indices_skip (n : Nat) (h : n > 0) :\n  ∀ i : Nat, i\
  \ < n → i % 2 = 1 → \n    ((String.splitOn (skiponacci n) \" \")[i]'sorry) = \"\
  skip\" := sorry\n\n\ntheorem skiponacci_first_element (n : Nat) (h : n > 0) :  \n\
  \  (String.splitOn (skiponacci n) \" \").head? = some \"1\" := sorry\n\n\ntheorem\
  \ skiponacci_even_indices_increasing (n : Nat) (h : n > 0) :\n  let evenNumbers\
  \ := (String.splitOn (skiponacci n) \" \").enum.filter (fun p => p.fst % 2 = 0)\n\
  \  ∀ i j : Nat, i < j → j < evenNumbers.length →\n    String.toNat! (evenNumbers[i]'sorry).snd\
  \ < String.toNat! (evenNumbers[j]'sorry).snd := sorry\n\n/--\ninfo: '1'\n-/\n#guard_msgs\
  \ in\n#eval skiponacci 1\n\n/--\ninfo: '1 skip 2 skip 5'\n-/\n#guard_msgs in\n#eval\
  \ skiponacci 5\n\n/--\ninfo: '1 skip 2 skip 5 skip 13'\n-/\n#guard_msgs in\n#eval\
  \ skiponacci 7\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
