"vc-description": "Chef is making polygon cakes in his kitchen today! \nSince the\
  \ judge panel is very strict, Chef's cakes must be beautiful and have sharp and\
  \ precise $internal$ angles in arithmetic progression. \nGiven the number of sides,\
  \ $N$, of the cake Chef is baking today and also the measure of its first angle(smallest\
  \ angle), $A$, find the measure of the $K^{th}$ angle.\n\n-----Input:-----\n- The\
  \ first line contains a single integer $T$, the number of test cases. \n- The next\
  \ $T$ lines contain three space separated integers $N$, $A$ and $K$, the number\
  \ of sides of polygon, the first angle and the $K^{th}$ angle respectively. \n\n\
  -----Output:-----\nFor each test case, print two space separated integers $X$ and\
  \ $Y$, such that the $K^{th}$ angle can be written in the form of $X/Y$ and $gcd(X,\
  \ Y) = 1$\n\n-----Constraints-----\n- $1 \\leq T \\leq 50$\n- $3 \\leq N \\leq 1000$\n\
  - $1 \\leq A \\leq 1000000000$\n- $1 \\leq K \\leq N$\n- It is guaranteed the answer\
  \ is always valid.\n\n-----Sample Input:-----\n1\n3 30 2\n\n-----Sample Output:-----\n\
  60 1"
"vc-preamble": "import Imports.AllImports\n\ndef Int.abs (n : Int) : Int := \n  if\
  \ n ≥ 0 then n else -n\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def find_kth_angle (N : Nat) (A : Int) (K : Nat) : Int × Nat :=\
  \ sorry\n\ntheorem first_angle_matches {N : Nat} {A : Int} \n  (hN : N ≥ 3) (hN2\
  \ : N ≤ 100) (hA : 0 ≤ A) (hA2 : A ≤ 360) :\n  let (num, den) := find_kth_angle\
  \ N A 1\n  Int.div num den = A := sorry"
"vc-theorems": "/--\ninfo: (60, 1)\n-/\n#guard_msgs in\n#eval find_kth_angle 3 30\
  \ 2\n\n/--\ninfo: (90, 1)\n-/\n#guard_msgs in\n#eval find_kth_angle 4 90 2\n\n/--\n\
  info: (108, 1)\n-/\n#guard_msgs in\n#eval find_kth_angle 5 72 3\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
