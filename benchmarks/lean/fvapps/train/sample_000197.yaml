"vc-description": "Given n, how many structurally unique BST's (binary search trees)\
  \ that store values 1 ... n?\n\nExample:\n\n\nInput: 3\nOutput: 5\nExplanation:\n\
  Given n = 3, there are a total of 5 unique BST's:\n\n   1         3     3      2\
  \      1\n    \\       /     /      / \\      \\\n     3     2     1      1   3\
  \      2\n    /     /       \\                 \\\n   2     1         2        \
  \         3"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def num_unique_bst (n : Nat) : Nat := sorry\n\ntheorem num_unique_bst_base_cases\
  \ : \n  num_unique_bst 0 = 1 ∧ \n  num_unique_bst 1 = 1 ∧ \n  num_unique_bst 2 =\
  \ 2 := sorry\n"
"vc-theorems": "theorem num_unique_bst_positive (n : Nat) : \n  num_unique_bst n >\
  \ 0 := sorry\n\n\ntheorem num_unique_bst_increasing (n : Nat) :\n  n ≥ 2 → num_unique_bst\
  \ n > num_unique_bst (n-1) := sorry\n\n\ntheorem num_unique_bst_deterministic (n\
  \ : Nat) :\n  num_unique_bst n = num_unique_bst n := sorry\n\n\ntheorem num_unique_bst_known_values\
  \ :\n  num_unique_bst 0 = 1 ∧\n  num_unique_bst 1 = 1 ∧\n  num_unique_bst 2 = 2\
  \ ∧\n  num_unique_bst 3 = 5 ∧\n  num_unique_bst 4 = 14 ∧\n  num_unique_bst 5 = 42\
  \ ∧\n  num_unique_bst 6 = 132 ∧\n  num_unique_bst 7 = 429 := sorry\n\n/--\ninfo:\
  \ 5\n-/\n#guard_msgs in\n#eval num_unique_bst 3\n\n/--\ninfo: 14\n-/\n#guard_msgs\
  \ in\n#eval num_unique_bst 4\n\n/--\ninfo: 42\n-/\n#guard_msgs in\n#eval num_unique_bst\
  \ 5\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
