"vc-description": "You are given two strings $S$ and $R$. Each of these strings has\
  \ length $N$. We want to make $S$ equal to $R$ by performing the following operation\
  \ some number of times (possibly zero):\n- Choose two integers $a$ and $b$ such\
  \ that $1 \\le a \\le b \\le N$.\n- For each $i$ such that $a \\le i \\le b$, replace\
  \ the $i$-th character of $S$ by the $i$-th character of $R$.\nSuppose that we make\
  \ $S$ equal to $R$ by performing this operation $k$ times, in such a way that the\
  \ total number of replaced characters (i.e. the sum of all $k$ values of $b-a+1$)\
  \ is $l$. Then, the cost of this process is defined as $k \\cdot l$.\nFind the minimum\
  \ cost with which we can make $S$ equal to $R$.\n\n-----Input-----\n- The first\
  \ line of the input contains a single integer $T$ denoting the number of test cases.\
  \ The description of $T$ test cases follows.\n- The first line of each test case\
  \ contains a single string $S$.\n- The second line contains a single string $R$.\n\
  \n-----Output-----\nFor each test case, print a single line containing one integer\
  \ â€• the minimum cost.\n\n-----Constraints-----\n- $1 \\le T \\le 4,000$\n- $1 \\\
  le N \\le 10^6$\n- $|S| = |R| = N$\n- $S$ and $R$ contain only lowercase English\
  \ letters\n- the sum of $N$ over all test cases does not exceed $2 \\cdot 10^6$\n\
  \n-----Example Input-----\n1\nadefb\nbdefa\n\n-----Example Output-----\n4\n\n-----Explanation-----\n\
  Example case 1: $S$ can be made equal to $R$ in two moves. First, we replace $S_1$\
  \ by $R_1$ and then replace $S_5$ by $R_5$. We have $k = l = 2$, so the cost is\
  \ $2 \\cdot 2 = 4$. If we wanted to perform only one operation, the cost would be\
  \ $5$."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def min_cost_to_transform (s r : String) : Nat := sorry\n\ndef\
  \ countDiffs (s r : String) : Nat := sorry\n\n\n\n\n\n\n"
"vc-theorems": "theorem cost_to_self (s : String) :\n  min_cost_to_transform s s =\
  \ 0 := sorry\n\n\ntheorem cost_symmetric (s r : String) :\n  min_cost_to_transform\
  \ s r = min_cost_to_transform r s := sorry\n\n/--\ninfo: 4\n-/\n#guard_msgs in\n\
  #eval min_cost_to_transform \"adefb\" \"bdefa\"\n\n/--\ninfo: 0\n-/\n#guard_msgs\
  \ in\n#eval min_cost_to_transform \"abc\" \"abc\"\n\n/--\ninfo: 3\n-/\n#guard_msgs\
  \ in\n#eval min_cost_to_transform \"abc\" \"def\"\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
