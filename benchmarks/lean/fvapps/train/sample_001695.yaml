"vc-description": "An integer partition of n is a weakly decreasing list of positive\
  \ integers which sum to n.\n\nFor example, there are 7 integer partitions of 5:\n\
  \n[5], [4,1], [3,2], [3,1,1], [2,2,1], [2,1,1,1], [1,1,1,1,1].\n\nWrite a function\
  \ named partitions which returns the number of integer partitions of n.  The function\
  \ should be able to find the number of integer partitions of n for n as least as\
  \ large as 100."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def partitions (n : Nat) : Nat :=\n  sorry\n"
"vc-theorems": "theorem partitions_positive (n : Nat) (h : n > 0) :\n  partitions\
  \ n ≥ 1 :=\nsorry\n\n\ntheorem partitions_known_values :\n  (partitions 1 = 1) ∧\n\
  \  (partitions 2 = 2) ∧ \n  (partitions 3 = 3) ∧\n  (partitions 4 = 5) ∧\n  (partitions\
  \ 5 = 7) ∧\n  (partitions 6 = 11) ∧\n  (partitions 7 = 15) ∧\n  (partitions 8 =\
  \ 22) :=\nsorry\n\n\ntheorem partitions_strictly_increasing {n₁ n₂ : Nat} (h₁ :\
  \ n₁ > 0) (h₂ : n₂ > n₁) :\n  partitions n₂ > partitions n₁ :=\nsorry\n\n/--\ninfo:\
  \ 7\n-/\n#guard_msgs in\n#eval partitions 5\n\n/--\ninfo: 5\n-/\n#guard_msgs in\n\
  #eval partitions 4\n\n/--\ninfo: 3\n-/\n#guard_msgs in\n#eval partitions 3\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
