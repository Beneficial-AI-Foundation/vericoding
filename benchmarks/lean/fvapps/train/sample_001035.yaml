"vc-description": "Ada's classroom contains $N \\cdot M$ tables distributed in a grid\
  \ with $N$ rows and $M$ columns. Each table is occupied by exactly one student.\n\
  Before starting the class, the teacher decided to shuffle the students a bit. After\
  \ the shuffling, each table should be occupied by exactly one student again. In\
  \ addition, each student should occupy a table that is adjacent to that student's\
  \ original table, i.e. immediately to the left, right, top or bottom of that table.\n\
  Is it possible for the students to shuffle while satisfying all conditions of the\
  \ teacher?\n\n-----Input-----\n- The first line of the input contains a single integer\
  \ $T$ denoting the number of test cases. The description of $T$ test cases follows.\n\
  - The first and only line of each test case contains two space-separated integers\
  \ $N$ and $M$.\n\n-----Output-----\nFor each test case, print a single line containing\
  \ the string \"YES\" if it is possible to satisfy the conditions of the teacher\
  \ or \"NO\" otherwise (without quotes).\n\n-----Constraints-----\n- $1 \\le T \\\
  le 5,000$\n- $2 \\le N, M \\le 50$\n\n-----Example Input-----\n2\n3 3\n4 4\n\n-----Example\
  \ Output-----\nNO\nYES\n\n-----Explanation-----\nExample case 2: The arrows in the\
  \ following image depict how the students moved."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def solve_classroom_shuffle (n m : Nat) : String := sorry\n\ntheorem\
  \ solve_classroom_shuffle_is_valid (n m : Nat) \n  (h1 : n ≥ 1) (h2 : m ≥ 1) : \n\
  \  solve_classroom_shuffle n m = \"YES\" ∨ solve_classroom_shuffle n m = \"NO\"\
  \ :=\nsorry\n"
"vc-theorems": "theorem solve_classroom_shuffle_even_dimension \n  (n : Nat) (h :\
  \ n ≥ 1) :\n  solve_classroom_shuffle n 2 = \"YES\" ∧ solve_classroom_shuffle 2\
  \ n = \"YES\" := \nsorry\n\n\ntheorem solve_classroom_shuffle_odd_dimensions \n\
  \  (n m : Nat) (h1 : n ≥ 1) (h2 : m ≥ 1) :\n  (n % 2 = 1 ∧ m % 2 = 1 → solve_classroom_shuffle\
  \ n m = \"NO\") ∧\n  (n % 2 = 0 ∨ m % 2 = 0 → solve_classroom_shuffle n m = \"YES\"\
  ) :=\nsorry\n\n\ntheorem solve_classroom_shuffle_small_grids :\n  solve_classroom_shuffle\
  \ 1 1 = \"NO\" ∧ \n  solve_classroom_shuffle 1 2 = \"YES\" ∧\n  solve_classroom_shuffle\
  \ 2 1 = \"YES\" :=\nsorry\n\n/--\ninfo: 'NO'\n-/\n#guard_msgs in\n#eval solve_classroom_shuffle\
  \ 3 3\n\n/--\ninfo: 'YES'\n-/\n#guard_msgs in\n#eval solve_classroom_shuffle 4 4\n\
  \n/--\ninfo: 'YES'\n-/\n#guard_msgs in\n#eval solve_classroom_shuffle 5 4\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
