"vc-description": "You are given a sequence of integers $A_1, A_2, \\dots, A_N$.\n\
  You should choose an arbitrary (possibly empty) subsequence of $A$ and multiply\
  \ each element of this subsequence by $-1$. The resulting sequence should satisfy\
  \ the following condition: the sum of elements of any contiguous subsequence with\
  \ length greater than 1 is strictly positive.\nYou should minimise the sum of elements\
  \ of the resulting sequence. Find one such sequence with the minimum possible sum.\n\
  \n-----Input-----\n- The first line of the input contains a single integer $T$ denoting\
  \ the number of test cases. The description of $T$ test cases follows.\n- The first\
  \ line of each test case contains a single integer $N$.\n- The second line contains\
  \ $N$ space-separated integers $A_1, A_2, \\dots, A_N$.\n\n-----Output-----\nFor\
  \ each test case, print a single line containing $N$ space-separated integers $B_1,\
  \ B_2, \\dots, B_N$. For each valid $i$, $B_i$ must be equal to either $A_i$ (the\
  \ sign of this element did not change) or $-A_i$ (the sign of this element changed).\n\
  If there is more than one answer, you may output any one.\n\n-----Constraints-----\n\
  - $1 \\le T \\le 10^5$\n- $2 \\le N \\le 10^5$\n- $1 \\le A_i \\le 10^9$ for each\
  \ valid $i$\n- the sum of $N$ for all test cases does not exceed $5 \\cdot 10^5$\n\
  \n-----Subtasks-----\nSubtask #1 (20 points):\n- $1 \\le T \\le 200$\n- $2 \\le\
  \ N \\le 10$\nSubtask #2 (30 points):\n- $1 \\le T \\le 1,000$\n- $N \\le 2,000$\n\
  Subtask #3 (50 points): original constraints\n\n-----Example Input-----\n4\n4\n\
  4 3 1 2\n6\n1 2 2 1 3 1\n5\n10 1 2 10 5\n4\n1 2 1 2\n\n-----Example Output-----\n\
  4 3 -1 2\n-1 2 2 -1 3 -1\n10 -1 2 10 -5\n1 2 -1 2\n\n-----Explanation-----\nExample\
  \ case 1: If we change only the sign of $A_3$, we get a sequence $\\{4, 3, -1, 2\\\
  }$ with sum $8$. This sequence is valid because the sums of all its contiguous subsequences\
  \ with length $> 1$ are positive. (For example, the sum of elements of the contiguous\
  \ subsequence $\\{A_3, A_4\\}$ equals $-1 + 2 = 1 > 0$.)\nThere are only two valid\
  \ sequences $\\{4, 3, -1, 2\\}$ and $\\{4, 3, 1, 2\\}$ with sums $8$ and $10$ respectively,\
  \ so this sequence has the smallest possible sum.\nFor instance, the sequence $\\\
  {4, -3, 1, 2\\}$ isn't valid, because the sum of $\\{A_2, A_3, A_4\\}$ equals $-3\
  \ + 1 + 2 = 0 \\le 0$."
"vc-preamble": "import Imports.AllImports\n\ndef abs (n : Int) : Int := \n  if n <\
  \ 0 then -n else n\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def solve_sequence (n : Nat) (arr : List Int) : List Int :=\n \
  \ sorry\n"
"vc-theorems": "theorem solve_sequence_output_sign_flips {n : Nat} {arr : List Int}\
  \ :\n  let result := solve_sequence n arr\n  ∀ i, i < result.length → abs (result.get\
  \ ⟨i, sorry⟩) = abs (arr.get ⟨i, sorry⟩) :=\nsorry\n\n\ntheorem solve_sequence_maintains_length\
  \ {n : Nat} {arr : List Int} :\n  (solve_sequence n arr).length = arr.length :=\n\
  sorry\n\n\ntheorem solve_sequence_input_preserved {n : Nat} {arr : List Int} :\n\
  \  solve_sequence n arr = solve_sequence n arr ∧ arr = arr :=\nsorry\n\n\ntheorem\
  \ solve_sequence_case1 :\n  solve_sequence 4 [4, 3, 1, 2] = [4, 3, -1, 2] :=\nsorry\n\
  \n\ntheorem solve_sequence_case2 :\n  solve_sequence 6 [1, 2, 2, 1, 3, 1] = [-1,\
  \ 2, 2, -1, 3, -1] :=\nsorry\n\n\ntheorem solve_sequence_case3 :\n  solve_sequence\
  \ 4 [1, 2, 1, 2] = [1, 2, -1, 2] :=\nsorry\n\n/--\ninfo: [4, 3, -1, 2]\n-/\n#guard_msgs\
  \ in\n#eval solve_sequence 4 [4, 3, 1, 2]\n\n/--\ninfo: [-1, 2, 2, -1, 3, -1]\n\
  -/\n#guard_msgs in\n#eval solve_sequence 6 [1, 2, 2, 1, 3, 1]\n\n/--\ninfo: [1,\
  \ 2, -1, 2]\n-/\n#guard_msgs in\n#eval solve_sequence 4 [1, 2, 1, 2]\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
