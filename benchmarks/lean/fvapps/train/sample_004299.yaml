"vc-description": "Create a function that takes an input String and returns a String,\
  \ where all the uppercase words of the input String are in front and all the lowercase\
  \ words at the end.\nThe order of the uppercase and lowercase words should be the\
  \ order in which they occur.\n\nIf a word starts with a number or special character,\
  \ skip the word and leave it out of the result. \n\nInput String will not be empty.\n\
  \nFor an input String: \"hey You, Sort me Already!\" \nthe function should return:\
  \ \"You, Sort Already! hey me\""
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def capitals_first (s : String) : String := sorry\n\ntheorem capitals_first_output_format\
  \ (s : String) \n  (h : s.length > 0) :\n  let words := (capitals_first s).split\
  \ (· = ' ')\n  ∀ i < words.length - 1,\n    ∀ w ∈ words[i]?,\n      ∀ c ∈ w.get?\
  \ 0,\n        c.isLower →\n        ∀ j, i < j → j < words.length →\n          ∀\
  \ w' ∈ words[j]?,\n            ∀ c' ∈ w'.get? 0,\n              c'.isLower := sorry\n"
"vc-theorems": "theorem capitals_first_basic_patterns {s : String}\n  (h₁ : ∃ w ∈\
  \ (capitals_first s).split (· = ' '), ∃ c ∈ w.get? 0, c.isUpper) \n  (h₂ : ∃ w ∈\
  \ (capitals_first s).split (· = ' '), ∃ c ∈ w.get? 0, c.isLower) :\n  ∃ i j,\n \
  \   i < j ∧ \n    j < ((capitals_first s).split (· = ' ')).length ∧\n    (∀ w ∈\
  \ ((capitals_first s).split (· = ' '))[i]?, ∀ c ∈ w.get? 0, c.isUpper) ∧\n    (∀\
  \ w ∈ ((capitals_first s).split (· = ' '))[j]?, ∀ c ∈ w.get? 0, c.isLower) := sorry\n\
  \n/--\ninfo: 'You, Sort Already! hey me'\n-/\n#guard_msgs in\n#eval capitals_first\
  \ \"hey You, Sort me Already!\"\n\n/--\ninfo: 'Does That Make sense to you?'\n-/\n\
  #guard_msgs in\n#eval capitals_first \"sense Does to That Make you?\"\n\n/--\ninfo:\
  \ 'Life Sometimes gets pretty'\n-/\n#guard_msgs in\n#eval capitals_first \"Life\
  \ gets Sometimes pretty !Hard\"\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
