"vc-description": "Complete the function which returns the weekday according to the\
  \ input number:\n\n* `1` returns `\"Sunday\"`\n* `2` returns `\"Monday\"`\n* `3`\
  \ returns `\"Tuesday\"`\n* `4` returns `\"Wednesday\"`\n* `5` returns `\"Thursday\"\
  `\n* `6` returns `\"Friday\"`\n* `7` returns `\"Saturday\"`\n* Otherwise returns\
  \ `\"Wrong, please enter a number between 1 and 7\"`"
"vc-preamble": "import Imports.AllImports\n\ndef WEEKDAY : Nat → String := sorry\n\
  def ERROR : String := sorry"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def whatday (n : Int) : String := sorry\n\ntheorem whatday_spec\
  \ (n : Int) :\n  (1 ≤ n ∧ n ≤ 7 → ∃ (i : Nat), whatday n = WEEKDAY i) ∧\n  (¬(1\
  \ ≤ n ∧ n ≤ 7) → whatday n = ERROR) := sorry\n"
"vc-theorems": "theorem valid_weekday (n : Int) (h : 1 ≤ n ∧ n ≤ 7) :\n  ∃ (i : Nat),\
  \ whatday n = WEEKDAY i := sorry\n\n\ntheorem invalid_weekday (n : Int) (h : ¬(1\
  \ ≤ n ∧ n ≤ 7)) :\n  whatday n = ERROR := sorry\n\n/--\ninfo: 'Sunday'\n-/\n#guard_msgs\
  \ in\n#eval whatday 1\n\n/--\ninfo: 'Saturday'\n-/\n#guard_msgs in\n#eval whatday\
  \ 7\n\n/--\ninfo: ERROR\n-/\n#guard_msgs in\n#eval whatday 0\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
