"vc-description": "In this kata you will have to change every letter in a given string\
  \ to the next letter in the alphabet. You will write a function `nextLetter` to\
  \ do this. The function will take a single parameter `s` (string).\n\nExamples:\n\
  \n```\n\"Hello\" --> \"Ifmmp\"\n\n\"What is your name?\" --> \"Xibu jt zpvs obnf?\"\
  \n\n\"zoo\" --> \"app\"\n\n\"zzZAaa\" --> \"aaABbb\"\n```\n\nNote: spaces and special\
  \ characters should remain the same. Capital letters should transfer in the same\
  \ way but remain capitilized."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def nextLetter (s : String) : String := sorry\n\n-- Length preservation"
"vc-theorems": "theorem nextLetter_length_preserved (s : String) :\n  (nextLetter\
  \ s).length = s.length := sorry\n\n-- Non-alphabetic character preservation \n\n\
  theorem nextLetter_preserves_non_alpha (s : String) (pos : String.Pos) (h : pos.1\
  \ < s.length) :\n  ¬(s.get! pos).isAlpha →\n  (nextLetter s).get! pos = s.get! pos\
  \ := sorry\n\n-- Case preservation\n\ntheorem nextLetter_preserves_case (s : String)\
  \ (pos : String.Pos) (h : pos.1 < s.length) :\n  (s.get! pos).isAlpha →\n  ((s.get!\
  \ pos).isUpper = ((nextLetter s).get! pos).isUpper) ∧\n  ((s.get! pos).isLower =\
  \ ((nextLetter s).get! pos).isLower) := sorry\n\n-- Shifts by one except for z/Z\n\
  \ntheorem nextLetter_shifts_by_one (s : String) (pos : String.Pos) (h : pos.1 <\
  \ s.length) :\n  (s.get! pos).isAlpha →\n  s.get! pos ≠ 'z' →\n  s.get! pos ≠ 'Z'\
  \ →\n  ((nextLetter s).get! pos).toNat = (s.get! pos).toNat + 1 := sorry\n\n-- z/Z\
  \ wrapping\n\ntheorem nextLetter_wraps_z (s : String) (pos : String.Pos) (h : pos.1\
  \ < s.length) :\n  s.get! pos = 'z' →\n  (nextLetter s).get! pos = 'a' := sorry\n\
  \n\ntheorem nextLetter_wraps_Z (s : String) (pos : String.Pos) (h : pos.1 < s.length)\
  \ :\n  s.get! pos = 'Z' →\n  (nextLetter s).get! pos = 'A' := sorry\n\n/--\ninfo:\
  \ 'Ifmmp'\n-/\n#guard_msgs in\n#eval next_letter \"Hello\"\n\n/--\ninfo: 'Xibu jt\
  \ zpvs obnf?'\n-/\n#guard_msgs in\n#eval next_letter \"What is your name?\"\n\n\
  /--\ninfo: 'aPp'\n-/\n#guard_msgs in\n#eval next_letter \"zOo\"\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
