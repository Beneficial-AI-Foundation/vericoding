"vc-description": "Mr. Scrooge has a sum of money 'P' that he wants to invest. Before\
  \ he does, he wants to know how many years 'Y' this sum 'P' has to be kept in the\
  \ bank in order for it to amount to a desired sum of money 'D'.\n\nThe sum is kept\
  \ for 'Y' years in the bank where interest 'I' is paid yearly. After paying taxes\
  \ 'T' for the year the new sum is re-invested.\n\nNote to Tax: not the invested\
  \ principal is taxed, but only the year's accrued interest\n\nExample:\n\n     \
  \ Let P be the Principal = 1000.00      \n      Let I be the Interest Rate = 0.05\
  \      \n      Let T be the Tax Rate = 0.18      \n      Let D be the Desired Sum\
  \ = 1100.00\n\n\n    After 1st Year -->\n      P = 1041.00\n    After 2nd Year -->\n\
  \      P = 1083.86\n    After 3rd Year -->\n      P = 1128.30\n  \nThus Mr. Scrooge\
  \ has to wait for 3 years for the initial principal to amount to the desired sum.\n\
  \ \nYour task is to complete the method provided and return the number of years\
  \ 'Y' as a whole in order for Mr. Scrooge to get the desired sum.  \n\nAssumption:\
  \ Assume that Desired Principal 'D' is always greater than the initial principal.\
  \ However it is best to take into consideration that if Desired Principal 'D' is\
  \ equal to Principal 'P' this should return 0 Years."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def calculate_years (principal interest tax desired : Float) :\
  \ Nat :=\n  sorry\n"
"vc-theorems": "theorem calculate_years_non_negative (principal interest tax desired\
  \ : Float)\n  (h1 : principal - desired > 1 ∨ desired - principal > 1)\n  (h2 :\
  \ interest ≥ 0.01) (h3 : interest ≤ 0.2) \n  (h4 : tax ≥ 0) (h5 : tax ≤ 0.5)\n \
  \ (h6 : principal ≥ 100) (h7 : principal ≤ 10000)\n  (h8 : desired ≥ 100) (h9 :\
  \ desired ≤ 10000) :\n  calculate_years principal interest tax desired ≥ 0 := \n\
  \  sorry\n\n\ntheorem years_zero_if_principal_geq_desired (principal interest tax\
  \ desired : Float)\n  (h1 : principal - desired > 1 ∨ desired - principal > 1)\n\
  \  (h2 : interest ≥ 0.01) (h3 : interest ≤ 0.2)\n  (h4 : tax ≥ 0) (h5 : tax ≤ 0.5)\n\
  \  (h6 : principal ≥ 100) (h7 : principal ≤ 10000)\n  (h8 : desired ≥ 100) (h9 :\
  \ desired ≤ 10000)\n  (h10 : principal ≥ desired) :\n  calculate_years principal\
  \ interest tax desired = 0 :=\n  sorry\n\n\ntheorem years_positive_if_desired_gt_principal\
  \ (principal interest tax desired : Float)\n  (h1 : principal - desired > 1 ∨ desired\
  \ - principal > 1)\n  (h2 : interest ≥ 0.01) (h3 : interest ≤ 0.2)\n  (h4 : tax\
  \ ≥ 0) (h5 : tax ≤ 0.5) \n  (h6 : principal ≥ 100) (h7 : principal ≤ 10000)\n  (h8\
  \ : desired ≥ 100) (h9 : desired ≤ 10000)\n  (h10 : desired > principal) :\n  calculate_years\
  \ principal interest tax desired ≥ 1 :=\n  sorry\n\n\ntheorem same_amount_returns_zero\
  \ (principal interest tax : Float)\n  (h1 : interest ≥ 0.01) (h2 : interest ≤ 0.2)\n\
  \  (h3 : tax ≥ 0) (h4 : tax ≤ 0.5)\n  (h5 : principal ≥ 100) (h6 : principal ≤ 10000)\
  \ :\n  calculate_years principal interest tax principal = 0 :=\n  sorry\n\n/--\n\
  info: 3\n-/\n#guard_msgs in\n#eval calculate_years 1000 0.05 0.18 1100\n\n/--\n\
  info: 14\n-/\n#guard_msgs in\n#eval calculate_years 1000 0.01625 0.18 1200\n\n/--\n\
  info: 0\n-/\n#guard_msgs in\n#eval calculate_years 1000 0.05 0.18 1000\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded"
