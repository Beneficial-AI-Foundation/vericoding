"vc-description": "Find the length of the longest contiguous segment in an array,\
  \ in which if a given element $K$ is inserted, $K$ becomes the second largest element\
  \ of that subarray.\n\n-----Input:-----\n- The first line will contain $T$, number\
  \ of test cases. Then the test cases follow. \n- The first line of each test case\
  \ contains two integers $N$ and $K$.\n- The next line contains N space-separated\
  \ integers Ai denoting the elements of the array.\n\n-----Output:-----\nPrint a\
  \ single line corresponding to each test case â€” the length of the largest segment.\n\
  \n-----Constraints-----\n- $1 \\leq T \\leq 10$\n- $1 \\leq N \\leq 10^6$\n- $1\
  \ \\leq Ai, K \\leq 10^9$\n- Sum of N across all test cases doesn't exceed $10^6$\n\
  \n-----Sample Input:-----\n2\n5 3\n2 4 2 4 2\n8 5\n9 3 5 7 8 11 17 2\n\n-----Sample\
  \ Output:-----\n5\n3\n\n-----EXPLANATION:-----\nIf 3 is inserted at anywhere in\
  \ the array, it is the second largest element. Hence the maximum length is 5.\n\
  If 5 is inserted anywhere between 1st and 4th element, it is the second largest\
  \ element. The length of such subarray is 3."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def solve_longest_segment (n : Nat) (k : Nat) (nums : List Nat)\
  \ : Nat := sorry \n\n-- Basic properties from known good test cases"
"vc-theorems": "theorem solve_basic_case_1 :\n  solve_longest_segment 5 3 [2, 4, 2,\
  \ 4, 2] = 5 := sorry\n\n\ntheorem solve_basic_case_2 : \n  solve_longest_segment\
  \ 8 5 [9, 3, 5, 7, 8, 11, 17, 2] = 3 := sorry\n\n\ntheorem solve_repeated_number\
  \ :\n  solve_longest_segment 4 3 [2, 4, 4, 2] = 4 := sorry"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded"
