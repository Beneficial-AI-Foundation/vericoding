"vc-description": "### Background\nOne way to order a nested (reddit-style) commenting\
  \ system is by giving each comment a rank. \n\nGeneric comments on a thread start\
  \ with rank 1 and increment, so the second comment on a thread would have rank 2.\
  \ A reply to comment 1 will be ranked 1.1, and a reply to comment 1.1 will be ranked\
  \ 1.1.1 . The second comment to reply to comment 1 would be ranked 1.2 .\n\nNote\
  \ that since 1.1.1 is a valid rank, the ranks given are of type string.   \n\n###\
  \ Task: \nGiven a list of comment ranks (strings), order them as a comment thread\
  \ would appear \n\n### Assumptions:  \n* there will always be a rank 1 in the given\
  \ input\n* ranks are of type string\n* rank numbers are incremented, and not skippped\
  \ (1.1 could be followed by 1.2, not 1.3)\n\n### Example order:\n```\n[\n  '1',\n\
  \  '1.1',\n  '1.2',\n  '1.2.1',\n  '2',\n  '3',\n  '3.1',\n  '3.1.1',\n  '3.2'\n\
  ]\n```"
"vc-preamble": "import Imports.AllImports\n\ndef sort_ranks (ranks: List String) :\
  \ List String := sorry\n\ndef is_valid_version (s: String) : Bool := sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def loose_version_le (v1 v2: String) : Bool := sorry\n\ntheorem\
  \ sort_ranks_maintains_elements (ranks: List String) \n  (h: ∀ x ∈ ranks, is_valid_version\
  \ x) :\n  let sorted := sort_ranks ranks\n  ∀ x, (x ∈ ranks ↔ x ∈ sorted) ∧\n  sorted.length\
  \ = ranks.length := sorry\n"
"vc-theorems": "theorem sort_ranks_ordering (ranks: List String)\n  (h1: ranks.length\
  \ ≥ 2)\n  (h2: ∀ x ∈ ranks, is_valid_version x) :\n  let sorted := sort_ranks ranks\n\
  \  ∀ (i: Nat) (h: i + 1 < sorted.length),\n    loose_version_le (sorted[i]'(Nat.lt_of_lt_of_le\
  \ (Nat.lt_succ_self i) (Nat.le_of_lt h)))\n                    (sorted[i+1]'h) :=\
  \ sorry\n\n\ntheorem sort_ranks_idempotent (ranks: List String)\n  (h: ∀ x ∈ ranks,\
  \ is_valid_version x) :\n  sort_ranks (sort_ranks ranks) = sort_ranks ranks := sorry\n\
  \n/--\ninfo: expected1\n-/\n#guard_msgs in\n#eval sort_ranks [\"2\", \"1\", \"1.1\"\
  ]\n\n/--\ninfo: expected2\n-/\n#guard_msgs in\n#eval sort_ranks [\"3.1\", \"1\"\
  , \"1.1\", \"2\", \"3\", \"1.2\", \"3.2\", \"1.2.1\", \"3.1.1\"]\n\n/--\ninfo: expected3\n\
  -/\n#guard_msgs in\n#eval sort_ranks [\"3\", \"2\", \"1\"]\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
