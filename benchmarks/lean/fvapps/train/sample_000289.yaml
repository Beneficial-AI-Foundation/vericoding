"vc-description": "Suppose an array sorted in ascending order is rotated at some pivot\
  \ unknown to you beforehand.\n\n(i.e.,  [0,1,2,4,5,6,7] might become  [4,5,6,7,0,1,2]).\n\
  \nFind the minimum element.\n\nThe array may contain duplicates.\n\nExample 1:\n\
  \n\nInput: [1,3,5]\nOutput: 1\n\nExample 2:\n\n\nInput: [2,2,2,0,1]\nOutput: 0\n\
  \nNote:\n\n\n       This is a follow up problem to Find Minimum in Rotated Sorted\
  \ Array.\n       Would allow duplicates affect the run-time complexity? How and\
  \ why?"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def find_min (nums: List Int) : Int :=\n  sorry\n\n\n"
"vc-theorems": "theorem find_min_singleton :\n  find_min [1] = 1 :=\n  sorry\n\n\n\
  theorem find_min_all_equal :\n  find_min [1, 1, 1] = 1 :=\n  sorry\n\n\ntheorem\
  \ find_min_rotated_with_zero :\n  find_min [2, 2, 2, 0, 2] = 0 :=\n  sorry\n\n/--\n\
  info: 1\n-/\n#guard_msgs in\n#eval find_min [1, 3, 5]\n\n/--\ninfo: 0\n-/\n#guard_msgs\
  \ in\n#eval find_min [2, 2, 2, 0, 1]\n\n/--\ninfo: 0\n-/\n#guard_msgs in\n#eval\
  \ find_min [4, 5, 6, 7, 0, 1, 2]\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
