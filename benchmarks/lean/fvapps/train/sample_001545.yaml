"vc-description": "There are some websites that are accessible through several different\
  \ addresses. For example, for a long time Codeforces was accessible with two hostnames\
  \ codeforces.com and codeforces.ru.\n\nYou are given a list of page addresses being\
  \ queried. For simplicity we consider all addresses to have the form http://<hostname>[/<path>],\
  \ where:\n\n  <hostname> — server name (consists of words and maybe some dots separating\
  \ them),  /<path> — optional part, where <path> consists of words separated by slashes.\
  \ \n\nWe consider two <hostname> to correspond to one website if for each query\
  \ to the first <hostname> there will be exactly the same query to the second one\
  \ and vice versa — for each query to the second <hostname> there will be the same\
  \ query to the first one. Take a look at the samples for further clarifications.\n\
  \nYour goal is to determine the groups of server names that correspond to one website.\
  \ Ignore groups consisting of the only server name.\n\nPlease note, that according\
  \ to the above definition queries http://<hostname> and http://<hostname>/ are different.\n\
  \n\n-----Input-----\n\nThe first line of the input contains a single integer n (1\
  \ ≤ n ≤ 100 000) — the number of page queries. Then follow n lines each containing\
  \ exactly one address. Each address is of the form http://<hostname>[/<path>], where:\n\
  \n  <hostname> consists of lowercase English letters and dots, there are no two\
  \ consecutive dots, <hostname> doesn't start or finish with a dot. The length of\
  \ <hostname> is positive and doesn't exceed 20.  <path> consists of lowercase English\
  \ letters, dots and slashes. There are no two consecutive slashes, <path> doesn't\
  \ start with a slash and its length doesn't exceed 20. \n\nAddresses are not guaranteed\
  \ to be distinct.\n\n\n-----Output-----\n\nFirst print k — the number of groups\
  \ of server names that correspond to one website. You should count only groups of\
  \ size greater than one.\n\nNext k lines should contain the description of groups,\
  \ one group per line. For each group print all server names separated by a single\
  \ space. You are allowed to print both groups and names inside any group in arbitrary\
  \ order.\n\n\n-----Examples-----\nInput\n10\nhttp://abacaba.ru/test\nhttp://abacaba.ru/\n\
  http://abacaba.com\nhttp://abacaba.com/test\nhttp://abacaba.de/\nhttp://abacaba.ru/test\n\
  http://abacaba.de/test\nhttp://abacaba.com/\nhttp://abacaba.com/t\nhttp://abacaba.com/test\n\
  \nOutput\n1\nhttp://abacaba.de http://abacaba.ru \n\nInput\n14\nhttp://c\nhttp://ccc.bbbb/aba..b\n\
  http://cba.com\nhttp://a.c/aba..b/a\nhttp://abc/\nhttp://a.c/\nhttp://ccc.bbbb\n\
  http://ab.ac.bc.aa/\nhttp://a.a.a/\nhttp://ccc.bbbb/\nhttp://cba.com/\nhttp://cba.com/aba..b\n\
  http://a.a.a/aba..b/a\nhttp://abc/aba..b/a\n\nOutput\n2\nhttp://cba.com http://ccc.bbbb\
  \ \nhttp://a.a.a http://a.c http://abc"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def find_website_groups (urls : List String) : List (List String)\
  \ := sorry\n\ntheorem groups_return_type (urls : List String) : \n  let result :=\
  \ find_website_groups urls\n  result.all (fun group => group.all (fun _ => true))\
  \ := sorry\n"
"vc-theorems": "theorem groups_min_size (urls : List String) :\n  let result := find_website_groups\
  \ urls\n  result.all (fun group => group.length > 1) := sorry\n\n\ntheorem hostnames_appear_once\
  \ (urls : List String) :\n  let result := find_website_groups urls\n  let all_hostnames\
  \ := result.bind id\n  all_hostnames.length = (all_hostnames.eraseDups).length :=\
  \ sorry\n\n\ntheorem empty_paths_normalized (urls : List String) (h : String) :\n\
  \  let test_urls := urls ++ [s!\"http://{h}\", s!\"http://{h}/\"]\n  let result\
  \ := find_website_groups test_urls\n  result.all (fun group => \n    if group.contains\
  \ h then group.count h = 1 \n    else true) := sorry\n\n/--\ninfo: 1\n-/\n#guard_msgs\
  \ in\n#eval len find_website_groups(test1)\n\n/--\ninfo: {'abacaba.ru', 'abacaba.de'}\n\
  -/\n#guard_msgs in\n#eval set result1[0]\n\n/--\ninfo: 1\n-/\n#guard_msgs in\n#eval\
  \ len find_website_groups(test2)\n\n/--\ninfo: {'cba.com', 'ccc.bbbb'}\n-/\n#guard_msgs\
  \ in\n#eval set result2[0]\n\n/--\ninfo: 1\n-/\n#guard_msgs in\n#eval len find_website_groups(test3)\n\
  \n/--\ninfo: {'abacaba.com', 'abacaba.de'}\n-/\n#guard_msgs in\n#eval set result3[0]\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
