"vc-description": "Given an `x` and `y` find the smallest and greatest numbers **above**\
  \ and **below** a given `n` that are divisible by both `x` and `y`.\n\n### Examples\n\
  ```python\ngreatest(2, 3, 20) => 18   # 18 is the greatest number under 20 that\
  \ is divisible by both 2 and 3\nsmallest(2, 3, 20) => 24   # 24 is the smallest\
  \ number above 20 that is divisible by both 2 and 3\n\ngreatest(5, 15, 100) => 90\n\
  smallest(5, 15, 100) => 105\n\ngreatest(123, 456, 789) => 0   # there are no numbers\
  \ under 789 that are divisible by both 123 and 456\nsmallest(123, 456, 789) => 18696\n\
  ```\n\n**Notes:** \n\n1. you should never return `n` even if it is divisible by\
  \ `x` and `y` always the number above or below it\n2. `greatest` should return 0\
  \ if there are no numbers under `n` that are divisible by both `x` and `y`\n3. and\
  \ all arguments will be valid (integers greater than 0).\n\n### Note for Haskell\
  \ users\n\n>Please take a look at [bkaes comment](http://www.codewars.com/kata/when-greatest-is-less-than-smallest/discuss#56418f0fbf1f44834d000050)\
  \ and give us your opinion"
"vc-preamble": "import Imports.AllImports\n\ndef greatest (x y n : Nat) : Nat :=\n\
  \  sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def smallest (x y n : Nat) : Nat :=\n  sorry\n"
"vc-theorems": "theorem divisible_by_inputs {x y n : Nat} (hx : x > 0) (hy : y > 0)\
  \ :\n  let g := greatest x y (max x y * 2)\n  let s := smallest x y (max x y * 2)\n\
  \  g % x = 0 ∧ g % y = 0 ∧ s % x = 0 ∧ s % y = 0 :=\n  sorry\n\n\ntheorem bounds\
  \ {x y n : Nat} (hx : x > 0) (hy : y > 0) (hn : n > 0) :\n  let g := greatest x\
  \ y n\n  let s := smallest x y n  \n  g < n ∧ s > n ∧ s > g :=\n  sorry\n\n/--\n\
  info: 18\n-/\n#guard_msgs in\n#eval greatest 2 3 20\n\n/--\ninfo: 24\n-/\n#guard_msgs\
  \ in\n#eval smallest 2 3 20\n\n/--\ninfo: 90\n-/\n#guard_msgs in\n#eval greatest\
  \ 5 15 100\n\n/--\ninfo: 105\n-/\n#guard_msgs in\n#eval smallest 5 15 100\n\n/--\n\
  info: 0\n-/\n#guard_msgs in\n#eval greatest 123 456 789\n\n/--\ninfo: 18696\n-/\n\
  #guard_msgs in\n#eval smallest 123 456 789\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded_and_plausible"
