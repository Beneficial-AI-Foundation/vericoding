"vc-description": "You are given an array of strings words and a string chars.\nA\
  \ string is good if it can be formed by characters from chars (each character can\
  \ only be used once).\nReturn the sum of lengths of all good strings in words.\n\
   \nExample 1:\nInput: words = [\"cat\",\"bt\",\"hat\",\"tree\"], chars = \"atach\"\
  \nOutput: 6\nExplanation: \nThe strings that can be formed are \"cat\" and \"hat\"\
  \ so the answer is 3 + 3 = 6.\n\nExample 2:\nInput: words = [\"hello\",\"world\"\
  ,\"leetcode\"], chars = \"welldonehoneyr\"\nOutput: 10\nExplanation: \nThe strings\
  \ that can be formed are \"hello\" and \"world\" so the answer is 5 + 5 = 10.\n\n\
   \nNote:\n\n1 <= words.length <= 1000\n1 <= words[i].length, chars.length <= 100\n\
  All strings contain lowercase English letters only."
"vc-preamble": "import Imports.AllImports\n\ndef String.count (s : String) (c : Char)\
  \ : Nat := sorry\n\ndef countCharacters : List String → String → Nat\n  | words,\
  \ chars => sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def canForm (w : String) (chars : String) : Bool :=\n  let check\
  \ (c : Char) := w.count c ≤ chars.count c\n  w.data.all check\n"
"vc-theorems": "theorem count_characters_nonnegative (words : List String) (chars\
  \ : String) :\n  countCharacters words chars ≥ 0 := by sorry\n\n\ntheorem count_characters_bounded_by_total_length\
  \ (words : List String) (chars : String) :\n  countCharacters words chars ≤ (words.map\
  \ String.length).foldl (· + ·) 0 := by sorry\n  \n\ntheorem count_characters_empty_chars\
  \ (words : List String) :\n  countCharacters words \"\" = 0 := by sorry\n\n\ntheorem\
  \ count_characters_monotone (words : List String) (chars s : String) :\n  countCharacters\
  \ words (chars ++ s) ≥ countCharacters words chars := by sorry\n\n\ntheorem count_characters_substring_property\
  \ (words : List String) (chars : String) :\n  countCharacters words chars = \n \
  \   (List.map String.length \n      (List.filter (fun w => canForm w chars) words)).foldl\
  \ (· + ·) 0 := by sorry\n\n/--\ninfo: 6\n-/\n#guard_msgs in\n#eval countCharacters\
  \ [\"cat\", \"bt\", \"hat\", \"tree\"] \"atach\"\n\n/--\ninfo: 10\n-/\n#guard_msgs\
  \ in\n#eval countCharacters [\"hello\", \"world\", \"leetcode\"] \"welldonehoneyr\"\
  \n\n/--\ninfo: 8\n-/\n#guard_msgs in\n#eval countCharacters [\"good\", \"best\"\
  , \"word\"] \"bestword\"\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded"
