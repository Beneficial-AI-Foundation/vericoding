"vc-description": "NOTE: It is recommended you complete [Introduction to Esolangs](https://www.codewars.com/kata/esolang-interpreters-number-1-introduction-to-esolangs-and-my-first-interpreter-ministringfuck/)\
  \ or [MiniBitFlip](https://www.codewars.com/kata/esolang-minibitflip/) before solving\
  \ this one.\nTask:\nMake an interpreter for an esoteric language called Ticker.\
  \ Ticker is a descendant of [Tick](https://www.codewars.com/kata/esolang-tick).\
  \ Your language has the following commands:\n\n`>`: increment the selector by 1\n\
  \n`<`: decrement the selector by 1\n\n`*`: add the ascii value of selected cell\
  \ to the output tape\n\n`+`: increment selected cell data by 1. If 256, then it\
  \ is 0\n\n`-`: increment selected cell data by -1. If less than 0, then 255\n\n\
  `/`: set selected cell data to 0\n\n`!`: add new data cell to the end of the array\n\
  \nYou start with selector at `0` and one cell with a value of `0`. If selector goes\
  \ out of bounds, assume 0 for that cell but do not add it to the memory. If a +\
  \ or - is being made do not change the value of the assumed cell. It will always\
  \ stay 0 unless it is added to the memory\n\nIn other words:\n\n```\ndata: start\
  \ 0 end\nselector:   ^\ndata start 1 2 4 end\nselector:        ^\nAssume that cell\
  \ is zero.\n```\n\nExamples:\nConsider the following program:\n\n```python\n'++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/++++++++++++++++++++++++++++++++*/+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/+++++++++++++++++++++++++++++++++*/'\n\
  ```\n\nIt's output is this:\n\n```python\n'Hello World!'\n```\n\nThis is made just\
  \ by using 1 data cell.\n\nExample using multiple data cells:\n\n```python\nn\
  ```\n\nAnd it's output is still:\n\n```python\n'Hello World!'\n```\n\nA more efficient\
  \ example:\n\n```python\nn\
  ```\n\nWhich still returns the classic:\n\n```python\n'Hello World!'\n```\n\nOther\
  \ characters are ingnored and therefore can serve as comments.\n\nAfter you're done,\
  \ fell free to make translations and to discuss this kata."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def interpreter (s : String) : String := sorry\n\ntheorem interpreter_output_is_string\n\
  \  (commands : String)\n  (h : ∀ c ∈ commands.toList, c ∈ ['>','<','!','*','+','-','/'])\
  \ :\n  ∃ s : String, interpreter commands = s := sorry\n"
"vc-theorems": "theorem interpreter_chr_range\n  (commands : String)\n  (h : ∀ c ∈\
  \ commands.toList, c ∈ ['>','<','!','*','+','-','/']) :\n  ∀ c ∈ (interpreter commands).toList,\
  \ \n    0 ≤ c.toNat ∧ c.toNat < 256 := sorry\n\n\ntheorem increment_decrement_cancellation\n\
  \  (commands : String)\n  (h₁ : ∀ c ∈ commands.toList, c ∈ ['+','-'])\n  (h₂ : commands.toList.length\
  \ > 0)\n  (h₃ : (commands.toList.filter (fun x => x = '+')).length = \n        (commands.toList.filter\
  \ (fun x => x = '-')).length) :\n  interpreter commands = \"\" ∨ \n  ∀ c ∈ (interpreter\
  \ commands).toList, c.toNat = 0 := sorry\n\n\ntheorem memory_pointer_bounds\n  (commands\
  \ : String)\n  (h : ∀ c ∈ commands.toList, c ∈ ['>','<','!','*','+','-','/']) :\n\
  \  ∃ s : String, interpreter commands = s := sorry\n\n\ntheorem clear_cell\n  (commands\
  \ : String)\n  (h₁ : ∀ c ∈ commands.toList, c = '/')\n  (h₂ : commands.toList.length\
  \ > 0) :\n  interpreter (commands ++ \"*\") = \"\\u0000\" := sorry\n\n\ntheorem\
  \ new_cells_initialized_zero\n  (commands : String)\n  (h : ∀ c ∈ commands.toList,\
  \ c ∈ ['>','!']) :\n  interpreter (commands ++ \"*\") = \"\\u0000\" := sorry\n\n\
  /--\ninfo: 'Hello World!'\n-/\n#guard_msgs in\n#eval interpreter
  \n\n/--\ninfo: '\\x00'\n-/\n#guard_msgs in\n#eval interpreter \">>>*\"\n\n/--\n\
  info: 'Codewars'\n-/\n#guard_msgs in\n#eval interpreter
  \n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
