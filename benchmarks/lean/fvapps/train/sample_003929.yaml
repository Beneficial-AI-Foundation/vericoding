"vc-description": "In this Kata, you will be given a list of strings and your task\
  \ will be to find the strings that have the same characters and return the sum of\
  \ their positions as follows: \n\n```Haskell\nsolve([\"abc\",\"abbc\", \"ab\", \"\
  xyz\", \"xy\", \"zzyx\"]) = [1,8]\n-- we see that the elements at indices 0 and\
  \ 1 have the same characters, as do those at indices 3 and 5.\n-- we therefore return\
  \ [1,8] because [0+1,3+5] = [1,8]. This result is sorted. \n-- ignore those that\
  \ don't have at least one matching partner, such as \"ab\" and \"xy\".\n\nAnother\
  \ example...\nsolve([\"wkskkkkkk\",\"fokoo\",\"wkskk\",\"uizzzz\",\"fokooff\",\"\
  wkskkkk\",\"uizzzzzzz\"]),[5,7,9]);\n--The element at index 0 is similar to those\
  \ at indices 2 and 5; so 0 + 2 + 5 = 7.\n--The element at index 1 is similar to\
  \ that at index 4; so 1 + 4 = 5. \n--The element at index 3 is similar to that at\
  \ index 6; so 3 + 6 = 9.\n--The result must be sorted. We get [5,7,9].\n```\nMore\
  \ examples in the test cases. \n\nGood luck!"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def solve (xs : List String) : List Nat :=\n  sorry\n"
"vc-theorems": "theorem solve_empty : solve [] = [] :=\n  sorry\n\n\ntheorem solve_single\
  \ : solve [\"abc\"] = [] :=\n  sorry\n\n\ntheorem solve_pairs : solve [\"abc\",\
  \ \"cba\"] = [1] :=\n  sorry\n\n\ntheorem solve_basic : solve [\"abc\", \"abbc\"\
  , \"ab\", \"xyz\", \"xy\", \"zzyx\"] = [1, 8] :=\n  sorry\n\n\ntheorem solve_no_matches\
  \ : solve [\"a\", \"b\", \"c\"] = [] :=\n  sorry\n\n\ntheorem solve_multiple_matches\
  \ :\n  solve [\"wkskkkkkk\", \"fokoo\", \"wkskk\", \"uizzzz\", \"fokooff\", \"wkskkkk\"\
  , \"uizzzzzzz\"] = [5, 7, 9] :=\n  sorry"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded"
