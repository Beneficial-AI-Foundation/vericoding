"vc-description": "A robot on an infinite grid starts at point (0, 0) and faces north. \
  \ The robot can receive one of three possible types of commands:\n\n-2: turn left\
  \ 90 degrees\n-1: turn right 90 degrees\n1 <= x <= 9: move forward x units\n\nSome\
  \ of the grid squares are obstacles. \nThe i-th obstacle is at grid point (obstacles[i][0],\
  \ obstacles[i][1])\nIf the robot would try to move onto them, the robot stays on\
  \ the previous grid square instead (but still continues following the rest of the\
  \ route.)\nReturn the square of the maximum Euclidean distance that the robot will\
  \ be from the origin.\n \nExample 1:\nInput: commands = [4,-1,3], obstacles = []\n\
  Output: 25\nExplanation: robot will go to (3, 4)\n\n\nExample 2:\nInput: commands\
  \ = [4,-1,4,-2,4], obstacles = [[2,4]]\nOutput: 65\nExplanation: robot will be stuck\
  \ at (1, 4) before turning left and going to (1, 8)\n\n\n \nNote:\n\n0 <= commands.length\
  \ <= 10000\n0 <= obstacles.length <= 10000\n-30000 <= obstacle[i][0] <= 30000\n\
  -30000 <= obstacle[i][1] <= 30000\nThe answer is guaranteed to be less than 2 ^\
  \ 31."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def robotSim (commands : List Int) (obstacles : List (Int × Int))\
  \ : Int :=\n  sorry\n"
"vc-theorems": "theorem robotSim_result_nonnegative (commands : List Int) (obstacles\
  \ : List (Int × Int)) :\n  robotSim commands obstacles ≥ 0 := \n  sorry\n\n\ntheorem\
  \ robotSim_empty_commands (obstacles : List (Int × Int)) :\n  robotSim [] obstacles\
  \ = 0 :=\n  sorry\n\n\ntheorem robotSim_no_obstacles_consistent (commands : List\
  \ Int) :\n  robotSim commands [] = robotSim commands [] :=\n  sorry\n\n\ntheorem\
  \ robotSim_obstacles_reduce_distance (commands : List Int) (obstacles : List (Int\
  \ × Int)) :\n  robotSim commands obstacles ≤ robotSim commands [] :=\n  sorry\n\n\
  \ntheorem robotSim_turns_only_zero (commands : List Int) (h : ∀ x ∈ commands, x\
  \ = -1 ∨ x = -2) :\n  robotSim commands [] = 0 :=\n  sorry\n\n/--\ninfo: 25\n-/\n\
  #guard_msgs in\n#eval robotSim [4, -1, 3] []\n\n/--\ninfo: 65\n-/\n#guard_msgs in\n\
  #eval robotSim [4, -1, 4, -2, 4] [[2, 4]]\n\n/--\ninfo: 0\n-/\n#guard_msgs in\n\
  #eval robotSim [-2, -1] []\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
