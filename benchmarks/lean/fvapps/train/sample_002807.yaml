"vc-description": "*Inspired by the [Fold an Array](https://www.codewars.com/kata/fold-an-array)\
  \ kata. This one is sort of similar but a little different.*\n\n---\n\n## Task\n\
  You will receive an array as parameter that contains 1 or more integers and a number\
  \ `n`.\n\nHere is a little visualization of the process:\n\n* Step 1: Split the\
  \ array in two:\n```\n  [1, 2, 5, 7, 2, 3, 5, 7, 8]\n        /            \\\n[1,\
  \ 2, 5, 7]    [2, 3, 5, 7, 8]\n```\n\n* Step 2: Put the arrays on top of each other:\n\
  ```\n     [1, 2, 5, 7]\n[2, 3, 5, 7, 8]\n```\n\n* Step 3: Add them together:\n```\n\
  [2, 4, 7, 12, 15]\n```\n\n\n\nRepeat the above steps `n` times or until there is\
  \ only one number left, and then return the array.\n\n\n## Example\n\n```\nInput:\
  \ arr=[4, 2, 5, 3, 2, 5, 7], n=2\n\n\nRound 1\n-------\nstep 1: [4, 2, 5]  [3, 2,\
  \ 5, 7]\n\nstep 2:    [4, 2, 5]\n        [3, 2, 5, 7]\n\nstep 3: [3, 6, 7, 12]\n\
  \n\nRound 2\n-------\nstep 1: [3, 6]  [7, 12]\n\nstep 2:  [3,  6]\n         [7,\
  \ 12]\n\nstep 3: [10, 18]\n\n\nResult: [10, 18]\n```"
"vc-preamble": "import Imports.AllImports\n\ndef sum (xs : List Int) : Int :=\n  match\
  \ xs with\n  | [] => 0\n  | x :: rest => x + sum rest\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def split_and_add (numbers : List Int) (n : Nat) : List Int :=\n\
  \  sorry\n"
"vc-theorems": "theorem split_and_add_empty (n : Nat) :\n  split_and_add [] n = []\
  \ := sorry\n\n\ntheorem split_and_add_single (x : Int) (n : Nat) :\n  split_and_add\
  \ [x] n = [x] := sorry\n\n\ntheorem split_and_add_sum_preserved (numbers : List\
  \ Int) (n : Nat) :\n  sum numbers = sum (split_and_add numbers n) := sorry\n\n\n\
  theorem split_and_add_idempotent (numbers : List Int) (n : Nat) :\n  let result1\
  \ := split_and_add numbers n\n  let result2 := split_and_add numbers (n + 1)\n \
  \ result1.length = 1 → result1 = result2 := sorry\n\n\ntheorem split_and_add_length_decreases\
  \ {numbers : List Int} (n : Nat) :\n  numbers.length ≥ 2 →\n  (split_and_add numbers\
  \ 1).length ≤ numbers.length := sorry"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded"
