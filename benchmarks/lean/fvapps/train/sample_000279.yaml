"vc-description": "Given 2n balls of k distinct colors. You will be given an integer\
  \ array balls of size k where balls[i] is the number of balls of color i. \nAll\
  \ the balls will be shuffled uniformly at random, then we will distribute the first\
  \ n balls to the first box and the remaining n balls to the other box (Please read\
  \ the explanation of the second example carefully).\nPlease note that the two boxes\
  \ are considered different. For example, if we have two balls of colors a and b,\
  \ and two boxes [] and (), then the distribution [a] (b) is considered different\
  \ than the distribution [b] (a) (Please read the explanation of the first example\
  \ carefully).\nWe want to calculate the probability that the two boxes have the\
  \ same number of distinct balls.\n \nExample 1:\nInput: balls = [1,1]\nOutput: 1.00000\n\
  Explanation: Only 2 ways to divide the balls equally:\n- A ball of color 1 to box\
  \ 1 and a ball of color 2 to box 2\n- A ball of color 2 to box 1 and a ball of color\
  \ 1 to box 2\nIn both ways, the number of distinct colors in each box is equal.\
  \ The probability is 2/2 = 1\n\nExample 2:\nInput: balls = [2,1,1]\nOutput: 0.66667\n\
  Explanation: We have the set of balls [1, 1, 2, 3]\nThis set of balls will be shuffled\
  \ randomly and we may have one of the 12 distinct shuffles with equale probability\
  \ (i.e. 1/12):\n[1,1 / 2,3], [1,1 / 3,2], [1,2 / 1,3], [1,2 / 3,1], [1,3 / 1,2],\
  \ [1,3 / 2,1], [2,1 / 1,3], [2,1 / 3,1], [2,3 / 1,1], [3,1 / 1,2], [3,1 / 2,1],\
  \ [3,2 / 1,1]\nAfter that we add the first two balls to the first box and the second\
  \ two balls to the second box.\nWe can see that 8 of these 12 possible random distributions\
  \ have the same number of distinct colors of balls in each box.\nProbability is\
  \ 8/12 = 0.66667\n\nExample 3:\nInput: balls = [1,2,1,2]\nOutput: 0.60000\nExplanation:\
  \ The set of balls is [1, 2, 2, 3, 4, 4]. It is hard to display all the 180 possible\
  \ random shuffles of this set but it is easy to check that 108 of them will have\
  \ the same number of distinct colors in each box.\nProbability = 108 / 180 = 0.6\n\
  \nExample 4:\nInput: balls = [3,2,1]\nOutput: 0.30000\nExplanation: The set of balls\
  \ is [1, 1, 1, 2, 2, 3]. It is hard to display all the 60 possible random shuffles\
  \ of this set but it is easy to check that 18 of them will have the same number\
  \ of distinct colors in each box.\nProbability = 18 / 60 = 0.3\n\nExample 5:\nInput:\
  \ balls = [6,6,6,6,6,6]\nOutput: 0.90327\n\n \nConstraints:\n\n1 <= balls.length\
  \ <= 8\n1 <= balls[i] <= 6\nsum(balls) is even.\nAnswers within 10^-5 of the actual\
  \ value will be accepted as correct."
"vc-preamble": "import Imports.AllImports\n\ndef List.sum : List Nat → Nat \n  | []\
  \ => 0\n  | (h :: t) => h + sum t\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def get_probability (balls : List Nat) : Float := sorry\n\ntheorem\
  \ probability_bounds {balls : List Nat} \n  (h1 : balls.length ≥ 2)\n  (h2 : balls.length\
  \ ≤ 4) \n  (h3 : ∀ x ∈ balls, 1 ≤ x ∧ x ≤ 3)\n  (h4 : (List.sum balls) % 2 = 0)\
  \ :\n  0 ≤ get_probability balls ∧ get_probability balls ≤ 1 := sorry\n"
"vc-theorems": "theorem symmetric_cases {balls : List Nat}\n  (h1 : balls.length ≥\
  \ 2)\n  (h2 : balls.length ≤ 4)\n  (h3 : ∀ x ∈ balls, 1 ≤ x ∧ x ≤ 3) \n  (h4 : (List.sum\
  \ balls) % 2 = 0) :\n  get_probability balls = get_probability balls.reverse :=\
  \ sorry\n\n\ntheorem edge_cases_one :\n  get_probability [1, 1] = 1 := sorry\n\n\
  \ntheorem edge_cases_two :\n  get_probability [2, 2] = 1 := sorry"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded"
