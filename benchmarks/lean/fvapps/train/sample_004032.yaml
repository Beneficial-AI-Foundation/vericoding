"vc-description": "Given a mathematical equation that has `*,+,-,/`, reverse it as\
  \ follows:\n\n```Haskell\nsolve(\"100*b/y\") = \"y/b*100\"\nsolve(\"a+b-c/d*30\"\
  ) = \"30*d/c-b+a\"\n```\n\nMore examples in test cases. \n\nGood luck!\n\nPlease\
  \ also try:\n\n[Simple time difference](https://www.codewars.com/kata/5b76a34ff71e5de9db0000f2)\n\
  \n[Simple remove duplicates](https://www.codewars.com/kata/5ba38ba180824a86850000f7)"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def solve (s : String) : String := sorry\n\ntheorem solve_empty\
  \ (s : String) :\n  solve \"\" = \"\" := sorry\n"
"vc-theorems": "theorem solve_add_commutes (a b : String) :\n  solve \"a+b\" = \"\
  b+a\" := sorry\n\n\ntheorem solve_sub_commutes (a b : String) :\n  solve \"a-b\"\
  \ = \"b-a\" := sorry\n\n\ntheorem solve_mul_commutes (a b : String) :\n  solve \"\
  a*b\" = \"b*a\" := sorry\n\n\ntheorem solve_div_commutes (a b : String) :\n  solve\
  \ \"a/b\" = \"b/a\" := sorry\n\n\ntheorem solve_add_sub_commutes (a b c : String)\
  \ :\n  solve \"a+b-c\" = \"c-b+a\" := sorry\n\n\ntheorem solve_mul_div_commutes\
  \ (x y z : String) :\n  solve \"x*y/z\" = \"z/y*x\" := sorry\n\n\ntheorem solve_add_mul_commutes\
  \ (a b c : String) :\n  solve \"a+b*c\" = \"c*b+a\" := sorry\n\n\ntheorem solve_div_sub_commutes\
  \ (x y z : String) :\n  solve \"x/y-z\" = \"z-y/x\" := sorry\n\n/--\ninfo: 'y/b*100'\n\
  -/\n#guard_msgs in\n#eval solve \"100*b/y\"\n\n/--\ninfo: '30*d/c-b+a'\n-/\n#guard_msgs\
  \ in\n#eval solve \"a+b-c/d*30\"\n\n/--\ninfo: '50+c/b*a'\n-/\n#guard_msgs in\n\
  #eval solve \"a*b/c+50\"\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
