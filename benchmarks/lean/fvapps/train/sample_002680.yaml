"vc-description": "Deoxyribonucleic acid (DNA) is a chemical found in the nucleus\
  \ of cells and carries the \"instructions\" for the development and functioning\
  \ of living organisms.\n\nIf you want to know more http://en.wikipedia.org/wiki/DNA\n\
  \nIn DNA strings, symbols \"A\" and \"T\" are complements of each other, as \"C\"\
  \ and \"G\". \nYou have function with one side of the DNA (string, except for Haskell);\
  \ you need to get the other complementary side. DNA strand is never empty or there\
  \ is no DNA at all (again, except for Haskell).\n\nMore similar exercise are found\
  \ here http://rosalind.info/problems/list-view/ (source)\n\n```python\nDNA_strand\
  \ (\"ATTGC\") # return \"TAACG\"\n\nDNA_strand (\"GTAT\") # return \"CATA\"\n```"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def DNA_strand : List Base → List Base\n  | xs => sorry\n"
"vc-theorems": "theorem dna_complement_length {xs : List Base} :\n  (DNA_strand xs).length\
  \ = xs.length := by sorry\n\n\ntheorem dna_complement_involution {xs : List Base}\
  \ :\n  DNA_strand (DNA_strand xs) = xs := by sorry\n\n\ntheorem dna_complement_maps_correctly\
  \ {xs : List Base} {i : Nat} (h : i < xs.length) :\n  match xs.get ⟨i, h⟩ with\n\
  \  | Base.A => (DNA_strand xs).get ⟨i, by {rw [dna_complement_length]; exact h}⟩\
  \ = Base.T\n  | Base.T => (DNA_strand xs).get ⟨i, by {rw [dna_complement_length];\
  \ exact h}⟩ = Base.A\n  | Base.C => (DNA_strand xs).get ⟨i, by {rw [dna_complement_length];\
  \ exact h}⟩ = Base.G\n  | Base.G => (DNA_strand xs).get ⟨i, by {rw [dna_complement_length];\
  \ exact h}⟩ = Base.C\n  := by sorry\n\n/--\ninfo: 'TTTT'\n-/\n#guard_msgs in\n#eval\
  \ DNA_strand \"AAAA\"\n\n/--\ninfo: 'TAACG'\n-/\n#guard_msgs in\n#eval DNA_strand\
  \ \"ATTGC\"\n\n/--\ninfo: 'CATA'\n-/\n#guard_msgs in\n#eval DNA_strand \"GTAT\"\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
