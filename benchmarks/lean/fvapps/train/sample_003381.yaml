"vc-description": "In this Kata, you will be given a lower case string and your task\
  \ will be to remove `k` characters from that string using the following rule:\n\
  ```Python\n- first remove all letter 'a', followed by letter 'b', then 'c', etc...\n\
  - remove the leftmost character first.\n```\n\n```Python\nFor example: \nsolve('abracadabra',\
  \ 1) = 'bracadabra' # remove the leftmost 'a'.\nsolve('abracadabra', 2) = 'brcadabra'\
  \  # remove 2 'a' from the left.\nsolve('abracadabra', 6) = 'rcdbr'      # remove\
  \ 5 'a', remove 1 'b' \nsolve('abracadabra', 8) = 'rdr'\nsolve('abracadabra',50)\
  \ = ''\n```\n\nMore examples in the test cases. Good luck!\n\nPlease also try: \n\
  \n[Simple time difference](https://www.codewars.com/kata/5b76a34ff71e5de9db0000f2)\n\
  \n[Simple remove duplicates](https://www.codewars.com/kata/5ba38ba180824a86850000f7)"
"vc-preamble": "import Imports.AllImports\n\ndef solve (text : String) (k : Nat) :\
  \ String := sorry\n\ndef get_char_indices (s : String) (c : Char) : List Nat :=\
  \ sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def List.sorted (l : List Nat) : Prop := \n  ∀ i j, i < j → j <\
  \ l.length → \n  match l.get? i, l.get? j with\n  | some vi, some vj => vi ≤ vj\n\
  \  | _, _ => True\n"
"vc-theorems": "theorem solve_result_length (text : String) (k : Nat) (h : text.length\
  \ > 0) :\n  (solve text k).length = max 0 (text.length - min k text.length) := sorry\n\
  \n\ntheorem solve_chars_from_original (text : String) (k : Nat) (h : text.length\
  \ > 0) :\n  ∀ c, c ∈ (solve text k).data → c ∈ text.data := sorry\n\n\ntheorem solve_maintains_order\
  \ (text : String) (k : Nat) (h : text.length > 0) :\n  ∀ c, c ∈ (solve text k).data\
  \ →\n    let result_indices := get_char_indices (solve text k) c\n    let orig_indices\
  \ := get_char_indices text c\n    List.sorted result_indices := sorry\n\n\ntheorem\
  \ solve_k_zero (text : String) (h : text.length > 0) :\n  solve text 0 = text :=\
  \ sorry\n\n\ntheorem solve_k_length (text : String) (h : text.length > 0) :\n  solve\
  \ text text.length = \"\" := sorry\n\n/--\ninfo: 'bracadabra'\n-/\n#guard_msgs in\n\
  #eval solve \"abracadabra\" 1\n\n/--\ninfo: 'rcdbr'\n-/\n#guard_msgs in\n#eval solve\
  \ \"abracadabra\" 6\n\n/--\ninfo: 'cccbbabaccbc'\n-/\n#guard_msgs in\n#eval solve\
  \ \"cccaabababaccbc\" 3\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
