"vc-description": "The chef is trying to solve some pattern problems, Chef wants your\
  \ help to code it. Chef has one number K to form a new pattern. Help the chef to\
  \ code this pattern problem.\n\n-----Input:-----\n- First-line will contain $T$,\
  \ the number of test cases. Then the test cases follow. \n- Each test case contains\
  \ a single line of input, one integer $K$. \n\n-----Output:-----\nFor each test\
  \ case, output as the pattern.\n\n-----Constraints-----\n- $1 \\leq T \\leq 100$\n\
  - $1 \\leq K \\leq 100$\n\n-----Sample Input:-----\n4\n1\n2\n3\n4\n\n-----Sample\
  \ Output:-----\n1\n21\n*1\n321\n*21\n**1\n4321\n*321\n**21\n***1\n\n-----EXPLANATION:-----\n\
  No need, else pattern can be decode easily."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def generate_pattern (n : Nat) : List String := sorry \n\ndef String.countChar\
  \ (s : String) (c : Char) : Nat :=\n  s.data.filter (· = c) |>.length\n"
"vc-theorems": "theorem pattern_length (n : Nat) (h : n > 0) :\n  (generate_pattern\
  \ n).length = n := sorry\n\n\ntheorem pattern_first_line (n : Nat) (h : n > 0) :\n\
  \  (generate_pattern n).head! = String.join (List.map toString (List.range' n n\
  \ 1)) := sorry\n\n\ntheorem pattern_stars_increment (n : Nat) (h : n > 0) (i : Fin\
  \ n) : \n  let len_eq := pattern_length n h\n  ((generate_pattern n).get ⟨i.val,\
  \ by rw [len_eq]; exact i.isLt⟩).countChar '*' = i.val := sorry\n\n\ntheorem pattern_stars_prefix\
  \ (n : Nat) (h : n > 0) (i : Fin n) :\n  let len_eq := pattern_length n h\n  ((generate_pattern\
  \ n).get ⟨i.val, by rw [len_eq]; exact i.isLt⟩).startsWith (String.mk (List.replicate\
  \ i.val '*')) := sorry\n\n/--\ninfo: ['1']\n-/\n#guard_msgs in\n#eval generate_pattern\
  \ 1\n\n/--\ninfo: ['21', '*1']\n-/\n#guard_msgs in\n#eval generate_pattern 2\n\n\
  /--\ninfo: ['4321', '*321', '**21', '***1']\n-/\n#guard_msgs in\n#eval generate_pattern\
  \ 4\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
