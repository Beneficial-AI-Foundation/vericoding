vc-description: |-
  There are $N$ sabotages available in the game Among Us, initially all at level $0$. 
  $N$ imposters are allotted the task to upgrade the level of the sabotages. 
  The $i^{th}$ imposter $(1 \leq i \leq N)$ increases the level of $x^{th}$ sabotage $(1 \leq x \leq N)$ by one level  if $gcd(i,x)=i$.
  You need to find the number of sabotages at LEVEL 5 after all the imposters have completed their tasks.

  -----Input:-----
  - First line will contain $T$, number of testcases. Then the testcases follow. 
  - Each testcase contains of a single line of input, one integer $N$. 

  -----Output:-----
  For each testcase, output in a single line the number of sabotages at LEVEL 5.

  -----Constraints-----
  - $1 \leq T \leq 10^5$
  - $1 \leq N \leq 10^{18}$

  -----Sample Input:-----
  1
  6

  -----Sample Output:-----
  0

  -----EXPLANATION:-----
  The $1^{st}$ sabotage is at level $1$, the $2^{nd}$, $3^{rd}$ and $5^{th}$ sabotages are at level $2$, the $4^{th}$ sabotage is at level $3$ and the $6^{th}$ sabotage is at level $4$.
  None of them reach level $5$. Hence the output is $0$.
vc-preamble: |-
  import Imports.AllImports
vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>
vc-definitions: |
  def count_sabotages_at_level_5 (n : Nat) : Nat :=
    sorry
vc-theorems: |
  theorem count_sabotages_nonnegative (n : Nat) (h : n ≥ 1) :
    count_sabotages_at_level_5 n ≥ 0 :=
    sorry


  theorem count_sabotages_monotonic (n : Nat) (h : n > 1) :
    count_sabotages_at_level_5 n ≥ count_sabotages_at_level_5 (n-1) :=
    sorry


  theorem count_sabotages_small_numbers (n : Nat) (h₁ : n ≥ 1) (h₂ : n < 16) :
    count_sabotages_at_level_5 n = 0 :=
    sorry


  theorem count_sabotages_bounded (n : Nat) (h : n ≥ 1) :
    count_sabotages_at_level_5 n ≤ 45 :=
    sorry

  /--
  info: 0
  -/
  #guard_msgs in
  #eval count_sabotages_at_level_5 6

  /--
  info: 1
  -/
  #guard_msgs in
  #eval count_sabotages_at_level_5 20

  /--
  info: 3
  -/
  #guard_msgs in
  #eval count_sabotages_at_level_5 1000
vc-postamble: |-
  -- Apps difficulty: interview
  -- Assurance level: guarded_and_plausible
