"vc-description": "# Fun fact\nTetris was the first video game played in outer space\n\
  \nIn 1993, Russian cosmonaut Aleksandr A. Serebrov spent 196 days on the Mir space\
  \ station with a very special distraction: a gray Game Boy loaded with Tetris. During\
  \ that time the game orbited the Earth 3,000 times and became the first video game\
  \ played in space. The Game Boy was sold in a Bonhams auction for $1,220 during\
  \ the Space History Sale in 2011.\n\n# Task\nParse the game log and determine how\
  \ many lines have been cleared through the game. The game ends if all commands from\
  \ input were interpreted or the maximum field height (30 units) is reached.\n\n\
  A horizontal line, according to the rules of classic Tetris, is considered cleared\
  \ if it represents a solid line without gaps formed by falling blocks.\nWhen such\
  \ a line is formed, it disappears and any blocks above it fall down to fill the\
  \ space.\n\n# Input\n```python\n['4L2', '3R4', '4L3', '3L4', '4R0', '1L2'] # example\n\
  ```\nAs an argument, you are given gamelog - an array of commands which you need\
  \ to interpret.\n\nEach command has the same form:\n* The first character - the\
  \ type of block (integer from 1 to 4, as in this kata we have only 4 types of blocks).\
  \ Block types are described below.\n* The second - the direction of movement (`\"\
  R\"` or `\"L\"` - right or left).\n* The third is an offset (integer from 0 to 4,\
  \ as width of our field 9 units and new block always appears at the center of the\
  \ field) relative to the starting position. Thus, `L4` means the leftmost position,\
  \ and `R4` the rightmost, and `L0` is equivalent to `R0`.\n\n# Output\nThe total\
  \ number of cleaned horizontal lines (`int`) to the end of the game. Note, if the\
  \ field height is exceeded, then the game ends immediately.\n\n# Blocks\nIn this\
  \ kata we have only 4 types of blocks. Yes, this is not a classic set of shapes,\
  \ but this is only for simplicity.\n```\n# and their graphical representation:\n\
  \             ■\n         ■   ■\n     ■   ■   ■\n ■   ■   ■   ■\n---+---+---+---\n\
  #1  #2  #3  #4\n```\n# Field\nGamefield (a rectangular vertical shaft) has width\
  \ 9 units and height 30 units.\n\n\ntable, th, td {\n  border: 1px solid;\n}\n\n\
  \nIndices can be represented as:\n\n\nL4\nL3\nL2\nL1\nL0/R0\nR1\nR2\nR3\nR4\n\n\n\
  \n# Example 1\n```python\n>>> gamelog = ['1R4', '2L3', '3L2', '4L1', '1L0', '2R1',\
  \ '3R2', '4R3', '1L4']\n>>> tetris(gamelog)\n1\n```\nGamefield before last command\
  \ (_ means empty space):\n```\n___■___■_\n__■■__■■_\n_■■■_■■■_\n_■■■■■■■■\n```\n\
  Gamefield after all commands:\n```\n___■___■_\n__■■__■■_\n_■■■_■■■_\n```\nAs you\
  \ can see, one solid line was cleared. So, answer is 1.\n\n# Example 2\n```python\n\
  >>> gamelog = ['1L2', '4R2', '3L3', '3L1', '1L4', '1R4']\n>>> tetris(gamelog)\n\
  0\n```\nGamefield after all commands:\n```\n _____■__\n_■_■__■__\n_■_■__■__\n■■■■__■_■\n\
  ```\nAs you can see, there is no solid lines, so nothing to clear. Our answer is\
  \ 0, zero cleaned lines.\n\n# Note\n\nSince there is no rotation of blocks in our\
  \ model and all blocks are very simple, do not overthink the task.\n\n# Other  \n\
  \nIf you like the idea: leave feedback, and there will be more katas in the Tetris\
  \ series.\n\n* 7 kyuTetris Series #1 — Scoring System\n* 6 kyuTetris Series #2 —\
  \ Primitive Gameplay\n* 6 kyuTetris Series #3 — Adding Rotation (TBA)\n* 5 kyuTetris\
  \ Series #4 — New Block Types (TBA)\n* 4 kyuTetris Series #5 — Complex Block Types\
  \ (TBA?)"
"vc-preamble": "import Imports.AllImports\n\ndef Position := String\ndef Command :=\
  \ String\n\n\ndef tetris (commands : List Command) : Nat :=\n  sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def sumHeights (commands : List Command) : Nat :=\n  sorry\n"
"vc-theorems": "theorem tetris_output_natural (commands : List Command) : \n  tetris\
  \ commands ≥ 0 :=\n  sorry\n\n\ntheorem tetris_height_limit (commands : List Command)\
  \ (h : commands ≠ []) :\n  tetris commands < 30 :=\n  sorry\n\n\ntheorem tetris_cleared_lines\
  \ (commands : List Command) (h : commands ≠ []) :\n  tetris commands ≤ sumHeights\
  \ commands :=\n  sorry\n\n\ntheorem tetris_idempotent_empty_moves (commands : List\
  \ Command) (h : commands ≠ []) :\n  let emptyMoves : List Command := [\"1L0\", \"\
  1R0\"]\n  tetris commands = tetris (commands ++ emptyMoves) :=\n  sorry\n\n/--\n\
  info: 1\n-/\n#guard_msgs in\n#eval tetris [\"1R4\", \"2L3\", \"3L2\", \"4L1\", \"\
  1L0\", \"2R1\", \"3R2\", \"4R3\", \"1L4\"]\n\n/--\ninfo: 0\n-/\n#guard_msgs in\n\
  #eval tetris [\"1L2\", \"4R2\", \"3L3\", \"3L1\", \"1L4\", \"1R4\"]\n\n/--\ninfo:\
  \ 3\n-/\n#guard_msgs in\n#eval tetris [\"4R4\", \"4L3\", \"4L2\", \"4L1\", \"4L0\"\
  , \"4R1\", \"4R2\", \"4R3\", \"3L4\"]\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded"
