"vc-description": "A new pack of n t-shirts came to a shop. Each of the t-shirts is\
  \ characterized by three integers p_{i}, a_{i} and b_{i}, where p_{i} is the price\
  \ of the i-th t-shirt, a_{i} is front color of the i-th t-shirt and b_{i} is back\
  \ color of the i-th t-shirt. All values p_{i} are distinct, and values a_{i} and\
  \ b_{i} are integers from 1 to 3.\n\nm buyers will come to the shop. Each of them\
  \ wants to buy exactly one t-shirt. For the j-th buyer we know his favorite color\
  \ c_{j}.\n\nA buyer agrees to buy a t-shirt, if at least one side (front or back)\
  \ is painted in his favorite color. Among all t-shirts that have colors acceptable\
  \ to this buyer he will choose the cheapest one. If there are no such t-shirts,\
  \ the buyer won't buy anything. Assume that the buyers come one by one, and each\
  \ buyer is served only after the previous one is served.\n\nYou are to compute the\
  \ prices each buyer will pay for t-shirts.\n\n\n-----Input-----\n\nThe first line\
  \ contains single integer n (1 ≤ n ≤ 200 000) — the number of t-shirts.\n\nThe following\
  \ line contains sequence of integers p_1, p_2, ..., p_{n} (1 ≤ p_{i} ≤ 1 000 000\
  \ 000), where p_{i} equals to the price of the i-th t-shirt.\n\nThe following line\
  \ contains sequence of integers a_1, a_2, ..., a_{n} (1 ≤ a_{i} ≤ 3), where a_{i}\
  \ equals to the front color of the i-th t-shirt.\n\nThe following line contains\
  \ sequence of integers b_1, b_2, ..., b_{n} (1 ≤ b_{i} ≤ 3), where b_{i} equals\
  \ to the back color of the i-th t-shirt.\n\nThe next line contains single integer\
  \ m (1 ≤ m ≤ 200 000) — the number of buyers. \n\nThe following line contains sequence\
  \ c_1, c_2, ..., c_{m} (1 ≤ c_{j} ≤ 3), where c_{j} equals to the favorite color\
  \ of the j-th buyer. The buyers will come to the shop in the order they are given\
  \ in the input. Each buyer is served only after the previous one is served.\n\n\
  \ \n\n\n-----Output-----\n\nPrint to the first line m integers — the j-th integer\
  \ should be equal to the price of the t-shirt which the j-th buyer will buy. If\
  \ the j-th buyer won't buy anything, print -1.\n\n\n-----Examples-----\nInput\n\
  5\n300 200 400 500 911\n1 2 1 2 3\n2 1 3 2 1\n6\n2 3 1 2 1 1\n\nOutput\n200 400\
  \ 300 500 911 -1 \n\nInput\n2\n1000000000 1\n1 1\n1 2\n2\n2 1\n\nOutput\n1 1000000000"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def solve_tshirts (n : Nat) (p : List Nat) (f : List Nat) (b :\
  \ List Nat) (m : Nat) (bc : List Nat) : List Int :=\nsorry\n"
"vc-theorems": "theorem no_matching_shirts_result\n  (n : Nat)\n  (p : List Nat)\n\
  \  (f b : List Nat) \n  (m : Nat)\n  (bc : List Nat)\n  (h1 : n > 0)\n  (h2 : n\
  \ ≤ 5)\n  (h3 : List.length p = n)\n  (h4 : List.length f = n)\n  (h5 : List.length\
  \ b = n)\n  (h6 : List.length bc > 0)\n  (h7 : List.length bc ≤ 10)\n  (h8 : ∀ x\
  \ ∈ bc, x = 2 ∨ x = 3)\n  (h9 : ∀ x ∈ f, x = 1)\n  (h10 : ∀ x ∈ b, x = 1)\n  (h11\
  \ : ∀ x ∈ p, x = 1) :\n  let result := solve_tshirts n p f b m bc\n  ∀ x ∈ result,\
  \ x = -1 :=\nsorry\n\n/--\ninfo: [200, 400, 300, 500, 911, -1]\n-/\n#guard_msgs\
  \ in\n#eval solve_tshirts 5 [300, 200, 400, 500, 911] [1, 2, 1, 2, 3] [2, 1, 3,\
  \ 2, 1] 6 [2, 3, 1, 2, 1, 1]\n\n/--\ninfo: [1, 1000000000]\n-/\n#guard_msgs in\n\
  #eval solve_tshirts 2 [1000000000, 1] [1, 1] [1, 2] 2 [2, 1]\n\n/--\ninfo: [529469903]\n\
  -/\n#guard_msgs in\n#eval solve_tshirts 1 [529469903] [1] [3] 1 [3]\n"
"vc-postamble": "-- Apps difficulty: competition\n-- Assurance level: unguarded"
