"vc-description": "Many things in this first paragraph are references to some pretty\
  \ famous YouTube stars, so be careful about rephrasing. Thanks! \nMichael, Kevin\
  \ and Jake are sharing a cake, in celebration of their Webby award. They named it\
  \ VCake. Unlike other cakes they considered, this one has finite volume and surface\
  \ area. It's shaped as a normal rectangular cake with dimensions R centimeters by\
  \ C centimeters. For the purposes of this problem, we can forget about three dimensions\
  \ and think of a cake as just a 2D rectangle.\nChef will now cut the cake into three\
  \ pieces, one for each person. However, the cake's shape and Chef's really old tools\
  \ pose a few restrictions:\n\n- Chef can only cut the cake, or a cake piece, across\
  \ a line parallel to one of its sides. \n- Chef can only cut the cake, or a cake\
  \ piece, from end to end. That is, she cannot cut the cake partially. \n- Chef can\
  \ only cut the cake, or a cake piece, such that the sides of the resulting pieces\
  \ (which will be rectangular in shape) are integers. \n\nIn addition, Michael, Kevin\
  \ and Jake also have a few preferences of their own:\n\n- They want their pieces\
  \ to be connected (in one piece), and rectangular in shape.\n- Michael wants his\
  \ piece to have an area exactly M square centimeters. (Again, forget about a third\
  \ dimension.)\n- Kevin wants his piece to have an area exactly K square centimeters.\n\
  - Jake wants his piece to have an area exactly J square centimeters.\n\nWith these\
  \ restrictions, Chef is at a loss. Is it possible for Chef to accomplish this task?\
  \ Please note that the entire cake should be used. There should be no leftover cake.\n\
  \n-----Input-----\nThe first line of the input contains an integer T denoting the\
  \ number of test cases. The description of T test cases follows.\nEach test case\
  \ consists of a single line containing five space separated integers R, C M, K and\
  \ J.\n\n-----Output-----\nFor each test case, output a single line containing either\
  \ “Yes” or “No” (without quotes), denoting whether Chef can accomplish the task\
  \ or not.\n\n-----Constraints-----\n- 1 ≤ T ≤ 105\n- 1 ≤ R, C ≤ 109\n- 1 ≤ M, K,\
  \ J ≤ 1018\n\n-----Example-----\nInput:4\n4 5 10 4 6\n4 5 6 10 4\n4 5 4 6 10\n2\
  \ 2 2 2 2\n\nOutput:Yes\nYes\nYes\nNo\n\n-----Explanation-----\nExample case 1.\
  \ In this case, Chef can accomplish the task by doing the following slicing.  \n\
  pre tt\n_ _ _ _ _       _ _ _ _ _       _ _ _ _ _       _________ \n|         |\
  \     |         |     |         |     |M M M M M|\n|         | -- |_ _ _ _ _| --\
  \ |_ _ _ _ _| -- |M_M_M_M_M|\n|         |     |         |     |     |   |     |J\
  \ J J|K K|\n|_ _ _ _ _|     |_ _ _ _ _|     |_ _ _|_ _|     |J_J_J|K_K|\n/tt /pre\n\
  I'll make an image if I have time \nExample case 4. Here, Michael, Kevin and Jake\
  \ each wants a piece with area 2, but the total area of the cake is only 2×2 = 4.\
  \ This means the task is impossible."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def can_slice_cake (r c m k j : Nat) : String := sorry\n\ntheorem\
  \ can_slice_cake_valid_output (r c m k j : Nat) (h1 : r > 0) (h2 : c > 0) \n   \
  \ (h3 : m > 0) (h4 : k > 0) (h5 : j > 0) :\n  can_slice_cake r c m k j = \"Yes\"\
  \ ∨ can_slice_cake r c m k j = \"No\" := sorry\n"
"vc-theorems": "theorem can_slice_cake_area_mismatch (r c m k j : Nat) (h1 : r > 0)\
  \ (h2 : c > 0)\n    (h3 : m > 0) (h4 : k > 0) (h5 : j > 0) (h6 : r * c ≠ m + k +\
  \ j) :\n  can_slice_cake r c m k j = \"No\" := sorry\n\n\ntheorem can_slice_cake_equal_pieces\
  \ (r c : Nat) (h1 : r > 0) (h2 : c > 0)\n    (h3 : r * c % 3 = 0) (h4 : (r * c)\
  \ / 3 ≤ max r c) :\n  can_slice_cake r c ((r * c) / 3) ((r * c) / 3) ((r * c) /\
  \ 3) = \"Yes\" := sorry\n\n\ntheorem can_slice_cake_piece_exceeds_area (r c m k\
  \ j : Nat) (h1 : r > 0) (h2 : c > 0)\n    (h3 : m > r * c ∨ k > r * c ∨ j > r *\
  \ c) :\n  can_slice_cake r c m k j = \"No\" := sorry\n\n/--\ninfo: 'Yes'\n-/\n#guard_msgs\
  \ in\n#eval can_slice_cake 4 5 10 4 6\n\n/--\ninfo: 'Yes'\n-/\n#guard_msgs in\n\
  #eval can_slice_cake 4 5 6 10 4\n\n/--\ninfo: 'No'\n-/\n#guard_msgs in\n#eval can_slice_cake\
  \ 2 2 2 2 2\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
