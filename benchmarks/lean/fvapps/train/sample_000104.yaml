"vc-description": "— Hey folks, how do you like this problem?\n\n— That'll do it.\
  \ \n\nBThero is a powerful magician. He has got $n$ piles of candies, the $i$-th\
  \ pile initially contains $a_i$ candies. BThero can cast a copy-paste spell as follows:\
  \   He chooses two piles $(i, j)$ such that $1 \\le i, j \\le n$ and $i \\ne j$.\
  \  All candies from pile $i$ are copied into pile $j$. Formally, the operation $a_j\
  \ := a_j + a_i$ is performed. \n\nBThero can cast this spell any number of times\
  \ he wants to — but unfortunately, if some pile contains strictly more than $k$\
  \ candies, he loses his magic power. What is the maximum number of times BThero\
  \ can cast the spell without losing his power?\n\n\n-----Input-----\n\nThe first\
  \ line contains one integer $T$ ($1 \\le T \\le 500$) — the number of test cases.\n\
  \nEach test case consists of two lines:   the first line contains two integers $n$\
  \ and $k$ ($2 \\le n \\le 1000$, $2 \\le k \\le 10^4$);  the second line contains\
  \ $n$ integers $a_1$, $a_2$, ..., $a_n$ ($1 \\le a_i \\le k$). \n\nIt is guaranteed\
  \ that the sum of $n$ over all test cases does not exceed $1000$, and the sum of\
  \ $k$ over all test cases does not exceed $10^4$.\n\n\n-----Output-----\n\nFor each\
  \ test case, print one integer — the maximum number of times BThero can cast the\
  \ spell without losing his magic power.\n\n\n-----Example-----\nInput\n3\n2 2\n\
  1 1\n3 5\n1 2 3\n3 7\n3 2 2\n\nOutput\n1\n5\n4\n\n\n\n-----Note-----\n\nIn the first\
  \ test case we get either $a = [1, 2]$ or $a = [2, 1]$ after casting the spell for\
  \ the first time, and it is impossible to cast it again."
"vc-preamble": "import Imports.AllImports\n\ndef solve_magic_candies (n : Nat) (k\
  \ : Nat) (candies : List Nat) : Nat :=\n  sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def list_minimum (l : List Nat) : Nat :=\n  sorry\n\n\n\n\n\n\n"
"vc-theorems": "theorem solve_magic_candies_minimum_case\n  (k : Nat)\n  (h1 : k ≥\
  \ 1) (h2 : k ≤ 1000) :\n  solve_magic_candies 2 k [1, 1] = k - 1 := sorry\n\n/--\n\
  info: 1\n-/\n#guard_msgs in\n#eval solve_magic_candies 2 2 [1, 1]\n\n/--\ninfo:\
  \ 5\n-/\n#guard_msgs in\n#eval solve_magic_candies 3 5 [1, 2, 3]\n\n/--\ninfo: 4\n\
  -/\n#guard_msgs in\n#eval solve_magic_candies 3 7 [3, 2, 2]\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
