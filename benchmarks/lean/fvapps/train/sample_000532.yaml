"vc-description": "Motu and Patlu are playing with a Magical Ball. Patlu find some\
  \ interesting pattern in the motion of the ball that ball always bounce back from\
  \ the ground after travelling a linear distance whose value is some power of $2$.\
  \ Patlu gave Motu total distance $D$ travelled by the ball and ask him to calculate\
  \ the minimum number of bounces that the ball makes before coming to rest.\n\n-----Input:-----\n\
  - First line will contain $T$, number of testcases. Then the testcases follow. \n\
  - Each testcase contains of a single line of input, single integers $D$.\n- Note\
  \ : Power of $2$ must be a non-negative integer. \n\n-----Output:-----\nFor each\
  \ testcase, output in a single line answer, the minimum number of bounces the ball\
  \ makes before coming to rest.\n\n-----Constraints-----\n- $1 \\leq T \\leq 10^5$\n\
  - $1$ $\\leq$ $M$< $10$^18\n\n-----Sample Input:-----\n1\n13 \n\n-----Sample Output:-----\n\
  2\n\n-----EXPLANATION:-----"
"vc-preamble": "import Imports.AllImports\n\ndef count_ball_bounces (n: Nat) : Nat\
  \ := sorry\n\ndef isPowerOfTwo (n: Nat) : Bool := sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def allOnesInBinary (n: Nat) : Bool := sorry \n\ndef countOnesInBinary\
  \ (n: Nat) : Nat := sorry\n"
"vc-theorems": "theorem non_negative_result (distance : Nat) :\n  count_ball_bounces\
  \ distance â‰¥ 0 := sorry\n\n/--\ninfo: 2\n-/\n#guard_msgs in\n#eval count_ball_bounces\
  \ 13\n\n/--\ninfo: 2\n-/\n#guard_msgs in\n#eval count_ball_bounces 7\n\n/--\ninfo:\
  \ 0\n-/\n#guard_msgs in\n#eval count_ball_bounces 16\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
