"vc-description": "You are given a Young diagram. \n\nGiven diagram is a histogram\
  \ with $n$ columns of lengths $a_1, a_2, \\ldots, a_n$ ($a_1 \\geq a_2 \\geq \\\
  ldots \\geq a_n \\geq 1$). [Image] Young diagram for $a=[3,2,2,2,1]$. \n\nYour goal\
  \ is to find the largest number of non-overlapping dominos that you can draw inside\
  \ of this histogram, a domino is a $1 \\times 2$ or $2 \\times 1$ rectangle.\n\n\
  \n-----Input-----\n\nThe first line of input contain one integer $n$ ($1 \\leq n\
  \ \\leq 300\\,000$): the number of columns in the given histogram.\n\nThe next line\
  \ of input contains $n$ integers $a_1, a_2, \\ldots, a_n$ ($1 \\leq a_i \\leq 300\\\
  ,000, a_i \\geq a_{i+1}$): the lengths of columns.\n\n\n-----Output-----\n\nOutput\
  \ one integer: the largest number of non-overlapping dominos that you can draw inside\
  \ of the given Young diagram.\n\n\n-----Example-----\nInput\n5\n3 2 2 2 1\n\nOutput\n\
  4\n\n\n\n-----Note-----\n\nSome of the possible solutions for the example:\n\n[Image]\
  \ $\\square$"
"vc-preamble": "import Imports.AllImports\n\ndef solve_dominos (n : Nat) (arr : List\
  \ Nat) : Nat :=\n  sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def list_sum : List Nat → Nat  \n  | [] => 0\n  | (h :: t) => h\
  \ + list_sum t\n"
"vc-theorems": "theorem solve_dominos_non_negative (n : Nat) (arr : List Nat) :\n\
  \  solve_dominos n arr ≥ 0 := by\n  sorry\n\n\ntheorem solve_dominos_max_bound (n\
  \ : Nat) (arr : List Nat) :\n  solve_dominos n arr ≤ (list_sum arr / 2) := by\n\
  \  sorry\n\n\ntheorem solve_dominos_single_column (h : Nat) :\n  solve_dominos 1\
  \ [h] = h / 2 := by\n  sorry\n\n\ntheorem solve_dominos_unit_heights (n : Nat) (arr\
  \ : List Nat) \n  (h : ∀ x ∈ arr, x = 1) :\n  solve_dominos n arr = arr.length /\
  \ 2 := by\n  sorry\n\n/--\ninfo: 4\n-/\n#guard_msgs in\n#eval solve_dominos 5 [3,\
  \ 2, 2, 2, 1]\n\n/--\ninfo: 2\n-/\n#guard_msgs in\n#eval solve_dominos 5 [1, 1,\
  \ 1, 1, 1]\n\n/--\ninfo: 4\n-/\n#guard_msgs in\n#eval solve_dominos 3 [3, 3, 3]\n"
"vc-postamble": "-- Apps difficulty: competition\n-- Assurance level: unguarded"
