vc-description: |-
  Create a function that takes a list of one or more non-negative integers, and arranges them such that they form the largest possible number.

  Examples:

  `largestArrangement([4, 50, 8, 145])` returns 8504145 (8-50-4-145)

  `largestArrangement([4, 40, 7])` returns 7440 (7-4-40)

  `largestArrangement([4, 46, 7])` returns 7464 (7-46-4)

  `largestArrangement([5, 60, 299, 56])` returns 60565299 (60-56-5-299)

  `largestArrangement([5, 2, 1, 9, 50, 56])` returns 95655021 (9-56-5-50-21)
vc-preamble: |-
  import Imports.AllImports

  def largest_arrangement (nums : List Nat) : Nat :=
    sorry

  @[simp]

  def numDigits (n : Nat) : Nat :=
    sorry

  @[simp]

  def getDigits (n : Nat) : List Nat :=
    sorry

  @[simp]

  def sumList (xs : List Nat) : Nat :=
    sorry

  @[simp]
vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>
vc-definitions: |
  def countDigits (n : Nat) : Nat :=
    sorry
vc-theorems: |
  theorem largest_arrangement_length_preservation
    (nums : List Nat)
    (h : nums.length > 0)
    (h2 : ∀ n ∈ nums, n ≤ 999) :
    numDigits (largest_arrangement nums) = sumList (nums.map numDigits)
    := sorry


  theorem largest_arrangement_uses_same_digits
    (nums : List Nat)
    (h : nums.length > 0)
    (h2 : ∀ n ∈ nums, n ≤ 999) :
    ∀ d, countDigits d = countDigits d →
    (d ∈ getDigits (largest_arrangement nums) ↔ d ∈ (nums.map getDigits).join)
    := sorry


  theorem largest_arrangement_is_nat
    (nums : List Nat) 
    (h : nums.length > 0)
    (h2 : ∀ n ∈ nums, n ≤ 999) :
    largest_arrangement nums ≥ 0
    := sorry


  theorem largest_arrangement_greater_than_components
    (nums : List Nat)
    (h : nums.length > 1)
    (h2 : ∀ n ∈ nums, 1 ≤ n ∧ n ≤ 999) :
    ∀ n ∈ nums, largest_arrangement nums ≥ n
    := sorry

  /--
  info: 8504145
  -/
  #guard_msgs in
  #eval largest_arrangement [4, 50, 8, 145]

  /--
  info: 7440
  -/
  #guard_msgs in
  #eval largest_arrangement [4, 40, 7]

  /--
  info: 95655021
  -/
  #guard_msgs in
  #eval largest_arrangement [5, 2, 1, 9, 50, 56]
vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: guarded
