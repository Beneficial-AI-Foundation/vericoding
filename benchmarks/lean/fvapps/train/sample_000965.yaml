"vc-description": "You are given an integer sequence $A_1, A_2, \\ldots, A_N$ and\
  \ an integer $X$. Consider a $N \\times N$ matrix $B$, where $B_{i,j} = A_i + A_j$\
  \ for each valid $i$ and $j$.\nYou need to find the number of square submatrices\
  \ of $B$ such that the sum of their elements is $X$. Formally, find the number of\
  \ quartets $(x_1, y_1, x_2, y_2)$ such that $1 \\le x_1 \\le x_2 \\le N$, $1 \\\
  le y_1 \\le y_2 \\le N$, $x_2-x_1 = y_2-y_1$ and $\\sum_{i=x_1}^{x_2}\\sum_{j=y_1}^{y_2}\
  \ B_{i,j} = X$.\n\n-----Input-----\n- The first line of the input contains a single\
  \ integer $T$ denoting the number of test cases. The description of $T$ test cases\
  \ follows.\n- The first line of each test case contains two space-separated integers\
  \ $N$ and $X$.\n- The second line contains $N$ space-separated integers $A_1, A_2,\
  \ \\ldots, A_N$.\n\n-----Output-----\nFor each test case, print a single line containing\
  \ one integer ― the number of square submatrices with sum $X$.\n\n-----Constraints-----\n\
  - $1 \\le T \\le 100$\n- $1 \\le X \\le 10^6$\n- $1 \\le N \\le 10^5$\n- $1 \\le\
  \ A_i \\le 10^6$ for each valid $i$\n- the sum of $N$ over all test cases does not\
  \ exceed $10^6$\n\n-----Subtasks-----\nSubtask #1 (50 points): the sum of $N$ over\
  \ all test cases does not exceed $1,000$\nSubtask #2 (50 points): original constraints\n\
  \n-----Example Input-----\n2\n5 36\n1 2 3 1 12\n4 54\n3 3 3 3\n\n-----Example Output-----\n\
  6\n4"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def count_square_submatrices (n : Nat) (x : Nat) (arr : List Nat)\
  \ : Nat :=\n  sorry\n"
"vc-theorems": "theorem count_square_submatrices_nonnegative \n  (n : Nat) (x : Nat)\
  \ (arr : List Nat) :\n  count_square_submatrices n x arr ≥ 0 :=\n  sorry\n\n\ntheorem\
  \ count_square_submatrices_array_length\n  (n : Nat) (x : Nat) (arr : List Nat)\
  \ :\n  arr.length = n →\n  count_square_submatrices n x arr ≥ 0 :=\n  sorry\n\n\n\
  theorem count_square_submatrices_all_zeros \n  (n : Nat) (x : Nat) (arr : List Nat)\
  \ :\n  x > 0 →\n  (∀ i, i ∈ arr → i = 0) →\n  count_square_submatrices n x arr =\
  \ 0 :=\n  sorry\n\n\ntheorem count_square_submatrices_zero_array\n  (n : Nat) (x\
  \ : Nat) (arr : List Nat) :\n  (∀ i, i ∈ arr → i = 0) →\n  count_square_submatrices\
  \ n x arr = 0 :=\n  sorry\n\n/--\ninfo: 6\n-/\n#guard_msgs in\n#eval count_square_submatrices\
  \ 5 36 [1, 2, 3, 1, 12]\n\n/--\ninfo: 4\n-/\n#guard_msgs in\n#eval count_square_submatrices\
  \ 4 54 [3, 3, 3, 3]\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
