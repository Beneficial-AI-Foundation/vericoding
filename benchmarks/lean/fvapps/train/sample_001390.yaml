"vc-description": "Chef is again playing a game with his best friend Garry. As usual,\
  \ the rules of this game are extremely strange and uncommon.\nFirst, they are given\
  \ a stack of $N$ discs. Each disc has a distinct, non-negative integer written on\
  \ it. The players exchange turns to make a move. Before the start of the game, they\
  \ both agree upon a set of positive integers  $S$ of size $K$. It is guaranteed\
  \ that S contains the integer $1$. In a move, a player can select any value $x$\
  \ from $S$ and pop exactly $x$ elements from the top of the stack. The game ends\
  \ when there are no discs remaining. Chef goes first.\nScoring: For every disc a\
  \ player pops, his score increases by $2^p$ where $p$ is the integer written on\
  \ the disc. For example, if a player pops the discs, with integers $p_1, p_2, p_3,\
  \ \\dots, p_m$ written on it, during the entire course of the game, then his total\
  \ score will be $2^{p_1} + 2^{p_2} + 2^{p_3} + \\dots + 2^{p_m}$.\nThe player with\
  \ higher score wins the game. Determine the winner if both the players play optimally,\
  \ or if the game ends in a draw.\n\n-----Input:-----\n- First line contains $T$,\
  \ the number of testcases. Then the testcases follow.\n- The first line of each\
  \ test case contains two space separated integers $N$ and $K$, denoting the size\
  \ of the stack and the set S respectively.\n- Next line contains $N$ space separated\
  \ integers $A_i$ where $A_1$ is the topmost element, denoting the initial arrangement\
  \ of the stack.\n- The last line of each test case contains $K$ space separated\
  \ integers each denoting $x_i$.\n\n-----Output:-----\nFor each testcase, output\
  \ \"Chef\" (without quotes) if Chef wins, \"Garry\" (without quotes) if Garry wins,\
  \ otherwise \"Draw\" (without quotes) in a separate line.\n\n-----Constraints-----\n\
  - $1 \\leq T \\leq 1000$\n- $1 \\leq N \\leq 10^5$\n- $1 \\leq K \\leq \\min(100,\
  \ N)$\n- $0 \\leq A_i \\leq 10^9$\n- $1 \\leq x_i \\leq N$\n- $x_i \\neq x_j$ for\
  \ all $i \\neq j$\n- $A_i \\neq A_j$ for all $i \\neq j$\n- Set $S$ contains integer\
  \ $1$. \n- Sum of $N$ over all test cases does not exceed $10^5$.\n\n-----Sample\
  \ Input:-----\n1\n3 2\n5 7 1\n1 2\n\n-----Sample Output:-----\nChef\n\n-----Explanation:-----\n\
  Chef can select 2 from the set and draw the top two discs (with integers 5 and 7\
  \ written on it) from the stack. Garry cannot select 2 from the set as there is\
  \ only 1 disc left in the stack. However, he can select 1 from the set and pop the\
  \ last disc.\nSo, Chef's score = $2^5$ + $2^7$ = $160$\n\nGarry's score = $2^1$\
  \ = $2$\n\nChef wins."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def Winner := String\n\ndef determine_winner (n : Nat) (k : Nat)\
  \ (stack : List Nat) (moves : List Nat) : Winner := sorry\n"
"vc-theorems": "theorem winner_is_valid (n : Nat) (k : Nat) (stack : List Nat) (moves\
  \ : List Nat)\n  (hn : n ≥ 1) (hk : k ≥ 1 ∧ k ≤ 10) \n  (hstack : stack.length ≤\
  \ n ∧ ∀ x ∈ stack, x ≥ 1)\n  (hmoves : moves.length ≤ k ∧ ∀ x ∈ moves, x ≥ 1) :\n\
  \  determine_winner n k stack moves = \"Chef\" ∨ \n  determine_winner n k stack\
  \ moves = \"Garry\" := sorry\n\n\ntheorem winner_is_deterministic (stack moves :\
  \ List Nat)\n  (hstack : ∀ x ∈ stack, x ≥ 1)\n  (hmoves : ∀ x ∈ moves, x ≥ 1) :\n\
  \  determine_winner stack.length moves.length stack moves = \n  determine_winner\
  \ stack.length moves.length stack moves := sorry\n\n/--\ninfo: 'Chef'\n-/\n#guard_msgs\
  \ in\n#eval determine_winner 3 2 [5, 7, 1] [1, 2]\n\n/--\ninfo: 'Chef'\n-/\n#guard_msgs\
  \ in\n#eval determine_winner 4 2 [1, 2, 3, 4] [1, 2]\n\n/--\ninfo: 'Garry'\n-/\n\
  #guard_msgs in\n#eval determine_winner 2 1 [1, 2] [1]\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
