"vc-description": "Chef wants to organize a contest. Predicting difficulty levels\
  \ of the problems can be a daunting task. Chef wants his contests to be balanced\
  \ in terms of difficulty levels of the problems.\nAssume a contest had total P participants.\
  \ A problem that was solved by at least half of the participants (i.e. P / 2 (integer\
  \ division)) is said to be cakewalk difficulty. A problem solved by at max P / 10\
  \ (integer division) participants is categorized to be a hard difficulty.\nChef\
  \ wants the contest to be balanced. According to him, a balanced contest must have\
  \ exactly 1 cakewalk and exactly 2 hard problems. You are given the description\
  \ of N problems and the number of participants solving those problems. Can you tell\
  \ whether the contest was balanced or not?\n\n-----Input-----\nThe first line of\
  \ the input contains an integer T denoting the number of test cases.\nThe first\
  \ line of each test case contains two space separated integers, N, P denoting the\
  \ number of problems, number of participants respectively.\nThe second line contains\
  \ N space separated integers, i-th of which denotes number of participants solving\
  \ the i-th problem.\n\n-----Output-----\nFor each test case, output \"yes\" or \"\
  no\" (without quotes) denoting whether the contest is balanced or not.\n\n-----Constraints-----\n\
  - 1 ≤ T, N ≤ 500 \n- 1 ≤ P ≤ 108 \n- 1 ≤ Number of participants solving a problem\
  \ ≤ P\n\n-----Subtasks-----\n- Subtask #1 (40 points): P is a multiple of 10\n-\
  \ Subtask #2 (60 points): Original constraints\n\n-----Example-----\nInput\n6\n\
  3 100\n10 1 100\n3 100\n11 1 100\n3 100\n10 1 10\n3 100\n10 1 50\n4 100\n50 50 50\
  \ 50\n4 100\n1 1 1 1\n\nOutput\nyes\nno\nno\nyes\nno\nno\n\n-----Explanation-----\n\
  Example case 1.: The problems are of hard, hard and cakewalk difficulty. There is\
  \ 1 cakewalk and 2 hard problems, so the contest is balanced.\nExample case 2.:\
  \ The second problem is hard and the third is cakewalk. There is 1 cakewalk and\
  \ 1 hard problem, so the contest is not balanced.\nExample case 3.: All the three\
  \ problems are hard. So the contest is not balanced.\nExample case 4.: The problems\
  \ are of hard, hard, cakewalk difficulty. The contest is balanced.\nExample case\
  \ 5.: All the problems are cakewalk. The contest is not balanced.\nExample case\
  \ 6.: All the problems are hard. The contest is not balanced."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def is_balanced_contest (n : Nat) (p : Nat) (solved_counts : List\
  \ Nat) : String :=\n  sorry\n"
"vc-theorems": "theorem is_balanced_contest_valid_output (n : Nat) (p : Nat) (solved_counts\
  \ : List Nat) \n    (h1 : p ≥ 10) (h2 : p ≤ 10000) (h3 : solved_counts.length ≥\
  \ 3) (h4 : solved_counts.length ≤ 1000) :\n  let result := is_balanced_contest n\
  \ p solved_counts\n  result = \"yes\" ∨ result = \"no\" :=\nsorry\n\n\ntheorem is_balanced_contest_yes_conditions\
  \ (n : Nat) (p : Nat) (solved_counts : List Nat)\n    (h1 : p ≥ 10) (h2 : p ≤ 10000)\
  \ (h3 : solved_counts.length ≥ 3) (h4 : solved_counts.length ≤ 1000)\n    (h5 :\
  \ is_balanced_contest n p solved_counts = \"yes\") :\n  let cakewalk := solved_counts.filter\
  \ (fun x => x ≥ p/2)\n  let hard := solved_counts.filter (fun x => x ≤ p/10)\n \
  \ cakewalk.length = 1 ∧ hard.length = 2 :=\nsorry\n\n\ntheorem is_balanced_contest_all_same\
  \ (p : Nat) (h : p ≥ 10) (h2 : p ≤ 10000) :\n  is_balanced_contest 3 p [p/4, p/4,\
  \ p/4] = \"no\" :=\nsorry\n\n\ntheorem is_balanced_contest_no_hard (p : Nat) (h\
  \ : p ≥ 10) (h2 : p ≤ 10000) :\n  is_balanced_contest 3 p [p/2, p/2, p/2] = \"no\"\
  \ :=\nsorry\n\n\ntheorem is_balanced_contest_no_cakewalk (p : Nat) (h : p ≥ 10)\
  \ (h2 : p ≤ 10000) :\n  is_balanced_contest 3 p [p/10, p/10, p/10] = \"no\" :=\n\
  sorry\n\n\ntheorem is_balanced_contest_perfect_case (p : Nat) (h : p ≥ 10) (h2 :\
  \ p ≤ 10000) :\n  is_balanced_contest 3 p [p/10, p/10, p/2] = \"yes\" :=\nsorry\n\
  \n/--\ninfo: 'yes'\n-/\n#guard_msgs in\n#eval is_balanced_contest 3 100 [10, 1,\
  \ 100]\n\n/--\ninfo: 'no'\n-/\n#guard_msgs in\n#eval is_balanced_contest 3 100 [11,\
  \ 1, 100]\n\n/--\ninfo: 'no'\n-/\n#guard_msgs in\n#eval is_balanced_contest 4 100\
  \ [50, 50, 50, 50]\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: unguarded"
