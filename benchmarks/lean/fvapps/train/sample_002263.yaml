"vc-description": "Initially, you have the array $a$ consisting of one element $1$\
  \ ($a = [1]$).\n\nIn one move, you can do one of the following things:\n\n  Increase\
  \ some (single) element of $a$ by $1$ (choose some $i$ from $1$ to the current length\
  \ of $a$ and increase $a_i$ by one);  Append the copy of some (single) element of\
  \ $a$ to the end of the array (choose some $i$ from $1$ to the current length of\
  \ $a$ and append $a_i$ to the end of the array). \n\nFor example, consider the sequence\
  \ of five moves:\n\n  You take the first element $a_1$, append its copy to the end\
  \ of the array and get $a = [1, 1]$.  You take the first element $a_1$, increase\
  \ it by $1$ and get $a = [2, 1]$.  You take the second element $a_2$, append its\
  \ copy to the end of the array and get $a = [2, 1, 1]$.  You take the first element\
  \ $a_1$, append its copy to the end of the array and get $a = [2, 1, 1, 2]$.  You\
  \ take the fourth element $a_4$, increase it by $1$ and get $a = [2, 1, 1, 3]$.\
  \ \n\nYour task is to find the minimum number of moves required to obtain the array\
  \ with the sum at least $n$.\n\nYou have to answer $t$ independent test cases.\n\
  \n\n-----Input-----\n\nThe first line of the input contains one integer $t$ ($1\
  \ \\le t \\le 1000$) — the number of test cases. Then $t$ test cases follow.\n\n\
  The only line of the test case contains one integer $n$ ($1 \\le n \\le 10^9$) —\
  \ the lower bound on the sum of the array.\n\n\n-----Output-----\n\nFor each test\
  \ case, print the answer: the minimum number of moves required to obtain the array\
  \ with the sum at least $n$.\n\n\n-----Example-----\nInput\n5\n1\n5\n42\n1337\n\
  1000000000\n\nOutput\n0\n3\n11\n72\n63244"
"vc-preamble": "import Imports.AllImports\n\ndef min_moves_required (n : Nat) : Nat\
  \ :=\n  sorry\n"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def nat_sqrt (n : Nat) : Nat :=\n  sorry\n"
"vc-theorems": "theorem min_moves_non_negative (n : Nat) (h : n > 0) : \n  min_moves_required\
  \ n ≥ 0 := \n  sorry\n\n\ntheorem min_moves_less_than_input (n : Nat) (h : n > 0)\
  \ :\n  min_moves_required n ≤ n := \n  sorry\n\n\ntheorem min_moves_monotonic (n\
  \ : Nat) (h : n > 1) :\n  min_moves_required n ≥ min_moves_required (n-1) := \n\
  \  sorry \n\n\ntheorem min_moves_base_case :\n  min_moves_required 1 = 0 := \n \
  \ sorry\n\n/--\ninfo: 0\n-/\n#guard_msgs in\n#eval min_moves_required 1\n\n/--\n\
  info: 3\n-/\n#guard_msgs in\n#eval min_moves_required 5\n\n/--\ninfo: 11\n-/\n#guard_msgs\
  \ in\n#eval min_moves_required 42\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: guarded_and_plausible"
