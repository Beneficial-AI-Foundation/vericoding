"vc-description": "Complete the solution so that it returns a formatted string. The\
  \ return value should equal \"Value is VALUE\"  where value is a 5 digit padded\
  \ number. \n\nExample:\n\n```python\nsolution(5)  # should return \"Value is 00005\"\
  \n```"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def solution (n : Nat) : String := sorry\n\ndef toDigits (n : Nat)\
  \ : List Char := sorry \n"
"vc-theorems": "theorem solution_length (n : Nat) (h : n ≤ 99999) :\n  (solution n).length\
  \ = 14 ∧ \n  (solution n).startsWith \"Value is \" ∧\n  ((solution n).drop 9).all\
  \ Char.isDigit := sorry\n\n\ntheorem solution_padding (n : Nat) (h : n ≤ 99999)\
  \ :\n  let padded := (solution n).takeRight 5\n  padded.length = 5 ∧\n  padded.toNat?\
  \ = some n := sorry\n\n/--\ninfo: 'Value is 00005'\n-/\n#guard_msgs in\n#eval solution\
  \ 5\n\n/--\ninfo: 'Value is 01234'\n-/\n#guard_msgs in\n#eval solution 1234\n\n\
  /--\ninfo: 'Value is 00089'\n-/\n#guard_msgs in\n#eval solution 89\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
