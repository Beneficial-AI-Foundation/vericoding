"vc-description": "Jett is tired after destroying the town and she wants to have a\
  \ rest. She likes high places, that's why for having a rest she wants to get high\
  \ and she decided to craft staircases.\n\nA staircase is a squared figure that consists\
  \ of square cells. Each staircase consists of an arbitrary number of stairs. If\
  \ a staircase has $n$ stairs, then it is made of $n$ columns, the first column is\
  \ $1$ cell high, the second column is $2$ cells high, $\\ldots$, the $n$-th column\
  \ if $n$ cells high. The lowest cells of all stairs must be in the same row.\n\n\
  A staircase with $n$ stairs is called nice, if it may be covered by $n$ disjoint\
  \ squares made of cells. All squares should fully consist of cells of a staircase.\
  \ This is how a nice covered staircase with $7$ stairs looks like: [Image] \n\n\
  Find out the maximal number of different nice staircases, that can be built, using\
  \ no more than $x$ cells, in total. No cell can be used more than once.\n\n\n-----Input-----\n\
  \nThe first line contains a single integer $t$ $(1 \\le t \\le 1000)$  — the number\
  \ of test cases.\n\nThe description of each test case contains a single integer\
  \ $x$ $(1 \\le x \\le 10^{18})$  — the number of cells for building staircases.\n\
  \n\n-----Output-----\n\nFor each test case output a single integer  — the number\
  \ of different nice staircases, that can be built, using not more than $x$ cells,\
  \ in total.\n\n\n-----Example-----\nInput\n4\n1\n8\n6\n1000000000000000000\n\nOutput\n\
  1\n2\n1\n30\n\n\n\n-----Note-----\n\nIn the first test case, it is possible to build\
  \ only one staircase, that consists of $1$ stair. It's nice. That's why the answer\
  \ is $1$.\n\nIn the second test case, it is possible to build two different nice\
  \ staircases: one consists of $1$ stair, and another consists of $3$ stairs. This\
  \ will cost $7$ cells. In this case, there is one cell left, but it is not possible\
  \ to use it for building any nice staircases, that have not been built yet. That's\
  \ why the answer is $2$.\n\nIn the third test case, it is possible to build only\
  \ one of two nice staircases: with $1$ stair or with $3$ stairs. In the first case,\
  \ there will be $5$ cells left, that may be used only to build a staircase with\
  \ $2$ stairs. This staircase is not nice, and Jett only builds nice staircases.\
  \ That's why in this case the answer is $1$. If Jett builds a staircase with $3$\
  \ stairs, then there are no more cells left, so the answer is $1$ again."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def count_nice_staircases (n : Nat) : Nat := sorry\n\ntheorem count_nice_staircases_positive\
  \ (n : Nat) (h : n > 0):\n  count_nice_staircases n > 0 := sorry\n"
"vc-theorems": "theorem count_nice_staircases_bounded (n : Nat):\n  count_nice_staircases\
  \ n ≤ n := sorry\n\n\ntheorem count_nice_staircases_deterministic (n : Nat):\n \
  \ count_nice_staircases n = count_nice_staircases n := sorry\n\n\ntheorem count_nice_staircases_monotonic\
  \ (n : Nat) (h : n > 1):\n  count_nice_staircases n ≥ count_nice_staircases (n-1)\
  \ := sorry\n\n/--\ninfo: 1\n-/\n#guard_msgs in\n#eval count_nice_staircases 1\n\n\
  /--\ninfo: 2\n-/\n#guard_msgs in\n#eval count_nice_staircases 8\n\n/--\ninfo: 1\n\
  -/\n#guard_msgs in\n#eval count_nice_staircases 6\n\n/--\ninfo: 30\n-/\n#guard_msgs\
  \ in\n#eval count_nice_staircases 1000000000000000000\n"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded_and_plausible"
