"vc-description": "# Convert Improper Fraction to Mixed Number\n\nYou will need to\
  \ convert an [improper fraction](https://www.mathplacementreview.com/arithmetic/fractions.php#improper-fractions)\
  \ to a [mixed number](https://www.mathplacementreview.com/arithmetic/fractions.php#mixed-number).\
  \ For example:\n\n```python\nget_mixed_num('18/11') # Should return '1 7/11'\nget_mixed_num('13/5')\
  \ # Should return '2 3/5'\nget_mixed_num('75/10') # Should return '7 5/10'\n```\n\
  \nNOTE: All fractions will be greater than 0."
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def get_mixed_num (frac: String) : String := sorry\n\ndef is_valid_mixed_num\
  \ (result: String) : Bool := sorry\n"
"vc-theorems": "theorem mixed_num_is_valid {n d: Nat} (h1: 0 < n) (h2: n ≤ 10000)\
  \ (h3: 0 < d) (h4: d ≤ 100) :\n  is_valid_mixed_num (get_mixed_num s!\"{n}/{d}\"\
  ) := sorry\n\n\ntheorem mixed_num_components_sum {n d: Nat} (h1: 0 < n) (h2: n ≤\
  \ 10000) (h3: 0 < d) (h4: d ≤ 100) :\n  let result := get_mixed_num s!\"{n}/{d}\"\
  \n  let whole := result.splitOn \" \" |>.head!\n  let frac := result.splitOn \"\
  \ \" |>.tail!.head!\n  let n2 := frac.splitOn \"/\" |>.head!\n  let d2 := frac.splitOn\
  \ \"/\" |>.tail!.head!\n  (whole.toNat! * d2.toNat! + n2.toNat! = n) ∧ (d2.toNat!\
  \ = d) := sorry\n\n\ntheorem whole_numbers {n: Nat} (h: 0 < n) (h2: n ≤ 100) :\n\
  \  get_mixed_num s!\"{n}/1\" = s!\"{n} 0/1\" := sorry\n\n\ntheorem edge_cases :\n\
  \  (get_mixed_num \"1/1\" = \"1 0/1\") ∧ \n  (get_mixed_num \"0/1\" = \"0 0/1\"\
  ) := sorry\n\n/--\ninfo: '1 7/11'\n-/\n#guard_msgs in\n#eval get_mixed_num \"18/11\"\
  \n\n/--\ninfo: '2 3/5'\n-/\n#guard_msgs in\n#eval get_mixed_num \"13/5\"\n\n/--\n\
  info: '7 5/10'\n-/\n#guard_msgs in\n#eval get_mixed_num \"75/10\"\n"
"vc-postamble": "-- Apps difficulty: introductory\n-- Assurance level: unguarded"
