"vc-description": "In an infinite binary tree where every node has two children, the\
  \ nodes are labelled in row order.\nIn the odd numbered rows (ie., the first, third,\
  \ fifth,...), the labelling is left to right, while in the even numbered rows (second,\
  \ fourth, sixth,...), the labelling is right to left.\n\nGiven the label of a node\
  \ in this tree, return the labels in the path from the root of the tree to the node\
  \ with that label.\n \nExample 1:\nInput: label = 14\nOutput: [1,3,4,14]\n\nExample\
  \ 2:\nInput: label = 26\nOutput: [1,2,6,10,26]\n\n \nConstraints:\n\n1 <= label\
  \ <= 10^6"
"vc-preamble": "import Imports.AllImports"
"vc-helpers": "-- <vc-helpers>\n-- </vc-helpers>"
"vc-definitions": "def path_in_zigzag_tree (label: Nat) : List Nat := sorry\n\ntheorem\
  \ path_starts_with_one {label: Nat} :\n  label > 0 → (path_in_zigzag_tree label).head?\
  \ = some 1 := sorry\n"
"vc-theorems": "theorem path_strictly_increasing {label: Nat} (i: Nat) :\n  label\
  \ > 0 → i > 0 → i < (path_in_zigzag_tree label).length →\n  (path_in_zigzag_tree\
  \ label)[i-1]! < (path_in_zigzag_tree label)[i]! := sorry\n\n\ntheorem path_length_matches_binary\
  \ {label: Nat} :\n  label > 0 → (path_in_zigzag_tree label).length = Nat.log2 label\
  \ + 1 := sorry\n\n\ntheorem path_elements_in_valid_range {label: Nat} (i: Nat) :\n\
  \  label > 0 → i < (path_in_zigzag_tree label).length →\n  2^i ≤ (path_in_zigzag_tree\
  \ label)[i]! ∧ \n  (path_in_zigzag_tree label)[i]! < 2^(i+1) := sorry\n\n\ntheorem\
  \ path_for_small_labels_one :\n  path_in_zigzag_tree 1 = [1] := sorry\n\n\ntheorem\
  \ path_for_small_labels_two_three (label: Nat) :\n  label > 1 → label ≤ 3 →\n  path_in_zigzag_tree\
  \ label = [1, label] := sorry\n\n\ntheorem path_for_powers_of_two (n: Nat) :\n \
  \ n > 0 →\n  let label := 2^n\n  (path_in_zigzag_tree label).length = n + 1 ∧\n\
  \  (path_in_zigzag_tree label).head? = some 1 ∧\n  (path_in_zigzag_tree label).getLast?\
  \ = some label := sorry"
"vc-postamble": "-- Apps difficulty: interview\n-- Assurance level: guarded"
