vc-description: |-
  /-
  Given an integer array with all positive numbers and no duplicates, find the number of possible combinations that add up to a positive integer target.

  Example:

  nums = [1, 2, 3]
  target = 4

  The possible combination ways are:
  (1, 1, 1, 1)
  (1, 1, 2)
  (1, 2, 1)
  (1, 3)
  (2, 1, 1)
  (2, 2)
  (3, 1)

  Note that different sequences are counted as different combinations.

  Therefore the output is 7.

  Follow up:
  What if negative numbers are allowed in the given array?
  How does it change the problem?
  What limitation we need to add to the question to allow negative numbers? 

  Credits:Special thanks to @pbrother for adding this problem and creating all test cases.
  -/

vc-preamble: |

vc-helpers: |

vc-definitions: |-
  def combination_sum4 (nums : List Int) (target : Int) : Int := sorry

  theorem combination_sum4_non_negative (nums : List Int) (target : Int) 
      (h1 : ∀ n ∈ nums, n > 0) (h2 : target > 0) :
    combination_sum4 nums target ≥ 0 := sorry

vc-theorems: |-
  theorem combination_sum4_matches_single 
      (nums : List Int) (target : Int)
      (h1 : target ∈ nums) (h2 : ∀ n ∈ nums, n > 0) (h3 : target > 0) :
    combination_sum4 nums target ≥ 1 := sorry

  theorem combination_sum4_all_greater
      (nums : List Int) (target : Int)
      (h1 : ∀ n ∈ nums, n > target) (h2 : target > 0) :
    combination_sum4 nums target = 0 := sorry

  theorem combination_sum4_less_than_min
      (nums : List Int) (target : Int)
      (h1 : ∀ n ∈ nums, n > 0) 
      (h2 : target > 0)
      (h3 : ∀ n ∈ nums, target < n) :
    combination_sum4 nums target = 0 := sorry

  theorem combination_sum4_order_independent
      (nums₁ nums₂ : List Int) (target : Int)
      (h1 : ∀ n ∈ nums₁, n > 0) 
      (h2 : target > 0)
      (h3 : ∀ n, n ∈ nums₁ ↔ n ∈ nums₂) :
    combination_sum4 nums₁ target = combination_sum4 nums₂ target := sorry

vc-postamble: |-
  -- Apps difficulty: interview
  -- Assurance level: unguarded

  /-
  info: 7
  -/
  #guard_msgs in
  #eval combination_sum4 [1, 2, 3] 4

  /-
  info: 3
  -/
  #guard_msgs in
  #eval combination_sum4 [1, 2] 3

  /-
  info: 1
  -/
  #guard_msgs in
  #eval combination_sum4 [2] 2

