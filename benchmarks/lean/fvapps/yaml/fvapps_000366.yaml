vc-description: |-
  /-
  Given an unsorted array, find the maximum difference between the successive elements in its sorted form.
  
  Return 0 if the array contains less than 2 elements.
  
  Example 1:
  
  Input: [3,6,9,1]
  Output: 3
  Explanation: The sorted form of the array is [1,3,6,9], either
               (3,6) or (6,9) has the maximum difference 3.
  
  Example 2:
  
  Input: [10]
  Output: 0
  Explanation: The array contains less than 2 elements, therefore return 0.
  
  Note:
  
         You may assume all elements in the array are non-negative integers and fit in the 32-bit signed integer range.
         Try to solve it in linear time/space.
  -/

vc-preamble: |-
  def maximum_gap (nums : List Nat) : Nat :=
    sorry
  
  def Permutation (l1 l2 : List α) : Prop :=
    sorry

vc-helpers: |-

vc-definitions: |-
  def sort (l : List α) (lt : α → α → Bool) : List α :=
    sorry

vc-theorems: |-
  theorem maximum_gap_empty_or_singleton {nums : List Nat} : 
    nums.length ≤ 1 → maximum_gap nums = 0 :=
    sorry
  
  theorem maximum_gap_nonnegative {nums : List Nat} :
    maximum_gap nums ≥ 0 :=
    sorry
  
  theorem maximum_gap_bounded {nums : List Nat} :
    nums.length > 0 →
    maximum_gap nums ≤ List.foldl Nat.max 0 nums - List.foldl Nat.min 0 nums :=
    sorry
  
  theorem maximum_gap_is_max_consecutive_diff {nums : List Nat} (h : nums.length > 1) :
    let sorted := sort nums (fun x y => x < y)
    let gaps := List.zipWith (fun x y => y - x) sorted (List.drop 1 sorted)
    maximum_gap nums = List.foldl Nat.max 0 gaps :=
    sorry
  
  theorem maximum_gap_permutation_invariant {nums₁ nums₂ : List Nat} :
    nums₁.length > 1 →
    Permutation nums₁ nums₂ →
    maximum_gap nums₁ = maximum_gap nums₂ :=
    sorry
  
  /-
  info: 3
  -/
  -- #guard_msgs in
  -- #eval maximum_gap [3, 6, 9, 1]
  
  /-
  info: 0
  -/
  -- #guard_msgs in
  -- #eval maximum_gap [10]
  
  /-
  info: 3
  -/
  -- #guard_msgs in
  -- #eval maximum_gap [1, 2, 2, 5, 7, 10]

vc-postamble: |-
  -- Apps difficulty: interview
  -- Assurance level: unguarded

