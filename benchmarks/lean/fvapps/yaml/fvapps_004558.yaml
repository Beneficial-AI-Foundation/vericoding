vc-description: |-
  /-
  Given 2 strings, `a` and `b`, return a string of the form short+long+short, with the shorter string on the outside
  and the longer string on the inside. The strings will not be the same length, but they may be empty ( length `0` ).

  For example:

  ```python
  solution("1", "22") # returns "1221"
  solution("22", "1") # returns "1221"
  ```
  -/

vc-preamble: |

vc-helpers: |

vc-definitions: |-
  def solution (a b : String) : String := sorry

  theorem solution_result_structure (a b : String) :
    (String.length a < String.length b → solution a b = a ++ b ++ a) ∧ 
    (String.length a ≥ String.length b → solution a b = b ++ a ++ b) := sorry

vc-theorems: |-
  theorem solution_result_length (a b : String) :
    String.length (solution a b) = 
      2 * min (String.length a) (String.length b) + 
      max (String.length a) (String.length b) := sorry

  theorem solution_empty_string (s : String) :
    solution "" s = s ∧ solution s "" = s := sorry

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded

  /--
  info: '1221'
  -/
  #guard_msgs in
  #eval solution "1" "22"

  /--
  info: '1221'
  -/
  #guard_msgs in
  #eval solution "22" "1"

  /--
  info: 'xyz'
  -/
  #guard_msgs in
  #eval solution "" "xyz"

