vc-description: |-
  /-
  #It's show time!
  Archers have gathered from all around the world to participate in the Arrow Function Faire. But the faire will only start if there are archers signed and if they all have enough arrows in their quivers - at least 5 is the requirement! Are all the archers ready?

  #Reference
  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions

  #Argument
  `archers` is an array of integers, in which each element corresponds to the number of arrows each archer has.

  #Return
  Your function must return `true` if the requirements are met or `false` otherwise.

  #Examples
  `archersReady([1, 2, 3, 4, 5, 6, 7, 8])` returns `false` because there are archers with not enough arrows.

  `archersReady([5, 6, 7, 8])` returns `true`.
  -/

vc-preamble: |

vc-helpers: |

vc-definitions: |-
  def archers_ready (archers : List Int) : Bool := sorry

  theorem empty_list_false : 
    ∀ (archers : List Int), archers = [] → archers_ready archers = false := sorry

vc-theorems: |-
  theorem all_above_five_true :
    ∀ (archers : List Int), 
      archers ≠ [] → 
      (∀ x ∈ archers, x ≥ 5) → 
      archers_ready archers = true := sorry

  theorem any_below_five_false :
    ∀ (archers : List Int),
      archers ≠ [] →
      (∀ x ∈ archers, x ≤ 4) →
      archers_ready archers = false := sorry

  theorem any_below_five_makes_false :
    ∀ (archers : List Int),
      (∃ x ∈ archers, x < 5) →
      archers_ready archers = false := sorry

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded

  /--
  info: False
  -/
  #guard_msgs in
  #eval archers_ready []

  /--
  info: True
  -/
  #guard_msgs in
  #eval archers_ready [5, 6, 7, 8]

  /--
  info: False
  -/
  #guard_msgs in
  #eval archers_ready [1, 2, 3, 4, 5, 6, 7, 8]

