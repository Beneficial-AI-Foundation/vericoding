vc-description: |-
  /-
  A die simulator generates a random number from 1 to 6 for each roll. You introduced a constraint to the generator such that it cannot roll the number i more than rollMax[i] (1-indexed) consecutive times. 
  Given an array of integers rollMax and an integer n, return the number of distinct sequences that can be obtained with exact n rolls.
  Two sequences are considered different if at least one element differs from each other. Since the answer may be too large, return it modulo 10^9 + 7.
  
  Example 1:
  Input: n = 2, rollMax = [1,1,2,2,2,3]
  Output: 34
  Explanation: There will be 2 rolls of die, if there are no constraints on the die, there are 6 * 6 = 36 possible combinations. In this case, looking at rollMax array, the numbers 1 and 2 appear at most once consecutively, therefore sequences (1,1) and (2,2) cannot occur, so the final answer is 36-2 = 34.
  
  Example 2:
  Input: n = 2, rollMax = [1,1,1,1,1,1]
  Output: 30
  
  Example 3:
  Input: n = 3, rollMax = [1,1,1,2,2,3]
  Output: 181
  
  Constraints:
  
  1 <= n <= 5000
  rollMax.length == 6
  1 <= rollMax[i] <= 15
  -/

vc-preamble: |-

vc-helpers: |-

vc-definitions: |-
  def dieSimulator (n: Nat) (rollMax: List Nat) : Nat :=
    sorry

vc-theorems: |-
  theorem dieSimulator_within_bounds (n: Nat) (rollMax: List Nat)
    (h1: 1 ≤ n) (h2: n ≤ 20)
    (h3: rollMax.length = 6)
    (h4: ∀ x ∈ rollMax, 1 ≤ x ∧ x ≤ 15) :
    0 ≤ dieSimulator n rollMax ∧ dieSimulator n rollMax < 1000000007 :=
    sorry
  
  theorem dieSimulator_base_case (rollMax: List Nat)
    (h1: rollMax.length = 6)
    (h2: ∀ x ∈ rollMax, 1 ≤ x ∧ x ≤ 15) :
    dieSimulator 1 rollMax = 6 :=
    sorry
  
  theorem dieSimulator_monotonic (n: Nat) (strict loose: List Nat)
    (h1: strict.length = 6)
    (h2: loose.length = 6)
    (h3: ∀ i ∈ strict, i = 1)
    (h4: ∀ i ∈ loose, i = 15) :
    dieSimulator n strict ≤ dieSimulator n loose :=
    sorry
  
  /-
  info: 34
  -/
  -- #guard_msgs in
  -- #eval dieSimulator 2 [1, 1, 2, 2, 2, 3]
  
  /-
  info: 30
  -/
  -- #guard_msgs in
  -- #eval dieSimulator 2 [1, 1, 1, 1, 1, 1]
  
  /-
  info: 181
  -/
  -- #guard_msgs in
  -- #eval dieSimulator 3 [1, 1, 1, 2, 2, 3]

vc-postamble: |-
  -- Apps difficulty: interview
  -- Assurance level: guarded

