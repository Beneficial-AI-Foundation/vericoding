vc-description: |-
  /-
  Hamed has recently found a string t and suddenly became quite fond of it. He spent several days trying to find all occurrences of t in other strings he had. Finally he became tired and started thinking about the following problem. Given a string s how many ways are there to extract k ≥ 1 non-overlapping substrings from it such that each of them contains string t as a substring? More formally, you need to calculate the number of ways to choose two sequences a_1, a_2, ..., a_{k} and b_1, b_2, ..., b_{k} satisfying the following requirements:

    k ≥ 1  $\forall i(1 \leq i \leq k) 1 \leq a_{i}, b_{i} \leq|s|$  $\forall i(1 \leq i \leq k) b_{i} \geq a_{i}$  $\forall i(2 \leq i \leq k) a_{i} > b_{i - 1}$  $\forall i(1 \leq i \leq k)$  t is a substring of string s_{a}_{i}s_{a}_{i} + 1... s_{b}_{i} (string s is considered as 1-indexed). 

  As the number of ways can be rather large print it modulo 10^9 + 7.

  -----Input-----

  Input consists of two lines containing strings s and t (1 ≤ |s|, |t| ≤ 10^5). Each string consists of lowercase Latin letters.

  -----Output-----

  Print the answer in a single line.

  -----Examples-----
  Input
  ababa
  aba

  Output
  5

  Input
  welcometoroundtwohundredandeightytwo
  d

  Output
  274201

  Input
  ddd
  d

  Output
  12
  -/

vc-preamble: |-
  def count_substring_ways (s t : String) : Nat :=
  sorry

vc-helpers: |

vc-definitions: |-
  def is_substring (s t : String) : Bool :=
  sorry

vc-theorems: |-
  theorem count_substring_ways_nonnegative (s t : String) : 
    0 ≤ count_substring_ways s t ∧ count_substring_ways s t < 1000000007 :=
  sorry

  theorem substring_gives_nonzero (s t : String)
    (h : t.length > 0)
    (h2 : is_substring s t = true) :
    0 < count_substring_ways s t :=
  sorry

vc-postamble: |-
  -- Apps difficulty: competition
  -- Assurance level: unguarded

  /-
  info: 5
  -/
  #guard_msgs in
  #eval count_substring_ways "ababa" "aba"

  /-
  info: 274201
  -/
  #guard_msgs in
  #eval count_substring_ways "welcometoroundtwohundredandeightytwo" "d"

  /-
  info: 12
  -/
  #guard_msgs in
  #eval count_substring_ways "ddd" "d"

