vc-description: |-
  /-
  In an alien language, surprisingly they also use english lowercase letters, but possibly in a different order. The order of the alphabet is some permutation of lowercase letters.
  Given a sequence of words written in the alien language, and the order of the alphabet, return true if and only if the given words are sorted lexicographicaly in this alien language.

  Example 1:
  Input: words = ["hello","leetcode"], order = "hlabcdefgijkmnopqrstuvwxyz"
  Output: true
  Explanation: As 'h' comes before 'l' in this language, then the sequence is sorted.

  Example 2:
  Input: words = ["word","world","row"], order = "worldabcefghijkmnpqstuvxyz"
  Output: false
  Explanation: As 'd' comes after 'l' in this language, then words[0] > words[1], hence the sequence is unsorted.

  Example 3:
  Input: words = ["apple","app"], order = "abcdefghijklmnopqrstuvwxyz"
  Output: false
  Explanation: The first three characters "app" match, and the second string is shorter (in size.) According to lexicographical rules "apple" > "app", because 'l' > '∅', where '∅' is defined as the blank character which is less than any other character (More info).

  Constraints:

  1 <= words.length <= 100
  1 <= words[i].length <= 20
  order.length == 26
  All characters in words[i] and order are English lowercase letters.
  -/

vc-preamble: |

vc-helpers: |

vc-definitions: |-
  def isAlienSorted (words : List String) (order : String) : Bool := sorry

  theorem single_word_always_sorted (w : String) (order : String) 
    (h : ∀ c, c ∈ w.data → c ∈ order.data) :
    isAlienSorted [w] order := sorry

vc-theorems: |-
  theorem identical_words_sorted (w : String) (order : String) 
    (h : ∀ c, c ∈ w.data → c ∈ order.data) :
    isAlienSorted [w, w] order := sorry

  theorem prefix_property (w longer : String) (order : String)
    (h₁ : ∀ c, c ∈ w.data → c ∈ order.data)
    (h₂ : ∀ c, c ∈ longer.data → c ∈ order.data)
    (h₃ : ∃ s, longer = w.append s) :
    (¬ isAlienSorted [longer, w] order) ∧ 
    isAlienSorted [w, longer] order := sorry

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded

  /--
  info: True
  -/
  #guard_msgs in
  #eval is_alien_sorted ["hello", "leetcode"] "hlabcdefgijkmnopqrstuvwxyz"

  /--
  info: False
  -/
  #guard_msgs in
  #eval is_alien_sorted ["word", "world", "row"] "worldabcefghijkmnpqstuvxyz"

  /--
  info: False
  -/
  #guard_msgs in
  #eval is_alien_sorted ["apple", "app"] "abcdefghijklmnopqrstuvwxyz"

