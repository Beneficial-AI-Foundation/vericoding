vc-description: |-
  /-
  Write a function that accepts a square matrix (`N x N` 2D array) and returns the determinant of the matrix.

  How to take the determinant of a matrix -- it is simplest to start with the smallest cases:

  A 1x1 matrix `|a|` has determinant `a`.

  A 2x2 matrix `[ [a, b], [c, d] ]` or
  ```
  |a  b|
  |c  d|
  ```
  has determinant: `a*d - b*c`.

  The determinant of an `n x n` sized matrix is calculated by reducing the problem to the calculation of the determinants of `n` matrices of`n-1 x n-1` size.

  For the 3x3 case, `[ [a, b, c], [d, e, f], [g, h, i] ]` or
  ```
  |a b c|  
  |d e f|  
  |g h i|  
  ```
  the determinant is: `a * det(a_minor) - b * det(b_minor) + c * det(c_minor)` where `det(a_minor)` refers to taking the determinant of the 2x2 matrix created by crossing out the row and column in which the element a occurs:
  ```
  |- - -|
  |- e f|
  |- h i|  
  ```
  Note the alternation of signs. 

  The determinant of larger matrices are calculated analogously, e.g. if M is a 4x4 matrix with first row `[a, b, c, d]`, then:

  `det(M) = a * det(a_minor) - b * det(b_minor) + c * det(c_minor) - d * det(d_minor)`
  -/

vc-preamble: |-
  def Matrix (α : Type u) (n : Nat) := Array (Array α)

  def standardDeterminant {n : Nat} (M : Matrix Int n) : Int := sorry

  def identityMatrix (n : Nat) : Matrix Int n := sorry
  def zeroMatrix (n : Nat) : Matrix Int n := sorry

vc-helpers: |

vc-definitions: |-
  def scaleMatrix {n : Nat} (c : Int) (M : Matrix Int n) : Matrix Int n := sorry
  def determinant {n : Nat} (M : Matrix Int n) : Int := sorry

vc-theorems: |-
  theorem determinant_matches_standard_implementation {n : Nat} (M : Matrix Int n) :
    determinant M = standardDeterminant M := 
    sorry

  theorem determinant_identity {n : Nat} :
    determinant (identityMatrix n) = 1 :=
    sorry 

  theorem determinant_zero {n : Nat} :
    determinant (zeroMatrix n) = 0 :=
    sorry

  theorem determinant_scaling {n : Nat} (M : Matrix Int n) (c : Int) :
    determinant (scaleMatrix c M) = c^n * determinant M :=
    sorry

vc-postamble: |-
  -- Apps difficulty: interview
  -- Assurance level: unguarded

  /-
  info: 5
  -/
  #guard_msgs in
  #eval determinant #[[5]]

  /-
  info: -2
  -/
  #guard_msgs in
  #eval determinant #[[1, 2], [3, 4]]

  /-
  info: 0
  -/
  #guard_msgs in
  #eval determinant #[[1, 2, 3], [4, 5, 6], [7, 8, 9]]

