vc-description: |-
  /-
  **This Kata is intended as a small challenge for my students**

  All Star Code Challenge #29

  Your friend Nhoj has dislexia, but can easily read messages if the words are written backwards.  
  Create a function called `reverseSentence()/reverse_sentence()` that accepts a string argument. The function returns a string of the same length with each word reversed, but still in their original order.

  ```python
  reverse_sentence("Hello !Nhoj Want to have lunch?") # "olleH johN! tnaW ot evah ?hcnul"
  ```
  Note:  
  A "word" should be considered a string split by a space character, " "
  Letter capitalization should be maintained.
  -/

vc-preamble: |-
  def String.reverse (s : String) : String := sorry

  def split (s : String) (sep : String) : List String := sorry

vc-helpers: |

vc-definitions: |-
  def reverse_sentence (s : String) : String := sorry

  theorem word_count_preserved (words : List String) :
    let sentence := " ".intercalate words
    let reversed := reverse_sentence sentence
    (split sentence " ").length = (split reversed " ").length :=
  sorry

vc-theorems: |-
  theorem empty_string :
    reverse_sentence "" = "" :=
  sorry

  theorem each_word_reversed (s : String) :
    let original_words := split s " "
    let result_words := split (reverse_sentence s) " "
    ∀ i, i < original_words.length →
      result_words[i]! = String.reverse original_words[i]! :=
  sorry

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded

  /-
  info: expected1
  -/
  #guard_msgs in
  #eval reverse_sentence "Hello !Nhoj Want to have lunch?"

  /-
  info: expected2
  -/
  #guard_msgs in
  #eval reverse_sentence "CodeWars rules!"

  /-
  info: expected3
  -/
  #guard_msgs in
  #eval reverse_sentence ""

