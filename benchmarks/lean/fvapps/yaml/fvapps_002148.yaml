vc-description: |-
  /-
  Oleg's favorite subjects are History and Math, and his favorite branch of mathematics is division.

  To improve his division skills, Oleg came up with $t$ pairs of integers $p_i$ and $q_i$ and for each pair decided to find the greatest integer $x_i$, such that:   $p_i$ is divisible by $x_i$;  $x_i$ is not divisible by $q_i$.  Oleg is really good at division and managed to find all the answers quickly, how about you?

  -----Input-----

  The first line contains an integer $t$ ($1 \le t \le 50$) — the number of pairs.

  Each of the following $t$ lines contains two integers $p_i$ and $q_i$ ($1 \le p_i \le 10^{18}$; $2 \le q_i \le 10^{9}$) — the $i$-th pair of integers.

  -----Output-----

  Print $t$ integers: the $i$-th integer is the largest $x_i$ such that $p_i$ is divisible by $x_i$, but $x_i$ is not divisible by $q_i$.

  One can show that there is always at least one value of $x_i$ satisfying the divisibility conditions for the given constraints.

  -----Example-----
  Input
  3
  10 4
  12 6
  179 822

  Output
  10
  4
  179

  -----Note-----

  For the first pair, where $p_1 = 10$ and $q_1 = 4$, the answer is $x_1 = 10$, since it is the greatest divisor of $10$ and $10$ is not divisible by $4$.

  For the second pair, where $p_2 = 12$ and $q_2 = 6$, note that   $12$ is not a valid $x_2$, since $12$ is divisible by $q_2 = 6$;  $6$ is not valid $x_2$ as well: $6$ is also divisible by $q_2 = 6$.  The next available divisor of $p_2 = 12$ is $4$, which is the answer, since $4$ is not divisible by $6$.
  -/

vc-preamble: |

vc-helpers: |

vc-definitions: |-
  def solve_division_pairs (p q : Nat) : Nat :=
  sorry

vc-theorems: |-
  theorem division_pairs_divides (p q result : Nat) 
    (h1 : result = solve_division_pairs p q) :
    p % result = 0 := by
  sorry

  theorem division_pairs_le_p (p q result : Nat)
    (h1 : result = solve_division_pairs p q) :
    result ≤ p := by
  sorry

  theorem division_pairs_indivisible (p q result : Nat) 
    (h1 : result = solve_division_pairs p q)
    (h2 : p % q ≠ 0) : 
    result = p := by
  sorry

  theorem division_pairs_positive (p q result : Nat)
    (h1 : result = solve_division_pairs p q)
    (h2 : p > 0)
    (h3 : q > 0) :
    result > 0 := by
  sorry

  theorem division_pairs_identical (p : Nat)
    (h1 : p % 2 = 0)
    (h2 : p > 0) :
    solve_division_pairs p p = p / 2 := by
  sorry

vc-postamble: |-
  -- Apps difficulty: competition
  -- Assurance level: guarded

  /-
  info: 10
  -/
  #guard_msgs in
  #eval solve_division_pairs 10 4

  /-
  info: 4
  -/
  #guard_msgs in
  #eval solve_division_pairs 12 6

  /-
  info: 179
  -/
  #guard_msgs in
  #eval solve_division_pairs 179 822

  /-
  info: 1048576
  -/
  #guard_msgs in
  #eval solve_division_pairs 42034266112 80174

  /-
  info: 114141144
  -/
  #guard_msgs in
  #eval solve_division_pairs 228282288 228282288

  /-
  info: 1
  -/
  #guard_msgs in
  #eval solve_division_pairs 1 323

