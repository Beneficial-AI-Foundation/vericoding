vc-description: |-
  /-
  [Generala](https://en.wikipedia.org/wiki/Generala) is a dice game popular in South America. It's very similar to [Yahtzee](https://en.wikipedia.org/wiki/Yahtzee) but with a different scoring approach. It is played with 5 dice, and the possible results are:

  | Result        | Points | Rules                                                                                                                                          | Samples                            |
  |---------------|--------|------------------------------------------------------------------------------------------------------------------------------------------------|------------------------------------|
  | GENERALA      | 50     | When all rolled dice are of the same value.                                                                                                    | 66666, 55555, 44444, 11111, 22222, 33333.  |
  | POKER         | 40     | Four rolled dice are of the same value.                                                                                                        | 44441, 33233, 22262.               |
  | FULLHOUSE     | 30     | Three rolled dice are of the same value, the remaining two are of a different value, but equal among themselves.                               | 12121, 44455, 66116.               |
  | STRAIGHT      | 20     | Rolled dice are in sequential order. Dice with value `1` is a wildcard that can be used at the beginning of the straight, or at the end of it. | 12345, 23456, 34561, 13654, 62534. |
  | Anything else | 0      | Anything else will return `0` points.                                                                                                          | 44421, 61623, 12346.               |

  Please note that dice are not in order; for example `12543` qualifies as a `STRAIGHT`. Also, No matter what string value you get for the dice, you can always reorder them any order you need to make them qualify as a `STRAIGHT`. I.E. `12453`, `16543`, `15364`, `62345` all qualify as valid `STRAIGHT`s.

  Complete the function that is given the rolled dice as a string of length `5` and return the points scored in that roll. You can safely assume that provided parameters will be valid:

   * String of length 5,
   * Each character will be a number between `1` and `6`
  -/

vc-preamble: |

vc-helpers: |

vc-definitions: |-
  def points (dice: String) : Nat :=
    sorry

vc-theorems: |-
  theorem points_valid_score (dice: String) (h: dice.length = 5) 
    (h': ∀ c ∈ dice.data, '1' ≤ c ∧ c ≤ '6') :
    points dice = 0 ∨ points dice = 20 ∨ points dice = 30 ∨ points dice = 40 ∨ points dice = 50 := 
  sorry

  theorem generala_iff (dice: String) (h: dice.length = 5) 
    (h': ∀ c ∈ dice.data, '1' ≤ c ∧ c ≤ '6') :
    (∀ (c₁ c₂ : Char), c₁ ∈ dice.data → c₂ ∈ dice.data → c₁ = c₂) ↔ 
    points dice = 50 :=
  sorry

  theorem poker_iff (dice: String) (h: dice.length = 5)
    (h': ∀ c ∈ dice.data, '1' ≤ c ∧ c ≤ '6') :
    (∃ d, (dice.data.filter (· = d)).length ≥ 4) ↔
    points dice = 40 :=
  sorry

  theorem full_house_score (dice: String) (h: dice.length = 5)
    (h': ∀ c ∈ dice.data, '1' ≤ c ∧ c ≤ '6') :
    points dice = 30 →
    ∃ d₁ d₂, d₁ ≠ d₂ ∧
      (dice.data.filter (· = d₁)).length = 3 ∧
      (dice.data.filter (· = d₂)).length = 2 :=
  sorry

  theorem points_permutation_invariant (dice₁ dice₂: String) 
    (h₁: dice₁.length = 5) (h₂: dice₂.length = 5)
    (h₁': ∀ c ∈ dice₁.data, '1' ≤ c ∧ c ≤ '6')
    (h₂': ∀ c ∈ dice₂.data, '1' ≤ c ∧ c ≤ '6')
    (h: ∀ c, (dice₁.data.filter (· = c)).length = (dice₂.data.filter (· = c)).length) :
    points dice₁ = points dice₂ :=
  sorry

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded

  /--
  info: 50
  -/
  #guard_msgs in
  #eval points "55555"

  /--
  info: 50
  -/
  #guard_msgs in
  #eval points "44444"

  /--
  info: 40
  -/
  #guard_msgs in
  #eval points "44441"

  /--
  info: 40
  -/
  #guard_msgs in
  #eval points "33233"

  /--
  info: 30
  -/
  #guard_msgs in
  #eval points "12121"

  /--
  info: 30
  -/
  #guard_msgs in
  #eval points "44455"

  /--
  info: 20
  -/
  #guard_msgs in
  #eval points "12345"

  /--
  info: 20
  -/
  #guard_msgs in
  #eval points "23456"

  /--
  info: 20
  -/
  #guard_msgs in
  #eval points "34561"

  /--
  info: 0
  -/
  #guard_msgs in
  #eval points "44421"

  /--
  info: 0
  -/
  #guard_msgs in
  #eval points "61623"

