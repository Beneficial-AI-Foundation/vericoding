vc-description: |-
  /-
  Define a method ```hello``` that ```returns``` "Hello, Name!" to a given ```name```, or says Hello, World! if name is not given (or passed as an empty String).

  Assuming that ```name``` is a ```String``` and it checks for user typos to return a name with a first capital letter (Xxxx).

  Examples:
  -/

vc-preamble: |

vc-helpers: |

vc-definitions: |-
  def hello (name: Option String := none) : String := sorry

  def isSubstringOf (s₁ s₂ : String) : Prop := 
    ∃ a b, s₂ = a ++ s₁ ++ b

vc-theorems: |-
  theorem hello_with_name_contains_capitalized {name: String} (h: name.length > 0):
    isSubstringOf (name.capitalize) (hello (some name)) := sorry

  theorem hello_empty_is_world:
    hello none = "Hello, World!" := sorry

  theorem hello_empty_string:
    hello (some "") = "Hello, World!" := sorry

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded

  /-
  info: 'Hello, World!'
  -/
  #guard_msgs in
  #eval hello 

  /-
  info: 'Hello, World!'
  -/
  #guard_msgs in
  #eval hello ""

  /-
  info: 'Hello, Alice!'
  -/
  #guard_msgs in
  #eval hello "alice"

  /-
  info: 'Hello, John!'
  -/
  #guard_msgs in
  #eval hello "jOHN"

