vc-description: |-
  /-
  You received a whatsup message from an unknown number. Could it be from that girl/boy with a foreign accent you met yesterday evening?
  
  Write a simple regex to check if the string contains the word hallo in different languages.
  
  These are the languages of the possible people you met the night before:
  
  * hello - english
  * ciao - italian
  * salut - french
  * hallo - german
  * hola - spanish
  * ahoj - czech republic
  * czesc - polish
  
  By the way, how cool is the czech republic hallo!!
  
  PS. you can assume the input is a string.
  PPS. to keep this a beginner exercise you don't need to check if the greeting is a subset of word ('Hallowen' can pass the test)
  
  PS. regex should be case insensitive to pass the tests
  -/

vc-preamble: |-

vc-helpers: |-

vc-definitions: |-
  def validate_hello (s : String) : Bool := sorry
  
  def isSubstrOf (substr str : String) : Bool := sorry

vc-theorems: |-
  theorem validate_hello_case_insensitive (s : String) :
    (∃ x ∈ ["hello", "ciao", "salut", "hallo", "hola", "ahoj", "czesc"], 
      isSubstrOf x s.toLower) ↔ validate_hello s := sorry
  
  theorem validate_hello_with_valid_greeting (greeting : String) (extra : String) 
    (h : greeting ∈ ["hello", "ciao", "salut", "hallo", "hola", "ahoj", "czesc"]) :
    validate_hello (greeting ++ extra) = true := sorry
  
  theorem validate_hello_empty_or_whitespace (s : String) :
    s.trim = "" → validate_hello s = false := sorry
  
  /-
  info: True
  -/
  -- #guard_msgs in
  -- #eval validate_hello "hello there"
  
  /-
  info: True
  -/
  -- #guard_msgs in
  -- #eval validate_hello "Hola amigo"
  
  /-
  info: False
  -/
  -- #guard_msgs in
  -- #eval validate_hello "namaste"

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded

