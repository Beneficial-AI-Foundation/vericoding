vc-description: |-
  /-
  The odd and even numbers are fighting against each other!
  
  You are given a list of positive integers. The odd numbers from the list will fight using their `1` bits from their binary representation, while the even numbers will fight using their `0` bits. If present in the list, number `0` will be neutral, hence not fight for either side.
  
  You should return:
  
  * `odds win` if number of `1`s from odd numbers is larger than `0`s from even numbers
  * `evens win` if number of `1`s from odd numbers is smaller than `0`s from even numbers
  * `tie` if equal, including if list is empty
  
  Please note that any prefix that might appear in the binary representation, e.g. `0b`, should not be counted towards the battle.
  
  ### Example:
  For an input list of `[5, 3, 14]`:
  
  * odds: `5` and `3` => `101` and `11` => four `1`s
  * evens: `14` => `1110` => one `0`
  
  Result: `odds win` the battle with 4-1
  
  If you enjoyed this kata, you can find a nice variation of it [here](https://www.codewars.com/kata/world-bits-war).
  -/

vc-preamble: |-

vc-helpers: |-

vc-definitions: |-
  def bits_battle (nums: List Nat) : String := sorry
  
  theorem bits_battle_output_valid (nums: List Nat) :
    bits_battle nums = "odds win" ∨ 
    bits_battle nums = "evens win" ∨ 
    bits_battle nums = "tie" := sorry

vc-theorems: |-
  theorem empty_list_tie (nums: List Nat) :
    nums = [] → bits_battle nums = "tie" := sorry
  
  theorem only_odds_result (nums: List Nat) :
    (∀ n ∈ nums, n % 2 = 1) → 
    nums ≠ [] →
    (bits_battle nums = "odds win" ∨ bits_battle nums = "tie") := sorry
  
  theorem only_evens_result (nums: List Nat) :
    (∀ n ∈ nums, n % 2 = 0) →
    nums ≠ [] → 
    (bits_battle nums = "evens win" ∨ bits_battle nums = "tie") := sorry
  
  theorem symmetry_property (nums: List Nat) :
    bits_battle nums = bits_battle nums.reverse := sorry
  
  /-
  info: 'odds win'
  -/
  -- #guard_msgs in
  -- #eval bits_battle [5, 3, 14]
  
  /-
  info: 'evens win'
  -/
  -- #guard_msgs in
  -- #eval bits_battle [3, 8, 22, 15, 78]
  
  /-
  info: 'tie'
  -/
  -- #guard_msgs in
  -- #eval bits_battle []

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded

