vc-description: |-
  /-
  #Description

  Everybody has probably heard of the animal heads and legs problem from the earlier years at school. It goes:

  ```“A farm contains chickens and cows. There are x heads and y legs. How many chickens and cows are there?” ```

  Where x <= 1000 and y <=1000

  #Task

  Assuming there are no other types of animals, work out how many of each animal are there. 

  ```Return a tuple in Python - (chickens, cows) and an array list - [chickens, cows]/{chickens, cows} in all other languages```

  If either the heads & legs is negative, the result of your calculation is negative or the calculation is a float return "No solutions" (no valid cases).

  In the form:
  ```python
  (Heads, Legs) = (72, 200)

  VALID - (72, 200) =>             (44 , 28) 
                               (Chickens, Cows)

  INVALID - (72, 201) => "No solutions"
  ```

  However, ```if 0 heads and 0 legs are given always return [0, 0]``` since zero heads must give zero animals.

  There are many different ways to solve this, but they all give the same answer.

  You will only be given integers types - however negative values (edge cases) will be given. 

  Happy coding!
  -/

vc-preamble: |

vc-helpers: |

vc-definitions: |-
  def animals (heads legs : Int) : Option (Int × Int) :=
    sorry

vc-theorems: |-
  theorem valid_combinations
    (chickens cows : Int)
    (h_chickens : chickens ≥ 0)
    (h_cows : cows ≥ 0)
    (h_chickens_bound : chickens ≤ 1000)
    (h_cows_bound : cows ≤ 1000) :
    animals (chickens + cows) (2*chickens + 4*cows) = some (chickens, cows) :=
  sorry

  theorem invalid_combinations
    (heads legs : Int)
    (h_invalid : ¬(heads ≥ 0 ∧ legs ≥ 0 ∧ legs % 2 = 0 ∧
                 (let possible_chickens := 2*heads - legs/2
                  let possible_cows := legs/2 - heads
                  possible_chickens ≥ 0 ∧ possible_cows ≥ 0))) :
    animals heads legs = none :=
  sorry

  theorem zero_case :
    animals 0 0 = some (0, 0) :=
  sorry

  theorem impossible_leg_counts
    (heads : Int)
    (h_heads_pos : heads > 0)
    (h_heads_bound : heads ≤ 1000) : 
    animals heads (2*heads - 1) = none :=
  sorry

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded

  /--
  info: (44, 28)
  -/
  #guard_msgs in
  #eval animals 72 200

  /--
  info: (0, 0)
  -/
  #guard_msgs in
  #eval animals 0 0

  /--
  info: 'No solutions'
  -/
  #guard_msgs in
  #eval animals 25 555

