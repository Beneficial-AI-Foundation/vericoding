vc-description: |-
  /-
  # Kata Task
  
  I have a cat and a dog.
  
  I got them at the same time as kitten/puppy. That was `humanYears` years ago.
  
  Return their respective ages now as [`humanYears`,`catYears`,`dogYears`]
  
  NOTES:
  * humanYears >= 1
  * humanYears are whole numbers only
  
  ## Cat Years
  
  * `15` cat years for first year
  * `+9` cat years for second year
  * `+4` cat years for each year after that
  
  ## Dog Years
  
  * `15` dog years for first year
  * `+9` dog years for second year
  * `+5` dog years for each year after that
  
  **References**
  
  * http://www.catster.com/cats-101/calculate-cat-age-in-cat-years
  * http://www.slate.com/articles/news_and_politics/explainer/2009/05/a_dogs_life.html
  
  If you liked this Kata there is another related one here
  -/

vc-preamble: |-

vc-helpers: |-

vc-definitions: |-
  def human_years_cat_years_dog_years (human_years : Int) : List Int := sorry
  
  theorem conversion_properties (human_years : Int) (h : human_years ≥ 1) :
    let result := human_years_cat_years_dog_years human_years
    -- Result is a list of length 3 with integer elements
    result.length = 3 ∧
    -- First element matches input
    result[0]! = human_years ∧
    -- Cat and dog years are non-negative
    result[1]! ≥ 0 ∧ 
    result[2]! ≥ 0 ∧
    -- Dog years relation to cat years
    (human_years > 2 → result[2]! ≥ result[1]!) ∧
    (human_years ≤ 2 → result[2]! = result[1]!) ∧
    -- Growth rates after year 2
    (human_years > 2 → 
      result[1]! - 24 = (human_years - 2) * 4 ∧
      result[2]! - 24 = (human_years - 2) * 5) :=
  sorry

vc-theorems: |-
  /-
  info: [1, 15, 15]
  -/
  -- #guard_msgs in
  -- #eval human_years_cat_years_dog_years 1
  
  /-
  info: [2, 24, 24]
  -/
  -- #guard_msgs in
  -- #eval human_years_cat_years_dog_years 2
  
  /-
  info: [10, 56, 64]
  -/
  -- #guard_msgs in
  -- #eval human_years_cat_years_dog_years 10

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: guarded

