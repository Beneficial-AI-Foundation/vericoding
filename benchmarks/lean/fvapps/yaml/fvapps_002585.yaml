vc-description: |-
  /-
  # Task
   Timed Reading is an educational tool used in many schools to improve and advance reading skills. A young elementary student has just finished his very first timed reading exercise. Unfortunately he's not a very good reader yet, so whenever he encountered a word longer than maxLength, he simply skipped it and read on.
  
   Help the teacher figure out how many words the boy has read by calculating the number of words in the text he has read, no longer than maxLength.
  
   Formally, a word is a substring consisting of English letters, such that characters to the left of the leftmost letter and to the right of the rightmost letter are not letters.
  
  # Example
  
   For `maxLength = 4` and `text = "The Fox asked the stork, 'How is the soup?'"`, the output should be `7`
  
   The boy has read the following words: `"The", "Fox", "the", "How", "is", "the", "soup".`
  
  # Input/Output
  
   - `[input]` integer `maxLength`
  
      A positive integer, the maximum length of the word the boy can read.
  
      Constraints: `1 ≤ maxLength ≤ 10.`
  
   - `[input]` string `text`
  
      A non-empty string of English letters and punctuation marks.
  
   - `[output]` an integer
  
      The number of words the boy has read.
  -/

vc-preamble: |-

vc-helpers: |-

vc-definitions: |-
  def timed_reading (maxLength: Int) (text: String) : Int :=
    sorry

vc-theorems: |-
  theorem timed_reading_non_negative (maxLength: Int) (text: String) :
    timed_reading maxLength text ≥ 0 :=
  sorry
  
  theorem timed_reading_is_bounded_by_word_count (maxLength: Int) (text: String) :
    timed_reading maxLength text ≤ (text.split (· = ' ')).length :=
  sorry
  
  theorem timed_reading_counts_valid_words (maxLength: Int) (words: List String) :
    let text := String.intercalate " " words
    timed_reading maxLength text = (words.filter (fun w => w.length ≤ maxLength)).length :=
  sorry
  
  theorem timed_reading_empty_string :
    timed_reading 0 "" = 0 :=
  sorry
  
  theorem timed_reading_no_letters (text: String) :
    (∀ c ∈ text.data, ¬c.isAlpha) →
    timed_reading 1 text = 0 :=
  sorry
  
  theorem timed_reading_negative_length :
    timed_reading (-1) "hello" = 0 :=
  sorry
  
  /-
  info: 7
  -/
  -- #guard_msgs in
  -- #eval timed_reading 4 "The Fox asked the stork, "How is the soup?""
  
  /-
  info: 3
  -/
  -- #guard_msgs in
  -- #eval timed_reading 3 "This play was good for us."
  
  /-
  info: 0
  -/
  -- #guard_msgs in
  -- #eval timed_reading 1 "Oh!"

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded

