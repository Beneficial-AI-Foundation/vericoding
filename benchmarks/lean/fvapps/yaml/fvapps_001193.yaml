vc-description: |-
  /-
  Given a number n. Find the last two digits of 5 ^ n ( 5 to the power of n ).
  Remember that overflow can occur.
  
  -----Input:-----
  - N  — the power in which you need to raise number 5.
  
  -----Output:-----
  Last two digits of 5^n.
  
  -----Constraints-----
  - $2 \leq N \leq 2.1018$
  
  -----Sample Input:-----
  2
  
  -----Sample Output:-----
  25
  -/

vc-preamble: |-

vc-helpers: |-

vc-definitions: |-
  def last_two_digits_of_5powern (n : Nat) : Nat := sorry
  
  theorem result_in_valid_range 
    (n : Nat) : 
    let result := last_two_digits_of_5powern n
    0 ≤ result ∧ result ≤ 99 := sorry

vc-theorems: |-
  theorem matches_manual_calculation
    (n : Nat) :
    last_two_digits_of_5powern n = (5^n : Nat) % 100 := sorry
  
  theorem negative_input_undefined
    (n : Int) :
    n < 0 → last_two_digits_of_5powern n.toNat = last_two_digits_of_5powern 0 := sorry
  
  /-
  info: 25
  -/
  -- #guard_msgs in
  -- #eval last_two_digits_of_5powern 2
  
  /-
  info: 25
  -/
  -- #guard_msgs in
  -- #eval last_two_digits_of_5powern 3
  
  /-
  info: 25
  -/
  -- #guard_msgs in
  -- #eval last_two_digits_of_5powern 4

vc-postamble: |-
  -- Apps difficulty: interview
  -- Assurance level: guarded_and_plausible

