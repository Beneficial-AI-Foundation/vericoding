vc-description: |-
  /-
  You are provided with array of positive non-zero ints and int n representing n-th power (n >= 2).
  
  For the given array, calculate the sum of each value to the n-th power. Then subtract the sum of the original array.
  
  Example 1: Input: {1, 2, 3}, 3 --> (1 ^ 3 + 2 ^ 3 + 3 ^ 3 ) - (1 + 2 + 3) --> 36 - 6 --> Output: 30
  
  Example 2: Input: {1, 2}, 5  --> (1 ^ 5 + 2 ^ 5) - (1 + 2) --> 33 - 3 --> Output: 30
  -/

vc-preamble: |-

vc-helpers: |-

vc-definitions: |-
  def abs (n : Int) : Int :=
    sorry
  
  def sum (lst : List Int) : Int :=
    sorry
  
  def modified_sum (lst : List Int) (p : Nat) : Int :=
    sorry

vc-theorems: |-
  theorem modified_sum_p_one {lst : List Int} (h : lst â‰  []) :
    modified_sum lst 1 = 0 :=
  sorry

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: guarded_and_plausible
  
  /--
  info: 30
  -/
  #guard_msgs in
  #eval modified_sum [1, 2, 3] 3
  
  /--
  info: 30
  -/
  #guard_msgs in
  #eval modified_sum [1, 2] 5
  
  /--
  info: 68
  -/
  #guard_msgs in
  #eval modified_sum [3, 5, 7] 2

