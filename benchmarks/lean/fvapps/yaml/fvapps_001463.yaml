vc-description: |-
  /-
  The chef was busy in solving algebra, he found some interesting results, that there are many numbers which can be formed by sum of some numbers which are prime. Chef wrote those numbers in dairy. Cheffina came and saw what the chef was doing. Cheffina immediately closed chef's dairy and for testing chef's memory, she starts asking numbers and chef needs to answer wheater given number N can be formed by the sum of K prime numbers if it yes then print 1 else print 0. 

  -----Input:-----
  - First-line will contain $T$, the number of test cases. Then the test cases follow. 
  - Each test case contains a single line of input, two integers $N, K$.

  -----Output:-----
  For each test case, output in a single line answer as 1 or 0.

  -----Constraints-----
  - $1 \leq T \leq 10^5$
  - $2 \leq N \leq 10^5$
  - $1 \leq K \leq 10^5$

  -----Sample Input:-----
  2
  12 2
  11 2

  -----Sample Output:-----
  1
  0
  -/

vc-preamble: |

vc-helpers: |

vc-definitions: |-
  def is_prime (n : Nat) : Nat := sorry

  def check_sum_of_primes (n k : Nat) : Nat := sorry

vc-theorems: |-
  theorem is_prime_properties (n : Nat) (h : n ≤ 1000) :
    (is_prime n = 0 ∨ is_prime n = 1) ∧
    (n ≤ 1 → is_prime n = 0) ∧ 
    (n = 2 → is_prime n = 1) ∧
    (n > 2 ∧ n % 2 = 0 → is_prime n = 0) := sorry

  theorem check_sum_of_primes_properties (n k : Nat) 
    (hn : n ≤ 1000) (hk : k ≤ 10) :
    (check_sum_of_primes n k = 0 ∨ check_sum_of_primes n k = 1) ∧
    (n < 2 * k → check_sum_of_primes n k = 0) ∧
    (k = 1 → check_sum_of_primes n k = is_prime n) ∧
    (k = 2 ∧ n % 2 = 0 → check_sum_of_primes n k = 1) := sorry

  theorem check_sum_of_primes_k1 (n : Nat) 
    (h1 : n ≥ 3) (h2 : n ≤ 1000) :
    check_sum_of_primes n 1 = is_prime n := sorry

  theorem check_sum_of_primes_k2_even (n : Nat)
    (h1 : n ≥ 4) (h2 : n ≤ 1000) (h3 : n % 2 = 0) :
    check_sum_of_primes n 2 = 1 := sorry

vc-postamble: |-
  -- Apps difficulty: interview
  -- Assurance level: unguarded

  /-
  info: 1
  -/
  #guard_msgs in
  #eval check_sum_of_primes 12 2

  /-
  info: 0
  -/
  #guard_msgs in
  #eval check_sum_of_primes 11 2

  /-
  info: 1
  -/
  #guard_msgs in
  #eval check_sum_of_primes 15 3

