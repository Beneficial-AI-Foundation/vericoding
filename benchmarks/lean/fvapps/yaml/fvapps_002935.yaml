vc-description: |-
  /-
  An NBA game runs 48 minutes (Four 12 minute quarters). Players do not typically play the full game, subbing in and out as necessary. Your job is to extrapolate a player's points per game if they played the full 48 minutes.

  Write a function that takes two arguments, ppg (points per game) and mpg (minutes per game) and returns a straight extrapolation of ppg per 48 minutes rounded to the nearest tenth. Return 0 if 0.

  Examples:
  ```python
  nba_extrap(12, 20) # 28.8
  nba_extrap(10, 10) # 48
  nba_extrap(5, 17) # 14.1
  nba_extrap(0, 0) # 0
  ```

  Notes:
  All inputs will be either be an integer or float.
  Follow your dreams!
  -/

vc-preamble: |

vc-helpers: |

vc-definitions: |-
  def nba_extrap (ppg mpg : Float) : Float := sorry

  theorem nba_extrap_nonnegative 
    {ppg mpg : Float} (h1 : 0 ≤ ppg) (h2 : 0 < mpg) (h3 : mpg ≤ 48) :
    0 ≤ nba_extrap ppg mpg := 
  sorry

vc-theorems: |-
  theorem nba_extrap_proportional
    {ppg mpg : Float} (h1 : 0 ≤ ppg) (h2 : 0 < mpg) (h3 : mpg ≤ 48) :
    nba_extrap ppg mpg = Float.round (48.0 * ppg / mpg) :=
  sorry

  theorem nba_extrap_zero :
    nba_extrap 0 0 = 0 :=
  sorry

  theorem nba_extrap_scaling_ratio
    {ppg mpg : Float} (h1 : 0 ≤ ppg) (h2 : 0 < mpg) (h3 : mpg ≤ 48) :
    nba_extrap ppg mpg = ppg * (48.0 / mpg) :=
  sorry

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded

  /--
  info: 28.8
  -/
  #guard_msgs in
  #eval nba_extrap 12 20

  /--
  info: 48.0
  -/
  #guard_msgs in
  #eval nba_extrap 10 10

  /--
  info: 14.1
  -/
  #guard_msgs in
  #eval nba_extrap 5 17

  /--
  info: 0
  -/
  #guard_msgs in
  #eval nba_extrap 0 0

