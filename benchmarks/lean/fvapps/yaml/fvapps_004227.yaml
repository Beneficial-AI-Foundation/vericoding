vc-description: |-
  /-
  Complete the function which returns the weekday according to the input number:
  
  * `1` returns `"Sunday"`
  * `2` returns `"Monday"`
  * `3` returns `"Tuesday"`
  * `4` returns `"Wednesday"`
  * `5` returns `"Thursday"`
  * `6` returns `"Friday"`
  * `7` returns `"Saturday"`
  * Otherwise returns `"Wrong, please enter a number between 1 and 7"`
  -/

vc-preamble: |-

vc-helpers: |-

vc-definitions: |-
  def WEEKDAY : Nat → String :=
  sorry
  
  def ERROR : String :=
  sorry
  
  def whatday (n : Int) : String :=
  sorry

vc-theorems: |-
  theorem whatday_spec (n : Int) :
    (1 ≤ n ∧ n ≤ 7 → ∃ (i : Nat), whatday n = WEEKDAY i) ∧
    (¬(1 ≤ n ∧ n ≤ 7) → whatday n = ERROR) :=
  sorry
  
  theorem valid_weekday (n : Int) (h : 1 ≤ n ∧ n ≤ 7) :
    ∃ (i : Nat), whatday n = WEEKDAY i :=
  sorry
  
  theorem invalid_weekday (n : Int) (h : ¬(1 ≤ n ∧ n ≤ 7)) :
    whatday n = ERROR :=
  sorry

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded
  
  /--
  info: 'Sunday'
  -/
  #guard_msgs in
  #eval whatday 1
  
  /--
  info: 'Saturday'
  -/
  #guard_msgs in
  #eval whatday 7
  
  /--
  info: ERROR
  -/
  #guard_msgs in
  #eval whatday 0

