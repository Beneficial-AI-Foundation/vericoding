vc-description: |-
  /-
  Some numbers can be expressed as a difference of two squares, for example, 20 = 6^(2)-4^(2) and 21 = 5^(2)-2^(2). Many numbers can be written this way, but not all.

  ## Your Task
  Complete the function that takes a positive integer `n` and returns the amount of numbers between `1` and `n` (inclusive) that can be represented as the difference of two perfect squares.

  **Note**: Your code should be able to handle `n` values up to 45000

  ## Examples

  ```
  n = 4 ==> 3
  n = 5 ==> 4
  n = 10 ==> 7
  n = 20 ==> 15
  n = 6427 ==> 4820
  ```
  -/

vc-preamble: |

vc-helpers: |

vc-definitions: |-
  def count_squareable (n : Nat) : Nat := sorry

  theorem count_squareable_positive (n : Nat) (h : n > 0) : count_squareable n > 0 := sorry

vc-theorems: |-
  theorem count_squareable_upper_bound (n : Nat) : count_squareable n ≤ n := sorry

  theorem count_squareable_formula (n : Nat) : count_squareable n = n/4 + (n+1)/2 := sorry

  theorem count_squareable_monotonic (n : Nat) (h : n > 1) : 
    count_squareable (n-1) ≤ count_squareable n := sorry

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: guarded_and_plausible

  /--
  info: 3
  -/
  #guard_msgs in
  #eval count_squareable 4

  /--
  info: 4
  -/
  #guard_msgs in
  #eval count_squareable 5

  /--
  info: 7
  -/
  #guard_msgs in
  #eval count_squareable 10

  /--
  info: 15
  -/
  #guard_msgs in
  #eval count_squareable 20

  /--
  info: 4820
  -/
  #guard_msgs in
  #eval count_squareable 6427

