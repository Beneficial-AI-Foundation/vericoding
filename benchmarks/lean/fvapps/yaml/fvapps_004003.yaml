vc-description: |-
  /-
  ```if-not:julia,racket
  Write a function that returns the total surface area and volume of a box as an array: `[area, volume]`
  ```
  ```if:julia
  Write a function that returns the total surface area and volume of a box as a tuple: `(area, volume)`
  ```
  ```if:racket
  Write a function that returns the total surface area and volume of a box as a list: `'(area, volume)`
  ```
  -/

vc-preamble: |

vc-helpers: |

vc-definitions: |-
  def get_size (w h d : Nat) : Nat × Nat := sorry

  theorem get_size_volume (w h d : Nat) :
    (get_size w h d).2 = w * h * d := sorry

vc-theorems: |-
  theorem get_size_surface_area (w h d : Nat) :
    (get_size w h d).1 = 2 * (w*h + h*d + w*d) := sorry

  theorem get_size_surface_area_positive (w h d : Nat) (h1: w > 0) (h2: h > 0) (h3: d > 0) :
    (get_size w h d).1 > 0 := sorry

  theorem get_size_volume_positive (w h d : Nat) (h1: w > 0) (h2: h > 0) (h3: d > 0) :
    (get_size w h d).2 > 0 := sorry

  theorem get_size_surface_area_greater_than_faces (w h d : Nat) (h1: w > 0) (h2: h > 0) (h3: d > 0) :
    (get_size w h d).1 > w*h ∧ 
    (get_size w h d).1 > h*d ∧
    (get_size w h d).1 > w*d := sorry

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: guarded

  /-
  info: [88, 48]
  -/
  #guard_msgs in
  #eval get_size 4 2 6

  /-
  info: [6, 1]
  -/
  #guard_msgs in
  #eval get_size 1 1 1

  /-
  info: [600, 1000]
  -/
  #guard_msgs in
  #eval get_size 10 10 10

