vc-description: |-
  /-
  If you have not ever heard the term **Arithmetic Progrossion**, refer to: 
  http://www.codewars.com/kata/find-the-missing-term-in-an-arithmetic-progression/python

  And here is an unordered version. Try if you can survive lists of **MASSIVE** numbers (which means time limit should be considered). :D

  Note: Don't be afraid that the minimum or the maximum element in the list is missing, e.g. [4, 6, 3, 5, 2] is missing 1 or 7, but this case is excluded from the kata.

  Example:

  ```python
  find([3, 9, 1, 11, 13, 5]) # => 7
  ```
  -/

vc-preamble: |

vc-helpers: |

vc-definitions: |-
  def find (seq : List Int) : Int := sorry

  theorem find_simple_sequence
      (start : Int) :
      find [start, start + 2, start + 6] = start + 4 := sorry

vc-theorems: |-
  theorem find_symmetric_sequence
      (center : Int) :
      find [center - 4, center - 2, center + 2, center + 4] = center := sorry

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: guarded_and_plausible

  /--
  info: 7
  -/
  #guard_msgs in
  #eval find [3, 9, 1, 11, 13, 5]

  /--
  info: 1
  -/
  #guard_msgs in
  #eval find [5, -1, 0, 3, 4, -3, 2, -2]

  /--
  info: 0
  -/
  #guard_msgs in
  #eval find [2, -2, 8, -8, 4, -4, 6, -6]

