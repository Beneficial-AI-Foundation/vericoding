vc-description: |-
  /-
  Yash likes playing with numbers. He has a challenge for you. Yash gives
  you a number that he made by multiplying two numbers. He claims that the
  possible sum of the two numbers he multiplied is as minimum as possible. He
  challenges you to find that minimum sum.
  
  Formally, for a given value of N, you are required to find the minimum sum of two distinct numbers x and y such that x, y > 0 and xy = N.  
  
  -----Input:-----
  The first line of the input contains a single integer T denoting the number of test cases. The description of T test cases follows.
  
  Each testcase contains single integer N.
  
  -----Output:-----
  For each testcase, output minimum x + y such that x*y = N and x,y >0.
  
  -----Constraints :-----
  $1 \leq T \leq 100$
  $1 < N \leq 10^{12}$
  
  -----Sample Input:-----
  1
  
  852140
  
  -----Sample Output:-----
  1929
  -/

vc-preamble: |-

vc-helpers: |-

vc-definitions: |-
  def find_minimum_sum_pair (n: Nat) : Nat := sorry
  
  def isPrime (n: Nat) : Bool := sorry

vc-theorems: |-
  theorem output_is_positive (n: Nat) (h: n ≥ 1) :
    find_minimum_sum_pair n > 0 := sorry
  
  theorem prime_input_returns_plus_one (n: Nat) (h: n ≥ 1) :
    isPrime n = true → find_minimum_sum_pair n = n + 1 := sorry
  
  theorem even_number_property (n: Nat) (h: n ≥ 2) :
    n % 2 = 0 → find_minimum_sum_pair n ≤ 2 + n/2 := sorry
  
  theorem one_returns_two :
    find_minimum_sum_pair 1 = 2 := sorry
  
  /-
  info: 1929
  -/
  -- #guard_msgs in
  -- #eval find_minimum_sum_pair 852140
  
  /-
  info: 7
  -/
  -- #guard_msgs in
  -- #eval find_minimum_sum_pair 12
  
  /-
  info: 18
  -/
  -- #guard_msgs in
  -- #eval find_minimum_sum_pair 17

vc-postamble: |-
  -- Apps difficulty: interview
  -- Assurance level: guarded_and_plausible

