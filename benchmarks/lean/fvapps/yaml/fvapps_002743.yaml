vc-description: |-
  /-
  Imagine a triangle of numbers which follows this pattern:

   * Starting with the number "1", "1" is positioned at the top of the triangle. As this is the 1st row, it can only support a single number.
   * The 2nd row can support the next 2 numbers: "2" and "3"
   * Likewise, the 3rd row, can only support the next 3 numbers: "4", "5", "6"
   * And so on; this pattern continues.

  ```
      1
     2 3
    4 5 6
   7 8 9 10
  ...
  ```

  Given N, return the sum of all numbers on the Nth Row:

  1 <= N <= 10,000
  -/

vc-preamble: |

vc-helpers: |

vc-definitions: |-
  def cumulative_triangle (n : Nat) : Nat := sorry

  theorem cumulative_triangle_positive (n : Nat) (h : n > 0) :
    cumulative_triangle n > 0 := sorry

vc-theorems: |-
  theorem cumulative_triangle_strictly_increasing (n : Nat) (h : n > 1) :
    cumulative_triangle n > cumulative_triangle (n - 1) := sorry

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: guarded_and_plausible

  /-
  info: 1
  -/
  #guard_msgs in
  #eval cumulative_triangle 1

  /-
  info: 5
  -/
  #guard_msgs in
  #eval cumulative_triangle 2

  /-
  info: 15
  -/
  #guard_msgs in
  #eval cumulative_triangle 3

  /-
  info: 34
  -/
  #guard_msgs in
  #eval cumulative_triangle 4

