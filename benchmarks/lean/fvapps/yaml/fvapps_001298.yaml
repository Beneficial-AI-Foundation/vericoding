vc-description: |-
  /-
  At the legendary times of Nonsenso wars in ISM Dhanbad, there was a neck to neck competition between Barney Stinson and Sheldon Cooper. They both were on level 19. After trying too hard both of them could not decipher the nonsense, so they decided to play alongside. Sheldon Cooper had to pass a message to Barney Stinson. So he decided to convert each letter of the sentence to their corresponding to their ASCII codes. When Barney received the message he could not get anything. Now you have to design a code which converts the encrypted message to readable format.

  -----Input-----
  The input will consist of the first line containing the number of test cases ‘n’ followed by n lines of test cases.

  -----Output-----

  For each input print the decoded line.

  -----Example-----
  Input:
  2
  721011081081113287111114108100
  871011089911110910132116111327311010010597

  Output:
  Hello World
  Welcome to India
  -/

vc-preamble: |-
  def encodeAscii (s : String) : String :=
    sorry

vc-helpers: |

vc-definitions: |-
  def decodeAsciiMessage (s : String) : String :=
    sorry

vc-theorems: |-
  theorem decode_matches_input {s : String} 
      (h1 : s ≠ "") 
      (h2 : ∀ c ∈ s.data, 32 ≤ c.toNat ∧ c.toNat ≤ 126) :
      decodeAsciiMessage (encodeAscii s) = s :=
    sorry

  theorem decoded_chars_in_ascii_range {s : String}
      (h1 : s ≠ "") 
      (h2 : ∀ c ∈ s.data, 32 ≤ c.toNat ∧ c.toNat ≤ 126) :
      ∀ c ∈ (decodeAsciiMessage (encodeAscii s)).data, 
        32 ≤ c.toNat ∧ c.toNat ≤ 126 :=
    sorry

  theorem encoded_is_numeric {s : String}
      (h1 : s ≠ "")
      (h2 : ∀ c ∈ s.data, 32 ≤ c.toNat ∧ c.toNat ≤ 126) :
      ∀ c ∈ (encodeAscii s).data, c.isDigit :=
    sorry

vc-postamble: |-
  -- Apps difficulty: interview
  -- Assurance level: unguarded

  /-
  info: 'Hello World'
  -/
  #guard_msgs in
  #eval decode_ascii_message "721011081081113287111114108100"

  /-
  info: 'Welcome to India'
  -/
  #guard_msgs in
  #eval decode_ascii_message "871011089911110910132116111327311010010597"

