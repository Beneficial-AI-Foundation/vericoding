vc-description: |-
  /-
  You should write a simple function that takes string as input and checks if it is a valid Russian postal code, returning `true` or `false`.

  A valid postcode should be 6 digits with no white spaces, letters or other symbols. Empty string should also return false. 

  Please also keep in mind that a valid post code **cannot start with** `0, 5, 7, 8 or 9`

  ## Examples

  Valid postcodes:
  * 198328
  * 310003
  * 424000

  Invalid postcodes:
  * 056879
  * 12A483
  * 1@63
  * 111
  -/

vc-preamble: |

vc-helpers: |

vc-definitions: |-
  def zipvalidate (s : String) : Bool := sorry 

  theorem length_property (s : String) : 
    s.length ≠ 6 → zipvalidate s = false := sorry

vc-theorems: |-
  theorem digit_property (s : String) :
    s.length = 6 → (∃ c ∈ s.data, !c.isDigit) → zipvalidate s = false := sorry

  theorem first_digit_property (n : Nat) :
    let s := toString n
    s.length = 6 → 
    (s.get 0 = '0' ∨ 
     s.get 0 = '5' ∨
     s.get 0 = '7' ∨ 
     s.get 0 = '8' ∨
     s.get 0 = '9') →
    zipvalidate s = false := sorry

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded

  /--
  info: True
  -/
  #guard_msgs in
  #eval zipvalidate "142784"

  /--
  info: True
  -/
  #guard_msgs in
  #eval zipvalidate "642784"

  /--
  info: False
  -/
  #guard_msgs in
  #eval zipvalidate "111"

  /--
  info: False
  -/
  #guard_msgs in
  #eval zipvalidate "555555"

  /--
  info: False
  -/
  #guard_msgs in
  #eval zipvalidate "@68345"

