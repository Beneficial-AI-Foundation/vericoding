vc-description: |-
  /-
  This is the first step to understanding FizzBuzz.  

  Your inputs:
  a positive integer, n, greater than or equal to one.
  n is provided, you have NO CONTROL over its value.

  Your expected output is an array of positive integers from 1 to n (inclusive).

  Your job is to write an algorithm that gets you from the input to the output.
  -/

vc-preamble: |

vc-helpers: |

vc-definitions: |-
  def pre_fizz (n : Nat) : List Nat :=
    sorry

vc-theorems: |-
  theorem pre_fizz_returns_sequential_integers (n : Nat) (h : n > 0) : 
    pre_fizz n = List.range' 1 n := sorry

  theorem pre_fizz_length (n : Nat) (h : n > 0) :
    (pre_fizz n).length = n := sorry 

  theorem pre_fizz_elements_increasing (n : Nat) (h : n > 0) :
    âˆ€ i : Nat, i < (pre_fizz n).length - 1 â†’ 
      (pre_fizz n)[i]! < (pre_fizz n)[i+1]! := sorry

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: guarded_and_plausible

  /--
  info: [1]
  -/
  #guard_msgs in
  #eval pre_fizz 1

  /--
  info: [1, 2, 3]
  -/
  #guard_msgs in
  #eval pre_fizz 3

  /--
  info: [1, 2, 3, 4, 5]
  -/
  #guard_msgs in
  #eval pre_fizz 5

