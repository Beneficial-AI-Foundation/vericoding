vc-description: |-
  /-
  As a strict big brother, I do limit my young brother Vasya on time he spends on computer games. I define a prime-time as a time period till which Vasya have a permission to play computer games. I specify start hour and end hour as pair of integers.

  I need a function which will take three numbers - a present moment (current hour), a start hour of allowed time period and an end hour of allowed time period. The function should give answer to a question (as a boolean): "Can Vasya play in specified time?"

  If I say that prime-time is from 12 till 15 that means that at 12:00 it's OK to play computer but at 15:00 there should be no more games.

  I will allow Vasya to play at least one hour a day.
  -/

vc-preamble: |

vc-helpers: |

vc-definitions: |-
  def canIPlay (now start finish : Nat) : Bool := sorry

  theorem canIPlay_symmetry_24 (now start finish : Nat) :
    canIPlay now start finish = canIPlay (now + 24) start finish := sorry

vc-theorems: |-
  theorem canIPlay_symmetry_start_finish (now start finish : Nat) :
    canIPlay now start finish = canIPlay now (start + 24) (finish + 24) := sorry

  theorem canIPlay_relative_times (now start finish : Nat) :
    canIPlay now start finish = 
    canIPlay (now - start) 0 ((finish - start) % 24) := sorry

  theorem canIPlay_same_start_finish (now start : Nat) :
    Â¬(canIPlay now start start) := sorry

  theorem canIPlay_window_contains_start 
    (start window : Nat) (h : 0 < window) (h2 : window < 24) :
    canIPlay start start ((start + window) % 24) := sorry

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded

  /--
  info: True
  -/
  #guard_msgs in
  #eval can_i_play 13 10 15

  /--
  info: False
  -/
  #guard_msgs in
  #eval can_i_play 15 8 12

  /--
  info: True
  -/
  #guard_msgs in
  #eval can_i_play 0 22 1

