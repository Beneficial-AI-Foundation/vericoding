vc-description: |-
  /-
  Cengiz recently learned Fibonacci numbers and now he is studying different algorithms to find them. After getting bored of reading them, he came with his own new type of numbers that he named XORinacci numbers. He defined them as follows:   $f(0) = a$;  $f(1) = b$;  $f(n) = f(n-1) \oplus f(n-2)$ when $n > 1$, where $\oplus$ denotes the bitwise XOR operation. 

  You are given three integers $a$, $b$, and $n$, calculate $f(n)$.

  You have to answer for $T$ independent test cases.

  -----Input-----

  The input contains one or more independent test cases.

  The first line of input contains a single integer $T$ ($1 \le T \le 10^3$), the number of test cases.

  Each of the $T$ following lines contains three space-separated integers $a$, $b$, and $n$ ($0 \le a, b, n \le 10^9$) respectively.

  -----Output-----

  For each test case, output $f(n)$.

  -----Example-----
  Input
  3
  3 4 2
  4 5 0
  325 265 1231232

  Output
  7
  4
  76

  -----Note-----

  In the first example, $f(2) = f(0) \oplus f(1) = 3 \oplus 4 = 7$.
  -/

vc-preamble: |

vc-helpers: |

vc-definitions: |-
  def solve_xorinacci (a b n : Nat) : Nat := sorry

  theorem xorinacci_cycle (a b n : Nat) :
    solve_xorinacci a b n = solve_xorinacci a b (n + 3) := sorry

vc-theorems: |-
  theorem xorinacci_initial_zero (a b : Nat) :
    solve_xorinacci a b 0 = a := sorry

  theorem xorinacci_initial_one (a b : Nat) :
    solve_xorinacci a b 1 = b := sorry

  theorem xorinacci_xor_commutative (a b : Nat) :
    solve_xorinacci a b 2 = solve_xorinacci b a 2 := sorry

  theorem xorinacci_xor_with_zero (x : Nat) :
    solve_xorinacci x 0 2 = x := sorry

  theorem xorinacci_zero_xor (x : Nat) :
    solve_xorinacci 0 x 2 = x := sorry

vc-postamble: |-
  -- Apps difficulty: competition
  -- Assurance level: guarded_and_plausible

  /--
  info: 7
  -/
  #guard_msgs in
  #eval solve_xorinacci 3 4 2

  /--
  info: 4
  -/
  #guard_msgs in
  #eval solve_xorinacci 4 5 0

  /--
  info: 76
  -/
  #guard_msgs in
  #eval solve_xorinacci 325 265 1231232

