vc-description: |-
  /-
  Recently Rocky had participated in coding competition and he is sharing one of the problem with you which he was unable to solve. Help Rocky in solving the problem.
  Suppose the alphabets are arranged in a row starting with index 0$0$ from AtoZ$A to Z$.
  If in a coded language  A=27$A=27$ and AND=65$AND=65$.
  Help Rocky to find a suitable formula for finding all the value for given test cases?
  (All alphabets are in Upper case only).

  -----Input:-----
  First line of the input contains  string s$s$.

  -----Output:-----
  Output the possible integer values of the given string s$s$ according to the question . 

  -----Constraints-----
  - 1≤s≤100$1 \leq s \leq 100$

  -----Sample Input:-----
  A

  AND   

  -----Sample Output:-----
  27

  65
  -/

vc-preamble: |-
  def calculate_string_weight (s : String) : Nat :=
    sorry

vc-helpers: |

vc-definitions: |-
  def string_reverse (s : String) : String := 
    ⟨s.data.reverse⟩

vc-theorems: |-
  theorem length_weight_relationship {s : String} 
    (h : ∀ c ∈ s.data, 'A' ≤ c ∧ c ≤ 'Z') :
    s.length ≤ calculate_string_weight s ∧ calculate_string_weight s ≤ 27 * s.length :=
  sorry

  theorem invariant_under_reversal {s : String}
    (h : ∀ c ∈ s.data, 'A' ≤ c ∧ c ≤ 'Z') :
    calculate_string_weight s = calculate_string_weight (string_reverse s) :=
  sorry

  theorem weight_additive {s1 s2 : String}
    (h1 : ∀ c ∈ s1.data, 'A' ≤ c ∧ c ≤ 'Z')
    (h2 : ∀ c ∈ s2.data, 'A' ≤ c ∧ c ≤ 'Z') :
    calculate_string_weight (s1 ++ s2) = calculate_string_weight s1 + calculate_string_weight s2 :=
  sorry

  theorem a_highest_weight :
    calculate_string_weight "A" > calculate_string_weight "Z" :=
  sorry

  theorem a_weight_27 :
    calculate_string_weight "A" = 27 :=
  sorry

  theorem z_weight_2 :
    calculate_string_weight "Z" = 2 :=
  sorry

vc-postamble: |-
  -- Apps difficulty: interview
  -- Assurance level: unguarded

  /-
  info: 27
  -/
  #guard_msgs in
  #eval calculate_string_weight "A"

  /-
  info: 65
  -/
  #guard_msgs in
  #eval calculate_string_weight "AND"

