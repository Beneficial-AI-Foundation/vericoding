vc-description: |-
  /-
  Implement a basic calculator to evaluate a simple expression string.
  
  The expression string contains only non-negative integers, +, -, *, / operators and empty spaces  . The integer division should truncate toward zero.
  
  Example 1:
  
  Input: "3+2*2"
  Output: 7
  
  Example 2:
  
  Input: " 3/2 "
  Output: 1
  
  Example 3:
  
  Input: " 3+5 / 2 "
  Output: 5
  
  Note:
  
         You may assume that the given expression is always valid.
         Do not use the eval built-in library function.
  -/

vc-preamble: |-

vc-helpers: |-

vc-definitions: |-
  def calculate (s : String) : Option Int := sorry
  
  @[simp] theorem calculate_positive_number (n : Int) 
    (h : 1 ≤ n ∧ n ≤ 100) : 
    calculate (toString n) = some n := sorry

vc-theorems: |-
  theorem calculate_addition (a b : Int)
    (h₁ : 1 ≤ a ∧ a ≤ 50) (h₂ : 1 ≤ b ∧ b ≤ 50) :
    calculate (toString a ++ "+" ++ toString b) = some (a + b) := sorry
  
  theorem calculate_multiplication (a b : Int)
    (h₁ : 1 ≤ a ∧ a ≤ 50) (h₂ : 1 ≤ b ∧ b ≤ 50) :
    calculate (toString a ++ "*" ++ toString b) = some (a * b) := sorry
  
  theorem calculate_division (a b : Int)
    (h₁ : 1 ≤ a ∧ a ≤ 50) (h₂ : 1 ≤ b ∧ b ≤ 50) :
    calculate (toString a ++ "/" ++ toString b) = some (a / b) := sorry
  
  /-
  info: 7
  -/
  -- #guard_msgs in
  -- #eval calculate "3+2*2"
  
  /-
  info: 1
  -/
  -- #guard_msgs in
  -- #eval calculate " 3/2 "
  
  /-
  info: 5
  -/
  -- #guard_msgs in
  -- #eval calculate " 3+5 / 2 "

vc-postamble: |-
  -- Apps difficulty: interview
  -- Assurance level: guarded_and_plausible

