vc-description: |-
  /-
  # Task
   Initially a number `1` is written on a board. It is possible to do the following operations with it:
  ```
  multiply the number by 3;
  increase the number by 5.```
  Your task is to determine that using this two operations step by step, is it possible to obtain number `n`?

  # Example

   For `n = 1`, the result should be `true`.

   `1 = 1`

   For `n = 2`, the result should be `false`.

   For `n = 3`, the result should be `true`.

   `1 x 3 = 3`

   For `n = 4`, the result should be `false`.

   For `n = 5`, the result should be `false`.

   For `n = 6`, the result should be `true`.

   `1 + 5 = 6`

   For `n = 18`, the result should be `true`.

   `1 + 5 = 6  --> 6 x 3 = 18`

   For `n = 32`, the result should be `true`.

   `1 x 3 x 3 x 3 = 27  --> 27 + 5 = 32`

   For `n = 100`, the result should be `false`.

   For `n = 101`, the result should be `true`.

   `1 + 5 + 5 + 5 ... +5 = 101`

  # Input / Output

   - `[input]` integer n

    positive integer, n ≤ 100000

   - `[output]` a boolean value

    `true` if N can be obtained using given operations, `false` otherwise.
  -/

vc-preamble: |-
  def number_increasing (n : Nat) : Bool := sorry

  theorem impossible_values_2 : number_increasing 2 = false := sorry

vc-helpers: |

vc-definitions: |-
  def bitLength (n : Nat) : Nat :=
    if n = 0 then 0 else Nat.log2 n + 1

vc-theorems: |-
  theorem impossible_values_4 : number_increasing 4 = false := sorry
  theorem impossible_values_7 : number_increasing 7 = false := sorry

  theorem impossible_values_12 : number_increasing 12 = false := sorry
  theorem impossible_values_17 : number_increasing 17 = false := sorry

  theorem impossible_values_22 : number_increasing 22 = false := sorry

  theorem multiples_of_five (n : Nat) (h₁ : n > 1) (h₂ : n % 5 = 0) : 
    number_increasing n = false := sorry

  theorem start_point : 
    number_increasing 1 = true := sorry

  theorem multiples_of_three_reachable (n : Nat) (h₁ : n > 1) 
    (h₂ : n = 3^(bitLength (bitLength (n - 1)))) :
    number_increasing n = true := sorry

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded

  /-
  info: True
  -/
  #guard_msgs in
  #eval number_increasing 1

  /-
  info: False
  -/
  #guard_msgs in
  #eval number_increasing 2

  /-
  info: True
  -/
  #guard_msgs in
  #eval number_increasing 6

  /-
  info: True
  -/
  #guard_msgs in
  #eval number_increasing 18

  /-
  info: True
  -/
  #guard_msgs in
  #eval number_increasing 32

