vc-description: |-
  /-
  Write a function that when given a URL as a string, parses out just the domain name and returns it as a string. For example:
  ```python
  domain_name("http://github.com/carbonfive/raygun") == "github" 
  domain_name("http://www.zombie-bites.com") == "zombie-bites"
  domain_name("https://www.cnet.com") == "cnet"
  ```
  -/

vc-preamble: |

vc-helpers: |

vc-definitions: |-
  def domain_name (url : String) : String := sorry

  theorem basic_domain_extraction :
    domain_name "http://google.com" = "google" ∧
    domain_name "http://www.zombie-bites.com" = "zombie-bites" ∧
    domain_name "icann.org" = "icann" := sorry

vc-theorems: |-
  theorem domain_name_no_protocols (domain tld : String) :
    let url := s!"http://www.{domain}.{tld}"
    domain_name url ≠ "www" ∧
    domain_name url ≠ "http" ∧
    domain_name url ≠ "https" ∧
    ¬(domain_name url).contains '.' := sorry

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded

  /-
  info: 'google'
  -/
  #guard_msgs in
  #eval domain_name "http://google.com"

  /-
  info: 'zombie-bites'
  -/
  #guard_msgs in
  #eval domain_name "http://www.zombie-bites.com"

  /-
  info: 'icann'
  -/
  #guard_msgs in
  #eval domain_name "icann.org"

