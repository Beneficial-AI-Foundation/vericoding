vc-description: |-
  /-
  Your job is to write a function which increments a string, to create a new string.

  - If the string already ends with a number, the number should be incremented by 1.
  - If the string does not end with a number. the number 1 should be appended to the new string.

  Examples:

  `foo -> foo1`

  `foobar23 -> foobar24`

  `foo0042 -> foo0043`

  `foo9 -> foo10`

  `foo099 -> foo100`

  *Attention: If the number has leading zeros the amount of digits should be considered.*
  -/

vc-preamble: |

vc-helpers: |

vc-definitions: |-
  def increment_string (s : String) : String := sorry

  theorem increment_string_length (text : String) (num : Nat) (leading_zeros : Nat)
    (h : num ≤ 999999) (h2 : leading_zeros ≤ 5) :
    String.length (increment_string (text ++ 
      (if num > 0 then String.mk (List.replicate leading_zeros '0') ++ toString num else ""))) ≥ 
    String.length (text ++ 
      (if num > 0 then String.mk (List.replicate leading_zeros '0') ++ toString num else "")) := sorry

vc-theorems: |-
  theorem increment_string_preserves_prefix (text : String) (num : Nat) (leading_zeros : Nat)
    (h : num ≤ 999999) (h2 : leading_zeros ≤ 5) :
    (increment_string (text ++ 
      (if num > 0 then String.mk (List.replicate leading_zeros '0') ++ toString num else ""))).startsWith text := sorry

  theorem increment_string_increments_number (text : String) (num : Nat) (leading_zeros : Nat)
    (h : num ≤ 999999) (h2 : leading_zeros ≤ 5) :
    ∀ suffix : String,
    suffix.all Char.isDigit →
    String.toNat! (String.drop (increment_string (text ++ suffix)) text.length) = 
    String.toNat! suffix + 1 := sorry

  theorem increment_string_no_numbers (s : String)
    (h : ∀ c ∈ s.data, !c.isDigit) :
    increment_string s = s ++ "1" := sorry

  theorem increment_string_just_digits (digits : List Nat)
    (h : ∀ d ∈ digits, d ≤ 9) 
    (h2 : digits ≠ []) :
    let num := String.mk (digits.map Char.ofNat)
    String.length (increment_string num) ≥ String.length num ∧
    String.toNat! (increment_string num) = String.toNat! num + 1 := sorry

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded

  /-
  info: 'foo1'
  -/
  #guard_msgs in
  #eval increment_string "foo"

  /-
  info: 'foobar002'
  -/
  #guard_msgs in
  #eval increment_string "foobar001"

  /-
  info: 'foobar100'
  -/
  #guard_msgs in
  #eval increment_string "foobar99"

