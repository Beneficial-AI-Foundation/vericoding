vc-description: |-
  /-
  To celebrate the start of the Rio Olympics (and the return of 'the Last Leg' on C4 tonight) this is an Olympic inspired kata.

  Given a string of random letters, you need to examine each. Some letters naturally have 'rings' in them. 'O' is an obvious example, but 'b', 'p', 'e', 'A', etc are all just as applicable. 'B' even has two!! Please note for this kata you can count lower case 'g' as only one ring.

  Your job is to count the 'rings' in each letter and divide the total number by 2. Round the answer down. Once you have your final score:

  if score is 1 or less,  return 'Not even a medal!';
  if score is 2, return 'Bronze!';
  if score is 3, return 'Silver!';
  if score is more than 3, return 'Gold!';

  Dots over i's and any other letters don't count as rings.
  -/

vc-preamble: |-
  def CHARS_WITH_RINGS := "abdegopqABBDOPQR"

  def olympic_ring (s : String) : String := sorry

vc-helpers: |

vc-definitions: |-
  def POSSIBLE_OUTPUTS := ["Not even a medal!", "Bronze!", "Silver!", "Gold!"]

  theorem output_in_possible_values (s : String) : 
    olympic_ring s ∈ POSSIBLE_OUTPUTS := sorry

vc-theorems: |-
  theorem empty_string_not_medal (s : String) :
    (∀ c, c ∈ s.data → c ∉ CHARS_WITH_RINGS.data) → 
    olympic_ring s = "Not even a medal!" := sorry

  theorem no_ring_chars_not_medal (s : String) :
    (∀ c, c ∈ s.data → c ∉ CHARS_WITH_RINGS.data) →
    olympic_ring s = "Not even a medal!" := sorry

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded

  /-
  info: 'Bronze!'
  -/
  #guard_msgs in
  #eval olympic_ring "wHjMudLwtoPGocnJ"

  /-
  info: 'Not even a medal!'
  -/
  #guard_msgs in
  #eval olympic_ring "JKniLfLW"

  /-
  info: 'Gold!'
  -/
  #guard_msgs in
  #eval olympic_ring "IMBAWejlGRTDWetPS"

