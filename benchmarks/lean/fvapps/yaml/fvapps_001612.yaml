vc-description: |-
  /-
  Given a square grid of integers arr, a falling path with non-zero shifts is a choice of exactly one element from each row of arr, such that no two elements chosen in adjacent rows are in the same column.
  Return the minimum sum of a falling path with non-zero shifts.
  
  Example 1:
  Input: arr = [[1,2,3],[4,5,6],[7,8,9]]
  Output: 13
  Explanation: 
  The possible falling paths are:
  [1,5,9], [1,5,7], [1,6,7], [1,6,8],
  [2,4,8], [2,4,9], [2,6,7], [2,6,8],
  [3,4,8], [3,4,9], [3,5,7], [3,5,9]
  The falling path with the smallest sum is [1,5,7], so the answer is 13.
  
  Constraints:
  
  1 <= arr.length == arr[i].length <= 200
  -99 <= arr[i][j] <= 99
  -/

vc-preamble: |-

vc-helpers: |-

vc-definitions: |-
  def min_falling_path_sum (matrix: List (List Int)) : Int := sorry
  
  -- Single element matrix theorem

vc-theorems: |-
  theorem single_element_matrix_path_sum (n: Int) (h: n ≥ 1 ∧ n ≤ 10):
    min_falling_path_sum [[n]] = n := sorry
  
  -- 2x2 matrix theorem
  
  theorem two_by_two_matrix_path_sum (matrix: List (List Int))
    (hsize: matrix.length = 2 ∧ ∀ row ∈ matrix, row.length = 2)
    (hbound: ∀ row ∈ matrix, ∀ x ∈ row, -10 ≤ x ∧ x ≤ 10):
    min_falling_path_sum matrix = 
      min 
        (min 
          ((matrix.get! 0).get! 0 + (matrix.get! 1).get! 0)
          ((matrix.get! 0).get! 0 + (matrix.get! 1).get! 1))
        (min
          ((matrix.get! 0).get! 1 + (matrix.get! 1).get! 0)
          ((matrix.get! 0).get! 1 + (matrix.get! 1).get! 1)) := sorry
  
  -- Zero matrix theorem  
  
  theorem zero_matrix_path_sum (n: Nat) (h: 2 ≤ n ∧ n ≤ 5):
    let matrix := List.replicate n (List.replicate n 0)
    min_falling_path_sum matrix = 0 := sorry
  
  /-
  info: 13
  -/
  -- #guard_msgs in
  -- #eval min_falling_path_sum [[2, 1, 3], [6, 5, 4], [7, 8, 9]]
  
  /-
  info: -59
  -/
  -- #guard_msgs in
  -- #eval min_falling_path_sum arr2
  
  /-
  info: -36
  -/
  -- #guard_msgs in
  -- #eval min_falling_path_sum arr3

vc-postamble: |-
  -- Apps difficulty: interview
  -- Assurance level: unguarded

