vc-description: |-
  /-
  Two red beads are placed between every two blue beads. There are N blue beads. After looking at the arrangement below work out the number of red beads.
  
  @
  @@
  @
  @@
  @
  @@
  @
  @@
  @
  @@
  @
  
  Implement count_red_beads(n) (in PHP count_red_beads($n); in Java, Javascript, TypeScript, C, C++ countRedBeads(n)) so that it returns the number of red beads.
  If there are less than 2 blue beads return 0.
  -/

vc-preamble: |-

vc-helpers: |-

vc-definitions: |-
  def count_red_beads (n : Nat) : Nat := sorry
  
  theorem count_red_beads_non_negative (n : Nat) : 
    count_red_beads n ≥ 0 := sorry

vc-theorems: |-
  theorem count_red_beads_even (n : Nat) :
    count_red_beads n % 2 = 0 := sorry
  
  theorem count_red_beads_edge_cases (n : Nat) (h : n ≤ 1) :
    count_red_beads n = 0 := sorry 
  
  theorem count_red_beads_formula (n : Nat) (h : n ≥ 2) :
    count_red_beads n = 2 * (n - 1) := sorry
  
  /-
  info: 0
  -/
  -- #guard_msgs in
  -- #eval count_red_beads 0
  
  /-
  info: 0
  -/
  -- #guard_msgs in
  -- #eval count_red_beads 1
  
  /-
  info: 4
  -/
  -- #guard_msgs in
  -- #eval count_red_beads 3

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: guarded_and_plausible

