vc-description: |-
  /-
  # Task
   Mobius function - an important function in number theory. For each given n, it only has 3 values:
  ```
  0  -- if n divisible by square of a prime. Such as: 4, 8, 9
  1  -- if n not divisible by any square of a prime 
          and have even number of prime factor. Such as: 6, 10, 21
  -1 -- otherwise. Such as: 3, 5, 7, 30```
  Your task is to find mobius(`n`)

  # Input/Output

   - `[input]` integer `n`

   `2 <= n <= 1e12`

   - `[output]` an integer
  -/

vc-preamble: |

vc-helpers: |

vc-definitions: |-
  def mobius (n : Nat) : Int :=
    sorry

vc-theorems: |-
  theorem mobius_output_range (n : Nat) (h : n > 0) : 
    mobius n = -1 ∨ mobius n = 0 ∨ mobius n = 1 :=
    sorry

  theorem mobius_square_factors (n : Nat) (h : n > 1) :
    mobius (n * n) = 0 :=
    sorry

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: guarded_and_plausible

  /-
  info: 1
  -/
  #guard_msgs in
  #eval mobius 10

  /-
  info: 0
  -/
  #guard_msgs in
  #eval mobius 9

  /-
  info: -1
  -/
  #guard_msgs in
  #eval mobius 7

