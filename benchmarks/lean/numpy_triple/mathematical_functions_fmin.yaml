vc-description: |-
  /- 
  {
    "name": "numpy.fmin",
    "description": "Element-wise minimum of array elements",
    "url": "https://numpy.org/doc/stable/reference/generated/numpy.fmin.html",
    "doc": "Element-wise minimum of array elements.\n\nCompare two arrays and returns a new array containing the element-wise minima. If one of the elements being compared is a NaN, then the non-nan element is returned.",
  }
  -/

  /-  Element-wise minimum of two vectors, with special NaN handling.
      If one element is NaN, returns the non-NaN element. -/

  /-  Specification: fmin returns element-wise minimum with NaN handling.
      For each position i:
      - If both elements are non-NaN, returns the minimum
      - If x[i] is NaN and y[i] is not, returns y[i]  
      - If y[i] is NaN and x[i] is not, returns x[i]
      - If both are NaN, returns NaN
      - Mathematical properties: commutativity (ignoring NaN order), 
        idempotence for non-NaN values, and boundedness -/

vc-preamble: |-
  import Std.Do.Triple
  import Std.Tactic.Do
  open Std.Do

vc-helpers: |-
  <vc-helpers>
  </vc-helpers>

vc-signature: |-
  def fmin {n : Nat} (x y : Vector Float n) : Id (Vector Float n) :=

vc-implementation: |-
  <vc-implementation>
    sorry
  </vc-implementation>

vc-condition: |-
  theorem fmin_spec {n : Nat} (x y : Vector Float n) :
      ⦃⌜True⌝⦄
      fmin x y
      ⦃⇓result => ⌜∀ i : Fin n, 
        -- NaN handling cases
        (¬(x.get i).isNaN ∧ ¬(y.get i).isNaN → 
          result.get i = min (x.get i) (y.get i)) ∧
        ((x.get i).isNaN ∧ ¬(y.get i).isNaN → 
          result.get i = y.get i) ∧
        (¬(x.get i).isNaN ∧ (y.get i).isNaN → 
          result.get i = x.get i) ∧
        ((x.get i).isNaN ∧ (y.get i).isNaN → 
          (result.get i).isNaN) ∧
        -- Mathematical properties
        (¬(x.get i).isNaN ∧ ¬(y.get i).isNaN → 
          result.get i ≤ x.get i ∧ result.get i ≤ y.get i) ∧
        (¬(result.get i).isNaN → 
          (result.get i = x.get i ∨ result.get i = y.get i))⌝⦄ := by

vc-proof: |-
  <vc-proof>
    sorry
  </vc-proof>

vc-postamble: |-
