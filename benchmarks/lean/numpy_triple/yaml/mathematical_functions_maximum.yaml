vc-description: |-
  /- 
  {
    "name": "numpy.maximum",
    "description": "Element-wise maximum of array elements",
    "url": "https://numpy.org/doc/stable/reference/generated/numpy.maximum.html",
    "doc": "Element-wise maximum of array elements.\n\nCompare two arrays and returns a new array containing the element-wise maxima.",
  }
  -/
  
  /-  numpy.maximum: Element-wise maximum of array elements.
  
      Compares two arrays element-wise and returns a new array containing
      the element-wise maxima. If one of the elements being compared is NaN,
      then that element is returned.
  
      This is a universal function (ufunc) that operates element-wise on arrays
      and supports broadcasting. For 1D arrays, it computes the maximum of
      corresponding elements.
  -/
  
  /-  Specification: numpy.maximum returns a vector where each element is the maximum
      of the corresponding elements from x1 and x2.
  
      Mathematical properties:
      1. Commutativity: maximum(x1, x2) = maximum(x2, x1)
      2. Associativity: maximum(maximum(x1, x2), x3) = maximum(x1, maximum(x2, x3))
      3. Idempotence: maximum(x, x) = x
      4. Monotonicity: if x1[i] ≤ y1[i] and x2[i] ≤ y2[i], then maximum(x1, x2)[i] ≤ maximum(y1, y2)[i]
      5. Identity: maximum(x, -∞) = x (where -∞ is negative infinity)
  
      Precondition: True (no special preconditions for element-wise maximum)
      Postcondition: For all indices i, result[i] = max(x1[i], x2[i])
  -/

vc-preamble: |-
  import Std.Do.Triple
  import Std.Tactic.Do
  open Std.Do

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def maximum {n : Nat} (x1 x2 : Vector Float n) : Id (Vector Float n) :=
    sorry

vc-theorems: |-
  theorem maximum_spec {n : Nat} (x1 x2 : Vector Float n) :
      ⦃⌜True⌝⦄
      maximum x1 x2
      ⦃⇓result => ⌜∀ i : Fin n, result.get i = max (x1.get i) (x2.get i) ∧
                   ∀ i : Fin n, result.get i ≥ x1.get i ∧ result.get i ≥ x2.get i ∧
                   (result.get i = x1.get i ∨ result.get i = x2.get i)⌝⦄ := by
    sorry

vc-postamble: |-

