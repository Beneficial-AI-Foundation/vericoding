vc-description: |-
  /- 
  {
    "name": "numpy.issctype",
    "category": "Data Type Testing",
    "description": "Determines whether the given object represents a scalar data-type",
    "url": "https://numpy.org/doc/stable/reference/generated/numpy.issctype.html",
    "doc": "Determines whether the given object represents a scalar data-type.\n\nParameters\n----------\nrep : any\n    If rep is an instance of a scalar dtype, True is returned. If not, False is returned.\n\nReturns\n-------\nout : bool\n    Boolean result of check whether rep is a scalar dtype.\n\nExamples\n--------\n>>> np.issctype(np.int32)\nTrue\n>>> np.issctype(list)\nFalse\n>>> np.issctype(1.1)\nFalse",
  }
  -/
  
  /-  Determines whether the given object represents a scalar data-type -/
  
  /-  Specification: issctype returns true if and only if the input represents a scalar data type -/

vc-preamble: |-
  import Std.Do.Triple
  import Std.Tactic.Do
  open Std.Do
  
  /-- Represents different kinds of data types that can be tested -/
  inductive DataType
    /-- Scalar integer type -/
    | scalar_int : DataType
    /-- Scalar floating point type -/
    | scalar_float : DataType
    /-- Scalar complex number type -/
    | scalar_complex : DataType
    /-- Scalar boolean type -/
    | scalar_bool : DataType
    /-- Scalar string type -/
    | scalar_string : DataType
    /-- Array type -/
    | array_type : DataType
    /-- Composite type -/
    | composite_type : DataType
    /-- Unknown type -/
    | unknown_type : DataType
  
  /-- Helper function to check if a DataType is a scalar type -/
  def isScalarType (dt : DataType) : Bool :=
    match dt with
    | DataType.scalar_int => true
    | DataType.scalar_float => true
    | DataType.scalar_complex => true
    | DataType.scalar_bool => true
    | DataType.scalar_string => true
    | DataType.array_type => false
    | DataType.composite_type => false
    | DataType.unknown_type => false

vc-helpers: |-

vc-definitions: |-
  def issctype (rep : DataType) : Id Bool :=
    sorry

vc-theorems: |-
  theorem issctype_spec (rep : DataType) :
      ⦃⌜True⌝⦄
      issctype rep
      ⦃⇓result => ⌜result = true ↔ (rep = DataType.scalar_int ∨ 
                                    rep = DataType.scalar_float ∨ 
                                    rep = DataType.scalar_complex ∨ 
                                    rep = DataType.scalar_bool ∨ 
                                    rep = DataType.scalar_string)⌝⦄ := by
    sorry

vc-postamble: |-

