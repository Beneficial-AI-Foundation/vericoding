vc-description: |-
  /- 
  {
    "name": "numpy.fromstring",
    "category": "String I/O",
    "description": "A new 1-D array initialized from text data in a string",
    "url": "https://numpy.org/doc/stable/reference/generated/numpy.fromstring.html",
    "doc": "A new 1-D array initialized from text data in a string. Deprecated since version 1.14: Passing sep='', the default, is deprecated since it will trigger the deprecated binary mode of this function. This mode interprets string as binary bytes, rather than ASCII text with decimal numbers.",
  }
  -/
  
  /-  Create a 1-D array from text data in a string.
      Parses a string containing numeric data separated by a specified separator
      and returns a vector of the parsed values. -/
  
  /-  Specification: fromstring creates a vector by parsing numeric values from a string.
      The function parses the input string using the given separator and converts
      the resulting substrings to floating-point numbers. -/

vc-preamble: |-
  import Std.Do.Triple
  import Std.Tactic.Do
  open Std.Do

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def fromstring {n : Nat} (input : String) (sep : String) : Id (Vector Float n) :=
    sorry

vc-theorems: |-
  theorem fromstring_spec {n : Nat} (input : String) (sep : String) 
      (h_valid : (input.splitOn sep).length = n) 
      (h_nonempty : sep ≠ "") :
      ⦃⌜(input.splitOn sep).length = n ∧ sep ≠ ""⌝⦄
      fromstring (n := n) input sep
      ⦃⇓result => ⌜∀ i : Fin n, 
         (input.splitOn sep)[i.val]!.trim ≠ ""⌝⦄ := by
    sorry

vc-postamble: |-

