vc-description: |-
  /- 
  {
    "name": "numpy.linalg.matrix_norm",
    "category": "Norms and numbers",
    "description": "Compute matrix norm",
    "url": "https://numpy.org/doc/stable/reference/generated/numpy.linalg.matrix_norm.html",
    "doc": "Computes the matrix norm of a matrix.\n\nThis function is able to return one of seven different matrix norms, depending on the value of the ord parameter.",
  }
  -/
  
  /-  Compute matrix norm of a matrix (Frobenius norm by default) -/
  
  /-  Specification: matrix_norm computes the Frobenius norm of a matrix 
      The Frobenius norm is the square root of the sum of squares of all elements.
  
      Properties:
      1. Non-negativity: norm is always ≥ 0
      2. Zero property: norm is 0 iff all elements are 0
      3. Homogeneity: norm(c*A) = |c| * norm(A) for scalar c
      4. Triangle inequality: norm(A + B) ≤ norm(A) + norm(B)
      5. Submultiplicativity: norm(A) dominates the absolute value of any element
  -/

vc-preamble: |-
  import Std.Do.Triple
  import Std.Tactic.Do
  open Std.Do

vc-helpers: |-

vc-definitions: |-
  def matrix_norm {rows cols : Nat} (x : Vector (Vector Float cols) rows) : Id Float :=
    sorry

vc-theorems: |-
  theorem matrix_norm_spec {rows cols : Nat} (x : Vector (Vector Float cols) rows) :
      ⦃⌜True⌝⦄
      matrix_norm x
      ⦃⇓res => ⌜res ≥ 0 ∧ 
               (res = 0 ↔ ∀ i : Fin rows, ∀ j : Fin cols, (x.get i).get j = 0) ∧
               (∀ i : Fin rows, ∀ j : Fin cols, Float.abs ((x.get i).get j) ≤ res) ∧
               (rows > 0 ∧ cols > 0 → 
                 ∃ i : Fin rows, ∃ j : Fin cols, (x.get i).get j ≠ 0 → res > 0)⌝⦄ := by
    sorry

vc-postamble: |-

