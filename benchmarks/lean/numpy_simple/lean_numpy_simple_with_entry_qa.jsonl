{"id": "LS0000", "language": "lean", "source": "numpy_simple", "source_id": "NpAbs-spec", "vc-description": "", "vc-preamble": "def absInt (x : Int) : Int := if x < 0 then -x else x", "vc-helpers": "", "vc-definitions": "def abs {n : Nat} (a : Vector Int n) : Vector Int n :=\nsorry", "vc-theorems": "theorem abs_spec {n : Nat} (a : Vector Int n) :\n  (abs a).toList.length = n ∧\n  (∀ i : Fin n, (abs a)[i] = Int.natAbs (a[i])) ∧\n  (∀ i : Fin n, (abs a)[i] ≥ 0) :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 0}, "individual_score": 0.15000000000000002}}
{"id": "LS0001", "language": "lean", "source": "numpy_simple", "source_id": "NpAdd-spec", "vc-description": "", "vc-preamble": "", "vc-helpers": "", "vc-definitions": "def add {n : Nat} (a b : Vector Int n) : Vector Int n :=\nsorry", "vc-theorems": "theorem add_spec {n : Nat} (a b : Vector Int n) :\n  (add a b).toList.length = n ∧\n  ∀ i : Fin n, (add a b)[i] = a[i] + b[i] :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 0}, "individual_score": 0.15000000000000002}}
{"id": "LS0002", "language": "lean", "source": "numpy_simple", "source_id": "NpArange-spec", "vc-description": "", "vc-preamble": "", "vc-helpers": "", "vc-definitions": "def arangeLength (start stop step : Float) : Nat :=\nsorry\n\ndef arange (start stop step : Float)\n    (h_step_nonzero : step ≠ 0)\n    (h_valid_range : if step < 0 then start > stop else start < stop) :\n    Vector Float (arangeLength start stop step) :=\nsorry", "vc-theorems": "theorem arange_spec\n  (start stop step : Float)\n  (h_step_nonzero : step ≠ 0)\n  (h_valid_range : if step < 0 then start > stop else start < stop) :\n  let n := arangeLength start stop step\n  let arr := arange start stop step h_step_nonzero h_valid_range\n  n = ((stop - start) / step).floor.toUInt64.toNat\n  ∧\n  n > 0\n  ∧\n  arr[0]'(by sorry) = start\n  ∧\n  ∀ i : Fin n, i.val + 1 < n → arr[i.val + 1]'(by sorry) - arr[i.val] = step :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 0}, "individual_score": 0.15000000000000002}}
{"id": "LS0003", "language": "lean", "source": "numpy_simple", "source_id": "NpArgmax-spec", "vc-description": "", "vc-preamble": "", "vc-helpers": "", "vc-definitions": "def argmax {n : Nat} (h : 0 < n) (arr : Vector Float n) : Fin n :=\nsorry", "vc-theorems": "theorem argmax_spec {n : Nat} (h : 0 < n) (arr : Vector Float n) :\n  ∀ i : Fin n, i < argmax h arr → arr[argmax h arr] > arr[i]\n  ∧\n  ∀ i : Fin n, argmax h arr < i → arr[argmax h arr] ≥ arr[i]\n  :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 0}, "individual_score": 0.15000000000000002}}
{"id": "LS0004", "language": "lean", "source": "numpy_simple", "source_id": "NpArgsort-spec", "vc-description": "", "vc-preamble": "", "vc-helpers": "", "vc-definitions": "def argsort {n : Nat} (a : Vector Float n) : Vector (Fin n) n :=\nsorry", "vc-theorems": "theorem argsort_spec {n : Nat} (a : Vector Float n) :\n  (argsort a).toList.length = n ∧\n  (∀ i j : Fin n, i < j → a[(argsort a)[i]] ≤ a[(argsort a)[j]]) ∧\n  (∀ i : Fin n, ∃ j : Fin n, (argsort a)[j] = i) :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 1}, "individual_score": 0.0}}
{"id": "LS0005", "language": "lean", "source": "numpy_simple", "source_id": "NpBitwiseAnd-spec", "vc-description": "", "vc-preamble": "", "vc-helpers": "", "vc-definitions": "def bitwiseAnd {n : Nat} (a b : Vector Nat n) : Vector Nat n :=\nsorry", "vc-theorems": "theorem bitwiseAnd_spec {n : Nat} (a b : Vector Nat n) :\n  (bitwiseAnd a b).toList.length = n ∧\n  ∀ i : Fin n, (bitwiseAnd a b)[i] = a[i] &&& b[i] :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 0}, "individual_score": 0.15000000000000002}}
{"id": "LS0006", "language": "lean", "source": "numpy_simple", "source_id": "NpBitwiseOr-spec", "vc-description": "", "vc-preamble": "", "vc-helpers": "", "vc-definitions": "def bitwiseOr {n : Nat} (a b : Vector Nat n) : Vector Nat n :=\nsorry", "vc-theorems": "theorem bitwiseOr_spec {n : Nat} (a b : Vector Nat n) :\n  (bitwiseOr a b).toList.length = n ∧\n  ∀ i : Fin n, (bitwiseOr a b)[i] = a[i] ||| b[i] :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 1}, "individual_score": 0.0}}
{"id": "LS0007", "language": "lean", "source": "numpy_simple", "source_id": "NpBitwiseXor-spec", "vc-description": "", "vc-preamble": "", "vc-helpers": "", "vc-definitions": "def bitwiseXor {n : Nat} (a b : Vector Nat n) : Vector Nat n :=\nsorry", "vc-theorems": "theorem bitwiseXor_spec {n : Nat} (a b : Vector Nat n) :\n  (bitwiseXor a b).toList.length = n ∧\n  ∀ i : Fin n, (bitwiseXor a b)[i] = a[i] ^^^ b[i] :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 0}, "individual_score": 0.15000000000000002}}
{"id": "LS0008", "language": "lean", "source": "numpy_simple", "source_id": "NpBroadcast-spec", "vc-description": "", "vc-preamble": "def Matrix (m n : Nat) (α : Type) := Fin m → Fin n → α\n\ninstance {m n : Nat} {α : Type} [Inhabited α] : GetElem (Matrix m n α) (Nat × Nat) α (fun _ ij => ij.1 < m ∧ ij.2 < n) where\n  getElem mat ij h := mat ⟨ij.1, h.1⟩ ⟨ij.2, h.2⟩\n\ndef Matrix.size {m n : Nat} {α : Type} (_ : Matrix m n α) : Nat := m * n", "vc-helpers": "", "vc-definitions": "def broadcast {n : Nat} (a : Vector Int n) (shape : Vector Nat 2) : Matrix (shape[0]!) (shape[1]!) Int :=\nsorry", "vc-theorems": "theorem broadcast_spec {n : Nat} (a : Vector Int n) (shape : Vector Nat 2)\n  (h : shape[0]! = n ∨ shape[1]! = n) :\n  let ret := broadcast a shape\n  (ret.size = shape[0]! * shape[1]!) ∧\n  (∀ i j : Nat, i < shape[0]! → j < shape[1]! →\n    if shape[0]! = n then ret[(i,j)]! = a[i]! else ret[(i,j)]! = a[j]!) :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 0}, "individual_score": 0.15000000000000002}}
{"id": "LS0009", "language": "lean", "source": "numpy_simple", "source_id": "NpCenter-spec", "vc-description": "", "vc-preamble": "", "vc-helpers": "", "vc-definitions": "def center {n : Nat} (input : Vector String n) (width : Nat) : Vector String n :=\nsorry", "vc-theorems": "theorem center_spec {n : Nat} (input : Vector String n) (width : Nat)\n  (h : ∀ i : Fin n, input[i].length ≥ 1) :\n  let res := center input width\n  (res.toList.length = n) ∧\n  (∀ i : Fin n, if input[i].length > width then res[i].length = input[i].length else res[i].length = width) ∧\n  (∀ i : Fin n, if input[i].length < width then\n    let startPos := (width - input[i].length + 1) / 2\n    let endPos := startPos + input[i].length - 1\n    res[i].toList.drop startPos |>.take input[i].length = input[i].toList else True) :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 0}, "individual_score": 0.15000000000000002}}
{"id": "LS0010", "language": "lean", "source": "numpy_simple", "source_id": "NpClip-spec", "vc-description": "", "vc-preamble": "", "vc-helpers": "", "vc-definitions": "def clip {n : Nat} (a : Vector Float n) (min max : Float) : Vector Float n :=\nsorry", "vc-theorems": "theorem clip_spec {n : Nat} (a : Vector Float n) (min max : Float)\n  (h : min < max) :\n  let ret := clip a min max\n  (ret.toList.length = n) ∧\n  (∀ i : Fin n, if a[i] < min then ret[i] = min\n               else if a[i] > max then ret[i] = max\n               else ret[i] = a[i]) :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 0}, "individual_score": 0.15000000000000002}}
{"id": "LS0011", "language": "lean", "source": "numpy_simple", "source_id": "NpColumnStack-spec", "vc-description": "", "vc-preamble": "def Matrix (m n : Nat) (α : Type) := Fin m → Fin n → α\n\ninstance {m n : Nat} {α : Type} [Inhabited α] : GetElem (Matrix m n α) (Nat × Nat) α (fun _ ij => ij.1 < m ∧ ij.2 < n) where\n  getElem mat ij h := mat ⟨ij.1, h.1⟩ ⟨ij.2, h.2⟩\n\ndef Matrix.size {m n : Nat} {α : Type} (_ : Matrix m n α) : Nat := m * n", "vc-helpers": "", "vc-definitions": "def column_stack {m n : Nat} (input : Vector (Vector Int m) n) : Matrix m n Int :=\nsorry", "vc-theorems": "theorem column_stack_spec {m n : Nat} (input : Vector (Vector Int m) n)\n  (h1 : n ≠ 0)\n  (h2 : ∀ i : Fin n, input[i].size = m) :\n  let ret := column_stack input\n  (ret.size = m * n) ∧\n  (∀ i : Nat, ∀ j : Nat, i < n → j < m → ret[(j,i)]! = input[i]![j]!) :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 0}, "individual_score": 0.15000000000000002}}
{"id": "LS0012", "language": "lean", "source": "numpy_simple", "source_id": "NpConvolve-spec", "vc-description": "", "vc-preamble": "", "vc-helpers": "", "vc-definitions": "def convolutionSum (arr1 arr2 : List Float) (n : Nat) : Float :=\nsorry\n\ndef convolve (arr1 arr2 : List Float) : List Float :=\nsorry", "vc-theorems": "theorem convolve_spec (arr1 arr2 : List Float)\n  (h1 : arr1.length > 0)\n  (h2 : arr2.length > 0) :\n  let result := convolve arr1 arr2\n  result.length = arr1.length + arr2.length - 1 :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 1}, "individual_score": 0.0}}
{"id": "LS0013", "language": "lean", "source": "numpy_simple", "source_id": "NpCopy-spec", "vc-description": "", "vc-preamble": "", "vc-helpers": "", "vc-definitions": "def copy {n : Nat} (arr : Vector Int n) : Vector Int n :=\nsorry", "vc-theorems": "theorem copy_spec {n : Nat} (arr : Vector Int n) :\n  (copy arr).toList.length = n ∧\n  ∀ i : Fin n, (copy arr)[i] = arr[i] :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 1}, "individual_score": 0.0}}
{"id": "LS0014", "language": "lean", "source": "numpy_simple", "source_id": "NpCountnonzero-spec", "vc-description": "", "vc-preamble": "", "vc-helpers": "", "vc-definitions": "def nonzero {n : Nat} (arr : Vector Float n) : Nat :=\nsorry", "vc-theorems": "theorem nonzero_spec {n : Nat} (arr : Vector Float n) :\n  let num := nonzero arr\n  (num ≥ 0) ∧\n  (n > 0 → arr[0]! = 0.0 → nonzero (arr.tail) = num - 1) :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 1}, "individual_score": 0.0}}
{"id": "LS0015", "language": "lean", "source": "numpy_simple", "source_id": "NpCumProd-spec", "vc-description": "", "vc-preamble": "", "vc-helpers": "", "vc-definitions": "def cumProd {n : Nat} (a : Vector Int n) : Vector Int n :=\nsorry", "vc-theorems": "theorem cumProd_spec {n : Nat} (h : n > 0) (a : Vector Int n) :\n  (cumProd a)[0] = a[0] ∧\n  ∀ i : Fin n, i.val > 0 →\n    let j : Fin n := ⟨i.val - 1, by sorry⟩\n    (cumProd a)[i] = (cumProd a)[j] * a[i] :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 0}, "individual_score": 0.15000000000000002}}
{"id": "LS0016", "language": "lean", "source": "numpy_simple", "source_id": "NpCumSum-spec", "vc-description": "", "vc-preamble": "", "vc-helpers": "", "vc-definitions": "def cumSum {n : Nat} (a : Vector Int n) : Vector Int n :=\nsorry", "vc-theorems": "theorem cumSum_spec {n : Nat} (h : n > 0) (a : Vector Int n) :\n  (cumSum a)[0] = a[0] ∧\n  ∀ i : Fin n, i.val > 0 →\n    let j : Fin n := ⟨i.val - 1, by sorry⟩\n    (cumSum a)[i] = (cumSum a)[j] + a[i] :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 0}, "individual_score": 0.15000000000000002}}
{"id": "LS0017", "language": "lean", "source": "numpy_simple", "source_id": "NpDiagonal-spec", "vc-description": "", "vc-preamble": "def Matrix (m n : Nat) (α : Type) := Fin m → Fin n → α\n\ninstance {m n : Nat} {α : Type} [Inhabited α] : GetElem (Matrix m n α) (Nat × Nat) α (fun _ ij => ij.1 < m ∧ ij.2 < n) where\n  getElem mat ij h := mat ⟨ij.1, h.1⟩ ⟨ij.2, h.2⟩\n\ndef Matrix.size {m n : Nat} {α : Type} (_ : Matrix m n α) : Nat := m * n", "vc-helpers": "", "vc-definitions": "def diagonal {n : Nat} (arr : Matrix n n Int) (k : Int) : Vector Int (if k > 0 then n - k.natAbs else n + k.natAbs) :=\nsorry", "vc-theorems": "theorem diagonal_spec {n : Nat} (arr : Matrix n n Int) (k : Int)\n  (h1 : -n < k ∧ k < n) :\n  let ret := diagonal arr k\n  (if k > 0 then ret.size = n - k.natAbs else ret.size = n + k.natAbs) ∧\n  (∀ i : Nat, i < ret.size →\n    if k ≥ 0 then ret[i]! = arr[(i, i + k.natAbs)]!\n    else ret[i]! = arr[(i + k.natAbs, i)]!) :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 0}, "individual_score": 0.15000000000000002}}
{"id": "LS0018", "language": "lean", "source": "numpy_simple", "source_id": "NpEqual-spec", "vc-description": "", "vc-preamble": "", "vc-helpers": "", "vc-definitions": "def equal {n : Nat} (a b : Vector Int n) : Vector Bool n :=\nsorry", "vc-theorems": "theorem equal_spec {n : Nat} (a b : Vector Int n) :\n  (equal a b).toList.length = n ∧\n  ∀ i : Fin n, (equal a b)[i] = (a[i] = b[i]) :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 1}, "individual_score": 0.0}}
{"id": "LS0019", "language": "lean", "source": "numpy_simple", "source_id": "NpFlatten-spec", "vc-description": "", "vc-preamble": "def Matrix (m n : Nat) (α : Type) := Fin m → Fin n → α\n\ninstance {m n : Nat} {α : Type} [Inhabited α] : GetElem (Matrix m n α) (Nat × Nat) α (fun _ ij => ij.1 < m ∧ ij.2 < n) where\n  getElem mat ij h := mat ⟨ij.1, h.1⟩ ⟨ij.2, h.2⟩\n\ndef Matrix.size {m n : Nat} {α : Type} (_ : Matrix m n α) : Nat := m * n", "vc-helpers": "", "vc-definitions": "def flatten2 {m n : Nat} (mat : Matrix m n Int) : Vector Int (m * n) :=\nsorry", "vc-theorems": "theorem flatten2_spec {m n : Nat} (mat : Matrix m n Int)\n  (h1 : m > 0)\n  (h2 : n > 0) :\n  let ret := flatten2 mat\n  (ret.size = m * n) ∧\n  (∀ i j : Nat, i < m → j < n → ret[i * n + j]! = mat[(i,j)]!) :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 1}, "individual_score": 0.0}}
{"id": "LS0020", "language": "lean", "source": "numpy_simple", "source_id": "NpFloorDivide-spec", "vc-description": "", "vc-preamble": "def NonZeroVector (n : Nat) := { v : Vector Int n // ∀ i : Fin n, v[i] ≠ 0 }", "vc-helpers": "", "vc-definitions": "def floorDivide {n : Nat} (a : Vector Int n) (b : NonZeroVector n) : Vector Int n :=\nsorry", "vc-theorems": "theorem floorDivide_spec {n : Nat} (a : Vector Int n) (b : NonZeroVector n) :\n  (floorDivide a b).toList.length = n ∧\n  ∀ i : Fin n, (floorDivide a b)[i] = a[i] / (b.val[i]) :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 0}, "individual_score": 0.15000000000000002}}
{"id": "LS0021", "language": "lean", "source": "numpy_simple", "source_id": "NpGcd-spec", "vc-description": "", "vc-preamble": "", "vc-helpers": "", "vc-definitions": "def gcdInt (a b : Int) : Int :=\nsorry", "vc-theorems": "theorem gcdInt_spec (a b : Int) :\n  gcdInt a b ≥ 0 ∧\n  a % gcdInt a b = 0 ∧\n  b % gcdInt a b = 0 ∧\n  ∀ d : Int, d > 0 → a % d = 0 → b % d = 0 → d ≤ gcdInt a b :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 1}, "individual_score": 0.0}}
{"id": "LS0022", "language": "lean", "source": "numpy_simple", "source_id": "NpGreater-spec", "vc-description": "", "vc-preamble": "", "vc-helpers": "", "vc-definitions": "def greater {n : Nat} (a b : Vector Int n) : Vector Bool n :=\nsorry", "vc-theorems": "theorem greater_spec {n : Nat} (a b : Vector Int n) :\n  (greater a b).toList.length = n ∧\n  ∀ i : Fin n, (greater a b)[i] = (a[i] > b[i]) :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 1}, "individual_score": 0.0}}
{"id": "LS0023", "language": "lean", "source": "numpy_simple", "source_id": "NpGreaterEqual-spec", "vc-description": "", "vc-preamble": "", "vc-helpers": "", "vc-definitions": "def greaterEqual {n : Nat} (a b : Vector Int n) : Vector Bool n :=\nsorry", "vc-theorems": "theorem greaterEqual_spec {n : Nat} (a b : Vector Int n) :\n  (greaterEqual a b).toList.length = n ∧\n  ∀ i : Fin n, (greaterEqual a b)[i] = (a[i] ≥ b[i]) :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 0}, "individual_score": 0.15000000000000002}}
{"id": "LS0024", "language": "lean", "source": "numpy_simple", "source_id": "NpHistogram-spec", "vc-description": "", "vc-preamble": "", "vc-helpers": "", "vc-definitions": "def histogram {n m : Nat} (data : Vector Float n) (bins : Vector Float m) : Vector Int (m - 1) :=\nsorry\n\ndef histogram_helper {n m : Nat} (data : Vector Float n) (bins : Vector Float m) (hist : Vector Int (m - 1)) (index : Int) : Vector Int (m - 1) :=\nsorry", "vc-theorems": "theorem histogram_spec {n m : Nat} (data : Vector Float n) (bins : Vector Float m)\n  (h1 : m ≥ 2)\n  (h2 : ∀ i : Fin (m - 1), bins[i.succ] > bins[i]) :\n  let hist := histogram data bins\n  (hist.toList.length = m - 1) ∧\n  (n ≥ 0) :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 1}, "individual_score": 0.0}}
{"id": "LS0025", "language": "lean", "source": "numpy_simple", "source_id": "NpIntersect-spec", "vc-description": "", "vc-preamble": "", "vc-helpers": "", "vc-definitions": "def intersect {n m : Nat} (a : Vector Float n) (b : Vector Float m) : Vector Float (min n m) :=\nsorry", "vc-theorems": "theorem intersect_spec {n m : Nat} (a : Vector Float n) (b : Vector Float m) :\n  let ret := intersect a b\n  (ret.toList.length < n ∧ ret.toList.length < m) ∧\n  (∀ i j : Nat, i < n → j < m →\n    (a[i]! = b[j]! → ∃ k : Nat, k < ret.toList.length ∧ ret[k]! = a[i]!) ∧\n    (a[i]! ≠ b[j]! → ¬ ∃ k : Nat, k < ret.toList.length ∧ ret[k]! = a[i]!)) :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 1}, "individual_score": 0.0}}
{"id": "LS0026", "language": "lean", "source": "numpy_simple", "source_id": "NpInvert-spec", "vc-description": "", "vc-preamble": "", "vc-helpers": "", "vc-definitions": "def invert {n : Nat} (bitWidth : Nat) (a : Vector Nat n) : Vector Nat n :=\nsorry", "vc-theorems": "theorem invert_spec {n : Nat} (bitWidth : Nat) (a : Vector Nat n) :\n  (invert bitWidth a).toList.length = n ∧\n  ∀ i : Fin n, (invert bitWidth a)[i] = (2^bitWidth - 1) - a[i] :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 0}, "individual_score": 0.15000000000000002}}
{"id": "LS0027", "language": "lean", "source": "numpy_simple", "source_id": "NpIsalpha-spec", "vc-description": "", "vc-preamble": "", "vc-helpers": "", "vc-definitions": "def isAlpha {n : Nat} (input : Vector String n) : Vector Bool n :=\nsorry", "vc-theorems": "theorem isAlpha_spec {n : Nat} (input : Vector String n) :\n  let ret := isAlpha input\n  (ret.toList.length = n) ∧\n  (∀ i : Fin n, ret[i] = (input[i].length > 0 ∧\n    input[i].all fun c => ('A' ≤ c ∧ c ≤ 'Z') ∨ ('a' ≤ c ∧ c ≤ 'z'))) :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 1}, "individual_score": 0.0}}
{"id": "LS0028", "language": "lean", "source": "numpy_simple", "source_id": "NpIsclose-spec", "vc-description": "", "vc-preamble": "", "vc-helpers": "", "vc-definitions": "def np_isclose {n : Nat} (a b : Vector Int n) (tol : Int) : Vector Bool n :=\nsorry", "vc-theorems": "theorem np_isclose_spec {n : Nat} (a b : Vector Int n) (tol : Int)\n  (h1 : n > 0)\n  (h2 : tol > 0) :\n  let ret := np_isclose a b tol\n  (ret.toList.length = n) ∧\n  (∀ i : Fin n, if -tol < a[i] - b[i] ∧ a[i] - b[i] < tol then ret[i] = true else ret[i] = false) :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 0}, "individual_score": 0.15000000000000002}}
{"id": "LS0029", "language": "lean", "source": "numpy_simple", "source_id": "NpLcm-spec", "vc-description": "", "vc-preamble": "", "vc-helpers": "", "vc-definitions": "def lcmInt (a b : Int) : Int :=\nsorry", "vc-theorems": "theorem lcmInt_spec (a b : Int) :\n  lcmInt a b ≥ 0 ∧\n  lcmInt a b % a = 0 ∧\n  lcmInt a b % b = 0 ∧\n  ∀ m : Int, m > 0 → m % a = 0 → m % b = 0 → lcmInt a b ≤ m :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 0}, "individual_score": 0.15000000000000002}}
{"id": "LS0030", "language": "lean", "source": "numpy_simple", "source_id": "NpLeftShift-spec", "vc-description": "", "vc-preamble": "", "vc-helpers": "", "vc-definitions": "def shiftLeftInt (x : Int) (shift : Nat) : Int :=\nsorry\n\ndef leftShift {n : Nat} (a : Vector Int n) (b : Vector Nat n)\n    (h : ∀ i : Fin n, b[i] < 64) : Vector Int n :=\nsorry", "vc-theorems": "theorem leftShift_spec {n : Nat} (a : Vector Int n) (b : Vector Nat n)\n    (h : ∀ i : Fin n, b[i] < 64) :\n  (leftShift a b h).toList.length = n ∧\n  ∀ i : Fin n, (leftShift a b h)[i] = shiftLeftInt (a[i]) (b[i]) :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 1}, "individual_score": 0.0}}
{"id": "LS0031", "language": "lean", "source": "numpy_simple", "source_id": "NpLess-spec", "vc-description": "", "vc-preamble": "", "vc-helpers": "", "vc-definitions": "def less {n : Nat} (a b : Vector Int n) : Vector Bool n :=\nsorry", "vc-theorems": "theorem less_spec {n : Nat} (a b : Vector Int n) :\n  (less a b).toList.length = n ∧\n  ∀ i : Fin n, (less a b)[i] = (a[i] < b[i]) :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 0}, "individual_score": 0.15000000000000002}}
{"id": "LS0032", "language": "lean", "source": "numpy_simple", "source_id": "NpLessEqual-spec", "vc-description": "", "vc-preamble": "", "vc-helpers": "", "vc-definitions": "def lessEqual {n : Nat} (a b : Vector Int n) : Vector Bool n :=\nsorry", "vc-theorems": "theorem lessEqual_spec {n : Nat} (a b : Vector Int n) :\n  (lessEqual a b).toList.length = n ∧\n  ∀ i : Fin n, (lessEqual a b)[i] = (a[i] ≤ b[i]) :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 1}, "individual_score": 0.0}}
{"id": "LS0033", "language": "lean", "source": "numpy_simple", "source_id": "NpMax-spec", "vc-description": "", "vc-preamble": "", "vc-helpers": "", "vc-definitions": "def max {n : Nat} (h : n > 0) (a : Vector Int n) : Int :=\nsorry", "vc-theorems": "theorem max_spec {n : Nat} (h : n > 0) (a : Vector Int n) :\n  ∃ i : Fin n, max h a = a[i] ∧\n  ∀ i : Fin n, a[i] ≤ max h a :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 0}, "individual_score": 0.15000000000000002}}
{"id": "LS0034", "language": "lean", "source": "numpy_simple", "source_id": "NpMin-spec", "vc-description": "", "vc-preamble": "", "vc-helpers": "", "vc-definitions": "def min {n : Nat} (h : n > 0) (a : Vector Int n) : Int :=\nsorry", "vc-theorems": "theorem min_spec {n : Nat} (h : n > 0) (a : Vector Int n) :\n  ∃ i : Fin n, min h a = a[i] ∧\n  ∀ i : Fin n, min h a ≤ a[i] :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 0}, "individual_score": 0.15000000000000002}}
{"id": "LS0035", "language": "lean", "source": "numpy_simple", "source_id": "NpMod-spec", "vc-description": "", "vc-preamble": "def NonZeroVector (n : Nat) := { v : Vector Int n // ∀ i : Fin n, v[i] ≠ 0 }", "vc-helpers": "", "vc-definitions": "def mod {n : Nat} (a : Vector Int n) (b : NonZeroVector n) : Vector Int n :=\nsorry", "vc-theorems": "theorem mod_spec {n : Nat} (a : Vector Int n) (b : NonZeroVector n) :\n  (mod a b).toList.length = n ∧\n  ∀ i : Fin n, (mod a b)[i] = a[i] % (b.val[i]) :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 0}, "individual_score": 0.15000000000000002}}
{"id": "LS0036", "language": "lean", "source": "numpy_simple", "source_id": "NpMultiply-spec", "vc-description": "", "vc-preamble": "", "vc-helpers": "", "vc-definitions": "def multiply {n : Nat} (a b : Vector Int n) : Vector Int n :=\nsorry", "vc-theorems": "theorem multiply_spec {n : Nat} (a b : Vector Int n) :\n  (multiply a b).toList.length = n ∧\n  ∀ i : Fin n, (multiply a b)[i] = a[i] * b[i] :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 0}, "individual_score": 0.15000000000000002}}
{"id": "LS0037", "language": "lean", "source": "numpy_simple", "source_id": "NpNotEqual-spec", "vc-description": "", "vc-preamble": "", "vc-helpers": "", "vc-definitions": "def notEqual {n : Nat} (a b : Vector Int n) : Vector Bool n :=\nsorry", "vc-theorems": "theorem notEqual_spec {n : Nat} (a b : Vector Int n) :\n  (notEqual a b).toList.length = n ∧\n  ∀ i : Fin n, (notEqual a b)[i] = (a[i] ≠ b[i]) :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 0}, "individual_score": 0.15000000000000002}}
{"id": "LS0038", "language": "lean", "source": "numpy_simple", "source_id": "NpPiecewise-spec", "vc-description": "", "vc-preamble": "", "vc-helpers": "", "vc-definitions": "def piecewise {n m : Nat} (x : Vector Float n) (condlist : Vector (Float → Bool) m) (funclist : Vector (Float → Float) m) : Vector Float n :=\nsorry", "vc-theorems": "theorem piecewise_spec {n m : Nat} (x : Vector Float n) (condlist : Vector (Float → Bool) m) (funclist : Vector (Float → Float) m)\n  (h : m = m) :\n  let ret := piecewise x condlist funclist\n  (ret.toList.length = n) ∧\n  (∀ i j : Nat, i < n → j < m →\n    condlist[j]! (x[i]!) → ret[i]! = funclist[j]! (x[i]!)) :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 1}, "individual_score": 0.0}}
{"id": "LS0039", "language": "lean", "source": "numpy_simple", "source_id": "NpPoly-spec", "vc-description": "", "vc-preamble": "", "vc-helpers": "", "vc-definitions": "def poly_helper {n : Nat} (roots : Vector Float n) (val : Nat) : Vector Float n :=\nsorry\n\ndef poly {n : Nat} (roots : Vector Float n) : Vector Float n :=\nsorry", "vc-theorems": "theorem poly_spec {n : Nat} (roots : Vector Float n)\n  (h : n > 0) :\n  let coeff := poly roots\n  (coeff.toList.length = n) ∧\n  (∀ i : Fin n, coeff[i] = (poly_helper roots (n - 1))[i]) :=\nsorry\n\ntheorem poly_helper_spec {n : Nat} (roots : Vector Float n) (val : Nat)\n  (h1 : n > 0)\n  (h2 : val > 0) :\n  let coeff := poly_helper roots val\n  (coeff.toList.length = n) ∧\n  (coeff[0]! = 1.0) :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 1}, "individual_score": 0.0}}
{"id": "LS0040", "language": "lean", "source": "numpy_simple", "source_id": "NpPolyder-spec", "vc-description": "", "vc-preamble": "", "vc-helpers": "", "vc-definitions": "def polyder {n : Nat} (poly : Vector Float n) (m : Int) : Vector Float (n - m.natAbs) :=\nsorry", "vc-theorems": "theorem polyder_spec {n : Nat} (poly : Vector Float n) (m : Int)\n  (h : m > 0) :\n  let ret := polyder poly m\n  ret.toList.length = n - m.natAbs :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 1}, "individual_score": 0.0}}
{"id": "LS0041", "language": "lean", "source": "numpy_simple", "source_id": "NpPower-spec", "vc-description": "", "vc-preamble": "", "vc-helpers": "", "vc-definitions": "def power {n : Nat} (a : Vector Int n) (b : Vector Nat n) : Vector Int n :=\nsorry", "vc-theorems": "theorem power_spec {n : Nat} (a : Vector Int n) (b : Vector Nat n) :\n  (power a b).toList.length = n ∧\n  ∀ i : Fin n, (power a b)[i] = (a[i]) ^ (b[i]) :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 0}, "individual_score": 0.15000000000000002}}
{"id": "LS0042", "language": "lean", "source": "numpy_simple", "source_id": "NpProd-spec", "vc-description": "", "vc-preamble": "", "vc-helpers": "", "vc-definitions": "def prod {n : Nat} (a : Vector Int n) : Int :=\nsorry\n\ndef prodArray {n : Nat} (a : Vector Int n) (start finish : Nat) : Int :=\nsorry", "vc-theorems": "theorem prod_spec {n : Nat} (a : Vector Int n) :\n  prod a = prodArray a 0 n ∧\n  (∀ i : Fin n, a[i] = 0 → prod a = 0) :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 0}, "individual_score": 0.15000000000000002}}
{"id": "LS0043", "language": "lean", "source": "numpy_simple", "source_id": "NpRavel-spec", "vc-description": "", "vc-preamble": "def Matrix (m n : Nat) (α : Type) := Fin m → Fin n → α\n\ninstance {m n : Nat} {α : Type} [Inhabited α] : GetElem (Matrix m n α) (Nat × Nat) α (fun _ ij => ij.1 < m ∧ ij.2 < n) where\n  getElem mat ij h := mat ⟨ij.1, h.1⟩ ⟨ij.2, h.2⟩\n\ndef Matrix.size {m n : Nat} {α : Type} (_ : Matrix m n α) : Nat := m * n", "vc-helpers": "", "vc-definitions": "def ravel {m n : Nat} (arr : Matrix m n Int) : Vector Int (m * n) :=\nsorry", "vc-theorems": "theorem ravel_spec {m n : Nat} (arr : Matrix m n Int) :\n  let ret := ravel arr\n  (ret.size = m * n) ∧\n  (∀ i j : Nat, i < m → j < n → ret[i * n + j]! = arr[(i,j)]!) :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 0}, "individual_score": 0.15000000000000002}}
{"id": "LS0044", "language": "lean", "source": "numpy_simple", "source_id": "NpRemainder-spec", "vc-description": "", "vc-preamble": "", "vc-helpers": "", "vc-definitions": "def remainder {n : Nat} (a b : Vector Int n) : Vector Int n :=\nsorry", "vc-theorems": "theorem remainder_spec {n : Nat} (a b : Vector Int n)\n  (h : ∀ i : Fin n, b[i] ≠ 0) :\n  let ret := remainder a b\n  (ret.toList.length = n) ∧\n  (∀ i : Fin n, ret[i] = a[i] % b[i]) :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 0}, "individual_score": 0.15000000000000002}}
{"id": "LS0045", "language": "lean", "source": "numpy_simple", "source_id": "NpReshape-spec", "vc-description": "", "vc-preamble": "def Matrix (m n : Nat) (α : Type) := Fin m → Fin n → α\n\ninstance {m n : Nat} {α : Type} [Inhabited α] : GetElem (Matrix m n α) (Nat × Nat) α (fun _ ij => ij.1 < m ∧ ij.2 < n) where\n  getElem mat ij h := mat ⟨ij.1, h.1⟩ ⟨ij.2, h.2⟩\n\ndef Matrix.size {m n : Nat} {α : Type} (_ : Matrix m n α) : Nat := m * n", "vc-helpers": "", "vc-definitions": "def reshape {n : Nat} (arr : Vector Int n) (shape : Vector Nat 2) : Matrix (if shape[0]! > 0 then shape[0]! else n / shape[1]!) (if shape[1]! > 0 then shape[1]! else n / shape[0]!) Int :=\nsorry", "vc-theorems": "theorem reshape_spec {n : Nat} (arr : Vector Int n) (shape : Vector Nat 2)\n  (h1 : ∀ i : Fin 2, shape[i] > 0 ∨ shape[i] = 0)\n  (h2 : ¬(shape[0]! = 0 ∧ shape[1]! = 0))\n  (h3 : if shape[0]! > 0 ∧ shape[1]! > 0 then shape[0]! * shape[1]! = n\n        else if shape[0]! = 0 then n % shape[1]! = 0\n        else n % shape[0]! = 0) :\n  let ret := reshape arr shape\n  (if shape[0]! > 0 then ret.size / (if shape[1]! > 0 then shape[1]! else n / shape[0]!) = shape[0]!\n   else ret.size / (if shape[1]! > 0 then shape[1]! else n / shape[0]!) = n / shape[1]!) ∧\n  (∀ i : Nat, i < n → ret[(i / ret.size, i % ret.size)]! = arr[i]!) :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 0}, "individual_score": 0.15000000000000002}}
{"id": "LS0046", "language": "lean", "source": "numpy_simple", "source_id": "NpRightShift-spec", "vc-description": "", "vc-preamble": "def shiftRightInt (x : Int) (n : Nat) : Int :=\n  if x ≥ 0 then\n    Int.ofNat (x.natAbs >>> n)\n  else\n    -(Int.ofNat (((-x).natAbs - 1) >>> n + 1))", "vc-helpers": "", "vc-definitions": "def rightShift {n : Nat} (a : Vector Int n) (b : Vector Nat n)\n  (h : ∀ i : Fin n, b[i] < 64) : Vector Int n :=\nsorry", "vc-theorems": "theorem rightShift_spec {n : Nat} (a : Vector Int n) (b : Vector Nat n)\n  (h : ∀ i : Fin n, b[i] < 64) :\n  (rightShift a b h).toList.length = n ∧\n  ∀ i : Fin n, (rightShift a b h)[i] = shiftRightInt (a[i]) (b[i]) :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 0}, "individual_score": 0.15000000000000002}}
{"id": "LS0047", "language": "lean", "source": "numpy_simple", "source_id": "NpSelect-spec", "vc-description": "", "vc-preamble": "", "vc-helpers": "", "vc-definitions": "def select {m n : Nat} (condlist : Vector (Vector Bool n) m) (choicelist : Vector (Vector Float n) m) : Vector Float n :=\nsorry", "vc-theorems": "theorem select_spec {m n : Nat} (condlist : Vector (Vector Bool n) m) (choicelist : Vector (Vector Float n) m)\n  (h1 : m > 0 ∧ n > 0)\n  (h2 : ∀ i : Fin m, condlist[i].toList.length = n ∧ choicelist[i].toList.length = n) :\n  let ret := select condlist choicelist\n  (ret.toList.length = n) ∧\n  (∀ i : Fin m, ∀ j : Fin n, condlist[i][j] → ret[j] = choicelist[i][j]) :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 0}, "individual_score": 0.15000000000000002}}
{"id": "LS0048", "language": "lean", "source": "numpy_simple", "source_id": "NpShape-spec", "vc-description": "", "vc-preamble": "def Matrix (m n : Nat) (α : Type) := Fin m → Fin n → α\n\ninstance {m n : Nat} {α : Type} [Inhabited α] : GetElem (Matrix m n α) (Nat × Nat) α (fun _ ij => ij.1 < m ∧ ij.2 < n) where\n  getElem mat ij h := mat ⟨ij.1, h.1⟩ ⟨ij.2, h.2⟩\n\ndef Matrix.size {m n : Nat} {α : Type} (_ : Matrix m n α) : Nat := m * n\n\ninductive arrays where\n  | arrayOne : Array Float → arrays\n  | arrayTwo : Array (Array Float) → arrays\n  | arrayThree : Array (Array (Array Float)) → arrays", "vc-helpers": "", "vc-definitions": "def shape'' (a : arrays) : Vector Nat (match a with | .arrayOne _ => 1 | .arrayTwo _ => 2 | .arrayThree _ => 3) :=\nsorry\n\ndef shape {m n : Nat} (a : Matrix m n Float) : Vector Nat 2 :=\nsorry", "vc-theorems": "theorem shape''_spec (a : arrays) :\n  let ret := shape'' a\n  match a with\n  | .arrayOne arr => ret.toList.length = 1 ∧ ret[0]! = arr.toList.length\n  | .arrayTwo arr => ret.toList.length = 2 ∧ ret[0]! = arr.toList.length ∧ ret[1]! = (if arr.toList.length > 0 then arr[0]!.toList.length else 0)\n  | .arrayThree arr => ret.toList.length = 3 ∧ ret[0]! = arr.size ∧ ret[1]! = (if arr.size > 0 then arr[0]!.size else 0) ∧ ret[2]! = (if arr.size > 0 ∧ arr[0]!.size > 0 then arr[0]![0]!.size else 0) :=\nsorry\n\ntheorem shape_spec {m n : Nat} (a : Matrix m n Float) :\n  let ret := shape a\n  (ret.toList.length = 2) ∧\n  (ret[0]! = m ∧ ret[1]! = n) :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 0}, "individual_score": 0.15000000000000002}}
{"id": "LS0049", "language": "lean", "source": "numpy_simple", "source_id": "NpSign-spec", "vc-description": "", "vc-preamble": "", "vc-helpers": "", "vc-definitions": "def sign {n : Nat} (a : Vector Int n) : Vector Int n :=\nsorry", "vc-theorems": "theorem sign_spec {n : Nat} (a : Vector Int n) :\n  (sign a).toList.length = n ∧\n  ∀ i : Fin n,\n    (a[i] > 0 → (sign a)[i] = 1) ∧\n    (a[i] = 0 → (sign a)[i] = 0) ∧\n    (a[i] < 0 → (sign a)[i] = -1) :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 0}, "individual_score": 0.15000000000000002}}
{"id": "LS0050", "language": "lean", "source": "numpy_simple", "source_id": "NpSort-spec", "vc-description": "", "vc-preamble": "", "vc-helpers": "", "vc-definitions": "def sort {n : Nat} (a : Vector Float n) : Vector Float n :=\nsorry", "vc-theorems": "theorem sort_spec {n : Nat} (a : Vector Float n) :\n  (sort a).toList.length = n ∧\n  (∀ i j : Fin n, i < j → (sort a)[i] ≤ (sort a)[j]) ∧\n  (∀ x : Float, (sort a).toList.count x = a.toList.count x) :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 1}, "individual_score": 0.0}}
{"id": "LS0051", "language": "lean", "source": "numpy_simple", "source_id": "NpSquare-spec", "vc-description": "", "vc-preamble": "", "vc-helpers": "", "vc-definitions": "def square {n : Nat} (arr : Vector Int n) : Vector Int n :=\nsorry", "vc-theorems": "theorem square_spec {n : Nat} (arr : Vector Int n) :\n  (square arr).toList.length = n ∧\n  ∀ i : Fin n, (square arr)[i] = (arr[i]) * (arr[i]) :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 1}, "individual_score": 0.0}}
{"id": "LS0052", "language": "lean", "source": "numpy_simple", "source_id": "NpSubtract-spec", "vc-description": "", "vc-preamble": "", "vc-helpers": "", "vc-definitions": "def subtract {n : Nat} (a b : Vector Int n) : Vector Int n :=\nsorry", "vc-theorems": "theorem subtract_spec {n : Nat} (a b : Vector Int n) :\n  (subtract a b).toList.length = n ∧\n  ∀ i : Fin n, (subtract a b)[i] = a[i] - b[i] :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 1}, "individual_score": 0.0}}
{"id": "LS0053", "language": "lean", "source": "numpy_simple", "source_id": "NpSum-spec", "vc-description": "", "vc-preamble": "", "vc-helpers": "", "vc-definitions": "def sum {n : Nat} (a : Vector Int n) : Int :=\nsorry\n\ndef sumArray {n : Nat} (a : Vector Int n) (start finish : Nat) : Int :=\nsorry", "vc-theorems": "theorem sum_spec {n : Nat} (a : Vector Int n) :\n  sum a = sumArray a 0 n ∧\n  ∀ start finish : Nat, start ≤ finish → finish ≤ n →\n    sumArray a start finish = (List.range (finish - start)).foldl (fun acc i => acc + a[start + i]'sorry) 0 ∧\n  ∀ m n : Nat, ∀ a : Vector Int m, ∀ b : Vector Int n, sum (a ++ b) = sum a + sum b :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 0}, "individual_score": 0.15000000000000002}}
{"id": "LS0054", "language": "lean", "source": "numpy_simple", "source_id": "NpTranspose-spec", "vc-description": "", "vc-preamble": "def Matrix (m n : Nat) (α : Type) := Fin m → Fin n → α\n\ninstance {m n : Nat} {α : Type} [Inhabited α] : GetElem (Matrix m n α) (Nat × Nat) α (fun _ ij => ij.1 < m ∧ ij.2 < n) where\n  getElem mat ij h := mat ⟨ij.1, h.1⟩ ⟨ij.2, h.2⟩\n\ndef Matrix.size {m n : Nat} {α : Type} (_ : Matrix m n α) : Nat := m * n", "vc-helpers": "", "vc-definitions": "def transpose {m n : Nat} (arr : Matrix m n Int) : Matrix n m Int :=\nsorry", "vc-theorems": "theorem transpose_spec {m n : Nat} (arr : Matrix m n Int) :\n  let ret := transpose arr\n  (ret.size = n * m) ∧\n  (∀ i j : Nat, i < m → j < n → ret[(j,i)]! = arr[(i,j)]!) :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 1}, "individual_score": 0.0}}
{"id": "LS0055", "language": "lean", "source": "numpy_simple", "source_id": "NpTril-spec", "vc-description": "", "vc-preamble": "def Matrix (m n : Nat) (α : Type) := Fin m → Fin n → α\n\ninstance {m n : Nat} {α : Type} [Inhabited α] : GetElem (Matrix m n α) (Nat × Nat) α (fun _ ij => ij.1 < m ∧ ij.2 < n) where\n  getElem mat ij h := mat ⟨ij.1, h.1⟩ ⟨ij.2, h.2⟩\n\ndef Matrix.size {m n : Nat} {α : Type} (_ : Matrix m n α) : Nat := m * n", "vc-helpers": "", "vc-definitions": "def tril {m n : Nat} (arr : Matrix m n Int) (k : Int) : Matrix m n Int :=\nsorry", "vc-theorems": "theorem tril_spec {m n : Nat} (arr : Matrix m n Int) (k : Int)\n  (h : -m + 1 < k ∧ k < n - 1) :\n  let ret := tril arr k\n  (ret.size = m * n) ∧\n  (∀ i j : Nat, i < m → j < n →\n    if j - i > k then ret[(i,j)]! = 0 else ret[(i,j)]! = arr[(i,j)]!) :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 1}, "individual_score": 0.0}}
{"id": "LS0056", "language": "lean", "source": "numpy_simple", "source_id": "NpUniqueall-spec", "vc-description": "", "vc-preamble": "", "vc-helpers": "", "vc-definitions": "def unique_all {n : Nat} (arr : Vector Int n) : Vector Int n :=\nsorry", "vc-theorems": "theorem unique_all_spec {n : Nat} (arr : Vector Int n) :\n  let ret := unique_all arr\n  (ret.toList.length ≤ n) ∧\n  (∀ i : Fin n, ∃ j : Nat, j < ret.toList.length ∧ ret[j]! = arr[i]) ∧\n  (∀ i j : Nat, i < ret.toList.length → j < i → ret[i]! ≠ ret[j]!) :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 0}, "individual_score": 0.15000000000000002}}
{"id": "LS0057", "language": "lean", "source": "numpy_simple", "source_id": "NpWhere-spec", "vc-description": "", "vc-preamble": "", "vc-helpers": "", "vc-definitions": "def «where» {n : Nat} (condition : Vector Bool n) (x : Vector Int n) (y : Vector Int n) : Vector Int n :=\nsorry\n\ndef whereWithTransform {n : Nat} (arr : Vector Int n) (condition : Int → Bool) (change : Int → Int) : Vector Int n :=\nsorry", "vc-theorems": "theorem where_spec {n : Nat} (condition : Vector Bool n) (x : Vector Int n) (y : Vector Int n) :\n  («where» condition x y).toList.length = n ∧\n  ∀ i : Fin n, («where» condition x y)[i] = (if condition[i] then x[i] else y[i]) ∧\n  ∀ arr : Vector Int n, ∀ condition : Int → Bool, ∀ change : Int → Int,\n    (whereWithTransform arr condition change).toList.length = n ∧\n    ∀ i : Fin n, (whereWithTransform arr condition change)[i] =\n      if condition (arr[i]) then change (arr[i]) else arr[i] :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 1}, "individual_score": 0.0}}
{"id": "LS0058", "language": "lean", "source": "numpy_simple", "source_id": "NpZeros-spec", "vc-description": "", "vc-preamble": "", "vc-helpers": "", "vc-definitions": "def zeros (n : Nat) : Vector Int n :=\nsorry\n\ndef zeros2d (rows cols : Nat) : Vector (Vector Int cols) rows :=\nsorry", "vc-theorems": "theorem zeros_spec (n : Nat) :\n  ∀ i : Fin n, (zeros n)[i.val] = 0 ∧\n  ∀ rows cols : Nat, ∀ (i : Fin rows) (j : Fin cols), (zeros2d rows cols)[i.val][j.val] = 0 :=\nsorry", "vc-postamble": "", "qa_entry_metadata": {"issues": {"definitions_with_sorry": 2, "near_duplicates": 1}, "individual_score": 0.0}}
