vc-preamble: |-
  def CountOnesInBinary (n : Int) : Int :=
    sorry

  def ValidInput (x : Int) : Prop :=
    x ≥ 1

  def ValidOutput (x : Int) (result : Int) : Prop :=
    ValidInput x ∧ result = CountOnesInBinary x

  @[reducible, simp]
  def solve_precond (x : Int) : Prop :=
    ValidInput x

vc-helpers: |-

vc-definitions: |-
  def solve (x : Int) (h_precond : solve_precond x) : Int :=
    sorry

vc-theorems: |-
  @[reducible, simp]
  def solve_postcond (x : Int) (result : Int) (h_precond : solve_precond x) : Prop :=
    ValidOutput x result

  theorem solve_spec_satisfied (x : Int) (h_precond : solve_precond x) :
      solve_postcond x (solve x h_precond) h_precond := by
    sorry

vc-postamble: |-