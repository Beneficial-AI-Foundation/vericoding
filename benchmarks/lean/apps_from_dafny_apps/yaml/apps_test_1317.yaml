vc-preamble: |-
  -- <vc-preamble>
  def CountCellsDivisibleByM (n : Int) (m : Int) : Int :=
    sorry

  def ValidInput (n : Int) (m : Int) : Prop :=
    1 ≤ n ∧ 1 ≤ m ∧ m ≤ 1000

  @[reducible, simp]
  def solve_precond (n m : Int) : Prop :=
    ValidInput n m
  -- </vc-preamble>

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  -- <vc-definitions>
  def solve (n m : Int) (h_precond : solve_precond n m) : Int :=
    sorry
  -- </vc-definitions>

vc-theorems: |-
  -- <vc-theorems>
  @[reducible, simp]
  def solve_postcond (n m : Int) (result : Int) (h_precond : solve_precond n m) : Prop :=
    result ≥ 0 ∧ result = CountCellsDivisibleByM n m

  theorem solve_spec_satisfied (n m : Int) (h_precond : solve_precond n m) :
      solve_postcond n m (solve n m h_precond) h_precond := by
    sorry
  -- </vc-theorems>

vc-postamble: |-