vc-description: |-
  /- 
  {
  "name": "dafny-synthesis_task_id_743_RotateRight",
  "category": "Dafny Translation",
  "description": "Automatically translated from Dafny specification: dafny-synthesis_task_id_743_RotateRight",
  "source": "Dafny",
  "translation_date": "2024",
  "functions": ,
  "methods":
  }
  -/
  
  /- 
  Rotates an array to the right by n positions.
  Input:
  - l: Array of integers to rotate
  - n: Number of positions to rotate right
  Returns:
  - Rotated array
  Ensures:
  - Output array has same size as input
  - Each element is correctly rotated
  -/

vc-preamble: |-

vc-helpers: |-

vc-definitions: |-
  def RotateRight (l : Array Int) (n : Int) : Array Int :=
  sorry

vc-theorems: |-
  theorem RotateRight_spec (l : Array Int) (n : Int) :
  n ≥ 0 →
  let r := RotateRight l n
  (r.size = l.size) ∧
  (∀ i, 0 ≤ i ∧ i < l.size →
  r[i]! = l[((i - n + l.size) % l.size).toNat]!) :=
  sorry

vc-postamble: |-

