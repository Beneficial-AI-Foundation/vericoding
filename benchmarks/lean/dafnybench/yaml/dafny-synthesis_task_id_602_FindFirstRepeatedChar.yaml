vc-description: |-
  /- 
  {
  "name": "dafny-synthesis_task_id_602_FindFirstRepeatedChar",
  "category": "Dafny Translation",
  "description": "Automatically translated from Dafny specification: dafny-synthesis_task_id_602_FindFirstRepeatedChar",
  "source": "Dafny",
  "translation_date": "2024",
  "functions": ,
  "methods":
  }
  -/
  
  /- 
  Finds the first repeated character in a string.
  Returns:
  - found: Whether a repeated character was found
  - c: The first repeated character if found
  -/

vc-preamble: |-

vc-helpers: |-

vc-definitions: |-
  def FindFirstRepeatedChar (s : String) : Bool × Char :=
  sorry

vc-theorems: |-
  theorem FindFirstRepeatedChar_spec (s : String) :
  let (found, c) := FindFirstRepeatedChar s
  (found → ∃ i j, 0 ≤ i ∧ i < j ∧ j < s.length ∧
  s.get ⟨i⟩ = s.get ⟨j⟩ ∧ s.get ⟨i⟩ = c ∧
  (∀ k l, 0 ≤ k ∧ k < l ∧ l < j ∧ s.get ⟨k⟩ = s.get ⟨l⟩ → k ≥ i)) ∧
  (!found → ∀ i j, 0 ≤ i ∧ i < j ∧ j < s.length → s.get ⟨i⟩ ≠ s.get ⟨j⟩) :=
  sorry

vc-postamble: |-

