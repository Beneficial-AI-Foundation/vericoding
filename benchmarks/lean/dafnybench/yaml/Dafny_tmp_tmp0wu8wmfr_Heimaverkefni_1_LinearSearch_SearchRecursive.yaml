vc-description: |-
  /- 
  {
  "name": "Dafny_tmp_tmp0wu8wmfr_Heimaverkefni 1_LinearSearch_SearchRecursive",
  "category": "Dafny Translation",
  "description": "Automatically translated from Dafny specification: Dafny_tmp_tmp0wu8wmfr_Heimaverkefni 1_LinearSearch_SearchRecursive",
  "source": "Dafny",
  "translation_date": "2024",
  "functions": ,
  "methods":
  }
  -/
  
  /- 
  SearchRecursive performs a recursive linear search on an array segment.
  
  @param a The array to search in
  @param i The start index of the search range
  @param j The end index (exclusive) of the search range
  @param x The value to search for
  @return k The index where x was found, or -1 if not found
  -/

vc-preamble: |-

vc-helpers: |-

vc-definitions: |-
  def SearchRecursive (a : Array Int) (i : Int) (j : Int) (x : Int) : Int :=
  sorry

vc-theorems: |-
  theorem SearchRecursive_spec (a : Array Int) (i j x k : Int) :
  (0 ≤ i ∧ i ≤ j ∧ j ≤ a.size) →
  let k := SearchRecursive a i j x;
  ((i ≤ k ∧ k < j) ∨ k = -1) ∧
  (k ≠ -1 → a[k.toNat]! = x) ∧
  (k ≠ -1 → ∀ r, k < r ∧ r < j → a[r.toNat]! ≠ x) ∧
  (k = -1 → ∀ r, i ≤ r ∧ r < j → a[r.toNat]! ≠ x) :=
  sorry

vc-postamble: |-

