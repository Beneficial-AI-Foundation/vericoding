vc-description: |-
  /- 
  {
  "name": "Clover_below_zero_below_zero",
  "category": "Dafny Translation",
  "description": "Automatically translated from Dafny specification: Clover_below_zero_below_zero",
  "source": "Dafny",
  "translation_date": "2024",
  "functions": ,
  "methods":
  }
  -/
  
  /- 
  Translates the Dafny below_zero method which checks if a sequence of operations
  results in a negative value at any point.
  
  @param operations The input sequence of operations
  @return A tuple containing the resulting array and a boolean indicating if a negative value was found
  -/

vc-preamble: |-

vc-helpers: |-

vc-definitions: |-
  def below_zero (operations : Array Int) : Array Int × Bool :=
  sorry

vc-theorems: |-
  theorem below_zero_spec (operations : Array Int) :
  let (s, result) := below_zero operations
  s.size = operations.size + 1 ∧
  s[0]! = 0 ∧
  (∀ i, 0 ≤ i ∧ i < s.size - 1 → s[i+1]! = s[i]! + operations[i]!) ∧
  (result = true → ∃ i, 1 ≤ i ∧ i ≤ operations.size ∧ s[i]! < 0) ∧
  (result = false → ∀ i, 0 ≤ i ∧ i < s.size → s[i]! ≥ 0) :=
  sorry

vc-postamble: |-

