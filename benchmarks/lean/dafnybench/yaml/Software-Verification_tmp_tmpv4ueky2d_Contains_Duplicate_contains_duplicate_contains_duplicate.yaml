vc-description: |-
  /- 
  {
  "name": "Software-Verification_tmp_tmpv4ueky2d_Contains Duplicate_contains_duplicate_contains_duplicate",
  "category": "Dafny Translation",
  "description": "Automatically translated from Dafny specification: Software-Verification_tmp_tmpv4ueky2d_Contains Duplicate_contains_duplicate_contains_duplicate",
  "source": "Dafny",
  "translation_date": "2024",
  "functions": ,
  "methods":
  }
  -/
  
  /- 
  Predicate that checks if all elements in an array are distinct.
  -/
  
  /- 
  Method that checks if an array contains any duplicate elements.
  Requires:
  - Array size is between 1 and 100000
  - All elements are between -1000000000 and 1000000000
  Ensures:
  - Result is true if and only if all elements are distinct
  -/

vc-preamble: |-
  def distinct (nums : Array Int) : Prop :=
  ∀ i j, 0 ≤ i → i < j → j < nums.size → nums[i]! ≠ nums[j]!

vc-helpers: |-

vc-definitions: |-
  def contains_duplicate (nums : Array Int) : Bool :=
  sorry

vc-theorems: |-
  theorem contains_duplicate_spec (nums : Array Int) :
  (1 ≤ nums.size ∧ nums.size ≤ 100000) →
  (∀ i, 0 ≤ i → i < nums.size → -1000000000 ≤ nums[i]! ∧ nums[i]! ≤ 1000000000) →
  contains_duplicate nums = distinct nums :=
  sorry

vc-postamble: |-

