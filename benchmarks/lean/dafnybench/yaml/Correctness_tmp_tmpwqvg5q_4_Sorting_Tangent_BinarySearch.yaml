vc-description: |-
  /- 
  {
  "name": "Correctness_tmp_tmpwqvg5q_4_Sorting_Tangent_BinarySearch",
  "category": "Dafny Translation",
  "description": "Automatically translated from Dafny specification: Correctness_tmp_tmpwqvg5q_4_Sorting_Tangent_BinarySearch",
  "source": "Dafny",
  "translation_date": "2024",
  "functions": ,
  "methods":
  }
  -/
  
  /- 
  Binary search implementation translated from Dafny.
  Input array must be sorted in ascending order.
  Returns index where circle value should be inserted.
  -/

vc-preamble: |-

vc-helpers: |-

vc-definitions: |-
  def BinarySearch (a : Array Int) (circle : Int) : Int :=
  sorry

vc-theorems: |-
  theorem BinarySearch_spec (a : Array Int) (circle : Int) :
  (∀ i, 1 ≤ i ∧ i < a.size → a[(i-1)]! < a[i]!) →
  (∀ i j, 0 ≤ i ∧ i < j ∧ j < a.size → a[i]! < a[j]!) →
  let n := BinarySearch a circle
  (0 ≤ n ∧ n ≤ a.size) ∧
  (∀ i, 0 ≤ i ∧ i < n → a[i.toNat]! < circle) ∧
  (∀ i, n ≤ i ∧ i < a.size → circle ≤ a[i.toNat]!) :=
  sorry

vc-postamble: |-

