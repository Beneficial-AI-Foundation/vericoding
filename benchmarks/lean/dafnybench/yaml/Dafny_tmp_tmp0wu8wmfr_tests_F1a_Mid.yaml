vc-description: |-
  /- 
  {
  "name": "Dafny_tmp_tmp0wu8wmfr_tests_F1a_Mid",
  "category": "Dafny Translation",
  "description": "Automatically translated from Dafny specification: Dafny_tmp_tmp0wu8wmfr_tests_F1a_Mid",
  "source": "Dafny",
  "translation_date": "2024",
  "functions": ,
  "methods":
  }
  -/
  
  /- 
  Translates the Dafny Mid method which finds a middle point between two integers.
  The method takes two integers p and q where p ≤ q and returns a middle point m
  that satisfies specific constraints about its position between p and q.
  
  @param p The lower bound integer
  @param q The upper bound integer
  @return m A middle point between p and q satisfying the specified constraints
  -/

vc-preamble: |-

vc-helpers: |-

vc-definitions: |-
  def Mid (p q : Int) : Int :=
  sorry

vc-theorems: |-
  theorem Mid_spec (p q : Int) :
  p ≤ q →
  let m := Mid p q
  (p ≤ m ∧ m ≤ q) ∧
  (m - p ≤ q - m) ∧
  (0 ≤ (q - m) - (m - p) ∧ (q - m) - (m - p) ≤ 1) :=
  sorry

vc-postamble: |-

