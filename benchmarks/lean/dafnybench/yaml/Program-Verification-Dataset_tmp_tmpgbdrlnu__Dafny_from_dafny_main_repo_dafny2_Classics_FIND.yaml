vc-description: |-
  /- 
  {
  "name": "Program-Verification-Dataset_tmp_tmpgbdrlnu__Dafny_from dafny main repo_dafny2_Classics_FIND",
  "category": "Dafny Translation",
  "description": "Automatically translated from Dafny specification: Program-Verification-Dataset_tmp_tmpgbdrlnu__Dafny_from dafny main repo_dafny2_Classics_FIND",
  "source": "Dafny",
  "translation_date": "2024",
  "functions": ,
  "methods":
  }
  -/
  
  /- 
  FIND algorithm from Hoare's paper, translated from Dafny.
  Takes an array A, its size N, and an index f.
  Rearranges elements such that all elements at indices ≤ f are ≤ elements at indices ≥ f.
  -/

vc-preamble: |-

vc-helpers: |-

vc-definitions: |-
  def FIND (A : Array Int) (N : Int) (f : Int) : Array Int :=
  sorry

vc-theorems: |-
  theorem FIND_spec (A : Array Int) (N : Int) (f : Int) :
  A.size = N →
  0 ≤ f →
  f < N →
  ∀ p q : Int, 0 ≤ p → p ≤ f → f ≤ q → q < N →
  (FIND A N f)[p.toNat]! ≤ (FIND A N f)[q.toNat]! :=
  sorry

vc-postamble: |-

