vc-description: |-
  /- 
  {
  "name": "Clover_linear_search2_LinearSearch",
  "category": "Dafny Translation",
  "description": "Automatically translated from Dafny specification: Clover_linear_search2_LinearSearch",
  "source": "Dafny",
  "translation_date": "2024",
  "functions": ,
  "methods":
  }
  -/
  
  /- 
  LinearSearch finds the first occurrence of element e in array a.
  Requires that e exists somewhere in the array.
  Ensures the returned index contains e and all earlier elements are not e.
  -/

vc-preamble: |-

vc-helpers: |-

vc-definitions: |-
  def LinearSearch (a : Array Int) (e : Int) : Int :=
  sorry

vc-theorems: |-
  theorem LinearSearch_spec (a : Array Int) (e : Int) :
  (∃ i, 0 ≤ i ∧ i < a.size ∧ a[i]! = e) →
  let n := LinearSearch a e
  (0 ≤ n ∧ n < a.size ∧ a[n.toNat]! = e) ∧
  (∀ k, 0 ≤ k ∧ k < n → a[k.toNat]! ≠ e) :=
  sorry

vc-postamble: |-

