vc-description: |-
  /- 
  {
  "name": "Clover_linear_search1_LinearSearch",
  "category": "Dafny Translation",
  "description": "Automatically translated from Dafny specification: Clover_linear_search1_LinearSearch",
  "source": "Dafny",
  "translation_date": "2024",
  "functions": ,
  "methods":
  }
  -/
  
  /- 
  LinearSearch method that finds the first occurrence of element e in array a.
  Returns index n where element is found or array length if not found.
  
  @param a The input array to search
  @param e The element to search for
  @return n The index where element is found or array length if not found
  -/

vc-preamble: |-

vc-helpers: |-

vc-definitions: |-
  def LinearSearch (a : Array Int) (e : Int) : Int :=
  sorry

vc-theorems: |-
  theorem LinearSearch_spec (a : Array Int) (e : Int) :
  let n := LinearSearch a e
  0 ≤ n ∧ n ≤ a.size ∧
  (n = a.size ∨ a[n.toNat]! = e) ∧
  (∀ i, 0 ≤ i ∧ i < n → e ≠ a[i.toNat]!) :=
  sorry

vc-postamble: |-

