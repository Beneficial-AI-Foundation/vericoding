vc-description: |-
  /- 
  {
  "name": "dafny_tmp_tmp49a6ihvk_m4_DutchFlag",
  "category": "Dafny Translation",
  "description": "Automatically translated from Dafny specification: dafny_tmp_tmp49a6ihvk_m4_DutchFlag",
  "source": "Dafny",
  "translation_date": "2024",
  "functions": ,
  "methods":
  }
  -/
  
  /-  Represents the three colors in the Dutch flag -/
  
  /-  Predicate indicating if one color should be below another in the sorted order -/
  
  /-  Main Dutch flag sorting specification -/

vc-preamble: |-
  inductive Color where
  | Red : Color
  | White : Color
  | Blue : Color
  deriving Repr, BEq, Inhabited
  def Below (c d : Color) : Bool :=
  match c, d with
  | Color.Red, _ => true
  | _, Color.Blue => true
  | c1, c2 => c1 == c2

vc-helpers: |-

vc-definitions: |-
  def DutchFlag (a : Array Color) : Array Color :=
  sorry

vc-theorems: |-
  theorem DutchFlag_spec (a : Array Color) :
  let result := DutchFlag a
  
  -- Colors are properly ordered
  
  (∀ i j, 0 ≤ i → i < j → j < result.size → Below (result[i]!) (result[j]!)) ∧
  
  -- Array contents are preserved (multiset equality)
  
  (result.toList = a.toList) :=
  sorry

vc-postamble: |-

