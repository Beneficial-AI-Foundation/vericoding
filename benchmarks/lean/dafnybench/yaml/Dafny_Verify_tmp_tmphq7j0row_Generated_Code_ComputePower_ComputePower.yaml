vc-description: |-
  /- 
  {
  "name": "Dafny_Verify_tmp_tmphq7j0row_Generated_Code_ComputePower_ComputePower",
  "category": "Dafny Translation",
  "description": "Automatically translated from Dafny specification: Dafny_Verify_tmp_tmphq7j0row_Generated_Code_ComputePower_ComputePower",
  "source": "Dafny",
  "translation_date": "2024",
  "functions": ,
  "methods":
  }
  -/
  
  /- 
  Recursive function that computes 2^n for natural number n
  -/
  
  /- 
  Method that computes 2^n for natural number n
  -/

vc-preamble: |-
  def Power (n : Nat) : Nat :=
  if n = 0 then 1 else 2 * Power (n - 1)

vc-helpers: |-

vc-definitions: |-
  def ComputePower (n : Nat) : Nat :=
  sorry

vc-theorems: |-
  theorem ComputePower_spec (n : Nat) :
  ComputePower n = Power n :=
  sorry

vc-postamble: |-

