vc-description: |-
  /- 
  {
  "name": "Final-Project-Dafny_tmp_tmpmcywuqox_Attempts_Insertion_Sort_Normal_lookForMin",
  "category": "Dafny Translation",
  "description": "Automatically translated from Dafny specification: Final-Project-Dafny_tmp_tmpmcywuqox_Attempts_Insertion_Sort_Normal_lookForMin",
  "source": "Dafny",
  "translation_date": "2024",
  "functions": ,
  "methods":
  }
  -/
  
  /- 
  lookForMin finds the minimum element's index in array a starting from index i
  Requires:
  - i is a valid index (0 ≤ i < a.size)
  Ensures:
  - returned index m is in range (i ≤ m < a.size)
  - a is minimum element in range [i..a.size)
  -/

vc-preamble: |-

vc-helpers: |-

vc-definitions: |-
  def lookForMin (a : Array Int) (i : Nat) : Nat :=
  sorry

vc-theorems: |-
  theorem lookForMin_spec (a : Array Int) (i : Nat) :
  0 ≤ i ∧ i < a.size →
  let m := lookForMin a i
  i ≤ m ∧ m < a.size ∧
  (∀ k, i ≤ k ∧ k < a.size → a[k]! ≥ a[m]!) :=
  sorry

vc-postamble: |-

