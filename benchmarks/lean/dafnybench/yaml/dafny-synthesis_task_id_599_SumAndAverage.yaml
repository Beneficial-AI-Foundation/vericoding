vc-description: |-
  /- 
  {
  "name": "dafny-synthesis_task_id_599_SumAndAverage",
  "category": "Dafny Translation",
  "description": "Automatically translated from Dafny specification: dafny-synthesis_task_id_599_SumAndAverage",
  "source": "Dafny",
  "translation_date": "2024",
  "functions": ,
  "methods":
  }
  -/
  
  /- 
  Computes the sum of numbers from 1 to n and their average.
  Translated from Dafny method SumAndAverage.
  
  @param n The upper bound (must be positive)
  @return A pair (sum, average) where:
  - sum is the sum of numbers from 1 to n
  - average is sum divided by n
  -/

vc-preamble: |-

vc-helpers: |-

vc-definitions: |-
  def SumAndAverage (n : Int) : Int × Float :=
  sorry

vc-theorems: |-
  theorem SumAndAverage_spec (n : Int) :
  n > 0 →
  let (sum, average) := SumAndAverage n
  sum = n * (n + 1) / 2 ∧
  average = Float.ofInt sum / Float.ofInt n  :=
  sorry

vc-postamble: |-

