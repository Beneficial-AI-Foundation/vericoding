vc-description: |-
  /- 
  {
  "name": "Dafny-Exercises_tmp_tmpjm75muf__Session4Exercises_ExercisefirstZero_mfirstCero",
  "category": "Dafny Translation",
  "description": "Automatically translated from Dafny specification: Dafny-Exercises_tmp_tmpjm75muf__Session4Exercises_ExercisefirstZero_mfirstCero",
  "source": "Dafny",
  "translation_date": "2024",
  "functions": ,
  "methods":
  }
  -/
  
  /- 
  Finds the first occurrence of zero in an array.
  Returns the index of the first zero, or the array length if no zero is found.
  
  @param v The input array to search
  @return The index of the first zero, or array length if none found
  -/

vc-preamble: |-

vc-helpers: |-

vc-definitions: |-
  def mfirstCero (v : Array Int) : Int :=
  sorry

vc-theorems: |-
  theorem mfirstCero_spec (v : Array Int) :
  let i := mfirstCero v
  0 ≤ i ∧ i ≤ v.size ∧
  (∀ j, 0 ≤ j ∧ j < i → v[j.toNat]! ≠ 0) ∧
  (i ≠ v.size → v[i.toNat]! = 0) :=
  sorry

vc-postamble: |-

