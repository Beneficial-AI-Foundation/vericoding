vc-description: |-
  /- 
  {
  "name": "CVS-handout1_tmp_tmptm52no3k_1_queryFast",
  "category": "Dafny Translation",
  "description": "Automatically translated from Dafny specification: CVS-handout1_tmp_tmptm52no3k_1_queryFast",
  "source": "Dafny",
  "translation_date": "2024",
  "functions": ,
  "methods":
  }
  -/
  
  /-  Recursive sum function over array slice from index i to j -/
  
  /-  Predicate specifying that array c is a prefix sum array for array a -/
  
  /-  Main query function specification -/
  
  /-  Implementation of queryFast (left unimplemented) -/

vc-preamble: |-
  partial def sum (a : Array Int) (i j : Int) : Int :=
  if i = j then 0
  else a[i.toNat]! + sum a (i+1) j
  
  def is_prefix_sum_for (a c : Array Int) : Prop :=
  c.size = a.size + 1 ∧
  c[0]! = 0 ∧
  ∀ i, 0 ≤ i ∧ i < a.size → c[(i+1)]! = c[i]! + a[i]!

vc-helpers: |-

vc-definitions: |-
  def queryFast (a c : Array Int) (i j : Int) : Int :=
  sorry

vc-theorems: |-
  theorem queryFast_spec (a c : Array Int) (i j : Int) :
  c.size = a.size + 1 →
  c[0]! = 0 →
  0 ≤ i →
  i ≤ j →
  j ≤ a.size →
  is_prefix_sum_for a c →
  ∃ r, r = sum a i j :=
  sorry

vc-postamble: |-

