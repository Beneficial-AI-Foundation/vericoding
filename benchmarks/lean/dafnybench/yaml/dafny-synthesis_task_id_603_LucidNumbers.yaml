vc-description: |-
  /- 
  {
  "name": "dafny-synthesis_task_id_603_LucidNumbers",
  "category": "Dafny Translation",
  "description": "Automatically translated from Dafny specification: dafny-synthesis_task_id_603_LucidNumbers",
  "source": "Dafny",
  "translation_date": "2024",
  "functions": ,
  "methods":
  }
  -/
  
  /- 
  Translates the Dafny LucidNumbers method which returns a sequence of numbers that are:
  - Divisible by 3
  - Less than or equal to input n
  - In strictly increasing order
  -/

vc-preamble: |-

vc-helpers: |-

vc-definitions: |-
  def LucidNumbers (n : Int) : Array Int :=
  sorry

vc-theorems: |-
  theorem LucidNumbers_spec (n : Int) :
  n ≥ 0 →
  let result := LucidNumbers n
  (∀ i, 0 ≤ i ∧ i < result.size → (result[i]!) % 3 = 0) ∧
  (∀ i, 0 ≤ i ∧ i < result.size → result[i]! ≤ n) ∧
  (∀ i j, 0 ≤ i ∧ i < j ∧ j < result.size → result[i]! < result[j]!) :=
  sorry

vc-postamble: |-

