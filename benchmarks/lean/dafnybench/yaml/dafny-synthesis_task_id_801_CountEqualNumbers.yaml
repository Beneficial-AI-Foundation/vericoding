vc-description: |-
  /- 
  {
  "name": "dafny-synthesis_task_id_801_CountEqualNumbers",
  "category": "Dafny Translation",
  "description": "Automatically translated from Dafny specification: dafny-synthesis_task_id_801_CountEqualNumbers",
  "source": "Dafny",
  "translation_date": "2024",
  "functions": ,
  "methods":
  }
  -/
  
  /- 
  Counts how many numbers are equal among three input integers.
  Returns:
  - 3 if all numbers are equal
  - 2 if exactly two numbers are equal
  - 1 if no numbers are equal
  -/

vc-preamble: |-

vc-helpers: |-

vc-definitions: |-
  def CountEqualNumbers (a b c : Int) : Int :=
  sorry

vc-theorems: |-
  theorem CountEqualNumbers_spec (a b c : Int) :
  let count := CountEqualNumbers a b c
  count ≥ 0 ∧ count ≤ 3 ∧
  (count = 3 ↔ (a = b ∧ b = c)) ∧
  (count = 2 ↔ ((a = b ∧ b ≠ c) ∨ (a ≠ b ∧ b = c) ∨ (a = c ∧ b ≠ c))) ∧
  (count = 1 ↔ (a ≠ b ∧ b ≠ c ∧ a ≠ c)) :=
  sorry

vc-postamble: |-

