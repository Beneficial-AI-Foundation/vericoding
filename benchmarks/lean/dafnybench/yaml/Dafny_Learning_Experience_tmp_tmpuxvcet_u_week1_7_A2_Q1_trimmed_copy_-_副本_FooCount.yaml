vc-description: |-
  /- 
  {
  "name": "Dafny_Learning_Experience_tmp_tmpuxvcet_u_week1_7_A2_Q1_trimmed copy - 副本_FooCount",
  "category": "Dafny Translation",
  "description": "Automatically translated from Dafny specification: Dafny_Learning_Experience_tmp_tmpuxvcet_u_week1_7_A2_Q1_trimmed copy - 副本_FooCount",
  "source": "Dafny",
  "translation_date": "2024",
  "functions": ,
  "methods":
  }
  -/
  
  /- 
  Ghost function that counts even numbers in a sequence up to index hi.
  Translated from Dafny's Count function.
  -/
  
  /- 
  Main method specification translated from Dafny's FooCount method.
  -/

vc-preamble: |-
  def Count (hi : Nat) (s : Array Int) : Int :=
  if hi = 0 then 0
  else if s[(hi-1)]! % 2 = 0 then 1 + Count (hi-1) s
  else Count (hi-1) s

vc-helpers: |-

vc-definitions: |-
  def FooCount (CountIndex : Nat) (a : Array Int) (b : Array Int) : Nat :=
  sorry

vc-theorems: |-
  theorem FooCount_spec (CountIndex : Nat) (a b : Array Int) :
  (CountIndex = 0 ∨ (a.size = b.size ∧ 1 ≤ CountIndex ∧ CountIndex ≤ a.size)) →
  FooCount CountIndex a b = Count CountIndex a :=
  sorry

vc-postamble: |-

