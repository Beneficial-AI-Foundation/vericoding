vc-description: |-
  /- 
  {
  "name": "Programmverifikation-und-synthese_tmp_tmppurk6ime_PVS_Assignment_ex_05_Hoangkim_ex_05_Hoangkim_gcdI",
  "category": "Dafny Translation",
  "description": "Automatically translated from Dafny specification: Programmverifikation-und-synthese_tmp_tmppurk6ime_PVS_Assignment_ex_05_Hoangkim_ex_05_Hoangkim_gcdI",
  "source": "Dafny",
  "translation_date": "2024",
  "functions": ,
  "methods":
  }
  -/
  
  /-  Fibonacci function translated from Dafny -/
  
  /-  Factorial function translated from Dafny -/
  
  /-  Greatest common divisor function translated from Dafny -/
  
  /-  Specification for gcd function -/
  
  /-  Implementation of iterative GCD algorithm -/
  
  /-  Specification for gcdI method -/

vc-preamble: |-
  def fib (n : Nat) : Nat :=
  if n < 2 then n else fib (n-2) + fib (n-1)
  
  partial def fact (n : Nat) : Nat :=
  if n == 0 then 1 else n * fact (n-1)
  
  partial def gcd (m n : Nat) : Nat :=
  if m == n then m
  else if m > n then gcd (m - n) n
  else gcd m (n - m)

vc-helpers: |-

vc-definitions: |-
  def gcdI (m n : Int) : Int :=
  sorry

vc-theorems: |-
  theorem gcd_spec (m n : Nat) :
  m > 0 ∧ n > 0 → gcd m n > 0 :=
  sorry
  
  theorem gcdI_spec (m n : Nat) :
  m > 0 ∧ n > 0 → gcdI m n = gcd m n :=
  sorry

vc-postamble: |-

