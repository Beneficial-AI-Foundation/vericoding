vc-description: |-
  /- 
  {
  "name": "Dafny_tmp_tmp0wu8wmfr_tests_SumIntsLoop_SumIntsLoop",
  "category": "Dafny Translation",
  "description": "Automatically translated from Dafny specification: Dafny_tmp_tmp0wu8wmfr_tests_SumIntsLoop_SumIntsLoop",
  "source": "Dafny",
  "translation_date": "2024",
  "functions": ,
  "methods":
  }
  -/
  
  /- 
  Recursive function that computes sum of integers from 1 to n.
  Translated from Dafny's sumInts function.
  -/
  
  /- 
  Specification for sumInts function requiring non-negative input
  -/
  
  /- 
  Method that computes sum of integers from 1 to n using a loop.
  Translated from Dafny's SumIntsLoop method.
  -/
  
  /- 
  Specification for SumIntsLoop method ensuring it matches sumInts
  and computes the arithmetic series sum correctly
  -/

vc-preamble: |-
  partial def sumInts (n : Int) : Int :=
  if n == 0 then 0
  else sumInts (n-1) + n

vc-helpers: |-

vc-definitions: |-
  def SumIntsLoop (n : Int) : Int :=
  sorry

vc-theorems: |-
  theorem sumInts_spec (n : Int) :
  n ≥ 0 → sumInts n = n * (n + 1) / 2 :=
  sorry
  
  theorem SumIntsLoop_spec (n : Int) :
  n ≥ 0 →
  let s := SumIntsLoop n
  s = sumInts n ∧ s = n * (n + 1) / 2 :=
  sorry

vc-postamble: |-

