vc-description: |-
  /- 
  {
  "name": "dafny-exercise_tmp_tmpouftptir_absIt_AbsIt",
  "category": "Dafny Translation",
  "description": "Automatically translated from Dafny specification: dafny-exercise_tmp_tmpouftptir_absIt_AbsIt",
  "source": "Dafny",
  "translation_date": "2024",
  "functions": ,
  "methods":
  }
  -/
  
  /- 
  AbsIt takes an array of integers and modifies it in place to contain absolute values.
  The specification ensures that:
  1. For each element, if it was negative, it becomes its positive counterpart
  2. The array length remains unchanged
  -/

vc-preamble: |-

vc-helpers: |-

vc-definitions: |-
  def AbsIt (s : Array Int) : Array Int :=
  sorry

vc-theorems: |-
  theorem AbsIt_spec (s : Array Int) :
  let s' := AbsIt s
  (∀ i, 0 ≤ i ∧ i < s.size →
  (if s[i]! < 0 then s'[i]! = -(s[i]!) else s'[i]! = s[i]!)) ∧
  s'.size = s.size :=
  sorry

vc-postamble: |-

