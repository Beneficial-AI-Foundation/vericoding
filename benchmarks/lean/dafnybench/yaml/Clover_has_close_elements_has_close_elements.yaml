vc-description: |-
  /- 
  {
  "name": "Clover_has_close_elements_has_close_elements",
  "category": "Dafny Translation",
  "description": "Automatically translated from Dafny specification: Clover_has_close_elements_has_close_elements",
  "source": "Dafny",
  "translation_date": "2024",
  "functions": ,
  "methods":
  }
  -/
  
  /- 
  Checks if an array of real numbers has any pair of elements with difference less than threshold.
  
  @param numbers Array of real numbers to check
  @param threshold The threshold value for comparing differences
  @return True if close elements exist, false otherwise
  -/

vc-preamble: |-

vc-helpers: |-

vc-definitions: |-
  def has_close_elements (numbers : Array Float) (threshold : Float) : Bool :=
  sorry

vc-theorems: |-
  theorem has_close_elements_spec
  (numbers : Array Float) (threshold : Float) :
  threshold ≥ 0 →
  let res := has_close_elements numbers threshold
  (res → ∃ i j : Int,
  0 ≤ i ∧ i < numbers.size ∧
  0 ≤ j ∧ j < numbers.size ∧
  i ≠ j ∧
  (if numbers[i.toNat]! - numbers[j.toNat]! < 0
  then numbers[j.toNat]! - numbers[i.toNat]!
  else numbers[i.toNat]! - numbers[j.toNat]!) < threshold) ∧
  (!res → ∀ i j : Int,
  1 ≤ i ∧ i < numbers.size ∧
  0 ≤ j ∧ j < i →
  (if numbers[i.toNat]! - numbers[j.toNat]! < 0
  then numbers[j.toNat]! - numbers[i.toNat]!
  else numbers[i.toNat]! - numbers[j.toNat]!) ≥ threshold) :=
  sorry

vc-postamble: |-

