vc-description: |-
  /- 
  {
  "name": "Dafny_tmp_tmpv_d3qi10_3_cumsum_cumsum",
  "category": "Dafny Translation",
  "description": "Automatically translated from Dafny specification: Dafny_tmp_tmpv_d3qi10_3_cumsum_cumsum",
  "source": "Dafny",
  "translation_date": "2024",
  "functions": ,
  "methods":
  }
  -/
  
  /- 
  Recursively computes sum of array elements up to index i.
  Translated from Dafny function sum.
  -/
  
  /- 
  Specification for sum function requiring valid index
  -/
  
  /- 
  Cumulative sum method that fills array b with running sums of array a.
  Translated from Dafny method cumsum.
  -/
  
  /- 
  Specification for cumsum method ensuring b contains running sums
  -/

vc-preamble: |-
  partial def sum (a : Array Int) (i : Nat) : Int :=
  if i == 0 then
  a[0]!
  else
  a[i]! + sum a (i - 1)

vc-helpers: |-

vc-definitions: |-
  def cumsum (a b : Array Int) : Unit :=
  sorry

vc-theorems: |-
  theorem sum_spec (a : Array Int) (i : Nat) :
  0 ≤ i ∧ i < a.size → sum a i = a[i]! + (if i == 0 then 0 else sum a (i - 1)) :=
  sorry
  
  theorem cumsum_spec (a b : Array Int) :
  a.size == b.size ∧ a.size > 0 ∧ a ≠ b →
  (∀ i : Nat, i < a.size → b[i]! = sum a i) :=
  sorry

vc-postamble: |-

