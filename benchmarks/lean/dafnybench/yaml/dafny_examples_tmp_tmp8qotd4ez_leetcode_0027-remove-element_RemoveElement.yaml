vc-description: |-
  /- 
  {
  "name": "dafny_examples_tmp_tmp8qotd4ez_leetcode_0027-remove-element_RemoveElement",
  "category": "Dafny Translation",
  "description": "Automatically translated from Dafny specification: dafny_examples_tmp_tmp8qotd4ez_leetcode_0027-remove-element_RemoveElement",
  "source": "Dafny",
  "translation_date": "2024",
  "functions": ,
  "methods":
  }
  -/
  
  /- 
  Translates the RemoveElement method from Dafny.
  Original ensures conditions:
  - 0 ≤ newLength ≤ nums.Length
  - All elements in nums are not equal to val
  - Multiset of nums equals original multiset with val removed
  -/

vc-preamble: |-

vc-helpers: |-

vc-definitions: |-
  def RemoveElement (nums : Array Int) (val : Int) : Int :=
  sorry

vc-theorems: |-
  theorem RemoveElement_spec (nums : Array Int) (val : Int) :
  let newLength := RemoveElement nums val
  0 ≤ newLength ∧ newLength ≤ nums.size :=
  sorry

vc-postamble: |-

