vc-description: |-
  /- 
  {
  "name": "dafny-synthesis_task_id_586_SplitAndAppend",
  "category": "Dafny Translation",
  "description": "Automatically translated from Dafny specification: dafny-synthesis_task_id_586_SplitAndAppend",
  "source": "Dafny",
  "translation_date": "2024",
  "functions": ,
  "methods":
  }
  -/
  
  /- 
  Splits an array at index n and appends the parts in reverse order.
  Input array l is split at index n, and the parts are appended with the second part first.
  
  @param l The input array to split and append
  @param n The index at which to split the array
  @return The resulting array after splitting and appending
  -/

vc-preamble: |-

vc-helpers: |-

vc-definitions: |-
  def SplitAndAppend (l : Array Int) (n : Int) : Array Int :=
  sorry

vc-theorems: |-
  theorem SplitAndAppend_spec (l : Array Int) (n : Int) :
  n ≥ 0 ∧ n < l.size →
  let r := SplitAndAppend l n
  r.size = l.size ∧
  ∀ i, 0 ≤ i ∧ i < l.size → r[i]! = l[(((i + n) % l.size).toNat)]! :=
  sorry

vc-postamble: |-

