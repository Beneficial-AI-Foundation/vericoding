vc-description: |-
  /- 
  {
  "name": "dafny_examples_tmp_tmp8qotd4ez_leetcode_0069-sqrt_mySqrt",
  "category": "Dafny Translation",
  "description": "Automatically translated from Dafny specification: dafny_examples_tmp_tmp8qotd4ez_leetcode_0069-sqrt_mySqrt",
  "source": "Dafny",
  "translation_date": "2024",
  "functions": ,
  "methods":
  }
  -/
  
  /- 
  Predicate defining when r is the integer square root of x:
  r*r ≤ x and (r+1)*(r+1) > x
  -/
  
  /- 
  Computes the integer square root of a non-negative number x.
  Returns r such that r*r ≤ x < (r+1)*(r+1)
  
  @param x The input non-negative integer
  @return The integer square root of x
  -/

vc-preamble: |-
  def sqrt (x : Int) (r : Int) : Bool :=
  r*r ≤ x ∧ (r+1)*(r+1) > x

vc-helpers: |-

vc-definitions: |-
  def mySqrt (x : Int) : Int :=
  sorry

vc-theorems: |-
  theorem mySqrt_spec (x : Int) :
  x ≥ 0 → sqrt x (mySqrt x) :=
  sorry

vc-postamble: |-

