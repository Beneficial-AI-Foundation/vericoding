vc-description: |-
  /- 
  {
  "name": "dafny-synthesis_task_id_578_Interleave",
  "category": "Dafny Translation",
  "description": "Automatically translated from Dafny specification: dafny-synthesis_task_id_578_Interleave",
  "source": "Dafny",
  "translation_date": "2024",
  "functions": ,
  "methods":
  }
  -/
  
  /- 
  Interleaves three sequences of equal length into a single sequence.
  The resulting sequence contains elements from the input sequences in alternating order.
  
  @param s1 First input sequence
  @param s2 Second input sequence
  @param s3 Third input sequence
  @return Interleaved sequence containing elements from s1, s2, s3 in alternating order
  -/

vc-preamble: |-

vc-helpers: |-

vc-definitions: |-
  def Interleave (s1 s2 s3 : Array Int) : Array Int :=
  sorry

vc-theorems: |-
  theorem Interleave_spec (s1 s2 s3 : Array Int) :
  s1.size = s2.size ∧ s2.size = s3.size →
  let r := Interleave s1 s2 s3
  r.size = 3 * s1.size ∧
  (∀ i, 0 ≤ i ∧ i < s1.size →
  r[3*i]! = s1[i]! ∧
  r[3*i + 1]! = s2[i]! ∧
  r[3*i + 2]! = s3[i]!) :=
  sorry

vc-postamble: |-

