vc-description: |-
  /- 
  {
  "name": "dafny-synthesis_task_id_732_ReplaceWithColon",
  "category": "Dafny Translation",
  "description": "Automatically translated from Dafny specification: dafny-synthesis_task_id_732_ReplaceWithColon",
  "source": "Dafny",
  "translation_date": "2024",
  "functions": ,
  "methods":
  }
  -/
  
  /- 
  Predicate that checks if a character is a space, comma or dot
  -/
  
  /- 
  Function that replaces spaces, commas and dots with colons in a string.
  Returns a new string of the same length where:
  - Characters that are space/comma/dot are replaced with colon
  - All other characters remain unchanged
  -/

vc-preamble: |-
  def IsSpaceCommaDot (c : Char) : Bool :=
  c == ' ' ∨ c == ',' ∨ c == '.'

vc-helpers: |-

vc-definitions: |-
  def ReplaceWithColon (s : String) : String :=
  sorry

vc-theorems: |-
  theorem ReplaceWithColon_spec (s : String) :
  let v := ReplaceWithColon s
  v.length = s.length ∧
  ∀ i, 0 ≤ i ∧ i < s.length →
  ((IsSpaceCommaDot (s.get ⟨i⟩) → v.get ⟨i⟩ = ':') ∧
  (¬IsSpaceCommaDot (s.get ⟨i⟩) → v.get ⟨i⟩ = s.get ⟨i⟩)) :=
  sorry

vc-postamble: |-

