vc-description: |-
  /- 
  {
  "name": "Dafny_Programs_tmp_tmp99966ew4_binary_search_BinarySearch",
  "category": "Dafny Translation",
  "description": "Automatically translated from Dafny specification: Dafny_Programs_tmp_tmp99966ew4_binary_search_BinarySearch",
  "source": "Dafny",
  "translation_date": "2024",
  "functions": ,
  "methods":
  }
  -/
  
  /- 
  Predicate indicating whether an array is sorted in ascending order.
  Translated from Dafny's sorted predicate.
  -/
  
  /- 
  Binary search implementation specification.
  Translated from Dafny's BinarySearch method.
  
  @param a The sorted array to search in
  @param value The value to search for
  @return index The index where value was found, or -1 if not found
  -/

vc-preamble: |-
  def sorted (a : Array Int) : Prop :=
  ∀ j k, 0 ≤ j → j < k → k < a.size → a[j]! ≤ a[k]!

vc-helpers: |-

vc-definitions: |-
  def BinarySearch (a : Array Int) (value : Int) : Int :=
  sorry

vc-theorems: |-
  theorem BinarySearch_spec (a : Array Int) (value : Int) :
  sorted a →
  let index := BinarySearch a value
  (0 ≤ index → index < a.size ∧ a[index.toNat]! = value) ∧
  (index < 0 → ∀ k, 0 ≤ k → k < a.size → a[k]! ≠ value) :=
  sorry

vc-postamble: |-

