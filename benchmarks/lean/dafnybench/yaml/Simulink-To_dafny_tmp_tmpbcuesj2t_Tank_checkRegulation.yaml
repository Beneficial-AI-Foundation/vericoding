vc-description: |-
  /- 
  {
  "name": "Simulink-To_dafny_tmp_tmpbcuesj2t_Tank_checkRegulation",
  "category": "Dafny Translation",
  "description": "Automatically translated from Dafny specification: Simulink-To_dafny_tmp_tmpbcuesj2t_Tank_checkRegulation",
  "source": "Dafny",
  "translation_date": "2024",
  "functions": ,
  "methods":
  }
  -/
  
  /-  Valve type representing ON/OFF states -/
  
  /-  Pipe class containing valve states and flow values -/
  
  /-  Tank class containing a pipe and height -/
  
  /-  Constructor for Pipe with initial values -/
  
  /-  Constructor for Tank with initial values -/
  
  /-  Main regulation check specification -/
  
  /-  Implementation of checkRegulation -/

vc-preamble: |-
  inductive Valve
  | ON
  | OFF
  
  structure Pipe where
  v1: Valve  -- outlet valve
  v2: Valve  -- inlet valve
  v3: Valve  -- outlet valve
  in_flowv1: Int  -- flow in valve v1
  in_flowv2: Int  -- flow in valve v2
  in_flowv3: Int  -- flow in valve v3
  
  structure Tank where
  pipe: Pipe
  height: Int
  
  def Pipe.init : Pipe := { 
      v1 := Valve.OFF
      v2 := Valve.ON
      v3 := Valve.OFF
      in_flowv1 := 0
      in_flowv2 := 0
      in_flowv3 := 0 
  }
  
  def Tank.init : Tank := { 
      pipe := Pipe.init
      height := 0 
  }

vc-helpers: |-

vc-definitions: |-
  def checkRegulation (tank : Tank) : Tank :=
  sorry

vc-theorems: |-
  theorem checkRegulation_spec (tank tank' : Tank) :
  (tank'.height > 10 ∧ tank'.pipe.v1 = Valve.OFF ∧ tank'.pipe.v3 = Valve.ON ∧ tank'.pipe.v2 = tank.pipe.v2)
  ∨
  (tank'.height < 8 ∧ tank'.pipe.v1 = Valve.OFF ∧ tank'.pipe.v2 = Valve.ON ∧ tank'.pipe.v3 = tank.pipe.v3)
  ∨
  ((tank'.pipe.in_flowv3 > 5 ∨ tank'.pipe.in_flowv1 > 5) ∧ tank'.pipe.v2 = Valve.OFF ∧ tank'.pipe.v3 = tank.pipe.v3 ∧ tank'.pipe.v1 = tank.pipe.v1)
  :=
  sorry

vc-postamble: |-

