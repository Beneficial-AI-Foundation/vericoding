vc-description: |-
  /- 
  {
  "name": "Clover_two_sum_twoSum",
  "category": "Dafny Translation",
  "description": "Automatically translated from Dafny specification: Clover_two_sum_twoSum",
  "source": "Dafny",
  "translation_date": "2024",
  "functions": ,
  "methods":
  }
  -/
  
  /- 
  Finds two indices i,j in an array such that nums + nums = target.
  Translated from Dafny method twoSum.
  
  @param nums The input array of integers
  @param target The target sum to find
  @return A pair of indices (i,j) that sum to target
  -/

vc-preamble: |-

vc-helpers: |-

vc-definitions: |-
  def twoSum (nums : Array Int) (target : Int) : Int × Int :=
  sorry

vc-theorems: |-
  theorem twoSum_spec (nums : Array Int) (target : Int) :
  nums.size > 1 →
  (∃ i j, 0 ≤ i ∧ i < j ∧ j < nums.size ∧ nums[i]! + nums[j]! = target) →
  let (i, j) := twoSum nums target
  0 ≤ i ∧ i < j ∧ j < nums.size ∧ nums[i.toNat]! + nums[j.toNat]! = target ∧
  (∀ ii jj, 0 ≤ ii ∧ ii < i ∧ ii < jj ∧ jj < nums.size → nums[ii.toNat]! + nums[jj.toNat]! ≠ target) ∧
  (∀ jj, i < jj ∧ jj < j → nums[i.toNat]! + nums[jj.toNat]! ≠ target) :=
  sorry

vc-postamble: |-

