vc-description: |-
  /- 
  function_signature: "def largest_divisor(n: int) -> int"
  docstring: |
      For a given number n, find the largest number that divides n evenly, smaller than n
  test_cases:
    - input: 15
      expected_output: 5
  -/

vc-preamble: |-
  import Imports.AllImports

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-signature: |-
  def implementation (n: Nat) : Nat :=

vc-implementation: |-
  -- <vc-implementation>
    sorry
  -- </vc-implementation>

vc-condition: |-
  def problem_spec
  -- function signature
  (implementation: Nat → Nat)
  -- inputs
  (n: Nat) :=
  -- spec
  let spec (result: Nat) :=
  0 < n → 0 < result → result ∣ n → ∀ x, x ∣ n → x ≠ n → x ≤ result;
  -- program termination
  ∃ result, implementation n = result ∧
  spec result
  
  theorem correctness
  (n: Nat)
  : problem_spec implementation n
  :=

vc-proof: |-
  -- <vc-proof>
    sorry
  -- </vc-proof>

vc-postamble: |-
  #test implementation 15 = 5

