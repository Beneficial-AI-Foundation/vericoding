vc-description: |-

vc-preamble: |-

vc-helpers: |-

vc-definitions: |-
  def recoverSecret (triplets : List (List Char)) : String :=
  sorry
  
  def isConsistentWithTriplets (result : String) (triplets : List (List Char)) : Bool :=
  sorry
  
  def containsAllChars (result : String) (triplets : List (List Char)) : Bool :=
  sorry

vc-theorems: |-
  theorem recoverSecret_produces_string (triplets : List (List Char)) :
    String.length (recoverSecret triplets) > 0 :=
  sorry
  
  theorem recoverSecret_contains_all_chars (triplets : List (List Char)) :
    containsAllChars (recoverSecret triplets) triplets = true :=
  sorry
  
  theorem recoverSecret_consistent_with_triplets (triplets : List (List Char)) :
    isConsistentWithTriplets (recoverSecret triplets) triplets = true :=
  sorry
  
  theorem recoverSecret_basic_case :
    recoverSecret [['a', 'b', 'c'], ['a', 'c', 'd']] = "abcd" :=
  sorry
  
  theorem recoverSecret_complex_case :
    recoverSecret [
      ['t','u','p'],
      ['w','h','i'],
      ['t','s','u'],
      ['a','t','s'],
      ['h','a','p'],
      ['t','i','s'],
      ['w','h','s']
    ] = "whatisup" :=
  sorry

vc-postamble: |-
  -- Apps difficulty: interview
  -- Assurance level: unguarded
  
  /--
  info: 'whatisup'
  -/
  #guard_msgs in
  #eval recoverSecret [["t", "u", "p"], ["w", "h", "i"], ["t", "s", "u"], ["a", "t", "s"], ["h", "a", "p"], ["t", "i", "s"], ["w", "h", "s"]]
  
  /--
  info: 'abcd'
  -/
  #guard_msgs in
  #eval recoverSecret [["a", "b", "c"], ["a", "c", "d"]]
  
  /--
  info: 'great'
  -/
  #guard_msgs in
  #eval recoverSecret [["g", "r", "t"], ["e", "a", "t"]]

