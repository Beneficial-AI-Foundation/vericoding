vc-description: |-

vc-preamble: |-
  structure PrimeFactor where
    prime : Nat
    power : Nat

vc-helpers: |-

vc-definitions: |-
  def isqrt (n : Nat) : Nat :=
  sorry
  
  def isPrime (p : Nat) : Bool :=
  sorry
  
  def factorize (n : Nat) : List PrimeFactor :=
  sorry

vc-theorems: |-
  theorem isqrt_upper_bound (n : Nat) (h : n > 0) :
    let r := isqrt n
    r * r â‰¤ n :=
  sorry
  
  theorem isqrt_next_exceeds (n : Nat) (h : n > 0) :
    let r := isqrt n
    (r + 1) * (r + 1) > n :=
  sorry

vc-postamble: |-
  -- Apps difficulty: interview
  -- Assurance level: guarded_and_plausible
  
  /--
  info: 3
  -/
  #guard_msgs in
  #eval trailing_zeros 15 10
  
  /--
  info: 4
  -/
  #guard_msgs in
  #eval trailing_zeros 7 2
  
  /--
  info: 7
  -/
  #guard_msgs in
  #eval trailing_zeros 30 10

