vc-description: |-
  -- Function signature we're reasoning about
  
  -- Properties from hypothesis test
  
  -- Helper definition for checking if building at index i is safe
  
  -- Edge cases

vc-preamble: |-

vc-helpers: |-

vc-definitions: |-
  def String.replicate (s : String) (n : Nat) : String :=
  sorry
  
  def count_safe_buildings (s : String) : Nat :=
  sorry
  
  def isSafeBuilding (s : String) (i : Nat) : Bool :=
  sorry

vc-theorems: |-
  theorem count_safe_buildings_equals_safe_spots (s : String) :
    count_safe_buildings s =
      (List.range s.length).foldl (fun acc i =>
        if isSafeBuilding s i then acc + 1 else acc) 0 :=
  sorry
  
  theorem count_safe_buildings_nonnegative (s : String) :
    count_safe_buildings s ≥ 0 :=
  sorry
  
  theorem count_safe_buildings_bounded (s : String) :
    count_safe_buildings s ≤ s.length :=
  sorry
  
  theorem all_zeros_returns_length (s : String) (n : Nat) :
    count_safe_buildings (String.replicate "0" n) = n :=
  sorry
  
  theorem all_ones_returns_zero (s : String) (n : Nat) :
    count_safe_buildings (String.replicate "1" n) = 0 :=
  sorry
  
  theorem empty_string_returns_zero :
    count_safe_buildings "" = 0 :=
  sorry
  
  theorem single_zero_returns_one :
    count_safe_buildings "0" = 1 :=
  sorry
  
  theorem single_one_returns_zero :
    count_safe_buildings "1" = 0 :=
  sorry

vc-postamble: |-
  -- Apps difficulty: interview
  -- Assurance level: unguarded
  
  /-
  info: 0
  -/
  #guard_msgs in
  #eval count_safe_buildings "010"
  
  /-
  info: 1
  -/
  #guard_msgs in
  #eval count_safe_buildings "10001"
  
  /-
  info: 7
  -/
  #guard_msgs in
  #eval count_safe_buildings "0000000"

