vc-description: |-

vc-preamble: |-
  def containsChar (s : String) (c : Char) : Bool :=
    s.any (fun x => x == c)
  
  def isDivisibleBy13AndNoUnluckyDigits (i : Nat) : Bool :=
    i % 13 == 0 &&
    !containsChar (toString i) '4' &&
    !containsChar (toString i) '7'

vc-helpers: |-

vc-definitions: |-
  def unlucky_number (n : Nat) : Nat :=
    sorry

vc-theorems: |-
  theorem unlucky_number_non_negative (n : Nat) :
    unlucky_number n â‰¥ 0 :=
  sorry
  
  theorem unlucky_number_zero :
    unlucky_number 0 = 1 :=
  sorry
  
  theorem unlucky_number_twelve :
    unlucky_number 12 = 1 :=
  sorry
  
  theorem unlucky_number_thirteen :
    unlucky_number 13 = 2 :=
  sorry

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: guarded_and_plausible
  
  /--
  info: 2
  -/
  #guard_msgs in
  #eval unlucky_number 20
  
  /--
  info: 7
  -/
  #guard_msgs in
  #eval unlucky_number 100
  
  /--
  info: 40
  -/
  #guard_msgs in
  #eval unlucky_number 1000

