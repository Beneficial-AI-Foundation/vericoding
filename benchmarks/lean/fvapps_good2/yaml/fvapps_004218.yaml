vc-description: |-
  -- Helper function to find maximum in list
  
  -- Apps difficulty: introductory
  -- Assurance level: guarded
  
  -- Helper function to find minimum in list

vc-preamble: |-
  def listMax : List Int → Int
    | [] => 0
    | (x::xs) => max x (listMax xs)
  
  def listMin : List Int → Int
    | [] => 0
    | (x::xs) => min x (listMin xs)

vc-helpers: |-

vc-definitions: |-
  def consecutive (lst : List Int) : Int :=
  sorry

vc-theorems: |-
  theorem consecutive_empty : consecutive [] = 0 :=
  sorry
  
  theorem consecutive_property {lst : List Int} (h : lst ≠ []) :
    consecutive lst = listMax lst - listMin lst + 1 - lst.length :=
  sorry

vc-postamble: |-

