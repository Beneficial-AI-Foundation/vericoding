vc-description: |-

vc-preamble: |-

vc-helpers: |-

vc-definitions: |-
  def count_yalalovichik_substrings (s: String) : Nat :=
    sorry
  
  def longest_run (s: String) : Nat :=
    sorry

vc-theorems: |-
  theorem count_always_nonnegative (s: String) (h: s.length > 0):
    count_yalalovichik_substrings s â‰¥ 0 :=
  sorry
  
  theorem single_char_count (c: Char):
    count_yalalovichik_substrings (String.singleton c) = 1 :=
  sorry
  
  theorem repeated_single_char (n: Nat) (h: n > 0):
    let s := String.join (List.replicate n "a")
    count_yalalovichik_substrings s = n :=
  sorry
  
  theorem alternating_chars (n: Nat) (h: n > 0):
    let s := String.join (List.replicate n "ab")
    count_yalalovichik_substrings s = 2 :=
  sorry

vc-postamble: |-
  -- Apps difficulty: interview
  -- Assurance level: guarded_and_plausible
  
  /--
  info: 3
  -/
  #guard_msgs in
  #eval count_yalalovichik_substrings "xxx"
  
  /--
  info: 2
  -/
  #guard_msgs in
  #eval count_yalalovichik_substrings "aa"
  
  /--
  info: 3
  -/
  #guard_msgs in
  #eval count_yalalovichik_substrings "aaa"

