vc-description: |-

vc-preamble: |-

vc-helpers: |-

vc-definitions: |-
  def min_plates_max_deliciousness (n : Nat) (arr : List Nat) : Nat :=
    sorry
  
  def countLeadingZeros (arr : List Nat) : Nat :=
  sorry
  
  def countTrailingZeros (arr : List Nat) : Nat :=
  sorry

vc-theorems: |-
  theorem min_plates_result_bounds {n : Nat} {arr : List Nat}
    (h : arr.length = n) (h2 : n > 0) :
    let result := min_plates_max_deliciousness n arr
    1 ≤ result ∧ result ≤ n :=
  sorry

vc-postamble: |-
  -- Apps difficulty: interview
  -- Assurance level: guarded_and_plausible
  
  /--
  info: 4
  -/
  #guard_msgs in
  #eval min_plates_max_deliciousness 4 [1, 2, 3, 4]
  
  /--
  info: 4
  -/
  #guard_msgs in
  #eval min_plates_max_deliciousness 5 [3, 2, 0, 3, 0]
  
  /--
  info: 1
  -/
  #guard_msgs in
  #eval min_plates_max_deliciousness 3 [0, 0, 0]

