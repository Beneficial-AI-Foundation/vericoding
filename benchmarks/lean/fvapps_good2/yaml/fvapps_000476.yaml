vc-description: |-
  /-
  Given a binary string S (a string consisting only of '0' and '1's) and a positive integer N, return true if and only if for every integer X from 1 to N, the binary representation of X is a substring of S.
  
  Example 1:
  Input: S = "0110", N = 3
  Output: true
  
  Example 2:
  Input: S = "0110", N = 4
  Output: false
  
  Note:
  
  1 <= S.length <= 1000
  1 <= N <= 10^9
  -/

vc-preamble: |-

vc-helpers: |-

vc-definitions: |-
  def bin (n : Nat) : String :=
  sorry
  
  def query_string (s : String) (n : Nat) : Bool :=
  sorry
  
  def containsSubstring (s : String) (sub : String) : Bool :=
  sorry

vc-theorems: |-
  theorem query_string_with_all_prefixes (n : Nat) (h : 0 < n ∧ n ≤ 20) :
    let binary_nums := String.join (List.map bin (List.range n))
    query_string binary_nums n = true
    :=
  sorry
  
  theorem query_string_correct (s : String) (n : Nat) (h : 0 < n ∧ n ≤ 20) :
    query_string s n = true ↔
      ∀ i : Nat, 1 ≤ i ∧ i ≤ n → containsSubstring s (bin i)
    :=
  sorry

vc-postamble: |-
  -- Apps difficulty: interview
  -- Assurance level: unguarded
  
  /--
  info: True
  -/
  #guard_msgs in
  #eval query_string "0110" 3
  
  /--
  info: False
  -/
  #guard_msgs in
  #eval query_string "0110" 4
  
  /--
  info: True
  -/
  #guard_msgs in
  #eval query_string "11011" 2

