vc-description: |-
  /- For positive integers, f(n) equals the sum of numbers from 1 to n -/
  
  -- Apps difficulty: introductory
  -- Assurance level: unguarded
  
  /- For non-positive integers, f returns none -/
  
  /- For non-integer numeric inputs, f returns none -/
  
  /- For any non-numeric type α, f returns none -/
  
  /- f handles large inputs without overflow -/

vc-preamble: |-

vc-helpers: |-

vc-definitions: |-
  def f (x : α) : Option Nat :=
  sorry

vc-theorems: |-
  theorem positive_integers_sum {n : Nat} (h : n > 0) :
    f n = some (n * (n + 1) / 2) :=
  sorry
  
  theorem non_positive_returns_none {n : Int} (h : n ≤ 0) :
    f n = none :=
  sorry
  
  theorem non_integer_returns_none (x : Float) :
    f x = none :=
  sorry
  
  theorem non_numeric_returns_none (α : Type) (x : α) :
    f x = none :=
  sorry
  
  theorem handles_large_inputs (n : Nat) :
    f n ≠ none → ∃ m : Nat, f n = some m ∧ m > 0 :=
  sorry

vc-postamble: |-
  /--
  info: 5050
  -/
  #guard_msgs in
  #eval f 100
  
  /--
  info: None
  -/
  #guard_msgs in
  #eval f 0
  
  /--
  info: None
  -/
  #guard_msgs in
  #eval f 3.14

