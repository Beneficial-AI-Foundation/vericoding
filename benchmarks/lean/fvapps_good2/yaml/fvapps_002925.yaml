vc-description: |-

vc-preamble: |-
  def abs (n : Int) : Int :=
    if n ≥ 0 then n else -n

vc-helpers: |-

vc-definitions: |-
  def list_minimum (lst : List Int) : Int :=
  sorry
  
  def array_center (lst : List Int) : List Int :=
  sorry
  
  def mean (lst : List Int) : Int :=
  sorry
  
  def list_index_of (lst : List Int) (x : Int) : Nat :=
  sorry

vc-theorems: |-
  theorem array_center_is_subset {lst : List Int} (h : lst ≠ []) :
    ∀ x, x ∈ array_center lst → x ∈ lst :=
  sorry

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: guarded_and_plausible
  
  /--
  info: [4, 5]
  -/
  #guard_msgs in
  #eval array_center [8, 3, 4, 5, 2, 8]
  
  /--
  info: [1, 2, 1]
  -/
  #guard_msgs in
  #eval array_center [1, 3, 2, 1]
  
  /--
  info: [10, 11, 12, 13, 14]
  -/
  #guard_msgs in
  #eval array_center [10, 11, 12, 13, 14]

