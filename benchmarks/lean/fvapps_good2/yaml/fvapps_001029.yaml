vc-description: |-

vc-preamble: |-

vc-helpers: |-

vc-definitions: |-
  def value (a b : Nat) (op : String) : Nat :=
    sorry
  
  def solve_expression (expr : String) : Nat :=
    sorry

vc-theorems: |-
  theorem value_commutativity {a b : Nat} {op : String} (h : op = "&" ∨ op = "|") :
    value a b op = value b a op := by
    sorry
  
  theorem value_nonnegativity {a b : Nat} {op : String} (h : op = "&" ∨ op = "|" ∨ op = "^") :
    value a b op ≥ 0 := by
    sorry
  
  theorem solve_expr_type {expr : String} :
    ∃ (n : Nat), solve_expression expr = n := by
    sorry
  
  theorem solve_expr_nonneg {expr : String} :
    solve_expression expr ≥ 0 := by
    sorry

vc-postamble: |-
  -- Apps difficulty: interview
  -- Assurance level: guarded
  
  /--
  info: 43
  -/
  #guard_msgs in
  #eval solve_expression "3^40|10^2"
  
  /--
  info: 95
  -/
  #guard_msgs in
  #eval solve_expression "92^95|56&2&3"
  
  /--
  info: 3
  -/
  #guard_msgs in
  #eval solve_expression "1&2|3"

