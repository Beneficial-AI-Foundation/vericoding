vc-description: |-
  /-
  Simple transposition is a basic and simple cryptography technique. We make 2 rows and put first a letter in the Row 1, the second in the Row 2, third in Row 1 and so on until the end. Then we put the text from Row 2 next to the Row 1 text and thats it.
  
  Complete the function that receives a string and encrypt it with this simple transposition.
  
  ## Example
  For example if the text to encrypt is: `"Simple text"`, the 2 rows will be:
  
  Row 1
  S
  m
  l
  
  e
  t
  
  Row 2
  i
  p
  e
  t
  x
  
  So the result string will be: `"Sml etipetx"`
  -/
  
  -- Apps difficulty: introductory
  -- Assurance level: guarded_and_plausible

vc-preamble: |-

vc-helpers: |-

vc-definitions: |-
  def simple_transposition (s : String) : String :=
  sorry
  
  def reverse_transposition (s : String) : String :=
  sorry
  
  def stringTakeEveryNth (s : String) (start : Nat) : String :=
  sorry

vc-theorems: |-
  theorem length_preserved (s : String) :
    (simple_transposition s).length = s.length :=
  sorry
  
  theorem empty_and_single_char (s : String) :
    s.length ≤ 1 → simple_transposition s = s :=
  sorry

vc-postamble: |-

