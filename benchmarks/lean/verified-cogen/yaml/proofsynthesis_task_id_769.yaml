vc-description: |-

vc-preamble: |-
  @[reducible, simp]
  def difference_precond (arr1 : Array Int) (arr2 : Array Int) : Prop :=
    True

vc-helpers: |-

vc-signature: |-
  def difference (arr1 : Array Int) (arr2 : Array Int) (h_precond : difference_precond arr1 arr2) : Array Int :=

vc-implementation: |-
  -- <vc-implementation>
    sorry
  -- </vc-implementation>

vc-condition: |-
  @[reducible, simp]
  def difference_postcond (arr1 : Array Int) (arr2 : Array Int) (result: Array Int) (h_precond : difference_precond arr1 arr2) :=
    (∀ i, i < arr1.size → ¬(arr2.toList.contains arr1[i]!) → result.toList.contains arr1[i]!) ∧
    (∀ i, i < arr2.size → ¬(arr1.toList.contains arr2[i]!) → result.toList.contains arr2[i]!) ∧
    (∀ i j, i < j → j < result.size → result[i]! ≠ result[j]!)
  
  theorem difference_spec_satisfied (arr1: Array Int) (arr2: Array Int) (h_precond : difference_precond arr1 arr2) :
      difference_postcond arr1 arr2 (difference arr1 arr2 h_precond) h_precond := by

vc-proof: |-
  -- <vc-proof>
    sorry
  -- </vc-proof>

vc-postamble: |-
  def main : IO Unit := return ()
