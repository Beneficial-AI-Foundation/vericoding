vc-description: |-

vc-preamble: |-
  @[reducible, simp]
  def containsZ_precond (text : Array Char) :=
    True

vc-helpers: |-

vc-signature: |-
  def containsZ (text : Array Char) (h_precond : containsZ_precond (text)) : Bool :=

vc-implementation: |-
  -- <vc-implementation>
    sorry
  -- </vc-implementation>

vc-condition: |-
  @[reducible, simp]
  def containsZ_postcond (text : Array Char) (result: Bool) (h_precond : containsZ_precond (text)) :=
    result = (∃ i, i < text.size ∧ (text[i]! = 'Z' ∨ text[i]! = 'z'))
  
  theorem containsZ_spec_satisfied (text: Array Char) (h_precond : containsZ_precond (text)) :
      containsZ_postcond (text) (containsZ (text) h_precond) h_precond := by

vc-proof: |-
  -- <vc-proof>
    sorry
  -- </vc-proof>

vc-postamble: |-
  def main : IO Unit := do
    return ()
