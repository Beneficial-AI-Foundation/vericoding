vc-description: |-

vc-preamble: |-
  @[reducible, simp]
  def cubes_precond (len : Nat) : Prop := True

vc-helpers: |-

vc-signature: |-
  def cubes (len : Nat) (h_precond : cubes_precond len) : Array Int :=

vc-implementation: |-
  -- <vc-implementation>
    sorry
  -- </vc-implementation>

vc-condition: |-
  @[reducible, simp]
  def cubes_postcond (len : Nat) (result : Array Int) (h_precond : cubes_precond len) : Prop :=
    result.size = len ∧ (∀ i : Nat, i < len → result[i]! = i * i * i)
  
  theorem cubes_spec_satisfied (len : Nat) (h_precond : cubes_precond len) :
      cubes_postcond len (cubes len h_precond) h_precond := by

vc-proof: |-
  -- <vc-proof>
    sorry
  -- </vc-proof>

vc-postamble: |-
  def main : IO Unit := pure ()
