vc-description: |-
  /- Function to find the maximum element in a non-empty array -/

vc-preamble: |-
  @[reducible, simp]
  def findMax_precond (nums : Array Int) : Prop :=
    nums.size > 0

vc-helpers: |-

vc-signature: |-
  def findMax (nums : Array Int) (h_precond : findMax_precond nums) : Int :=

vc-implementation: |-
  -- <vc-implementation>
    sorry
  -- </vc-implementation>

vc-condition: |-
  @[reducible, simp]
  def findMax_postcond (nums : Array Int) (ret : Int) (h_precond : findMax_precond nums) : Prop :=
    (∀ i, i < nums.size → nums[i]! ≤ ret) ∧ (∃ i, i < nums.size ∧ nums[i]! = ret)

  theorem findMax_spec_satisfied (nums : Array Int) (h_precond : findMax_precond nums) :
      findMax_postcond nums (findMax nums h_precond) h_precond := by

vc-proof: |-
  -- <vc-proof>
    sorry
  -- </vc-proof>

vc-postamble: |-
  def main : IO Unit := return ()