vc-description: |-

vc-preamble: |-
  @[reducible, simp]
  def containsK_precond (arr : Array Int) (k : Int) : Prop := True

vc-helpers: |-

vc-signature: |-
  def containsK (arr : Array Int) (k : Int) (h_precond : containsK_precond (arr) (k)) : Bool :=

vc-implementation: |-
  -- <vc-implementation>
    sorry
  -- </vc-implementation>

vc-condition: |-
  @[reducible, simp]
  def containsK_postcond (arr : Array Int) (k : Int) (result: Bool) (h_precond : containsK_precond (arr) (k)) :=
    (∃ i : Nat, i < arr.size ∧ arr[i]! = k) ↔ result
  
  theorem containsK_spec_satisfied (arr: Array Int) (k: Int) (h_precond : containsK_precond (arr) (k)) :
      containsK_postcond (arr) (k) (containsK (arr) (k) h_precond) h_precond := by

vc-proof: |-
  -- <vc-proof>
    sorry
  -- </vc-proof>

vc-postamble: |-
  #check containsK
