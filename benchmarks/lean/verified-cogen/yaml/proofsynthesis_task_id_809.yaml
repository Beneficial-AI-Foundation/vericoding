vc-description: |-

vc-preamble: |-
  @[reducible, simp]
  def isSmaller_precond (arr1 : Array Int) (arr2 : Array Int) :=
    arr1.size = arr2.size

vc-helpers: |-

vc-signature: |-
  def isSmaller (arr1 : Array Int) (arr2 : Array Int) (h_precond : isSmaller_precond (arr1) (arr2)) : Bool :=

vc-implementation: |-
  -- <vc-implementation>
    sorry
  -- </vc-implementation>

vc-condition: |-
  @[reducible, simp]
  def isSmaller_postcond (arr1 : Array Int) (arr2 : Array Int) (result: Bool) (h_precond : isSmaller_precond (arr1) (arr2)) :=
    (∀ i, i < arr1.size → arr1[i]! > arr2[i]!) ↔ result
  
  theorem isSmaller_spec_satisfied (arr1: Array Int) (arr2: Array Int) (h_precond : isSmaller_precond (arr1) (arr2)) :
      isSmaller_postcond (arr1) (arr2) (isSmaller (arr1) (arr2) h_precond) h_precond := by

vc-proof: |-
  -- <vc-proof>
    sorry
  -- </vc-proof>

vc-postamble: |-
  /- Test cases can be added here -/
