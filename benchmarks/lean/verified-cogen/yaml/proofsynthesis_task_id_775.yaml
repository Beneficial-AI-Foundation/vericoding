vc-description: |-

vc-preamble: |-
  @[reducible, simp]
  def isOddAtOddIndex_precond (arr : Array Nat) : Prop := True

vc-helpers: |-

vc-signature: |-
  def isOddAtOddIndex (arr : Array Nat) (h_precond : isOddAtOddIndex_precond arr) : Bool :=

vc-implementation: |-
  -- <vc-implementation>
    sorry
  -- </vc-implementation>

vc-condition: |-
  @[reducible, simp]
  def isOddAtOddIndex_postcond (arr : Array Nat) (result: Bool) (h_precond : isOddAtOddIndex_precond arr) :=
    (∀ i, i < arr.size → (i % 2 = arr[i]! % 2)) ↔ result
  
  theorem isOddAtOddIndex_spec_satisfied (arr: Array Nat) (h_precond : isOddAtOddIndex_precond arr) :
      isOddAtOddIndex_postcond arr (isOddAtOddIndex arr h_precond) h_precond := by

vc-proof: |-
  -- <vc-proof>
    sorry
  -- </vc-proof>

vc-postamble: |-
  def main : IO Unit := IO.println "Test completed"
