vc-description: |-
  /-
  An acrostic is a text in which the first letter of each line spells out a word. It is also a quick and cheap way of writing a poem for somebody, as exemplified below :
  
  Write a program that reads an acrostic to identify the "hidden" word. Specifically, your program will receive a list of words (reprensenting an acrostic) and will need to return a string corresponding to the word that is spelled out by taking the first letter of each word in the acrostic.
  -/

vc-preamble: |-

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def read_out (words : List String) : String := sorry
  
  theorem read_out_length_matches_input (words : List String) 
    (h : List.length words > 0) (h2 : ∀ w ∈ words, String.length w > 0) : 
    String.length (read_out words) = List.length words := sorry

vc-theorems: |-
  theorem read_out_takes_first_chars (words : List String) 
    (h : List.length words > 0) (h2 : ∀ w ∈ words, String.length w > 0) :
    ∀ i < words.length, String.data (read_out words) = (String.get! (List.get! words i) 0) :: (String.data (read_out words)) := sorry
  
  theorem read_out_preserves_uppercase (words : List String)
    (h : List.length words > 0)
    (h2 : ∀ w ∈ words, String.length w > 0)
    (h3 : ∀ w ∈ words, ∀ c ∈ w.data, 'A'.val ≤ c.val ∧ c.val ≤ 'Z'.val) :
    ∀ c ∈ (read_out words).data, 'A'.val ≤ c.val ∧ c.val ≤ 'Z'.val := sorry
  
  theorem read_out_preserves_lowercase (words : List String)
    (h : List.length words > 0)
    (h2 : ∀ w ∈ words, String.length w > 0)
    (h3 : ∀ w ∈ words, ∀ c ∈ w.data, 'a'.val ≤ c.val ∧ c.val ≤ 'z'.val) :
    ∀ c ∈ (read_out words).data, 'a'.val ≤ c.val ∧ c.val ≤ 'z'.val := sorry
  
  theorem read_out_empty_list :
    read_out [] = "" := sorry
  
  /-
  info: 'JACK'
  -/
  -- #guard_msgs in
  -- #eval read_out ["Jolly", "Amazing", "Courteous", "Keen"]
  
  /-
  info: 'MEG'
  -/
  -- #guard_msgs in
  -- #eval read_out ["Marvelous", "Excellent", "Gifted"]

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded

