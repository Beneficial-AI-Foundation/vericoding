vc-description: |-
  /-
  =====Function Descriptions=====
  Polar coordinates are an alternative way of representing Cartesian coordinates or Complex Numbers.
  A complex number z
  z = x + yj
  is completely determined by its real part y. Here, j is the imaginary unit.
  
  A polar coordinate (r, φ) is completely determined by modulus r and phase angle φ.
  If we convert complex number z to its polar coordinate, we find:
  r: Distance from z to origin, i.e., sqrt(x^2 + y^2)
  φ: Counter clockwise angle measured from the positive -axis to the line segment that joins z to the origin.
  
  Python's cmath module provides access to the mathematical functions for complex numbers.
  cmath.phase
  This tool returns the phase of complex number z (also known as the argument of z).
  >>> phase(complex(-1.0, 0.0))
  3.1415926535897931
  
  abs
  This tool returns the modulus (absolute value) of complex number z.
  >>> abs(complex(-1.0, 0.0))
  1.0
  
  =====Problem Statement=====
  You are given a complex z. Your task is to convert it to polar coordinates.
  
  =====Input Format=====
  A single line containing the complex number z. Note: complex() function can be used in python to convert the input as a complex number.
  
  =====Constraints=====
  Given number is a valid complex number
  
  =====Output Format=====
  Output two lines:
  The first line should contain the value of r.
  The second line should contain the value of φ.
  -/

vc-preamble: |-
  def ℂ := Float × Float  -- Simplified complex number representation
  def magnitude : ℂ → Float := sorry

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def phase : ℂ → Float := sorry
  def mkComplex (r i : Float) : ℂ := (r, i)

vc-theorems: |-
  theorem get_polar_coords_zero :
    let z := mkComplex 0 0
    magnitude z = 0 ∧ phase z = 0 := by sorry 
  
  theorem get_polar_coords_real_positive :
    let z := mkComplex 1 0
    magnitude z = 1 ∧ phase z = 0 := by sorry
  
  theorem get_polar_coords_real_negative :
    let z := mkComplex (-1) 0
    magnitude z = 1 ∧ phase z = 3.141592653589793 := by sorry
  
  theorem get_polar_coords_complex :
    let z := mkComplex 1 2
    Float.abs (magnitude z - 2.23606797749979) < 1e-10 ∧ 
    Float.abs (phase z - 1.1071487177940904) < 1e-10 := by sorry

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: guarded

