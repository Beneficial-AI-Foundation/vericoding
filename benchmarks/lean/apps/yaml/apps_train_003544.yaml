vc-description: |-
  /-
  In your class, you have started lessons about [arithmetic progression](https://en.wikipedia.org/wiki/Arithmetic_progression). Since you are also a programmer, you have decided to write a function that will return the first `n` elements of the sequence with the given common difference `d` and first element `a`. Note that the difference may be zero!
  
  The result should be a string of numbers, separated by comma and space.
  
  ## Example
  
  ```python
  # first element: 1, difference: 2, how many: 5
  arithmetic_sequence_elements(1, 2, 5) == "1, 3, 5, 7, 9"
  ```
  
  ~~~if:fortran
  *NOTE: In Fortran, your returned string is* **not** *permitted to contain redundant leading/trailing whitespace.*
  ~~~
  -/

vc-preamble: |-

vc-helpers: |-

vc-definitions: |-
  def arith_seq_elements (a r n : Int) : String :=
    sorry

vc-theorems: |-
  theorem empty_sequence :
    ∀ (a r : Int),
    arith_seq_elements a r 0 = "" :=
  sorry
  
  theorem sequence_start :
    ∀ (a r : Int) (n : Int),
    n > 0 →
    arith_seq_elements a r n ≠ "" ∧
    (String.split (arith_seq_elements a r n) (fun x => x == ',')).get! 0 = toString a :=
  sorry
  
  theorem sequence_differences :
    ∀ (a r : Int) (n : Int),
    n > 1 →
    let nums := String.split (arith_seq_elements a r n) (fun x => x == ',')
    ∀ i : Nat,
    i < nums.length - 1 →
    String.toInt! (nums.get! (i+1)) - String.toInt! (nums.get! i) = r :=
  sorry
  
  theorem sequence_length :
    ∀ (a r : Int) (n : Int),
    n > 0 →
    (String.split (arith_seq_elements a r n) (fun x => x == ',')).length = n.toNat :=
  sorry
  
  theorem zero_difference :
    ∀ (a : Int) (n : Int),
    n > 0 →
    arith_seq_elements a 0 n = String.intercalate ", " (List.replicate n.toNat (toString a)) :=
  sorry
  
  /-
  info: '1, 3, 5, 7, 9'
  -/
  -- #guard_msgs in
  -- #eval arithmetic_sequence_elements 1 2 5
  
  /-
  info: '1, 1, 1, 1, 1'
  -/
  -- #guard_msgs in
  -- #eval arithmetic_sequence_elements 1 0 5
  
  /-
  info: '100, 90, 80, 70, 60'
  -/
  -- #guard_msgs in
  -- #eval arithmetic_sequence_elements 100 -10 5

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded

