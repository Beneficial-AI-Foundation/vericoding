vc-description: |-
  /-
  You're on your way to the market when you hear beautiful music coming from a nearby street performer. The notes come together like you wouln't believe as the musician puts together patterns of tunes. As you wonder what kind of algorithm you could use to shift octaves by 8 pitches or something silly like that, it dawns on you that you have been watching the musician for some 10 odd minutes. You ask, "How much do people normally tip for something like this?" The artist looks up. "Its always gonna be about tree fiddy."
  
  It was then that you realize the musician was a 400 foot tall beast from the paleolithic era. The Loch Ness Monster almost tricked you!
  
  There are only 2 guaranteed ways to tell if you are speaking to The Loch Ness Monster: A.) It is a 400 foot tall beast from the paleolithic era B.) It will ask you for tree fiddy
  
  Since Nessie is a master of disguise, the only way accurately tell is to look for the phrase "tree fiddy". Since you are tired of being grifted by this monster, the time has come to code a solution for finding The Loch Ness Monster.
  Note: It can also be written as 3.50 or three fifty.
  -/

vc-preamble: |-

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def is_lock_ness_monster : String → Bool := sorry
  
  theorem is_lock_ness_monster_case_insensitive (s : String) :
    is_lock_ness_monster s = is_lock_ness_monster (s.toUpper) ∧
    is_lock_ness_monster s = is_lock_ness_monster (s.toLower) :=
  sorry

vc-theorems: |-
  theorem is_lock_ness_monster_contains_phrase (s : String) (phrase : String) 
    (h : phrase = "tree fiddy" ∨ phrase = "three fifty" ∨ phrase = "3.50") :
    is_lock_ness_monster (s ++ phrase ++ s) = true :=
  sorry
  
  theorem is_lock_ness_monster_no_substring (s : String) 
    (h : s.length > 0) :
    (¬is_lock_ness_monster s) ↔ 
    (¬(s.data.asString.contains '3') ∧ 
     ¬(s.data.asString.contains 't') ∧
     ¬(s.data.asString.contains 'f')) :=
  sorry
  
  theorem is_lock_ness_monster_empty :
    is_lock_ness_monster "" = false :=
  sorry
  
  theorem is_lock_ness_monster_whitespace (s : String)
    (h : s = " " ∨ s = "\n" ∨ s = "\t") :
    is_lock_ness_monster s = false :=
  sorry
  
  /-
  info: True
  -/
  -- #guard_msgs in
  -- #eval is_lock_ness_monster "Your girlscout cookies are ready to ship. Your total comes to tree fiddy"
  
  /-
  info: False
  -/
  -- #guard_msgs in
  -- #eval is_lock_ness_monster "Yo, I heard you were on the lookout for Nessie. Let me know if you need assistance."
  
  /-
  info: True
  -/
  -- #guard_msgs in
  -- #eval is_lock_ness_monster "I"m from Scottland. I moved here to be with my family sir. Please, $3.50 would go a long way"

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded

