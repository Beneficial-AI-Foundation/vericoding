vc-description: |-
  /-
  Given two equal-size strings s and t. In one step you can choose any character of t and replace it with another character.
  Return the minimum number of steps to make t an anagram of s.
  An Anagram of a string is a string that contains the same characters with a different (or the same) ordering.
  
  Example 1:
  Input: s = "bab", t = "aba"
  Output: 1
  Explanation: Replace the first 'a' in t with b, t = "bba" which is anagram of s.
  
  Example 2:
  Input: s = "leetcode", t = "practice"
  Output: 5
  Explanation: Replace 'p', 'r', 'a', 'i' and 'c' from t with proper characters to make t anagram of s.
  
  Example 3:
  Input: s = "anagram", t = "mangaar"
  Output: 0
  Explanation: "anagram" and "mangaar" are anagrams. 
  
  Example 4:
  Input: s = "xxyyzz", t = "xxyyzz"
  Output: 0
  
  Example 5:
  Input: s = "friend", t = "family"
  Output: 4
  
  Constraints:
  
  1 <= s.length <= 50000
  s.length == t.length
  s and t contain lower-case English letters only.
  -/

vc-preamble: |-

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def min_steps_to_anagram (s1 s2 : String) : Nat :=
    sorry

vc-theorems: |-
  theorem anagram_non_negative (s1 s2 : String) :
    min_steps_to_anagram s1 s2 ≥ 0 :=
    sorry
  
  theorem empty_strings_zero_steps :
    min_steps_to_anagram "" "" = 0 :=
    sorry
  
  theorem same_string_zero_steps (s : String) :
    min_steps_to_anagram s s = 0 :=
    sorry
  
  theorem anagram_symmetry (s : String) :
    min_steps_to_anagram s s = 0 :=
    sorry
  
  theorem steps_bounded_by_length (s t : String) :
    min_steps_to_anagram s t ≤ t.length :=
    sorry
  
  theorem empty_string_steps :
    min_steps_to_anagram "" "" = 0 ∧
    min_steps_to_anagram "a" "" = 0 ∧
    min_steps_to_anagram "" "a" = 1 :=
    sorry
  
  /-
  info: 1
  -/
  -- #guard_msgs in
  -- #eval min_steps_to_anagram "bab" "aba"
  
  /-
  info: 5
  -/
  -- #guard_msgs in
  -- #eval min_steps_to_anagram "leetcode" "practice"
  
  /-
  info: 0
  -/
  -- #guard_msgs in
  -- #eval min_steps_to_anagram "anagram" "mangaar"

vc-postamble: |-
  -- Apps difficulty: interview
  -- Assurance level: guarded_and_plausible

