vc-description: |-
  /-
  You take your son to the forest to see the monkeys. You know that there are a certain number there (n), but your son is too young to just appreciate the full number, he has to start counting them from 1.
  
  As a good parent, you will sit and count with him. Given the number (n), populate an array with all numbers up to and including that number, but excluding zero.
  
  For example:
  ```python
  monkeyCount(10) # --> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
  monkeyCount(1) # --> [1]
  ```
  -/

vc-preamble: |-

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def monkey_count (n : Nat) : List Nat := sorry
  
  theorem monkey_count_length {n : Nat} (h : n > 0) : 
    (monkey_count n).length = n := sorry

vc-theorems: |-
  theorem monkey_count_first {n : Nat} (h : n > 0) :
    (monkey_count n).head! = 1 := sorry 
  
  theorem monkey_count_last {n : Nat} (h : n > 0) :
    (monkey_count n).getLast! = n := sorry
  
  /-
  info: [1, 2, 3, 4, 5]
  -/
  -- #guard_msgs in
  -- #eval monkey_count 5
  
  /-
  info: [1]
  -/
  -- #guard_msgs in
  -- #eval monkey_count 1
  
  /-
  info: [1, 2, 3]
  -/
  -- #guard_msgs in
  -- #eval monkey_count 3

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: guarded_and_plausible

