vc-description: |-
  /-
  Given a string $s$.
  You can perform the following operation on given string any number of time.
  Delete two successive elements of the string if they are same.
  After performing the above operation you have to return the least possible length of the string.
  
  -----Input:-----
  - First line will contain $T$, number of testcases. Then the testcases follow. 
  - Each testcase contains of a single line of input, a string $s$. 
  
  -----Output:-----
  For each testcase, output in a single line answer- minimum length of string possible after performing given operations.
  
  -----Constraints-----
  - $1 \leq T \leq 1000$
  - $2 \leq length of string \leq 10^5$
  $s$ contains only lowercase letters.
  
  -----Sample Input:-----
  3
  abccd
  abbac
  aaaa
  
  -----Sample Output:-----
  3
  1
  0
  
  -----EXPLANATION:-----
  - In first case, $"abd"$ will be final string.
  - in second case, $"c"$ will be final string
  -/

vc-preamble: |-
  def min_string_length (s : String) : Nat :=
    sorry
  
  -- Result is non-negative

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def reverseString (s : String) : String :=
    sorry

vc-theorems: |-
  theorem min_string_length_non_negative (s : String) (h : s.length > 0) : 
    min_string_length s ≥ 0 := 
    sorry
  
  -- Result is at most input length
  
  theorem min_string_length_upper_bound (s : String) (h : s.length > 0) :
    min_string_length s ≤ s.length :=
    sorry
  
  -- Single character sequence reduces to at most 1
  
  theorem min_string_length_same_char (s : String) (h : s.length > 0) 
    (h' : ∀ (i j : String.Pos), s.get i = s.get j) :
    min_string_length s ≤ 1 :=
    sorry
  
  -- Palindrome property
  
  theorem min_string_length_palindrome (s : String) (h : s.length > 0) :
    min_string_length s = min_string_length (reverseString s) :=
    sorry
  
  /-
  info: 3
  -/
  -- #guard_msgs in
  -- #eval min_string_length "abccd"
  
  /-
  info: 1
  -/
  -- #guard_msgs in
  -- #eval min_string_length "abbac"
  
  /-
  info: 0
  -/
  -- #guard_msgs in
  -- #eval min_string_length "aaaa"

vc-postamble: |-
  -- Apps difficulty: interview
  -- Assurance level: guarded

