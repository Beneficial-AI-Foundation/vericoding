vc-description: |-
  /-
  You'll be given a list of two strings, and each will contain exactly one colon (`":"`) in the middle (but not at beginning or end). The length of the strings, before and after the colon, are random.
  
  Your job is to return a list of two strings (in the same order as the original list), but with the characters after each colon swapped.
  
  ## Examples
  ```
  ["abc:123", "cde:456"]  -->  ["abc:456", "cde:123"]
  ["a:12345", "777:xyz"]  -->  ["a:xyz", "777:12345"]
  ```
  -/

vc-preamble: |-

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def tail_swap (strings : List String) : List String := sorry
  
  theorem tail_swap_length (strings : List String)
    (h1 : strings.length = 2) :
    (tail_swap strings).length = 2 := sorry

vc-theorems: |-
  theorem tail_swap_preserves_string_type (strings : List String)
    (h1 : strings.length = 2)
    (h2 : ∀ s ∈ strings, s.contains ':') :
    ∀ s ∈ tail_swap strings, s.contains ':' := sorry
  
  theorem tail_swap_preserves_heads (strings : List String)
    (h1 : strings.length = 2)
    (h2 : ∀ s ∈ strings, s.contains ':')
    (h3 : 0 < (tail_swap strings).length)
    (h4 : 1 < (tail_swap strings).length)
    (h5 : 0 < strings.length)
    (h6 : 1 < strings.length) :
    ((tail_swap strings).get! 0).splitOn ":" = (strings.get! 0).splitOn ":" ∧ 
    ((tail_swap strings).get! 1).splitOn ":" = (strings.get! 1).splitOn ":" := sorry
  
  theorem tail_swap_swaps_tails (strings : List String)
    (h1 : strings.length = 2)
    (h2 : ∀ s ∈ strings, s.contains ':')
    (h3 : 0 < (tail_swap strings).length)
    (h4 : 1 < (tail_swap strings).length)
    (h5 : 0 < strings.length)
    (h6 : 1 < strings.length) :
    List.get! (((tail_swap strings).get! 0).splitOn ":") 1 = List.get! ((strings.get! 1).splitOn ":") 1 ∧
    List.get! (((tail_swap strings).get! 1).splitOn ":") 1 = List.get! ((strings.get! 0).splitOn ":") 1 := sorry
  
  theorem tail_swap_involution (s1 s2 : String)
    (h1 : s1.contains ':')
    (h2 : s2.contains ':') :
    tail_swap (tail_swap [s1, s2]) = [s1, s2] := sorry
  
  /-
  info: ['abc:456', 'cde:123']
  -/
  -- #guard_msgs in
  -- #eval tail_swap ["abc:123", "cde:456"]
  
  /-
  info: ['a:xyz', '777:12345']
  -/
  -- #guard_msgs in
  -- #eval tail_swap ["a:12345", "777:xyz"]

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded

