vc-description: |-
  /-
  Count the number of divisors of a positive integer `n`.
  
  Random tests go up to `n = 500000`.
  
  ## Examples
  ```python
  divisors(4)  == 3  # 1, 2, 4
  divisors(5)  == 2  # 1, 5
  divisors(12) == 6  # 1, 2, 3, 4, 6, 12
  divisors(30) == 8  # 1, 2, 3, 5, 6, 10, 15, 30
  ```
  -/

vc-preamble: |-

vc-helpers: |-

vc-definitions: |-
  def sqrt (n : Nat) : Nat := sorry 
  
  def divisors (n : Nat) : Nat := sorry
  
  -- Every positive number has at least 1 divisor and no more than itself

vc-theorems: |-
  theorem divisors_bounds (n : Nat) (h : n > 0) : 
    1 ≤ divisors n ∧ divisors n ≤ n := sorry
  
  -- Prime numbers have exactly 2 divisors
  
  theorem divisors_prime (n : Nat) (h1 : n > 1) (h2 : ∀ m : Nat, 2 ≤ m → m ≤ sqrt n → ¬(m ∣ n)) : 
    divisors n = 2 := sorry
  
  -- Perfect squares have an odd number of divisors
  
  theorem divisors_perfect_square (n : Nat) (h : ∃ m : Nat, n = m * m) :
    divisors n % 2 = 1 := sorry
  
  -- One has exactly one divisor
  
  theorem divisors_one :
    divisors 1 = 1 := sorry
  
  /-
  info: 3
  -/
  -- #guard_msgs in
  -- #eval divisors 4
  
  /-
  info: 6
  -/
  -- #guard_msgs in
  -- #eval divisors 12
  
  /-
  info: 8
  -/
  -- #guard_msgs in
  -- #eval divisors 30

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: guarded

