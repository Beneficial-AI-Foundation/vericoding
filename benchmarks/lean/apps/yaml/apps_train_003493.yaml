vc-description: |-
  /-
  In mathematics, the factorial of integer 'n' is written as 'n!'.
  It is equal to the product of n and every integer preceding it.
  For example: **5! = 1 x 2 x 3 x 4 x 5 = 120**
  
  Your mission is simple: write a function that takes an integer 'n' and returns 'n!'.
  
  You are guaranteed an integer argument. For any values outside the positive range, return `null`, `nil` or `None` .
  
  **Note:** 0! is always equal to 1. Negative values should return null; 
  
  For more on Factorials : http://en.wikipedia.org/wiki/Factorial
  -/

vc-preamble: |-

vc-helpers: |-

vc-definitions: |-
  def factorial (n : Int) : Option Int :=
    sorry

vc-theorems: |-
  theorem factorial_nonnegative {n : Int} (h : n ≥ 0) (h2 : n ≤ 10) : 
    match factorial n with
    | some x => x > 0
    | none => False :=
    sorry
  
  theorem factorial_divides {n : Int} (h : n > 0) (h2 : n ≤ 10) :
    match factorial n with
    | some x => x % n = 0 ∧ x / n = (factorial (n-1)).get!
    | none => False :=
    sorry
  
  theorem factorial_negative {n : Int} (h : n < 0) :
    factorial n = none :=
    sorry
  
  theorem factorial_zero :
    factorial 0 = some 1 :=
    sorry
  
  /-
  info: None
  -/
  -- #guard_msgs in
  -- #eval factorial -1
  
  /-
  info: 1
  -/
  -- #guard_msgs in
  -- #eval factorial 0
  
  /-
  info: 120
  -/
  -- #guard_msgs in
  -- #eval factorial 5

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded

