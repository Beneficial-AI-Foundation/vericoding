vc-description: |-
  /-
  NOTE: It is recommended you complete [Introduction to Esolangs](https://www.codewars.com/kata/esolang-interpreters-number-1-introduction-to-esolangs-and-my-first-interpreter-ministringfuck/) or [MiniBitFlip](https://www.codewars.com/kata/esolang-minibitflip/) before solving this one.
  Task:
  Make an interpreter for an esoteric language called Ticker. Ticker is a descendant of [Tick](https://www.codewars.com/kata/esolang-tick). Your language has the following commands:
  
  `>`: increment the selector by 1
  
  `<`: decrement the selector by 1
  
  `*`: add the ascii value of selected cell to the output tape
  
  `+`: increment selected cell data by 1. If 256, then it is 0
  
  `-`: increment selected cell data by -1. If less than 0, then 255
  
  `/`: set selected cell data to 0
  
  `!`: add new data cell to the end of the array
  
  You start with selector at `0` and one cell with a value of `0`. If selector goes out of bounds, assume 0 for that cell but do not add it to the memory. If a + or - is being made do not change the value of the assumed cell. It will always stay 0 unless it is added to the memory
  
  In other words:
  
  ```
  data: start 0 end
  selector:   ^
  data start 1 2 4 end
  selector:        ^
  Assume that cell is zero.
  ```
  
  Examples:
  Consider the following program:
  
  ```python

  ```
  
  It's output is this:
  
  ```python
  'Hello World!'
  ```
  
  This is made just by using 1 data cell.
  
  Example using multiple data cells:
  
  ```python

  ```
  
  And it's output is still:
  
  ```python
  'Hello World!'
  ```
  
  A more efficient example:
  
  ```python

  ```
  
  Which still returns the classic:
  
  ```python
  'Hello World!'
  ```
  
  Other characters are ingnored and therefore can serve as comments.
  
  After you're done, fell free to make translations and to discuss this kata.
  -/

vc-preamble: |-

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def interpreter (s : String) : String := sorry
  
  theorem interpreter_output_is_string
    (commands : String)
    (h : ∀ c ∈ commands.toList, c ∈ ['>','<','!','*','+','-','/']) :
    ∃ s : String, interpreter commands = s := sorry

vc-theorems: |-
  theorem interpreter_chr_range
    (commands : String)
    (h : ∀ c ∈ commands.toList, c ∈ ['>','<','!','*','+','-','/']) :
    ∀ c ∈ (interpreter commands).toList, 
      0 ≤ c.toNat ∧ c.toNat < 256 := sorry
  
  theorem increment_decrement_cancellation
    (commands : String)
    (h₁ : ∀ c ∈ commands.toList, c ∈ ['+','-'])
    (h₂ : commands.toList.length > 0)
    (h₃ : (commands.toList.filter (fun x => x = '+')).length = 
          (commands.toList.filter (fun x => x = '-')).length) :
    interpreter commands = "" ∨ 
    ∀ c ∈ (interpreter commands).toList, c.toNat = 0 := sorry
  
  theorem memory_pointer_bounds
    (commands : String)
    (h : ∀ c ∈ commands.toList, c ∈ ['>','<','!','*','+','-','/']) :
    ∃ s : String, interpreter commands = s := sorry
  
  theorem clear_cell
    (commands : String)
    (h₁ : ∀ c ∈ commands.toList, c = '/')
    (h₂ : commands.toList.length > 0) :
    interpreter (commands ++ "*") = "\u0000" := sorry
  
  theorem new_cells_initialized_zero
    (commands : String)
    (h : ∀ c ∈ commands.toList, c ∈ ['>','!']) :
    interpreter (commands ++ "*") = "\u0000" := sorry
  
  /-
  info: 'Hello World!'
  -/
  -- #guard_msgs in
  -- #eval interpreter
  
  /-
  info: '\x00'
  -/
  -- #guard_msgs in
  -- #eval interpreter ">>>*"
  
  /-
  info: 'Codewars'
  -/
  -- #guard_msgs in
  -- #eval interpreter

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded

