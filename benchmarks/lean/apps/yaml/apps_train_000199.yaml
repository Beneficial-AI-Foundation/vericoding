vc-description: |-
  /-
  A robot is located at the top-left corner of a m x n grid (marked 'Start' in the diagram below).
  
  The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked 'Finish' in the diagram below).
  
  How many possible unique paths are there?
  
  Above is a 7 x 3 grid. How many possible unique paths are there?
  
  Note: m and n will be at most 100.
  
  Example 1:
  
  Input: m = 3, n = 2
  Output: 3
  Explanation:
  From the top-left corner, there are a total of 3 ways to reach the bottom-right corner:
  1. Right -> Right -> Down
  2. Right -> Down -> Right
  3. Down -> Right -> Right
  
  Example 2:
  
  Input: m = 7, n = 3
  Output: 28
  -/

vc-preamble: |-

vc-helpers: |-

vc-definitions: |-
  def unique_paths (m n : Nat) : Nat := sorry
  
  theorem unique_paths_positive (m n : Nat) (h1 : m > 0) (h2 : n > 0) :
    unique_paths m n > 0 := sorry

vc-theorems: |-
  theorem unique_paths_symmetry (m n : Nat) :
    unique_paths m n = unique_paths n m := sorry
  
  theorem unique_paths_single_row (n : Nat) (h : n > 0) :
    unique_paths 1 n = 1 := sorry
  
  theorem unique_paths_single_col (n : Nat) (h : n > 0) :
    unique_paths n 1 = 1 := sorry
  
  /-
  info: 3
  -/
  -- #guard_msgs in
  -- #eval unique_paths 3 2
  
  /-
  info: 28
  -/
  -- #guard_msgs in
  -- #eval unique_paths 7 3
  
  /-
  info: 28
  -/
  -- #guard_msgs in
  -- #eval unique_paths 3 7

vc-postamble: |-
  -- Apps difficulty: interview
  -- Assurance level: guarded_and_plausible

