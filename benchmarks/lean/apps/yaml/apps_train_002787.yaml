vc-description: |-
  /-
  # Introduction
  
  There is a war and nobody knows - the alphabet war!  
  There are two groups of hostile letters. The tension between left side letters and right side letters was too high and the war began.
  
  # Task
  
  Write a function that accepts `fight` string consists of only small letters and return who wins the fight. When the left side wins return `Left side wins!`, when the right side wins return `Right side wins!`, in other case return `Let's fight again!`.
  
  The left side letters and their power:
  ```
   w - 4
   p - 3
   b - 2
   s - 1
  ```
  The right side letters and their power:
  ```
   m - 4
   q - 3
   d - 2
   z - 1
  ```
  The other letters don't have power and are only victims.
  
  # Example
  
  # Alphabet war Collection
  
  Alphavet war 
  
  Alphabet war - airstrike - letters massacre
  
  Alphabet wars - reinforces massacre
  
  Alphabet wars - nuclear strike
  
  Alphabet war - Wo lo loooooo priests join the war
  -/

vc-preamble: |-
  def alphabet_war (s : String) : String := sorry
  
  def valid_letters := ['w', 'p', 'b', 's', 'm', 'q', 'd', 'z']

vc-helpers: |-

vc-definitions: |-
  def score_map (c : Char) : Int :=
    match c with
    | 'w' => 4
    | 'p' => 3  
    | 'b' => 2
    | 's' => 1
    | 'm' => -4
    | 'q' => -3
    | 'd' => -2
    | 'z' => -1
    | _ => 0

vc-theorems: |-
  theorem alphabet_war_valid_output (s : String) :
    alphabet_war s = "Left side wins!" ∨ 
    alphabet_war s = "Right side wins!" ∨
    alphabet_war s = "Let's fight again!" := sorry
  
  theorem alphabet_war_invalid_chars (s : String) : 
    alphabet_war s = "Left side wins!" ∨
    alphabet_war s = "Right side wins!" ∨ 
    alphabet_war s = "Let's fight again!" := sorry
  
  theorem alphabet_war_scoring (s : String) (h : s.all (λ c => c ∈ valid_letters)) :
    let score := s.foldr (λ c acc => acc + score_map c) 0
    if score > 0 then 
      alphabet_war s = "Left side wins!"
    else if score < 0 then
      alphabet_war s = "Right side wins!"
    else
      alphabet_war s = "Let's fight again!" := sorry
  
  theorem alphabet_war_opposing_sides (left right : String)
    (h1 : left.all (λ c => c ∈ ['w', 'p', 'b', 's']))
    (h2 : right.all (λ c => c ∈ ['m', 'q', 'd', 'z'])) :
    alphabet_war (left ++ right) = "Left side wins!" ∨
    alphabet_war (left ++ right) = "Right side wins!" ∨
    alphabet_war (left ++ right) = "Let's fight again!" := sorry
  
  /-
  info: 'Right side wins!'
  -/
  -- #guard_msgs in
  -- #eval alphabet_war "z"
  
  /-
  info: 'Left side wins!'
  -/
  -- #guard_msgs in
  -- #eval alphabet_war "wq"
  
  /-
  info: "Let's fight again!"
  -/
  -- #guard_msgs in
  -- #eval alphabet_war "zdqmwpbs"

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded

