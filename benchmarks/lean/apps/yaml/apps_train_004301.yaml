vc-description: |-
  /-
  You are going to be given a string. Your job is to return that string in a certain order that I will explain below:
  
  Let's say you start with this: `012345`
  
  The first thing you do is reverse it:`543210`  
  Then you will take the string from the 1st position and reverse it again:`501234`  
  Then you will take the string from the 2nd position and reverse it again:`504321`  
  Then you will take the string from the 3rd position and reverse it again:`504123`
  
  Continue this pattern until you have done every single position, and then you will return the string you have created. For this particular number, you would return:`504132`
  
  #Input:
  A string of length 1 - 1000
  
  #Output:
  A correctly reordered string.
  -/

vc-preamble: |-

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def sort (xs : List α) (lt : α → α → Bool) : List α := sorry
  
  def reverse_fun (s : String) : String := sorry

vc-theorems: |-
  theorem length_preserved (s : String) : 
    (reverse_fun s).length = s.length := sorry
  
  theorem same_character_set (s : String) :
    sort (reverse_fun s).data (· ≤ ·) = sort s.data (· ≤ ·) := sorry
  
  theorem not_idempotent (s : String) :
    s.length > 1 → reverse_fun (reverse_fun s) ≠ reverse_fun s := sorry
  
  theorem single_char_invariant (s : String) :
    s.length ≤ 1 → reverse_fun s = s := sorry
  
  theorem first_char_movement (s : String) (h : s.length > 1) :
    (reverse_fun s).get 0 ≠ s.get 0 := sorry
  
  /-
  info: '201'
  -/
  -- #guard_msgs in
  -- #eval reverse_fun "012"
  
  /-
  info: '504132'
  -/
  -- #guard_msgs in
  -- #eval reverse_fun "012345"
  
  /-
  info: 'oHlel'
  -/
  -- #guard_msgs in
  -- #eval reverse_fun "Hello"

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded

