vc-description: |-
  /-
  *Are you a file extension master? Let's find out by checking if Bill's files are images or audio files. Please use regex if available natively for your language.*
  
  You will create 2 string methods:
  
  - **isAudio/is_audio**, matching 1 or + uppercase/lowercase letter(s) (combination possible), with the extension .mp3, .flac, .alac, or .aac.
  
  - **isImage/is_image**, matching 1 or + uppercase/lowercase letter(s) (combination possible), with the extension .jpg, .jpeg, .png, .bmp, or .gif. 
  
  *Note that this is not a generic image/audio files checker. It's meant to be a test for Bill's files only. Bill doesn't like punctuation. He doesn't like numbers, neither. Thus, his filenames are letter-only*
  
  **Rules**
  
  1. It should return true or false, simply.
  2. File extensions should consist of lowercase letters and numbers only.
  3. File names should consist of letters only (uppercase, lowercase, or both)
  
  Good luck!
  -/

vc-preamble: |-

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def is_audio (s : String) : Bool := sorry
  def is_image (s : String) : Bool := sorry

vc-theorems: |-
  theorem valid_audio_files (name : String) (ext : String) 
    (h1 : ∀ c ∈ name.data, c.isAlpha)
    (h2 : ext ∈ ["mp3", "flac", "alac", "aac"]) :
    is_audio (name ++ "." ++ ext) = true := 
  sorry
  
  theorem valid_image_files (name : String) (ext : String)
    (h1 : ∀ c ∈ name.data, c.isAlpha) 
    (h2 : ext ∈ ["jpg", "jpeg", "png", "bmp", "gif"]) :
    is_image (name ++ "." ++ ext) = true :=
  sorry
  
  theorem invalid_uppercase_audio_extensions (name : String) (ext : String)
    (h1 : ∀ c ∈ name.data, c.isAlpha)
    (h2 : ext ∈ ["MP3", "FLAC", "ALAC", "AAC"]) :
    is_audio (name ++ "." ++ ext) = false :=
  sorry
  
  theorem invalid_uppercase_image_extensions (name : String) (ext : String) 
    (h1 : ∀ c ∈ name.data, c.isAlpha)
    (h2 : ext ∈ ["JPG", "PNG", "BMP", "GIF"]) :
    is_image (name ++ "." ++ ext) = false :=
  sorry
  
  theorem invalid_filenames (name : String)
    (h : ∃ c ∈ name.data, c.isDigit ∨ c = '!' ∨ c = '@' ∨ c = '#' ∨ c = '$' ∨ 
         c = '%' ∨ c = '^' ∨ c = '&' ∨ c = '*' ∨ c = '(' ∨ c = ')' ∨ 
         c = '_' ∨ c = ' ') :
    (is_audio (name ++ ".mp3") = false) ∧ 
    (is_image (name ++ ".jpg") = false) :=
  sorry
  
  theorem invalid_extensions (name : String)
    (h : ∀ c ∈ name.data, c.isAlpha) :
    (is_audio (name ++ ".txt") = false) ∧ 
    (is_image (name ++ ".doc") = false) :=
  sorry
  
  theorem empty_or_malformed (s : String)
    (h : s.isEmpty ∨ ¬ ('.' ∈ s.data)) :
    (is_audio s = false) ∧ (is_image s = false) :=
  sorry
  
  /-
  info: True
  -/
  -- #guard_msgs in
  -- #eval is_audio "NothingElseMatters.mp3"
  
  /-
  info: False
  -/
  -- #guard_msgs in
  -- #eval is_audio "DaftPunk.FLAC"
  
  /-
  info: False
  -/
  -- #guard_msgs in
  -- #eval is_audio " Amon Tobin.alac"
  
  /-
  info: True
  -/
  -- #guard_msgs in
  -- #eval is_image "sample.jpg"
  
  /-
  info: False
  -/
  -- #guard_msgs in
  -- #eval is_image "MyPhoto123.png"
  
  /-
  info: False
  -/
  -- #guard_msgs in
  -- #eval is_image "Photo Space.gif"

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded

