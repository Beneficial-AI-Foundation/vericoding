vc-description: |-
  /-
  =====Function Descriptions=====
  floor
  The tool floor returns the floor of the input element-wise.
  The floor of x is the largest integer i where i≤x.
  
  import numpy
  
  my_array = numpy.array([1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8, 9.9])
  print numpy.floor(my_array)         #[ 1.  2.  3.  4.  5.  6.  7.  8.  9.]
  
  ceil
  The tool ceil returns the ceiling of the input element-wise.
  The ceiling of x is the smallest integer i where i≥x.
  
  import numpy
  
  my_array = numpy.array([1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8, 9.9])
  print numpy.ceil(my_array)          #[  2.   3.   4.   5.   6.   7.   8.   9.  10.]
  
  rint
  The rint tool rounds to the nearest integer of input element-wise.
  
  import numpy
  
  my_array = numpy.array([1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8, 9.9])
  print numpy.rint(my_array)          #[  1.   2.   3.   4.   6.   7.   8.   9.  10.]
  
  =====Problem Statement=====
  You are given a 1-D array, A. Your task is to print the floor, ceil and rint of all the elements of A.
  
  =====Input Format=====
  A single line of input containing the space separated elements of array A.
  
  =====Output Format=====
  On the first line, print the floor of A.
  On the second line, print the ceil of A.
  On the third line, print the rint of A.
  -/

vc-preamble: |-
  def array_transforms (input : String) : Array Float × Array Float × Array Float := sorry
  
  def transform_list (numbers : List Float) : Array Float × Array Float × Array Float := sorry

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def int_to_float (n : Int) : Float := sorry
  
  theorem array_transforms_properties {numbers : List Float} (h : numbers.length > 0) :
    let (floor_arr, ceil_arr, rint_arr) := transform_list numbers
    let h_sizes : floor_arr.size = numbers.length ∧ ceil_arr.size = numbers.length ∧ rint_arr.size = numbers.length := by sorry
  
    ∀ i : Fin numbers.length,
      let idx : Nat := i.val
      let h_floor : idx < floor_arr.size := by sorry
      let h_ceil : idx < ceil_arr.size := by sorry
      let h_rint : idx < rint_arr.size := by sorry
  
      -- Properties for each element
      floor_arr[idx]'h_floor ≤ numbers[idx] ∧
      ceil_arr[idx]'h_ceil ≥ numbers[idx] ∧
      floor_arr[idx]'h_floor ≤ rint_arr[idx]'h_rint ∧ 
      rint_arr[idx]'h_rint ≤ ceil_arr[idx]'h_ceil ∧
      ceil_arr[idx]'h_ceil - floor_arr[idx]'h_floor ≤ 1 ∧
      (rint_arr[idx]'h_rint - numbers[idx]).abs ≤ 0.5 := sorry

vc-theorems: |-
  theorem array_transforms_integers (n : Int) :
    let res := array_transforms (toString n)
    let floor_arr := res.1
    let ceil_arr := res.2.1
    let rint_arr := res.2.2
    let h_size : 0 < floor_arr.size := by sorry
  
    floor_arr = ceil_arr ∧
    floor_arr = rint_arr ∧
    floor_arr[0]'h_size = int_to_float n := sorry

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded

