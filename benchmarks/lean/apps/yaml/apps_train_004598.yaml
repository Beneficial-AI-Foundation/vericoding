vc-description: |-
  /-
  Implement a function which multiplies two numbers.
  -/

vc-preamble: |-

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def multiply (x y : Int) : Int := sorry
  
  theorem multiply_commutative (x y : Int) : multiply x y = multiply y x := sorry

vc-theorems: |-
  theorem multiply_identity_right (x : Int) : multiply x 1 = x := sorry
  
  theorem multiply_zero_right (x : Int) : multiply x 0 = 0 := sorry
  
  theorem multiply_negative_one (x : Int) : multiply x (-1) = -x := sorry
  
  theorem multiply_distributive (x y z : Int) :
    multiply x (y + z) = multiply x y + multiply x z := sorry
  
  theorem multiply_identity_left (x : Int) : multiply 1 x = x := sorry
  
  theorem multiply_zero_left (x : Int) : multiply 0 x = 0 := sorry
  
  /-
  info: 6
  -/
  -- #guard_msgs in
  -- #eval multiply 2 3
  
  /-
  info: 0
  -/
  -- #guard_msgs in
  -- #eval multiply 0 5
  
  /-
  info: -8
  -/
  -- #guard_msgs in
  -- #eval multiply -2 4

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded

