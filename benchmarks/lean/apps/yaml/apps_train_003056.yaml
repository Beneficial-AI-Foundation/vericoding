vc-description: |-
  /-
  ## Number pyramid
  
  Number pyramid is a recursive structure where each next row is constructed by adding adjacent values of the current row. For example:
  
  ```
  Row 1     [1     2     3     4]
  Row 2        [3     5     7]
  Row 3           [8    12]
  Row 4             [20]
  ```
  
  ___
  
  ## Task
  
  Given the first row of the number pyramid, find the value stored in its last row.
  
  ___
  
  ## Examples
  
  ```python
  reduce_pyramid([1])        ==  1
  reduce_pyramid([3, 5])     ==  8
  reduce_pyramid([3, 9, 4])  ==  25
  ```
  
  ___
  
  ## Performance tests
  
  ```python
  Number of tests: 10
  List size: 10,000
  ```
  -/

vc-preamble: |-
  def reducePyramid (base : List Int) : Int :=
    sorry

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def referencePyramidReduce (base : List Int) : Int :=
    sorry

vc-theorems: |-
  theorem matches_reference_implementation {base : List Int} 
    (h : base.length > 0 ∧ base.length ≤ 10) :
    reducePyramid base = referencePyramidReduce base :=
  sorry
  
  theorem single_element {base : List Int} 
    (h : base.length = 1) :
    reducePyramid base = base.get ⟨0, sorry⟩ :=
  sorry
  
  theorem two_elements {base : List Int} 
    (h : base.length = 2) :
    reducePyramid base = base.get ⟨0, sorry⟩ + base.get ⟨1, sorry⟩ :=
  sorry 
  
  theorem singleton_list (x : Int) :
    reducePyramid [x] = x :=
  sorry
  
  /-
  info: 1
  -/
  -- #guard_msgs in
  -- #eval reduce_pyramid [1]
  
  /-
  info: 8
  -/
  -- #guard_msgs in
  -- #eval reduce_pyramid [3, 5]
  
  /-
  info: 25
  -/
  -- #guard_msgs in
  -- #eval reduce_pyramid [3, 9, 4]

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: guarded

