vc-description: |-
  /-
  Given a number return the closest number to it that is divisible by 10.
  
  Example input:
  
  ```
  22
  25
  37
  ```
  
  Expected output:
  
  ```
  20
  30
  40
  ```
  -/

vc-preamble: |-
  def abs (x : Int) : Int := 
    if x ≥ 0 then x else -x

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def closestMultiple10 (x : Int) : Int := sorry
  
  theorem result_is_multiple_of_10 (x : Int) :
    (closestMultiple10 x) % 10 = 0 := sorry

vc-theorems: |-
  theorem closest_multiple_property (x : Int) :
    abs (x - closestMultiple10 x) ≤ abs (x - (closestMultiple10 x + 10)) ∧ 
    abs (x - closestMultiple10 x) ≤ abs (x - (closestMultiple10 x - 10)) := sorry
  
  theorem halfway_rounds_up (x : Int) :
    closestMultiple10 (x * 10 + 5) = ((x * 10 + 5) / 10 + 1) * 10 := sorry
  
  theorem result_within_5 (x : Int) :
    abs (x - closestMultiple10 x) ≤ 5 := sorry
  
  /-
  info: 20
  -/
  -- #guard_msgs in
  -- #eval closest_multiple_10 22
  
  /-
  info: 30
  -/
  -- #guard_msgs in
  -- #eval closest_multiple_10 25
  
  /-
  info: 40
  -/
  -- #guard_msgs in
  -- #eval closest_multiple_10 37

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: guarded

