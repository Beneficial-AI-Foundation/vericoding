vc-description: |-
  /-
  Given a string, you need to reverse the order of characters in each word within a sentence while still preserving whitespace and initial word order.
  
  Example 1:
  
  Input: "Let's take LeetCode contest"
  Output: "s'teL ekat edoCteeL tsetnoc"
  
  Note:
  In the string, each word is separated by single space and there will not be any extra space in the string.
  -/

vc-preamble: |-

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def reverseWords (s : String) : String := sorry
  
  theorem reverse_words_maintains_word_count {words : List String} (s : String) 
      (h : s = String.intercalate " " words) (h2 : ∀ w ∈ words, w.length > 0) : 
      (reverseWords s).splitOn.length = s.splitOn.length := sorry

vc-theorems: |-
  theorem reverse_words_maintains_word_length {words : List String} (s : String)
      (h : s = String.intercalate " " words) (h2 : ∀ w ∈ words, w.length > 0) :
      ∀ (orig rev : String), orig ∈ s.splitOn → rev ∈ (reverseWords s).splitOn →
      orig.length = rev.length := sorry
  
  theorem double_reverse_is_identity (s : String) (h : s.length > 0) :
      reverseWords (reverseWords s) = s := sorry
  
  theorem reverse_words_empty :
      reverseWords "" = "" := sorry

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: guarded

