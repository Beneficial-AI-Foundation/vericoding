vc-description: |-
  /-
  You start with a value in dollar form, e.g. $5.00. You must convert this value to a string in which the value is said, like '5 dollars' for example. This should account for ones, cents, zeroes, and negative values. Here are some examples:
  ```python
  dollar_to_speech('$0.00') == '0 dollars.'
  dollar_to_speech('$1.00') == '1 dollar.'
  dollar_to_speech('$0.01') == '1 cent.'
  dollar_to_speech('$5.00') == '5 dollars.'
  dollar_to_speech('$20.18') == '20 dollars and 18 cents.'
  dollar_to_speech('$-1.00') == 'No negative numbers are allowed!'
  ```
  These examples account for pretty much everything. This kata has many specific outputs, so good luck!
  -/

vc-preamble: |-
  def dollar_to_speech (s : String) : String := sorry
  
  def String.containsStr (s₁ s₂ : String) : Bool := sorry

vc-helpers: |-

vc-definitions: |-
  def formatDollarString (d c : Nat) : String :=
    s!"${d}.{c}"

vc-theorems: |-
  theorem dollar_to_speech_ends_with_period (d c : Nat) (h : c < 100) :
    (dollar_to_speech (formatDollarString d c)).endsWith "." := sorry
  
  theorem dollar_to_speech_single_dollar (d c : Nat) (h : c < 100)
      (s := formatDollarString d c) (h₂ : d = 1) :
    (dollar_to_speech s).containsStr "1 dollar" ∧
    ¬(dollar_to_speech s).containsStr "dollars" := sorry
  
  theorem dollar_to_speech_multiple_dollars (d c : Nat) (h : c < 100)
      (s := formatDollarString d c) (h₂ : d > 1) :
    (dollar_to_speech s).containsStr s!"{d} dollars" := sorry
  
  theorem dollar_to_speech_single_cent (d c : Nat) (h : c < 100)
      (s := formatDollarString d c) (h₂ : c = 1) :
    (dollar_to_speech s).containsStr "1 cent" ∧
    ¬(dollar_to_speech s).containsStr "cents" := sorry
  
  theorem dollar_to_speech_multiple_cents (d c : Nat) (h : c < 100)
      (s := formatDollarString d c) (h₂ : c > 1) :
    (dollar_to_speech s).containsStr s!"{c} cents" := sorry
  
  theorem dollar_to_speech_and_connector (d c : Nat) (h : c < 100)
      (s := formatDollarString d c) :
    (d > 0 ∧ c > 0) ↔ (dollar_to_speech s).containsStr " and " := sorry
  
  /-
  info: '0 dollars.'
  -/
  -- #guard_msgs in
  -- #eval dollar_to_speech "$0.00"
  
  /-
  info: '1 dollar.'
  -/
  -- #guard_msgs in
  -- #eval dollar_to_speech "$1.00"
  
  /-
  info: '20 dollars and 18 cents.'
  -/
  -- #guard_msgs in
  -- #eval dollar_to_speech "$20.18"
  
  /-
  info: 'No negative numbers are allowed!'
  -/
  -- #guard_msgs in
  -- #eval dollar_to_speech "$-5.00"

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded

