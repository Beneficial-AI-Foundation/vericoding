vc-description: |-
  /-
  Given an integer n, return a string with n characters such that each character in such string occurs an odd number of times.
  The returned string must contain only lowercase English letters. If there are multiples valid strings, return any of them.  
  
  Example 1:
  Input: n = 4
  Output: "pppz"
  Explanation: "pppz" is a valid string since the character 'p' occurs three times and the character 'z' occurs once. Note that there are many other valid strings such as "ohhh" and "love".
  
  Example 2:
  Input: n = 2
  Output: "xy"
  Explanation: "xy" is a valid string since the characters 'x' and 'y' occur once. Note that there are many other valid strings such as "ag" and "ur".
  
  Example 3:
  Input: n = 7
  Output: "holasss"
  
  Constraints:
  
  1 <= n <= 500
  -/

vc-preamble: |-

vc-helpers: |-

vc-definitions: |-
  def generate_odd_char_string (n : Nat) : String := sorry
  
  def String.countChar (s : String) (c : Char) : Nat := sorry

vc-theorems: |-
  theorem length_matches_input (n : Nat) (h : 0 < n) (h2 : n ≤ 1000) : 
    (generate_odd_char_string n).length = n := sorry
  
  theorem chars_appear_odd_times (n : Nat) (h : 0 < n) (h2 : n ≤ 1000) (c : Char) :
    c ∈ (generate_odd_char_string n).data → 
    (String.countChar (generate_odd_char_string n) c) % 2 = 1 := sorry
  
  theorem uses_valid_chars (n : Nat) (h : 0 < n) (h2 : n ≤ 1000) (c : Char) :
    c ∈ (generate_odd_char_string n).data →
    c = 'a' ∨ c = 'b' ∨ c = 'c' := sorry
  
  theorem single_char_case :
    generate_odd_char_string 1 = "a" := sorry
  
  theorem string_structure (n : Nat) (h : 0 < n) (h2 : n ≤ 1000) :
    (n = 1 → generate_odd_char_string n = "a") ∧
    (n % 2 = 0 → generate_odd_char_string n = String.mk (List.replicate (n-1) 'a' ++ ['b'])) ∧
    (n ≠ 1 ∧ n % 2 = 1 → generate_odd_char_string n = String.mk (List.replicate (n-2) 'a' ++ ['b', 'c'])) := sorry
  
  /-
  info: 4
  -/
  -- #guard_msgs in
  -- #eval len generate_odd_char_string(4)
  
  /-
  info: 2
  -/
  -- #guard_msgs in
  -- #eval len generate_odd_char_string(2)
  
  /-
  info: 7
  -/
  -- #guard_msgs in
  -- #eval len generate_odd_char_string(7)

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded

