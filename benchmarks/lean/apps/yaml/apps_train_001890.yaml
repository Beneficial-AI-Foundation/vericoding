vc-description: |-
  /-
  We have two types of tiles: a 2x1 domino shape, and an "L" tromino shape. These shapes may be rotated.
  
  XX  <- domino
  
  XX  <- "L" tromino
  X
  
  Given N, how many ways are there to tile a 2 x N board? Return your answer modulo 10^9 + 7.
  
  (In a tiling, every square must be covered by a tile. Two tilings are different if and only if there are two 4-directionally adjacent cells on the board such that exactly one of the tilings has both squares occupied by a tile.)
  
  Example:
  Input: 3
  Output: 5
  Explanation: 
  The five different ways are listed below, different letters indicates different tiles:
  XYZ XXZ XYY XXY XYY
  XYZ YYZ XZZ XYY XXY
  
  Note:
  
         N  will be in range [1, 1000].
  -/

vc-preamble: |-

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def num_tilings (n : Int) : Int := sorry
  
  theorem num_tilings_base_cases : 
    num_tilings 1 = 1 ∧ num_tilings 2 = 2 := sorry

vc-theorems: |-
  theorem num_tilings_small_sequence :
    num_tilings 1 = 1 ∧
    num_tilings 2 = 2 ∧
    num_tilings 3 = 5 ∧
    num_tilings 4 = 11 := sorry
  
  /-
  info: 5
  -/
  -- #guard_msgs in
  -- #eval num_tilings 3
  
  /-
  info: 1
  -/
  -- #guard_msgs in
  -- #eval num_tilings 1
  
  /-
  info: 11
  -/
  -- #guard_msgs in
  -- #eval num_tilings 4

vc-postamble: |-
  -- Apps difficulty: interview
  -- Assurance level: guarded_and_plausible

