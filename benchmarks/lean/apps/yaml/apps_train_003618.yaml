vc-description: |-
  /-
  This kata is part of the collection [Mary's Puzzle Books](https://www.codewars.com/collections/marys-puzzle-books).
  
  # Zero Terminated Sum
  
  Mary has another puzzle book, and it's up to you to help her out! This book is filled with zero-terminated substrings, and you have to find the substring with the largest sum of its digits. For example, one puzzle looks like this:
  ```
  "72102450111111090"
  ```
  Here, there are 4 different substrings: `721`, `245`, `111111`, and `9`. The sums of their digits are `10`, `11`, `6`, and `9` respectively. Therefore, the substring with the largest sum of its digits is `245`, and its sum is `11`.
  
  Write a function `largest_sum` which takes a string and returns the maximum of the sums of the substrings. In the example above, your function should return `11`.
  
  ### Notes:
  
  - A substring can have length 0. For example, `123004560` has three substrings, and the middle one has length 0.
  - All inputs will be valid strings of digits, and the last digit will always be `0`.
  -/

vc-preamble: |-

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def largest_sum (s : String) : Nat :=
    sorry

vc-theorems: |-
  theorem empty_and_zero :
    largest_sum "" = 0 ∧
    largest_sum "0" = 0 ∧
    largest_sum "00" = 0 := sorry
  
  theorem repeated_digit_sum (n : Nat) (d : Nat) 
    (h1 : n > 0) (h2 : n ≤ 10) (h3 : d > 0) (h4 : d ≤ 9) :
    largest_sum (String.join (List.replicate n (toString d))) = n * d := sorry
  
  /-
  info: 11
  -/
  -- #guard_msgs in
  -- #eval largest_sum "72102450111111090"
  
  /-
  info: 15
  -/
  -- #guard_msgs in
  -- #eval largest_sum "123004560"
  
  /-
  info: 0
  -/
  -- #guard_msgs in
  -- #eval largest_sum "0"

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: guarded_and_plausible

