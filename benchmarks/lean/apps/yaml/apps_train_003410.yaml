vc-description: |-
  /-
  # Task
  
  Determine the client's membership level based on the invested `amount` of money and the given thresholds for membership levels.
  
  There are four membership levels (from highest to lowest): `Platinum, Gold, Silver, Bronze`
  
  The minimum investment is the threshold limit for `Bronze` membership. If the given amount is less than the `Bronze` treshold limit return `Not a member`.
  
  A client belongs to a membership level when his invested amount is greater than or equal the level's threshold amount.
  
  # Examples:
  ```
  |--------+----------+------+--------+--------+--------------+------------------|
  | Amount | Platinum | Gold | Silver | Bronze | Result       | Explanations     |
  |--------+----------+------+--------+--------+--------------+------------------|
  |   7000 |    10000 | 8000 |   6000 |   4000 | Silver       | Amount >= Silver |
  |   3000 |    10000 | 8000 |   6000 |   5000 | Not a member | Amount < Bronze  |
  |   8000 |    12000 | 8000 |   7000 |   5000 | Gold         | Amount >= Gold   |
  |--------+----------+------+--------+--------+--------------+------------------|
  ```
  
  # Restrictions
  
  1. The first line of your code has to be `def membership(amount, platinum, gold, silver, bronze):`
  2. Your code except for the firt line mustn't contain the words `platinum, gold, silver, bronze` or they reversed forms (e.g. `dlog`) or any string which contains these words or they reversed forms. (The check is **case-insensitive**.)
  3. Must not contain: `+, %, {, }`.
  
  # Disclaimer
  
  This kata is about creativity not proper coding style. Your colleagues/boss won't like you if you make production code like this. :)
  
  #### Don't forget to rate the kata after you finish it. :)
  
  Happy coding!
  
  suic
  -/

vc-preamble: |-

vc-helpers: |-

vc-definitions: |-
  def membership (amount platinum gold silver bronze : Nat) : String := sorry 
  
  theorem membership_result_valid (amount platinum gold silver bronze : Nat)
    (h_thresholds : platinum > gold ∧ gold > silver ∧ silver > bronze) :
    membership amount platinum gold silver bronze = "Platinum" ∨ 
    membership amount platinum gold silver bronze = "Gold" ∨
    membership amount platinum gold silver bronze = "Silver" ∨ 
    membership amount platinum gold silver bronze = "Bronze" ∨
    membership amount platinum gold silver bronze = "Not a member" := sorry

vc-theorems: |-
  theorem membership_platinum (amount platinum gold silver bronze : Nat)
    (h_thresholds : platinum > gold ∧ gold > silver ∧ silver > bronze)
    (h_amount : amount ≥ platinum) :
    membership amount platinum gold silver bronze = "Platinum" := sorry
  
  theorem membership_gold (amount platinum gold silver bronze : Nat)
    (h_thresholds : platinum > gold ∧ gold > silver ∧ silver > bronze)
    (h_amount : amount ≥ gold ∧ amount < platinum) :
    membership amount platinum gold silver bronze = "Gold" := sorry
  
  theorem membership_silver (amount platinum gold silver bronze : Nat)
    (h_thresholds : platinum > gold ∧ gold > silver ∧ silver > bronze)
    (h_amount : amount ≥ silver ∧ amount < gold) :
    membership amount platinum gold silver bronze = "Silver" := sorry
  
  theorem membership_bronze (amount platinum gold silver bronze : Nat)
    (h_thresholds : platinum > gold ∧ gold > silver ∧ silver > bronze)
    (h_amount : amount ≥ bronze ∧ amount < silver) :
    membership amount platinum gold silver bronze = "Bronze" := sorry
  
  theorem membership_none (amount platinum gold silver bronze : Nat)
    (h_thresholds : platinum > gold ∧ gold > silver ∧ silver > bronze)
    (h_amount : amount < bronze) :
    membership amount platinum gold silver bronze = "Not a member" := sorry
  
  theorem threshold_ordering (platinum gold silver bronze : Nat)
    (h_platinum : platinum ≥ 1000000) (h_platinum_max : platinum ≤ 10000000)
    (h_gold : gold ≥ 100000) (h_silver : silver ≥ 10000) (h_bronze : bronze ≥ 1000) :
    platinum > gold ∧ gold > silver ∧ silver > bronze := sorry
  
  /-
  info: 'Gold'
  -/
  -- #guard_msgs in
  -- #eval membership 100000 1000000 100000 10000 1000
  
  /-
  info: 'Bronze'
  -/
  -- #guard_msgs in
  -- #eval membership 1001 1000000 100000 10000 1000
  
  /-
  info: 'Not a member'
  -/
  -- #guard_msgs in
  -- #eval membership 998 1000000 100000 10000 1000

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded

