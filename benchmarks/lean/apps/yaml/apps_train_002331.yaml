vc-description: |-
  /-
  We define a harmonious array is an array where the difference between its maximum value and its minimum value is exactly 1.
  
  Now, given an integer array, you need to find the length of its longest harmonious subsequence among all its possible subsequences.
  
  Example 1:
  
  Input: [1,3,2,2,5,2,3,7]
  Output: 5
  Explanation: The longest harmonious subsequence is [3,2,2,2,3].
  
  Note:
  The length of the input array will not exceed 20,000.
  -/

vc-preamble: |-

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def find_longest_harmonious_subsequence (nums : List Int) : Nat :=
    sorry

vc-theorems: |-
  theorem find_longest_harmonious_subsequence_non_negative (nums : List Int) :
    find_longest_harmonious_subsequence nums ≥ 0 :=
  sorry
  
  theorem find_longest_harmonious_subsequence_leq_length (nums : List Int) :
    find_longest_harmonious_subsequence nums ≤ nums.length :=
  sorry
  
  theorem find_longest_harmonious_subsequence_empty (nums : List Int) :
    nums = [] → find_longest_harmonious_subsequence nums = 0 :=
  sorry
  
  /-
  info: 5
  -/
  -- #guard_msgs in
  -- #eval find_longest_harmonious_subsequence [1, 3, 2, 2, 5, 2, 3, 7]
  
  /-
  info: 2
  -/
  -- #guard_msgs in
  -- #eval find_longest_harmonious_subsequence [1, 2, 3, 4]
  
  /-
  info: 0
  -/
  -- #guard_msgs in
  -- #eval find_longest_harmonious_subsequence [1, 1, 1, 1]

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: guarded_and_plausible

