vc-description: |-
  /-
  A permutation p of size n is the sequence p_1, p_2, ..., p_{n}, consisting of n distinct integers, each of them is from 1 to n (1 ≤ p_{i} ≤ n).
  
  A lucky permutation is such permutation p, that any integer i (1 ≤ i ≤ n) meets this condition p_{p}_{i} = n - i + 1.
  
  You have integer n. Find some lucky permutation p of size n.
  
  -----Input-----
  
  The first line contains integer n (1 ≤ n ≤ 10^5) — the required permutation size.
  
  -----Output-----
  
  Print "-1" (without the quotes) if the lucky permutation p of size n doesn't exist.
  
  Otherwise, print n distinct integers p_1, p_2, ..., p_{n} (1 ≤ p_{i} ≤ n) after a space — the required permutation.
  
  If there are multiple answers, you can print any of them.
  
  -----Examples-----
  Input
  1
  
  Output
  1 
  
  Input
  2
  
  Output
  -1
  
  Input
  4
  
  Output
  2 4 1 3 
  
  Input
  5
  
  Output
  2 5 3 1 4
  -/

vc-preamble: |-

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def find_lucky_permutation (n : Nat) : Option (List Nat) := sorry
  
  theorem length_property {n : Nat} {result : List Nat} 
    (h : find_lucky_permutation n = some result) : 
      result.length = n ∧ 
      (∃ m, result.minimum? = some m ∧ m = 1) ∧
      (∃ m, result.maximum? = some m ∧ m = n) ∧
      (∀ x ∈ result, ∀ y ∈ result, x = y → result.find? (·= x) = result.find? (·= y)) := sorry

vc-theorems: |-
  theorem negative_cases :
    find_lucky_permutation 2 = none ∧ 
    find_lucky_permutation 3 = none ∧
    find_lucky_permutation 6 = none ∧
    find_lucky_permutation 7 = none := sorry
  
  theorem small_valid_cases :
    find_lucky_permutation 1 = some [1] ∧
    (∃ result, find_lucky_permutation 4 = some result ∧ 
      result.length = 4 ∧
      (∃ l, l = [1,2,3,4] ∧ ∀ x ∈ result, x ∈ l)) := sorry
  
  theorem divisibility_rule {n : Nat} 
    (h : n % 4 > 1) :
    find_lucky_permutation n = none := sorry
  
  /-
  info: [1]
  -/
  -- #guard_msgs in
  -- #eval find_lucky_permutation 1
  
  /-
  info: -1
  -/
  -- #guard_msgs in
  -- #eval find_lucky_permutation 2
  
  /-
  info: [2, 4, 1, 3]
  -/
  -- #guard_msgs in
  -- #eval find_lucky_permutation 4

vc-postamble: |-
  -- Apps difficulty: competition
  -- Assurance level: unguarded

