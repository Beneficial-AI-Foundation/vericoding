vc-description: |-
  /- 
  -----Description-----
  This task involves determining whether every character in a provided string is a digit. The objective is to check if all characters fall within the standard digit range, returning true if they do and false otherwise.
  
  -----Input-----
  The input consists of:
  • s: A string whose characters will be analyzed to determine if they are all digits.
  
  -----Output-----
  The output is a boolean value:
  • true if every character in the string is a digit;
  • false if at least one character is not a digit (note that the empty string returns true).
  
  -----Note-----
  It is assumed that the input is a well-formed string. The function uses an iterator to examine every character.
  -/

vc-preamble: |-
  @[reducible, simp]
  def allDigits_precond (s : String) : Prop :=
    True

vc-helpers: |-
  -- <vc-helpers>
  def isDigit (c : Char) : Bool :=
    (c ≥ '0') && (c ≤ '9')
  -- </vc-helpers>

vc-signature: |-
  def allDigits (s : String) (h_precond : allDigits_precond (s)) : Bool :=

vc-implementation: |-
  -- <vc-implementation>
    sorry
  -- </vc-implementation>

vc-condition: |-
  @[reducible, simp]
  def allDigits_postcond (s : String) (result: Bool) (h_precond : allDigits_precond (s)) :=
    (result = true ↔ ∀ c ∈ s.toList, isDigit c)
  
  theorem allDigits_spec_satisfied (s: String) (h_precond : allDigits_precond (s)) :
      allDigits_postcond (s) (allDigits (s) h_precond) h_precond := by

vc-proof: |-
  -- <vc-proof>
    sorry
  -- </vc-proof>

vc-postamble: |-
  /-
  -- Invalid Inputs
  []
  -- Tests
  [
      {
          "input": {
              "s": "123456"
          },
          "expected": true,
          "unexpected": [false]
      },
      {
          "input": {
              "s": "123a56"
          },
          "expected": false,
          "unexpected": [true]
      },
      {
          "input": {
              "s": ""
          },
          "expected": true,
          "unexpected": [false]
      },
      {
          "input": {
              "s": "007"
          },
          "expected": true,
          "unexpected": [false]
      },
      {
          "input": {
              "s": "98 76"
          },
          "expected": false,
          "unexpected": [true]
      }
  ]
  -/

