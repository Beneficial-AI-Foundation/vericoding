vc-description: |-
  /- 
  -----Description-----
  This task requires writing a Lean 4 method that determines whether a given non-negative natural number is a perfect square. In other words, the method should return true if there exists a natural number whose square is equal to the input number, and false if no such number exists.
  
  -----Input-----
  The input consists of a single natural number:
  n: A non-negative natural number (Nat).
  
  -----Output-----
  The output is a Boolean value:
  Returns true if there exists an integer such that its square equals the input n.
  Returns false if no integer squared equals the input n.
  -/

vc-preamble: |-
  import Mathlib
  
  @[reducible, simp]
  def isPerfectSquare_precond (n : Nat) : Prop :=
    True

vc-helpers: |-

vc-definitions: |-
  def isPerfectSquare (n : Nat) : Bool :=
    sorry

vc-theorems: |-
  @[reducible, simp]
  def isPerfectSquare_postcond (n : Nat) (result : Bool) : Prop :=
    result ↔ ∃ i : Nat, i * i = n
  
  theorem isPerfectSquare_spec_satisfied (n : Nat) :
      isPerfectSquare_postcond n (isPerfectSquare n) := by
    sorry

vc-postamble: |-
  /-
  -- Invalid Inputs
  []
  -- Tests
  [
      {
          "input": {
              "n": 0
          },
          "expected": true,
          "unexpected": [
              false
          ]
      },
      {
          "input": {
              "n": 1
          },
          "expected": true,
          "unexpected": [
              false
          ]
      },
      {
          "input": {
              "n": 4
          },
          "expected": true,
          "unexpected": [
              false
          ]
      },
      {
          "input": {
              "n": 9
          },
          "expected": true,
          "unexpected": [
              false
          ]
      },
      {
          "input": {
              "n": 2
          },
          "expected": false,
          "unexpected": [
              true
          ]
      },
      {
          "input": {
              "n": 3
          },
          "expected": false,
          "unexpected": [
              true
          ]
      },
      {
          "input": {
              "n": 10
          },
          "expected": false,
          "unexpected": [
              true
          ]
      },
      {
          "input": {
              "n": 16
          },
          "expected": true,
          "unexpected": [
              false
          ]
      },
      {
          "input": {
              "n": 25
          },
          "expected": true,
          "unexpected": [
              false
          ]
      },
      {
          "input": {
              "n": 26
          },
          "expected": false,
          "unexpected": [
              true
          ]
      }
  ]
  -/

