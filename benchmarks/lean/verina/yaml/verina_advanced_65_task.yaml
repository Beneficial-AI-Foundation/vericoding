vc-description: |-
  /- 
  -----Description-----
  This task requires writing a Lean 4 method that reverses a given string. The method should return a new string which consists of the characters of the input string in reverse order.
  
  -----Input-----
  The input consists of:
  s: A string (which may be empty).
  
  -----Output-----
  The output is a string:
  Returns a string where the characters are in reverse order from the original input.
  -/

vc-preamble: |-
  @[reducible]
  def reverseString_precond (s : String) : Prop :=
    True

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-signature: |-
  def reverseString (s : String) (h_precond : reverseString_precond (s)) : String :=

vc-implementation: |-
  -- <vc-implementation>
    sorry
  -- </vc-implementation>

vc-condition: |-
  @[reducible]
  def reverseString_postcond (s : String) (result: String) (h_precond : reverseString_precond (s)) : Prop :=
    result.length = s.length âˆ§ result.toList = s.toList.reverse
  
  theorem reverseString_spec_satisfied (s: String) (h_precond : reverseString_precond (s)) :
      reverseString_postcond (s) (reverseString (s) h_precond) h_precond := by

vc-proof: |-
  -- <vc-proof>
    sorry
  -- </vc-proof>

vc-postamble: |-
  /-
  -- Invalid Inputs
  []
  -- Tests
  [
      {
          "input": {
              "s": "hello"
          },
          "expected": "olleh",
          "unexpected": [
              "hello",
              "helo",
              "hell"
          ]
      },
      {
          "input": {
              "s": "a"
          },
          "expected": "a",
          "unexpected": [
              "",
              "aa"
          ]
      },
      {
          "input": {
              "s": ""
          },
          "expected": "",
          "unexpected": [
              " ",
              "a"
          ]
      },
      {
          "input": {
              "s": "racecar"
          },
          "expected": "racecar",
          "unexpected": [
              "rceacar",
              "raeccar"
          ]
      },
      {
          "input": {
              "s": "Lean"
          },
          "expected": "naeL",
          "unexpected": [
              "Lean",
              "aenL"
          ]
      }
  ]
  -/

