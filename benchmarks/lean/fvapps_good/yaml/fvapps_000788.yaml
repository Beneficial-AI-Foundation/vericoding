vc-description: |-
  /-
  One day Chef was playing with numbers. He loves Lowest Common Multiple (LCM) too much and he is a very curious guy. He always try to do new things. Now he want to make a large number with it. But he doesn't want to take too many numbers.

  He is willing to take only three numbers less than or equal to N (not necessarily distinct ) and from those three number he want get the maximum number by taking LCM of the numbers.

  As he is busy in playing some more tricks of maths, he assign this task to you.

  -----Input-----
  First line of input contains an integer t ( t<=1000 ), Number of test cases.

  t line follows an integer N

  -----Output-----
  Print t lines contains a single integer — the maximum possible LCM of three not necessarily distinct positive integers that are not greater than N.

  -----Constraints-----
  1<= N <= 10^6

  -----Example-----
  Input:
  2
  9
  7

  Output:
  504
  210

  -----Explanation-----
  Example case 2. For the last example, we can chose numbers 7, 6, 5 and the LCM of them is 7•6•5 = 210. It is the maximum value we can get.
  -/

vc-preamble: |

vc-helpers: |

vc-definitions: |-
  def max_lcm_three_nums (n: Nat) : Nat := sorry

  def lcm (a b: Nat) : Nat := sorry

vc-theorems: |-
  theorem small_cases :
    max_lcm_three_nums 1 = 1 ∧ 
    max_lcm_three_nums 2 = 2 ∧
    max_lcm_three_nums 3 = 6 := sorry

vc-postamble: |-
  -- Apps difficulty: interview
  -- Assurance level: guarded_and_plausible

  /--
  info: 504
  -/
  #guard_msgs in
  #eval max_lcm_three_nums 9

  /--
  info: 210
  -/
  #guard_msgs in
  #eval max_lcm_three_nums 7

  /--
  info: 6
  -/
  #guard_msgs in
  #eval max_lcm_three_nums 3

