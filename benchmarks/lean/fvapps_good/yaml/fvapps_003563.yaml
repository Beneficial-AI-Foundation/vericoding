vc-description: |-
  /-
  ```if-not:swift
  Write simple .camelCase method (`camel_case` function in PHP, `CamelCase` in C# or `camelCase` in Java) for strings. All words must have their first letter capitalized without spaces.
  ```
  ```if:swift
  Write a simple `camelCase` function for strings. All words must have their first letter capitalized and all spaces removed.
  ```
  For instance:

  ```python
  camelcase("hello case") => HelloCase
  camelcase("camel case word") => CamelCaseWord
  ```
  ```c#
  using Kata;

  "hello case".CamelCase(); // => "HelloCase"
  "camel case word".CamelCase(); // => "CamelCaseWord"
  ```

  Don't forget to rate this kata! Thanks :)
  -/

vc-preamble: |

vc-helpers: |

vc-definitions: |-
  def camel_case (s : String) : String := sorry

  theorem camel_case_no_spaces (s : String) : 
    ∀ (i : String.Pos), (camel_case s).get i ≠ ' ' := sorry

vc-theorems: |-
  theorem camel_case_preserves_length (s : String) :
    String.length (camel_case s) = String.length (s.replace " " "") := sorry

  theorem camel_case_single_word (s : String) (h : s ≠ "") :
    match (camel_case s).get? 0, s.get? 0 with
    | some c₁, some c₂ => c₁ = Char.toUpper c₂
    | _, _ => True
    := sorry

  theorem camel_case_only_spaces (s : String) 
    (h : ∀ (i : String.Pos), s.get i = ' ') :
    camel_case s = "" := sorry

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded

  /-
  info: 'TestCase'
  -/
  #guard_msgs in
  #eval camel_case "test case"

  /-
  info: 'CamelCaseMethod'
  -/
  #guard_msgs in
  #eval camel_case "camel case method"

  /-
  info: 'SayHello'
  -/
  #guard_msgs in
  #eval camel_case "say hello "

