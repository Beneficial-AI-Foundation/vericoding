vc-description: |-
  /-
  Move every letter in the provided string forward 10 letters through the alphabet.

  If it goes past 'z', start again at 'a'.

  Input will be a string with length > 0.
  -/

vc-preamble: |

vc-helpers: |

vc-definitions: |-
  def move_ten (s : String) : String := sorry

  def isLower (c : Char) : Bool := sorry

vc-theorems: |-
  theorem move_ten_preserves_length (s : String) : 
    (move_ten s).length = s.length := sorry

  theorem move_ten_keeps_lowercase (s : String) :
    ∀ c, c ∈ (move_ten s).data → isLower c := sorry 

  theorem move_ten_reversible (s : String) :
    ∃ f : String → String, f (move_ten s) = s := sorry

  theorem move_ten_idempotent (s : String) :
    move_ten (move_ten s) = move_ten s := sorry

  theorem move_ten_homomorphic (s₁ s₂ : String) :
    move_ten (s₁ ++ s₂) = move_ten s₁ ++ move_ten s₂ := sorry

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded

  /-
  info: 'docdmkco'
  -/
  #guard_msgs in
  #eval move_ten "testcase"

  /-
  info: 'mynogkbc'
  -/
  #guard_msgs in
  #eval move_ten "codewars"

  /-
  info: 'goxoonkxyppsmonyq'
  -/
  #guard_msgs in
  #eval move_ten "weneedanofficedog"

