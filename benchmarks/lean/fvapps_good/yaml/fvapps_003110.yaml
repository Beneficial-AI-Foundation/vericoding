vc-description: |-
  /-
  We want an array, but not just any old array, an array with contents!

  Write a function that produces an array with the numbers `0` to `N-1` in it.

  For example, the following code will result in an array containing the numbers `0` to `4`:

  ```
  arr(5) // => [0,1,2,3,4]
  ```
  -/

vc-preamble: |

vc-helpers: |

vc-definitions: |-
  def arr : Nat → List Nat
  | n => sorry

vc-theorems: |-
  theorem arr_length (n : Nat) : (arr n).length = n := sorry

  theorem arr_sequence (n : Nat) (i : Nat) (h : i < n) : 
    (arr n).get ⟨i, by rw [arr_length n]; exact h⟩ = i := sorry 

  theorem arr_empty : arr 0 = [] := sorry

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: guarded_and_plausible

  /-
  info: [0, 1, 2, 3]
  -/
  #guard_msgs in
  #eval arr 4

  /-
  info: []
  -/
  #guard_msgs in
  #eval arr 0

  /-
  info: [0, 1]
  -/
  #guard_msgs in
  #eval arr 2

