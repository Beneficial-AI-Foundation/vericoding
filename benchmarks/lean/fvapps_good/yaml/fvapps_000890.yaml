vc-description: |-
  /-
  Chef was bored staying at home in the lockdown. He wanted to go out for a change. Chef and Chefu are fond of eating Cakes,so they decided to go the Cake shop where cakes of all possible price are available .
  They decided to purchase cakes of equal price and each of them will pay for their cakes. Chef only has coins of denomination $N$ whereas Chefu has that of denomination $M$.
  So they want your help to find out the minimum amount to be spent in order to purchase the cakes.

  -----Input:-----
  - First line will contain $T$, number of testcases. Then the testcases follow. 
  - Each testcase contains of a single line of input, two integers $N, M$. 

  -----Output:-----
  For each testcase, output in a single line answer the minimum amount to be spent in order to purchase the cake.

  -----Constraints-----
  - $1 \leq T \leq 1000$
  - $2 \leq N,M \leq 10^7$

  -----Sample Input:-----
  1
  2 3

  -----Sample Output:-----
  6
  -/

vc-preamble: |

vc-helpers: |

vc-definitions: |-
  def find_min_cake_cost (n m : Nat) : Nat :=
    sorry

vc-theorems: |-
  theorem find_min_cake_cost_divisible (n m : Nat)
    (hn : n > 0) (hm : m > 0) :
    find_min_cake_cost n m % n = 0 âˆ§ find_min_cake_cost n m % m = 0 :=
    sorry

  theorem find_min_cake_cost_positive (n m : Nat)
    (hn : n > 0) (hm : m > 0) :
    find_min_cake_cost n m > 0 :=
    sorry

  theorem find_min_cake_cost_symmetric (n m : Nat) 
    (hn : n > 0) (hm : m > 0) :
    find_min_cake_cost n m = find_min_cake_cost m n :=
    sorry

vc-postamble: |-
  -- Apps difficulty: interview
  -- Assurance level: guarded_and_plausible

  /-
  info: 6
  -/
  #guard_msgs in
  #eval find_min_cake_cost 2 3

  /-
  info: 12
  -/
  #guard_msgs in
  #eval find_min_cake_cost 4 6

  /-
  info: 35
  -/
  #guard_msgs in
  #eval find_min_cake_cost 5 7

