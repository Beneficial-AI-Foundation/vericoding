vc-description: |-
  /-
  Construct a function 'coordinates', that will return the distance between two points on a cartesian plane, given the x and y coordinates of each point.

  There are two parameters in the function, ```p1``` and ```p2```. ```p1``` is a list ```[x1,y1]``` where ```x1``` and ```y1``` are the x and y coordinates of the first point. ```p2``` is a list ```[x2,y2]``` where ```x2``` and ```y2``` are the x and y coordinates of the second point. 

  The distance between the two points should be rounded to the `precision` decimal if provided, otherwise to the nearest integer.
  -/

vc-preamble: |

vc-helpers: |

vc-definitions: |-
  def coordinates (p1 : List Int) (p2 : List Int) (precision : Nat := 8) : Float :=
    sorry

vc-theorems: |-
  theorem coordinates_symmetry (p1 p2 : List Int) (precision : Nat) 
    (h1 : precision ≤ 10) (h2 : p1.length = 2) (h3 : p2.length = 2)
    (h4 : ∀ x ∈ p1, -100 ≤ x ∧ x ≤ 100) (h5 : ∀ x ∈ p2, -100 ≤ x ∧ x ≤ 100) :
    coordinates p1 p2 precision = coordinates p2 p1 precision :=
  sorry

  theorem coordinates_identity (p : List Int) (precision : Nat)
    (h1 : precision ≤ 10) (h2 : p.length = 2)
    (h3 : ∀ x ∈ p, -100 ≤ x ∧ x ≤ 100) :
    coordinates p p precision = 0 :=
  sorry

  theorem coordinates_triangle_inequality (p1 p2 p3 : List Int)
    (h1 : p1.length = 2) (h2 : p2.length = 2) (h3 : p3.length = 2)
    (h4 : ∀ x ∈ p1, -100 ≤ x ∧ x ≤ 100)
    (h5 : ∀ x ∈ p2, -100 ≤ x ∧ x ≤ 100)
    (h6 : ∀ x ∈ p3, -100 ≤ x ∧ x ≤ 100) :
    coordinates p1 p3 8 ≤ coordinates p1 p2 8 + coordinates p2 p3 8 :=
  sorry

  theorem coordinates_non_negative (p1 p2 : List Int) (precision : Nat)
    (h1 : precision ≤ 10) (h2 : p1.length = 2) (h3 : p2.length = 2)
    (h4 : ∀ x ∈ p1, -100 ≤ x ∧ x ≤ 100) (h5 : ∀ x ∈ p2, -100 ≤ x ∧ x ≤ 100) :
    coordinates p1 p2 precision ≥ 0 :=
  sorry

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded

  /-
  info: 11
  -/
  #guard_msgs in
  #eval coordinates [3, 6] [14, 6]

  /-
  info: 15
  -/
  #guard_msgs in
  #eval coordinates [-2, 5] [-2, -10] 2

  /-
  info: 5.385
  -/
  #guard_msgs in
  #eval coordinates [4, 7] [6, 2] 3

