vc-description: |-
  /-
  Implement a function, `multiples(m, n)`, which returns an array of the first `m` multiples of the real number `n`. Assume that `m` is a positive integer.

  Ex.
  ```
  multiples(3, 5.0)
  ```
  should return
  ```
  [5.0, 10.0, 15.0]
  ```
  -/

vc-preamble: |

vc-helpers: |

vc-definitions: |-
  def multiples (m : Nat) (n : Int) : Array Int :=
    sorry

vc-theorems: |-
  theorem multiples_length {m : Nat} {n : Int} (h : m ≤ 1000) :
    (multiples m n).size = m := sorry

  theorem multiples_sequence {m : Nat} {n : Int} (h1 : m ≤ 1000) (h2 : m > 0) :
    ∀ i : Nat, i < m → (multiples m n)[i]! = (i + 1) * n := sorry

  theorem multiples_first {m : Nat} {n : Int} (h1 : m ≤ 1000) (h2 : m > 0) :
    (multiples m n)[0]! = n := sorry

  theorem multiples_sign_preservation {m : Nat} {n : Int} (h1 : m ≤ 1000) (h2 : m > 0) :
    (n < 0 → ∀ x ∈ multiples m n, x < 0) ∧
    (n > 0 → ∀ x ∈ multiples m n, x > 0) ∧
    (n = 0 → ∀ x ∈ multiples m n, x = 0) := sorry

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded

  /--
  info: [5, 10, 15]
  -/
  #guard_msgs in
  #eval multiples 3 5

  /--
  info: [-1, -2, -3, -4, -5]
  -/
  #guard_msgs in
  #eval multiples 5 -1

