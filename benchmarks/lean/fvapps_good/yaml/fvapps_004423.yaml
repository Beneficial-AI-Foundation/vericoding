vc-description: |-
  /-
  Write a function named setAlarm which receives two parameters. The first parameter, employed, is true whenever you are employed and the second parameter, vacation is true whenever you are on vacation.
  The function should return true if you are employed and not on vacation (because these are the circumstances under which you need to set an alarm). It should return false otherwise. Examples:

  ```if-not:julia,racket
  setAlarm(true, true) -> false
  setAlarm(false, true) -> false
  setAlarm(false, false) -> false
  setAlarm(true, false) -> true
  ```
  -/

vc-preamble: |

vc-helpers: |

vc-definitions: |-
  def set_alarm (employed : Bool) (vacation : Bool) : Bool := sorry

  theorem set_alarm_spec (employed vacation : Bool) :
    set_alarm employed vacation = (employed && !vacation) := sorry

vc-theorems: |-
  theorem set_alarm_output_bool (employed vacation : Bool) : 
    set_alarm employed vacation = true âˆ¨ set_alarm employed vacation = false := sorry

  theorem unemployed_no_alarm (vacation : Bool) :
    set_alarm false vacation = false := sorry

  theorem vacation_no_alarm (employed : Bool) :
    set_alarm employed true = false := sorry

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded

  /-
  info: False
  -/
  #guard_msgs in
  #eval set_alarm True True

  /-
  info: False
  -/
  #guard_msgs in
  #eval set_alarm False True

  /-
  info: True
  -/
  #guard_msgs in
  #eval set_alarm True False

