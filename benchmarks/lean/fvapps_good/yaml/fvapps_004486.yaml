vc-description: |-
  /-
  Given the triangle of consecutive odd numbers:

  ```
               1
            3     5
         7     9    11
     13    15    17    19
  21    23    25    27    29
  ...
  ```

  Calculate the row sums of this triangle from the row index (starting at index 1) e.g.:

  ```python
  row_sum_odd_numbers(1); # 1
  row_sum_odd_numbers(2); # 3 + 5 = 8
  ```

  ```if:nasm
  row_sum_odd_numbers:
  ```
  -/

vc-preamble: |

vc-helpers: |

vc-definitions: |-
  def row_sum_odd_numbers (n : Nat) : Nat :=
    sorry

vc-theorems: |-
  theorem row_sum_is_positive (n : Nat) (h : n > 0) :
    row_sum_odd_numbers n > 0 :=
    sorry

  theorem row_sum_equals_cube (n : Nat) (h : n > 0) :
    row_sum_odd_numbers n = n * n * n :=
    sorry

  theorem row_sum_edge_cases :
    row_sum_odd_numbers 1 = 1 âˆ§ row_sum_odd_numbers 2 = 8 :=
    sorry

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: guarded_and_plausible

  /-
  info: 1
  -/
  #guard_msgs in
  #eval row_sum_odd_numbers 1

  /-
  info: 8
  -/
  #guard_msgs in
  #eval row_sum_odd_numbers 2

  /-
  info: 2197
  -/
  #guard_msgs in
  #eval row_sum_odd_numbers 13

