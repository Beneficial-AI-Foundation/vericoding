vc-description: |-
  /-
  Given an integer `n`, find two integers `a` and `b` such that:
  ```Pearl
  A) a >= 0 and b >= 0
  B) a + b = n
  C) DigitSum(a) + Digitsum(b) is maximum of all possibilities.  
  ```
  You will return the digitSum(a) + digitsum(b). 

  ```
  For example:
  solve(29) = 11. If we take 15 + 14 = 29 and digitSum = 1 + 5 + 1 + 4 = 11. There is no larger outcome.
  ```
  `n` will not exceed `10e10`.

  More examples in test cases. 

  Good luck!
  -/

vc-preamble: |

vc-helpers: |

vc-definitions: |-
  def solve (n : Nat) : Nat := sorry

  theorem solve_non_negative (n : Nat) : 
    solve n â‰¥ 0 := sorry

vc-theorems: |-
  theorem solve_single_digit (n : Nat) (h : n < 10) :
    solve n = n := sorry

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: guarded_and_plausible

  /--
  info: 18
  -/
  #guard_msgs in
  #eval solve 18

  /--
  info: 11
  -/
  #guard_msgs in
  #eval solve 29

  /--
  info: 18
  -/
  #guard_msgs in
  #eval solve 45

