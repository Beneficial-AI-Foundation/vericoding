vc-description: |-
  /-
  Patlu has recently got a new problem based on Pallindromes. A Pallindrome is a number that is same from front and back, example $121$ is pallindrome but $123$ is not . He wants to calculate sum of all $N$ digit number which are Pallindromic in nature and divisible by $9$ and does not contain any zero in their decimal representation. As the answer can be very large so print the sum modulo $10^9 + 7$.

  -----Input:-----
  - First line of input contain $T$, number of testcases. Then the testcases follow.
  - Each testcase contains single line of input , one integer $N$.

  -----Output:-----
  - For each testcase, output in a single line answer having $N$ digits pallindromic string.

  -----Constraints-----
  - $1\leq T \leq 100$
  - $1\leq N \leq 10^5$

  -----Sample Input:-----
  2
  1
  2

  -----Sample Output:-----
  9
  99
  -/

vc-preamble: |

vc-helpers: |

vc-definitions: |-
  def MOD := (10^9) + 7

  def getsum (n : Nat) : Nat :=
    sorry

vc-theorems: |-
  theorem getsum_base_cases :
    (getsum 1 = 9) ∧ (getsum 2 = 99) :=
    sorry

  theorem getsum_positive (n : Nat) (h : n > 0) :
    getsum n > 0 :=
    sorry

  theorem getsum_invalid_input (n : Nat) :
    n = 0 → getsum n = 0 :=
    sorry

vc-postamble: |-
  -- Apps difficulty: interview
  -- Assurance level: guarded_and_plausible

  /--
  info: 9
  -/
  #guard_msgs in
  #eval getsum 1

  /--
  info: 99
  -/
  #guard_msgs in
  #eval getsum 2

