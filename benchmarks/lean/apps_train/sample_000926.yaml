vc-description: |-
  Chef has an old machine if the chef enters any natural number, the machine will display 1, 2, …n, n-1, n-2, n-3,…1 series and in next line prints sum of cubes of each number in the series. Chef wants to create a computer program which can replicate the functionality of the machine. Help the chef to code.
  
  -----Input:-----
  - First-line will contain $T$, the number of test cases. Then the test cases follow. 
  - Each test case contains a single line of input, $N$. 
  
  -----Output:-----
  For each test case, output in a single line answer.
  
  -----Constraints-----
  - $1 \leq T \leq 50$
  - $1 \leq N \leq 50$
  
  -----Sample Input:-----
  2
  1
  3
  
  -----Sample Output:-----
  1
  45
  
  -----EXPLANATION:-----
  For 2) series will be 1, 2, 3, 2, 1 and the sum will be = 1 + 8 + 27 + 8+ 1

vc-preamble: |-

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def calculate_series_sum (n: Nat) : Nat :=
  sorry

vc-theorems: |-
  theorem calculate_series_sum_positive {n: Nat} (h: n > 0) : 
    calculate_series_sum n > 0 := sorry
  
  theorem calculate_series_sum_increasing {n: Nat} (h: n > 1) :
    calculate_series_sum n > calculate_series_sum (n-1) := sorry
  
  theorem calculate_series_sum_known_values :
    calculate_series_sum 1 = 1 ∧ calculate_series_sum 3 = 45 := sorry

vc-postamble: |-
  -- Apps difficulty: interview
  -- Assurance level: guarded_and_plausible

