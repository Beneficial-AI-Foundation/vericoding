vc-description: |-
  Find the smallest prime palindrome greater than or equal to N.
  Recall that a number is prime if it's only divisors are 1 and itself, and it is greater than 1. 
  For example, 2,3,5,7,11 and 13 are primes.
  Recall that a number is a palindrome if it reads the same from left to right as it does from right to left. 
  For example, 12321 is a palindrome.
  
  Example 1:
  Input: 6
  Output: 7
  
  Example 2:
  Input: 8
  Output: 11
  
  Example 3:
  Input: 13
  Output: 101
  
  Note:
  
  1 <= N <= 10^8
  The answer is guaranteed to exist and be less than 2 * 10^8.

vc-preamble: |-
  def primePalindrome (n : Nat) : Nat :=
    sorry
  
  def isPalindrome (n : Nat) : Bool :=
    sorry

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def isPrime (n : Nat) : Bool :=
    sorry

vc-theorems: |-
  theorem primePalindrome_geq_input
    (n : Nat)
    (h1 : n ≥ 2)
    (h2 : n ≤ 19990) :
    primePalindrome n ≥ n :=
  sorry
  
  /--
  info: 7
  -/
  #guard_msgs in
  #eval primePalindrome 6
  
  /--
  info: 11
  -/
  #guard_msgs in
  #eval primePalindrome 8
  
  /--
  info: 101
  -/
  #guard_msgs in
  #eval primePalindrome 13

vc-postamble: |-
  -- Apps difficulty: interview
  -- Assurance level: guarded_and_plausible

