vc-description: |-
  Your task is to sort a given string. Each word in the string will contain a single number. This number is the position the word should have in the result.

  Note: Numbers can be from 1 to 9. So 1 will be the first word (not 0).

  If the input string is empty, return an empty string.
  The words in the input String will only contain valid consecutive numbers.


  ## Examples

  ```
  "is2 Thi1s T4est 3a"  -->  "Thi1s is2 3a T4est"
  "4of Fo1r pe6ople g3ood th5e the2"  -->  "Fo1r the2 g3ood 4of th5e pe6ople"
  ""  -->  ""
  ```
vc-preamble: |
  import Imports.AllImports

  def order (sentence : String) : String :=
    sorry


  def splitString (s : String) (sep : Char) : List String :=
    sorry


  def findNumber (s : String) : Option Nat :=
    sorry
vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>
vc-definitions: |
  def isSorted (as : List Nat) : Prop :=
    ∀ i j, i < j → j < as.length → as[i]! ≤ as[j]!
vc-theorems: |
  theorem order_preserves_empty_string :
    order "" = "" :=
  sorry 


  theorem order_sorts_by_numbers {sentence : String} {words : List String} : 
    words = splitString sentence ' ' →
    let resultWords := splitString (order sentence) ' '
    let numbers := resultWords.filterMap findNumber
    isSorted numbers :=
  sorry


  theorem order_preserves_words {sentence : String} {words : List String} :
    words = splitString sentence ' ' →
    let resultWords := splitString (order sentence) ' '
    words.eraseDups = resultWords.eraseDups ∧ 
    words.length = resultWords.length :=
  sorry


  theorem order_all_properties {sentence : String} {words : List String} :
    words = splitString sentence ' ' →
    (sentence = "" → order sentence = "") ∧
    let resultWords := splitString (order sentence) ' '
    let numbers := resultWords.filterMap findNumber
    isSorted numbers ∧
    words.eraseDups = resultWords.eraseDups ∧
    words.length = resultWords.length :=
  sorry

  /--
  info: expected1
  -/
  #guard_msgs in
  #eval order "is2 Thi1s T4est 3a"

  /--
  info: expected2
  -/
  #guard_msgs in
  #eval order "4of Fo1r pe6ople g3ood th5e the2"

  /--
  info: expected3
  -/
  #guard_msgs in
  #eval order ""
vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded
