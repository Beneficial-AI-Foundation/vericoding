vc-description: |-
  My friend John likes to go to the cinema. He can choose between system A and system B.
  ```
  System A : he buys a ticket (15 dollars) every time
  System B : he buys a card (500 dollars) and a first ticket for 0.90 times the ticket price, 
  then for each additional ticket he pays 0.90 times the price paid for the previous ticket.
  ```
  #Example: 
  If John goes to the cinema 3 times:
  ```
  System A : 15 * 3 = 45
  System B : 500 + 15 * 0.90 + (15 * 0.90) * 0.90 + (15 * 0.90 * 0.90) * 0.90 ( = 536.5849999999999, no rounding for each ticket)
  ```
  John wants to know how many times he must go to the cinema so that the *final result* of System B, when rounded *up* to the next dollar, will be cheaper than System A.

  The function `movie` has 3 parameters: `card` (price of the card), `ticket` (normal price of 
  a ticket), `perc` (fraction of what he paid for the previous ticket) and returns the first `n` such that
  ```
  ceil(price of System B) < price of System A.
  ```
  More examples:
  ```
  movie(500, 15, 0.9) should return 43 
      (with card the total price is 634, with tickets 645)
  movie(100, 10, 0.95) should return 24 
      (with card the total price is 235, with tickets 240)
  ```
vc-preamble: |-
  import Imports.AllImports
vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>
vc-definitions: |
  def movie (card : Float) (ticket : Float) (perc : Float) : Nat :=
    sorry
vc-theorems: |
  theorem movie_returns_positive : 
    ∀ (card ticket perc : Float),
    0 ≤ card → card ≤ 1000 →
    0.1 ≤ ticket → ticket ≤ 100 →
    0.1 ≤ perc → perc ≤ 0.99 →
    movie card ticket perc > 0
    := by sorry


  theorem higher_card_more_visits :
    ∀ (card1 card2 ticket perc : Float),
    0 ≤ card1 → card1 ≤ 500 →
    501 ≤ card2 → card2 ≤ 1000 →  
    0.1 ≤ ticket → ticket ≤ 100 →
    0.1 ≤ perc → perc ≤ 0.99 →
    movie card1 ticket perc ≤ movie card2 ticket perc
    := by sorry

  /--
  info: 43
  -/
  #guard_msgs in
  #eval movie 500 15 0.9

  /--
  info: 24
  -/
  #guard_msgs in
  #eval movie 100 10 0.95

  /--
  info: 21
  -/
  #guard_msgs in
  #eval movie 250 20 0.9
vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: guarded
