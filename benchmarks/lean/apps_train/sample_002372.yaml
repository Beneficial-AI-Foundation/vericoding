vc-description: |-
  Given an array nums of integers, return how many of them contain an even number of digits.
  
  Example 1:
  Input: nums = [12,345,2,6,7896]
  Output: 2
  Explanation: 
  12 contains 2 digits (even number of digits). 
  345 contains 3 digits (odd number of digits). 
  2 contains 1 digit (odd number of digits). 
  6 contains 1 digit (odd number of digits). 
  7896 contains 4 digits (even number of digits). 
  Therefore only 12 and 7896 contain an even number of digits.
  
  Example 2:
  Input: nums = [555,901,482,1771]
  Output: 1 
  Explanation: 
  Only 1771 contains an even number of digits.
  
  Constraints:
  
  1 <= nums.length <= 500
  1 <= nums[i] <= 10^5

vc-preamble: |-

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def find_numbers_with_even_digits (nums: List Nat) : Nat := sorry
  
  def count_digits (n: Nat) : Nat := sorry

vc-theorems: |-
  theorem find_numbers_bounds {nums: List Nat} : 
    find_numbers_with_even_digits nums ≤ nums.length := sorry
  
  theorem find_numbers_nonneg {nums: List Nat} :
    find_numbers_with_even_digits nums ≥ 0 := sorry
  
  theorem list_concatenation {nums₁ nums₂: List Nat} :
    find_numbers_with_even_digits (nums₁ ++ nums₂) = 
    find_numbers_with_even_digits nums₁ + find_numbers_with_even_digits nums₂ := sorry
  
  /--
  info: 2
  -/
  #guard_msgs in
  #eval find_numbers_with_even_digits [12, 345, 2, 6, 7896]
  
  /--
  info: 1
  -/
  #guard_msgs in
  #eval find_numbers_with_even_digits [555, 901, 482, 1771]
  
  /--
  info: 2
  -/
  #guard_msgs in
  #eval find_numbers_with_even_digits [1, 22, 333, 4444]

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: guarded_and_plausible

