vc-description: |-
  Find the number with the most digits.
  
  If two numbers in the argument array have the same number of digits, return the first one in the array.

vc-preamble: |-

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def find_longest (numbers : List Int) : Int :=
    sorry

vc-theorems: |-
  theorem find_longest_in_list (numbers : List Int) 
    (h : numbers ≠ []) : 
    find_longest numbers ∈ numbers :=
    sorry
  
  theorem find_longest_has_max_len (numbers : List Int) 
    (h : numbers ≠ []) :
    ∀ x ∈ numbers, 
      (toString (find_longest numbers)).length ≥ (toString x).length :=
    sorry
  
  theorem ties_return_first (numbers : List Int)
    (h : numbers.length ≥ 2) :
    let result := find_longest numbers
    let maxLen := (toString result).length 
    numbers.find? (fun x => (toString x).length = maxLen) = some result :=
    sorry
  
  /--
  info: 100
  -/
  #guard_msgs in
  #eval find_longest [1, 10, 100]
  
  /--
  info: 9000
  -/
  #guard_msgs in
  #eval find_longest [9000, 8, 800]
  
  /--
  info: 900
  -/
  #guard_msgs in
  #eval find_longest [8, 900, 500]

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: guarded_and_plausible

