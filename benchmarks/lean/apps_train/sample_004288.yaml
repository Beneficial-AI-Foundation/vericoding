vc-description: |-
  In this Kata, you will be given an integer `n` and your task will be to return `the largest integer that is <= n and has the highest digit sum`.

  For example:
  ```
  solve(100) = 99. Digit Sum for 99 = 9 + 9 = 18. No other number <= 100 has a higher digit sum.
  solve(10) = 9
  solve(48) = 48. Note that 39 is also an option, but 48 is larger.
  ```

  Input range is `0 < n < 1e11`

  More examples in the test cases.

  Good luck!
vc-preamble: |
  import Imports.AllImports

  def solve (n : Nat) : Nat :=
    sorry


  def sumOfDigits (n : Nat) : Nat :=
    sorry
vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>
vc-definitions: |
  def isPowerOfTen (n : Nat) : Bool :=
    sorry
vc-theorems: |
  theorem solve_result_bounded (n : Nat) (h : n > 0) : 
    let result := solve n
    result ≥ 0 ∧ result ≤ n :=
  sorry

  /--
  info: 99
  -/
  #guard_msgs in
  #eval solve 100

  /--
  info: 48
  -/
  #guard_msgs in
  #eval solve 48

  /--
  info: 999
  -/
  #guard_msgs in
  #eval solve 1000
vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: guarded_and_plausible
