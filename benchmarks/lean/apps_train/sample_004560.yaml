vc-description: |-
  Classy Extensions
  Classy Extensions, this kata is mainly aimed at the new JS ES6 Update introducing extends keyword. You will be preloaded with the Animal class, so you should only edit the Cat class.

  Task
  Your task is to complete the Cat class which Extends Animal and replace the speak method to return the cats name + meows.
  e.g. 'Mr Whiskers meows.'

  The name attribute is passed with this.name (JS), @name (Ruby) or self.name (Python).

  Reference: [JS](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes), [Ruby](http://rubylearning.com/satishtalim/ruby_inheritance.html), [Python](https://docs.python.org/2/tutorial/classes.html#inheritance).
vc-preamble: |
  import Imports.AllImports

  def Animal.name (a : Animal) : String :=
    match a with
    | mk n => n


  def Animal.speak (a : Animal) : String := sorry

  inductive Cat where
    | mk (name : String)


  def Cat.name (c : Cat) : String :=
    match c with
    | mk n => n
vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>
vc-definitions: |
  def Cat.speak (c : Cat) : String := sorry

  def Cat.toAnimal (c : Cat) : Animal :=
    match c with
    | mk n => Animal.mk n
vc-theorems: |-
  theorem animal_speak_format {name : String} (h : name.length > 0) :
    (Animal.mk name).speak = name ++ " speaks." := sorry


  theorem cat_speak_format {name : String} (h : name.length > 0) :
    (Cat.mk name).speak = name ++ " meows." := sorry


  theorem cat_name_preservation {name : String} (h : name.length > 0) :
    (Cat.mk name).name = name := sorry


  theorem cat_is_animal (c : Cat) :
    âˆƒ (a : Animal), c.toAnimal = a := sorry
vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded
