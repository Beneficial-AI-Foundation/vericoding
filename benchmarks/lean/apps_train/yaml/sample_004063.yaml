vc-description: |-
  /-
  In this Kata, you will be given a number and your task will be to return the nearest prime number. 
  
  ```Haskell
  solve(4) = 3. The nearest primes are 3 and 5. If difference is equal, pick the lower one. 
  solve(125) = 127
  ```
  
  We'll be testing for numbers up to `1E10`. `500` tests.
  
  More examples in test cases. 
  
  Good luck!
  
  If you like Prime Katas, you will enjoy this Kata: [Simple Prime Streaming](https://www.codewars.com/kata/5a908da30025e995880000e3)
  -/

vc-preamble: |-

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def solve (n : Int) : Int := sorry
  
  def isPrime (n : Int) : Bool := sorry

vc-theorems: |-
  theorem solve_returns_closest_prime (n : Int) (h : n ≥ 2) : 
    let result := solve n
    isPrime result = true ∧ 
    ∀ i, isPrime i = true → (n - i).natAbs ≥ (n - result).natAbs := sorry
  
  theorem solve_returns_input_if_prime (n : Int) (h1 : n ≥ 2) (h2 : isPrime n = true) : 
    solve n = n := sorry
  
  theorem solve_handles_small_numbers (n : Int) (h : n ≤ 1) :
    solve n = 2 ∧ isPrime (solve n) = true := sorry

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: guarded

