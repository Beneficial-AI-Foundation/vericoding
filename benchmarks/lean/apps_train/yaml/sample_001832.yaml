vc-description: |-
  /-
  Given an array A of positive integers (not necessarily distinct), return the lexicographically largest permutation that is smaller than A, that can be made with one swap (A swap exchanges the positions of two numbers A[i] and A[j]).  If it cannot be done, then return the same array.
  
  Example 1:
  Input: [3,2,1]
  Output: [3,1,2]
  Explanation: Swapping 2 and 1.
  
  Example 2:
  Input: [1,1,5]
  Output: [1,1,5]
  Explanation: This is already the smallest permutation.
  
  Example 3:
  Input: [1,9,4,6,7]
  Output: [1,7,4,6,9]
  Explanation: Swapping 9 and 7.
  
  Example 4:
  Input: [3,1,1,3]
  Output: [1,3,1,3]
  Explanation: Swapping 1 and 3.
  
  Note:
  
  1 <= A.length <= 10000
  1 <= A[i] <= 10000
  -/

vc-preamble: |-
  def prev_perm_opt1 (arr : List Int) : List Int := sorry
  
  theorem prev_perm_length_preserved {arr : List Int} (h : arr ≠ []) :
    (prev_perm_opt1 arr).length = arr.length := sorry

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def list_sortFn : List Int → List Int := sorry
  
  theorem prev_perm_same_elements {arr : List Int} (h : arr ≠ []) :
    list_sortFn (prev_perm_opt1 arr) = list_sortFn arr := sorry

vc-theorems: |-
  theorem prev_perm_sorted_unchanged {arr : List Int} (h : arr ≠ []) :
    arr = list_sortFn arr → prev_perm_opt1 arr = arr := sorry
  
  theorem prev_perm_lexicographically_smaller {arr : List Int} (h : arr ≠ []) :
    prev_perm_opt1 arr ≤ arr := sorry
  
  theorem prev_perm_idempotent {arr : List Int} (h : arr ≠ []) :
    prev_perm_opt1 (prev_perm_opt1 arr) ≤ prev_perm_opt1 arr := sorry
  
  theorem prev_perm_singleton_unchanged {arr : List Int} (h : arr.length = 1) :
    prev_perm_opt1 arr = arr := sorry
  
  /-
  info: [3, 1, 2]
  -/
  -- #guard_msgs in
  -- #eval prev_perm_opt1 [3, 2, 1]
  
  /-
  info: [1, 7, 4, 6, 9]
  -/
  -- #guard_msgs in
  -- #eval prev_perm_opt1 [1, 9, 4, 6, 7]
  
  /-
  info: [1, 3, 1, 3]
  -/
  -- #guard_msgs in
  -- #eval prev_perm_opt1 [3, 1, 1, 3]

vc-postamble: |-
  -- Apps difficulty: interview
  -- Assurance level: unguarded

