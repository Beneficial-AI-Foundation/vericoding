vc-description: |-
  This is a spin off of my first [kata](http://www.codewars.com/kata/56bc28ad5bdaeb48760009b0). You are given a list of character sequences as a comma separated string. Write a function which returns another string containing all the character sequences except the first and the last ones, separated by spaces. If the input string is empty, or the removal of the first and last items would cause the string to be empty, return a null value.

vc-preamble: |-
  def String.count (s : String) (c : Char) : Nat :=
    sorry
  
  def String.strip (s : String) : String :=
    sorry
  
  def array (s : String) : Option String :=
    sorry
  
  /- Helper functions -/

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def joinWithSpaces (xs : List String) : String :=
    sorry
  
  /- Main theorems that match property tests -/

vc-theorems: |-
  theorem array_none_when_not_enough_commas (s : String) :
    s.count ',' < 2 →
    array s = none :=
  sorry
  
  theorem array_processes_middle_elements (s : String) :
    s.count ',' ≥ 2 →
    array s = some (joinWithSpaces (List.map String.strip (List.drop 1 (List.take (List.length (String.splitOn "," s) - 1) (String.splitOn "," s))))) :=
  sorry
  
  /--
  info: None
  -/
  #guard_msgs in
  #eval array ""
  
  /--
  info: None
  -/
  #guard_msgs in
  #eval array "1"
  
  /--
  info: None
  -/
  #guard_msgs in
  #eval array "1,2"
  
  /--
  info: '2'
  -/
  #guard_msgs in
  #eval array "1,2,3"
  
  /--
  info: '2 3'
  -/
  #guard_msgs in
  #eval array "1,2,3,4"

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded

