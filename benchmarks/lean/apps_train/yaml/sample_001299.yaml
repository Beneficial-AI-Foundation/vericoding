vc-description: |-
  VK gave a problem to Chef, but Chef is too lazy, so he asked you to solve the problem for him. The statement of the problem follows.
  Consider an integer with $N$ digits (in decimal notation, without leading zeroes) $D_1, D_2, D_3, \dots, D_N$. Here, $D_1$ is the most significant digit and $D_N$ the least significant. The weight of this integer is defined as ∑i=2N(Di−Di−1).∑i=2N(Di−Di−1).\sum_{i=2}^N (D_i - D_{i-1})\,.
  You are given integers $N$ and $W$. Find the number of positive integers with $N$ digits (without leading zeroes) and weight equal to $W$. Compute this number modulo $10^9+7$.
  
  -----Input-----
  - The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.
  - The first and only line of each test case contains two space-separated integers $N$ and $W$ denoting the number of digits and the required weight.
  
  -----Output-----
  For each test case, print a single line containing one integer — the number of $N$-digit positive integers with weight $W$, modulo $10^9+7$.
  
  -----Constraints-----
  - $1 \le T \le 10^5$
  - $2 \le N \le 10^{18}$
  - $|W| \le 300$
  
  -----Subtasks-----
  Subtask #1 (20 points):
  - $1 \le T \le 10^3$
  - $2 \le N \le 10^3$
  Subtask #2 (80 points): original constraints
  
  -----Example Input-----
  
  1
  2 3
  
  -----Example Output-----
  
  6
  
  -----Explanation-----
  Example case 1: Remember that the digits are arranged from most significant to least significant as $D_1, D_2$. The two-digit integers with weight $3$ are $14, 25, 36, 47, 58, 69$. For example, the weight of $14$ is $D_2-D_1 = 4-1 = 3$. We can see that there are no other possible numbers.

vc-preamble: |-

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def MOD : Nat := 1000000007
  
  def count_weighted_integers (n: Nat) (w: Int) : Nat :=
    sorry

vc-theorems: |-
  theorem count_weighted_integers_non_negative 
    (n: Nat) (w: Int)
    (h1: n ≥ 2) (h2: n ≤ 1000) 
    (h3: w ≥ -20) (h4: w ≤ 20) :
    count_weighted_integers n w ≥ 0 := sorry
  
  theorem count_weighted_integers_impossible_weight
    (n: Nat) (w: Int)
    (h1: n ≥ 2) (h2: n ≤ 1000)
    (h3: w > 9 ∨ w < -9) :
    count_weighted_integers n w = 0 := sorry
  
  theorem count_weighted_integers_mod_bounds
    (n: Nat) (w: Int)
    (h1: n ≥ 2) (h2: n ≤ 1000)
    (h3: w ≥ -20) (h4: w ≤ 20) :
    0 ≤ count_weighted_integers n w ∧ count_weighted_integers n w < MOD := sorry
  
  theorem count_weighted_integers_zero_weight
    (n: Nat)
    (h1: n ≥ 2) (h2: n ≤ 100) :
    count_weighted_integers n 0 = (((10 ^ (n-2)) % MOD) * 9) % MOD := sorry
  
  /--
  info: 6
  -/
  #guard_msgs in
  #eval count_weighted_integers 2 3
  
  /--
  info: 0
  -/
  #guard_msgs in
  #eval count_weighted_integers 2 10
  
  /--
  info: 80
  -/
  #guard_msgs in
  #eval count_weighted_integers 3 -2

vc-postamble: |-
  -- Apps difficulty: interview
  -- Assurance level: unguarded

