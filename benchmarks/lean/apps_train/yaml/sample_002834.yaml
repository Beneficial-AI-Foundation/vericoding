vc-description: |-
  The number ```12``` is the first number in having six divisors, they are: ```1, 2, 3, 4, 6 and 12.```
  Your challenge for this kata is to find the minimum number that has a certain number of divisors.
  For this purpose we have to create the function 
  
  ```find_min_num() or findMinNum() or similar in the other languages```
  
  that receives the wanted number of divisors ```num_div```, and outputs the smallest number having an amount of divisors equals to ```num_div```.
  
  Let's see some cases:
  ```
  find_min_num(10) = 48 # divisors are: 1, 2, 3, 4, 6, 8, 12, 16, 24 and  48
  find_min_num(12) = 60
  ```
  In this kata all the tests will be with ```numDiv < 80```
  
  (There will be a next kata with numDiv < 10000, Find the First Number Having a Certain Number of Divisors II, should have the help of number theory)
  
  Enjoy it and happy coding!
  (Memoization is advisable)

vc-preamble: |-

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def div_num (n : Nat) : Nat := sorry
  
  theorem div_num_positive (n : Nat) (h : n > 0) : div_num n â‰¥ 1 := sorry

vc-theorems: |-
  theorem div_num_perfect_squares 
    (n : Nat) 
    (h : n > 0) : 
    div_num (n * n) % 2 = 1 := sorry
  
  theorem div_num_small_cases_1 : div_num 1 = 1 := sorry
  
  theorem div_num_small_cases_2 : div_num 2 = 2 := sorry 
  
  theorem div_num_small_cases_4 : div_num 4 = 3 := sorry
  
  /--
  info: 12
  -/
  #guard_msgs in
  #eval find_min_num 6
  
  /--
  info: 48
  -/
  #guard_msgs in
  #eval find_min_num 10
  
  /--
  info: 60
  -/
  #guard_msgs in
  #eval find_min_num 12

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: guarded

