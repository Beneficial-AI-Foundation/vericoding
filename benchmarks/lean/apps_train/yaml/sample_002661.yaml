vc-description: |-
  /-
  Create a function which answers the question "Are you playing banjo?".  
  If your name starts with the letter "R" or lower case "r", you are playing banjo!
  
  The function takes a name as its only argument, and returns one of the following strings:
  ```
  name + " plays banjo" 
  name + " does not play banjo"
  ```
  Names given are always valid strings.
  -/

vc-preamble: |-
  def String.hasSubstring (s1 s2 : String) : Bool :=
    sorry

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def areYouPlayingBanjo (name : String) : String :=
    sorry

vc-theorems: |-
  theorem banjo_output_format (name : String) (h : name.length > 0) :
    let result := areYouPlayingBanjo name
    result.startsWith name ∧
    result.endsWith "banjo" ∧
    (result.hasSubstring " plays banjo" ∨ result.hasSubstring " does not play banjo") :=
  sorry
  
  theorem starts_with_r_plays_banjo (name : String) (h1 : name.length > 0)
      (h2 : name.front = 'r' ∨ name.front = 'R') :
    (areYouPlayingBanjo name).hasSubstring " plays banjo" = true :=
  sorry
  
  theorem not_r_does_not_play_banjo (name : String) (h1 : name.length > 0)
      (h2 : name.front ≠ 'r' ∧ name.front ≠ 'R') :
    (areYouPlayingBanjo name).hasSubstring " does not play banjo" = true :=
  sorry
  
  /-
  info: expected
  -/
  -- #guard_msgs in
  -- #eval areYouPlayingBanjo "Adam"
  
  /-
  info: expected
  -/
  -- #guard_msgs in
  -- #eval areYouPlayingBanjo "Ringo"
  
  /-
  info: expected
  -/
  -- #guard_msgs in
  -- #eval areYouPlayingBanjo "rolf"

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded

