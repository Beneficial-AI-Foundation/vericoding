vc-description: |-
  # A History Lesson
  
  The Pony Express was a mail service operating in the US in 1859-60.
  
  It reduced the time for messages to travel between the Atlantic and Pacific coasts to about 10 days, before it was made obsolete by the transcontinental telegraph.
  
  # How it worked
  
  There were a number of *stations*, where:
  
  * The rider switched to a fresh horse and carried on, or
  
  * The mail bag was handed over to the next rider
  
  # Kata Task
  
  `stations` is a list/array of distances (miles) from one station to the next along the Pony Express route.
  
  Implement the `riders` method/function, to return how many riders are necessary to get the mail from one end to the other.
  
  ##  Missing rider
  
  In this version of the Kata a rider may go missing. In practice, this could be for a number of reasons - a lame horse, an accidental fall, foul play... 
  
  After some time, the rider's absence would be noticed at the **next** station, so the next designated rider from there would have to back-track the mail route to look for his missing colleague. The missing rider is then safely escorted back to the station he last came from, and the mail bags are handed to his rescuer (or another substitute rider if necessary). 
  
  `stationX` is the number (2..N) of the station where the rider's absence was noticed.
  
  # Notes
  
  * Each rider travels as far as he can, but never more than 100 miles.
  
  # Example
  
  GIven
  
  * `stations = [43, 23, 40, 13]`
  
  * `stationX = 4`
  
  So
  
  `S1` ...  ... 43 ...  ... `S2` ...  ... 23 ...  ... `S3` ...  ... 40 ...  ... `S4` ...  ... 13 ...  ... `S5`
  
  * Rider 1 gets as far as Station S3
  * Rider 2 (at station S3) takes mail bags from Rider 1
  * Rider 2 never arrives at station S4
  * Rider 3 goes back to find what happened to Rider 2
  * Rider 2 and Rider 3 return together back to Station S3
  * Rider 3 takes mail bags from Rider 2
  * Rider 3 completes the journey to Station S5
  
  **Answer:** 
  3 riders
  
  *Good Luck.
  DM.*
  
  ---
  
  See also
  * The Pony Express
  * The Pony Express (missing rider)

vc-preamble: |-

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def riders (stations: List Nat) (lost: Nat) : Nat := sorry
  
  theorem riders_at_least_one {stations: List Nat} {lost: Nat}
    (h1: stations.length ≥ 2)
    (h2: 1 < lost)
    (h3: lost ≤ stations.length)
    (h4: ∀ x ∈ stations, x ≥ 1 ∧ x ≤ 100) :
    riders stations lost ≥ 1 := sorry

vc-theorems: |-
  theorem riders_at_least_two {stations: List Nat} {lost: Nat}
    (h1: stations.length ≥ 2)
    (h2: 1 < lost)
    (h3: lost ≤ stations.length)
    (h4: ∀ x ∈ stations, x ≥ 1 ∧ x ≤ 100) :
    riders stations lost ≥ 2 := sorry
  
  theorem riders_meets_minimum {stations: List Nat} {lost: Nat}
    (h1: stations.length ≥ 2)
    (h2: 1 < lost)
    (h3: lost ≤ stations.length)
    (h4: ∀ x ∈ stations, x ≥ 1 ∧ x ≤ 100) :
    let modified := (stations.take (lost-1)) ++ (stations.drop (lost-1))
    let min_riders := modified.foldr
      (fun d (acc : Nat × Nat) =>
        let (total, riders) := acc
        let new_total := total + d
        if new_total > 100 then (d, riders + 1)
        else (new_total, riders)) (0, 1)
    riders stations lost ≥ min_riders.2 := sorry
  
  /--
  info: 3
  -/
  #guard_msgs in
  #eval riders [43, 23, 40, 13] 4
  
  /--
  info: 2
  -/
  #guard_msgs in
  #eval riders [18, 15] 2
  
  /--
  info: 3
  -/
  #guard_msgs in
  #eval riders [50, 50] 2

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: guarded

