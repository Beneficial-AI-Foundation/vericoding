vc-description: |-
  Your goal is to return multiplication table for ```number``` that is always an integer from 1 to 10.
  
  For example, a multiplication table (string) for ```number == 5``` looks like below:
  
  ```
  1 * 5 = 5
  2 * 5 = 10
  3 * 5 = 15
  4 * 5 = 20
  5 * 5 = 25
  6 * 5 = 30
  7 * 5 = 35
  8 * 5 = 40
  9 * 5 = 45
  10 * 5 = 50
  ```
  
  P. S. You can use ```\n``` in string to jump to the next line.

vc-preamble: |-
  def multiTable (n : Nat) : String := sorry
  
  structure MultiTableOutput where
    lines : List String
    deriving Inhabited

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def String.count_spaces (s : String) : Nat := sorry
  def parseMultiTable (s : String) : MultiTableOutput := sorry

vc-theorems: |-
  theorem multi_table_length (n : Nat) (h : n > 0) :
    (parseMultiTable (multiTable n)).lines.length = 10 := sorry
  
  theorem multi_table_format (n : Nat) (h : n > 0) (i : Nat) (h2 : i > 0 ∧ i ≤ 10) :
    let output := parseMultiTable (multiTable n)
    let line := output.lines[i-1]!
    ∃ num1 num2 result : String,
      line = num1 ++ " * " ++ num2 ++ " = " ++ result ∧
      String.toNat! num1 = i ∧
      String.toNat! num2 = n ∧
      String.toNat! result = i * n := sorry
  
  theorem multi_table_no_trailing_newline (n : Nat) (h : n > 0) :
    let s := multiTable n
    s.length > 0 ∧ s.data[s.length - 1]! ≠ '\n' := sorry
  
  theorem multi_table_spacing (n : Nat) (h : n > 0) (line : String) 
    (h2 : line ∈ (parseMultiTable (multiTable n)).lines) :
    line.count_spaces = 4 := sorry
  
  /--
  info: '1 * 5 = 5\n2 * 5 = 10\n3 * 5 = 15\n4 * 5 = 20\n5 * 5 = 25\n6 * 5 = 30\n7 * 5 = 35\n8 * 5 = 40\n9 * 5 = 45\n10 * 5 = 50'
  -/
  #guard_msgs in
  #eval multi_table 5
  
  /--
  info: '1 * 1 = 1\n2 * 1 = 2\n3 * 1 = 3\n4 * 1 = 4\n5 * 1 = 5\n6 * 1 = 6\n7 * 1 = 7\n8 * 1 = 8\n9 * 1 = 9\n10 * 1 = 10'
  -/
  #guard_msgs in
  #eval multi_table 1
  
  /--
  info: '1 * 3 = 3\n2 * 3 = 6\n3 * 3 = 9\n4 * 3 = 12\n5 * 3 = 15\n6 * 3 = 18\n7 * 3 = 21\n8 * 3 = 24\n9 * 3 = 27\n10 * 3 = 30'
  -/
  #guard_msgs in
  #eval multi_table 3

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded

