vc-description: |-
  Write a function which converts the input string to uppercase.
  
  ~~~if:bf
  For BF all inputs end with \0, all inputs are lowercases and there is no space between. 
  ~~~

vc-preamble: |-

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def make_upper_case (s : String) : String := sorry
  
  theorem make_upper_case_idempotent (s : String) :
    make_upper_case (make_upper_case s) = make_upper_case s := sorry

vc-theorems: |-
  theorem make_upper_case_is_upper (s : String) :
    String.toUpper (make_upper_case s) = make_upper_case s := sorry
  
  theorem make_upper_case_upper_lower_chain (s : String) :
    String.toUpper (String.toLower (make_upper_case s)) = make_upper_case s := sorry
  
  /--
  info: 'HELLO'
  -/
  #guard_msgs in
  #eval make_upper_case "hello"
  
  /--
  info: 'HELLO WORLD'
  -/
  #guard_msgs in
  #eval make_upper_case "hello world"
  
  /--
  info: 'HELLO WORLD !'
  -/
  #guard_msgs in
  #eval make_upper_case "heLlO wORLd !"

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded

