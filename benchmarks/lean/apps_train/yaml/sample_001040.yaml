vc-description: |-
  You are given two integers $N$ and $M$. Find the number of sequences $A_1, A_2, \ldots, A_N$, where each element is an integer between $1$ and $M$ (inclusive) and no three consecutive elements are equal. Since this number could be very large, compute it modulo $10^9+7$.
  
  -----Input-----
  - The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.
  - The first and only line of each test case contains two space-separated integers $N$ and $M$.
  
  -----Output-----
  For each test case, print a single line containing one integer ― the number of valid sequences modulo $10^9+7$.
  
  -----Constraints-----
  - $1 \le T \le 10^5$
  - $1 \le N, M \le 10^{18}$
  
  -----Subtasks-----
  Subtask #1 (50 points):
  - $T \le 20$
  - $N \le 10^5$
  Subtask #2 (50 points): original constraints
  
  -----Example Input-----
  2 
  2 2
  3 4
  
  -----Example Output-----
  4
  60

vc-preamble: |-

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def MOD : Nat := 1000000007
  
  def calc_valid_sequences (n m : Nat) : Nat :=
    sorry

vc-theorems: |-
  theorem valid_sequences_in_mod_range (n m : Nat) 
      (h1 : n > 0) (h2 : m > 0) (h3 : n ≤ 100) (h4 : m ≤ 100) : 
    let result := calc_valid_sequences n m
    0 ≤ result ∧ result < MOD :=
  sorry
  
  theorem length_one_equals_m_mod (m : Nat) (h : m > 0) (h2 : m ≤ 100) :
    calc_valid_sequences 1 m = m % MOD :=
  sorry
  
  theorem result_non_negative (n m : Nat) 
      (h1 : n > 0) (h2 : m > 0) (h3 : n ≤ 100) (h4 : m ≤ 100) :
    calc_valid_sequences n m ≥ 0 :=
  sorry
  
  theorem longer_sequences_greater_than_m (n m : Nat)
      (h1 : n > 1) (h2 : m > 1) (h3 : n ≤ 100) (h4 : m ≤ 100) :
    calc_valid_sequences n m > m :=
  sorry
  
  /--
  info: 4
  -/
  #guard_msgs in
  #eval calc_valid_sequences 2 2
  
  /--
  info: 60
  -/
  #guard_msgs in
  #eval calc_valid_sequences 3 4
  
  /--
  info: 5
  -/
  #guard_msgs in
  #eval calc_valid_sequences 1 5

vc-postamble: |-
  -- Apps difficulty: interview
  -- Assurance level: guarded_and_plausible

