vc-description: |-
  ## Task
   An `ATM` ran out of 10 dollar bills and only has `100, 50 and 20` dollar bills.
  
   Given an amount between `40 and 10000 dollars (inclusive)` and assuming that the ATM wants to use as few bills as possible, determinate the minimal number of 100, 50 and 20 dollar bills the ATM needs to dispense (in that order).
  
  ## Example
  
   For `n = 250`, the result should be `[2, 1, 0]`.
  
   For `n = 260`, the result should be `[2, 0, 3]`.
  
   For `n = 370`, the result should be `[3, 1, 1]`.
  
  ## Input/Output
  
   - `[input]` integer `n`
    Amount of money to withdraw. Assume that `n` is always exchangeable with `[100, 50, 20]` bills.
   - `[output]` integer array
    An array of number of `100, 50 and 20` dollar bills needed to complete the withdraw (in that order).

vc-preamble: |-

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def withdraw (n : Int) : (Int × Int × Int) := sorry
  
  /-- The withdraw function returns a valid solution for multiples of 10 -/

vc-theorems: |-
  theorem withdraw_valid (amount : Int) (h : amount ≥ 20) (h2 : amount % 10 = 0) : 
    let (hundreds, fifties, twenties) := withdraw amount
    hundreds ≥ 0 ∧ fifties ≥ 0 ∧ twenties ≥ 0 ∧ 
    hundreds * 100 + fifties * 50 + twenties * 20 = amount := sorry
  
  /-- The withdraw function returns optimal solutions with limited 20s -/
  
  theorem withdraw_optimal (amount : Int) (h : amount ≥ 20) (h2 : amount % 10 = 0) :
    let (hundreds, fifties, twenties) := withdraw amount
    twenties ≤ 4 := sorry
  
  /-- The withdraw function uses fifties efficiently -/
  
  theorem withdraw_fifty_efficient (amount : Int) (h : amount ≥ 20) (h2 : amount % 10 = 0) :
    let (hundreds, fifties, twenties) := withdraw amount
    fifties > 0 →
    let remainder := amount - (hundreds * 100 + fifties * 50)
    remainder ≥ 0 ∧ remainder % 20 = 0 := sorry
  
  /--
  info: [0, 0, 2]
  -/
  #guard_msgs in
  #eval withdraw 40
  
  /--
  info: [2, 1, 0]
  -/
  #guard_msgs in
  #eval withdraw 250
  
  /--
  info: [2, 0, 3]
  -/
  #guard_msgs in
  #eval withdraw 260

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: guarded

