vc-description: |-
  # Task
  Get the digits sum of `n`th number from the [Look-and-Say sequence](http://en.wikipedia.org/wiki/Look-and-say_sequence)(1-based).
  
  `1, 11, 21, 1211, 111221, 312211, 13112221, 1113213211, ...`
  
  # Input/Output
  
  `[input]` integer `n`
  
  `n`th number in the sequence to get where `1 <= n <= 55`  and `n=1 is "1"`.
  
  [output] an integer
  
  The sum of digits in `n`th number from the `Look-and-Say` sequence.
  
  # Example
  
  For `n = 2`, the output shoule be 2.
  
  `"11" --> 1 + 1 --> 2`
  
  For `n = 3`, the output shoule be 3.
  
  `"21" --> 2 + 1 --> 3`
  
  For `n = 4`, the output shoule be 5.
  
  `"1211" --> 1 + 2 + 1 + 1 --> 5`

vc-preamble: |-

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def look_and_say_and_sum (n : Nat) : Nat := sorry
  
  theorem look_and_say_first_value :
    look_and_say_and_sum 1 = 1 := sorry

vc-theorems: |-
  /--
  info: 1
  -/
  #guard_msgs in
  #eval look_and_say_and_sum 1
  
  /--
  info: 2
  -/
  #guard_msgs in
  #eval look_and_say_and_sum 2
  
  /--
  info: 3
  -/
  #guard_msgs in
  #eval look_and_say_and_sum 3
  
  /--
  info: 5
  -/
  #guard_msgs in
  #eval look_and_say_and_sum 4
  
  /--
  info: 8
  -/
  #guard_msgs in
  #eval look_and_say_and_sum 5

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: guarded_and_plausible

