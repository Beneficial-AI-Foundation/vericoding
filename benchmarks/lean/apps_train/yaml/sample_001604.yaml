vc-description: |-
  Complete the function/method (depending on the language) to return `true`/`True` when its argument is an array that has the same nesting structures and same corresponding length of nested arrays as the first array.
  
  For example:
  
  ```python
  # should return True
  same_structure_as([ 1, 1, 1 ], [ 2, 2, 2 ] )
  same_structure_as([ 1, [ 1, 1 ] ], [ 2, [ 2, 2 ] ] )
  
  # should return False 
  same_structure_as([ 1, [ 1, 1 ] ], [ [ 2, 2 ], 2 ] )
  same_structure_as([ 1, [ 1, 1 ] ], [ [ 2 ], 2 ] )
  
  # should return True
  same_structure_as([ [ [ ], [ ] ] ], [ [ [ ], [ ] ] ] )
  
  # should return False
  same_structure_as([ [ [ ], [ ] ] ], [ [ 1, 1 ] ] )
  ```
  
  ~~~if:javascript
  For your convenience, there is already a function 'isArray(o)' declared and defined that returns true if its argument is an array, false otherwise.
  ~~~
  
  ~~~if:php
  You may assume that all arrays passed in will be non-associative.
  ~~~

vc-preamble: |-

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def same_structure_as {α β : Type} (x : NestedList α) (y : NestedList β) : Bool :=
    sorry

vc-theorems: |-
  theorem same_structure_reflexive {α : Type} (x : NestedList α) :
    same_structure_as x x = true :=
    sorry
  
  theorem same_structure_value_independent {α β : Type} (x : NestedList α) (y : NestedList β) :
    same_structure_as x y = true ∨ same_structure_as x y = false :=
    sorry
  
  theorem same_structure_symmetric {α β : Type} (x : NestedList α) (y : NestedList β) :
    same_structure_as x y = same_structure_as y x :=
    sorry
  
  theorem flat_vs_nested_mismatch {α β : Type} (l : List (NestedList α)) (b : β) :
    l ≠ [] →
    same_structure_as (NestedList.node l) (NestedList.leaf b) = false :=
    sorry
  
  /--
  info: False
  -/
  #guard_msgs in
  #eval same_structure_as [1, [1, 1]] [[2, 2], 2]
  
  /--
  info: True
  -/
  #guard_msgs in
  #eval same_structure_as [1, [1, 1]] [2, [2, 2]]
  
  /--
  info: True
  -/
  #guard_msgs in
  #eval same_structure_as [[[], []]] [[[], []]]

vc-postamble: |-
  -- Apps difficulty: interview
  -- Assurance level: unguarded

