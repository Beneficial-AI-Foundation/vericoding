vc-description: |-
  Description:
  
  #Task:
  
  Write a function that returns true if the number is a "Very Even" number.
  
  If a number is a single digit, then it is simply "Very Even" if it itself is even.
  
  If it has 2 or more digits, it is "Very Even" if the sum of it's digits is "Very Even".
  
  #Examples:
  ```
  input(88) => returns false -> 8 + 8 = 16 -> 1 + 6 = 7 => 7 is odd 
  
  input(222) => returns true
  
  input(5) => returns false
  
  input(841) => returns true -> 8 + 4 + 1 = 13 -> 1 + 3 => 4 is even
  ```
  
  Note: The numbers will always be 0 or positive integers!

vc-preamble: |-
  def is_very_even_number (n : Nat) : Bool := sorry
  
  def digitSum (n : Nat) : Nat := sorry

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def singleDigitSum (n : Nat) : Nat := sorry
  
  theorem very_even_single_digit (n : Nat) :
    n < 10 â†’ is_very_even_number n = (n % 2 = 0) := sorry

vc-theorems: |-
  theorem very_even_digit_sum (n : Nat) :
    is_very_even_number n = (singleDigitSum n % 2 = 0) := sorry
  
  /--
  info: False
  -/
  #guard_msgs in
  #eval is_very_even_number 88
  
  /--
  info: True
  -/
  #guard_msgs in
  #eval is_very_even_number 222
  
  /--
  info: True
  -/
  #guard_msgs in
  #eval is_very_even_number 841

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded

