vc-description: |-
  Theatre Square in the capital city of Berland has a rectangular shape with the size n × m meters. On the occasion of the city's anniversary, a decision was taken to pave the Square with square granite flagstones. Each flagstone is of the size a × a.
  What is the least number of flagstones needed to pave the Square? It's allowed to cover the surface larger than the Theatre Square, but the Square has to be covered. It's not allowed to break the flagstones. The sides of flagstones should be parallel to the sides of the Square.
  Input
  The input contains three positive integer numbers in the first line: n,  m and a (1 ≤  n, m, a ≤ 10^9).
  Output
  Print the needed number of flagstones in new line.
  Examples
  input
  6 6 4
  output
  4

vc-preamble: |-

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def calculate_flagstones (n m a : Nat) : Nat :=
    sorry

vc-theorems: |-
  theorem result_is_positive (n m a : Nat) (h1 : n > 0) (h2 : m > 0) (h3 : a > 0) : 
    calculate_flagstones n m a > 0 :=
    sorry
  
  theorem same_result_for_equal_dims (size a : Nat) (h1 : size > 0) (h2 : a > 0) :
    calculate_flagstones size size a = calculate_flagstones size size a :=
    sorry
  
  theorem result_symmetric (n m a : Nat) (h1 : n > 0) (h2 : m > 0) (h3 : a > 0) :
    calculate_flagstones n m a = calculate_flagstones m n a :=
    sorry
  
  theorem larger_flagstone_fewer_tiles (n m a1 a2 : Nat) 
    (h1 : n > 0) (h2 : m > 0) (h3 : a1 > 0) (h4 : a2 > 0) (h5 : a1 < a2) :
    calculate_flagstones n m a1 ≥ calculate_flagstones n m a2 :=
    sorry
  
  theorem minimal_coverage (n m a : Nat) (h1 : n > 0) (h2 : m > 0) (h3 : a > 0) :
    calculate_flagstones n m a * (a * a) ≥ n * m :=
    sorry
  
  /--
  info: 4
  -/
  #guard_msgs in
  #eval calculate_flagstones 6 6 4
  
  /--
  info: 1
  -/
  #guard_msgs in
  #eval calculate_flagstones 1 1 1
  
  /--
  info: 4
  -/
  #guard_msgs in
  #eval calculate_flagstones 7 7 4

vc-postamble: |-
  -- Apps difficulty: interview
  -- Assurance level: guarded_and_plausible

