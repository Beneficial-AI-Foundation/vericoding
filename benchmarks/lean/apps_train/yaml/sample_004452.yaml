vc-description: |-
  # Task
   You are given a decimal number `n` as a **string**. Transform it into an array of numbers (given as **strings** again), such that each number has only one nonzero digit and their sum equals n.
  
   Each number in the output array should be written without any leading and trailing zeros.
  
  # Input/Output
  
   - `[input]` string `n`
  
   A non-negative number.
  
   `1 ≤ n.length ≤ 30.`
  
   - `[output]` a string array
  
    Elements in the array should be sorted in descending order.
  
  # Example
  
   For `n = "7970521.5544"` the output should be:
   ```
   ["7000000", 
   "900000", 
   "70000", 
   "500", 
   "20", 
   "1", 
   ".5",
   ".05",
   ".004",
   ".0004"]
    ```
   For `n = "7496314"`, the output should be:
   ```
   ["7000000", 
   "400000", 
   "90000", 
   "6000", 
   "300", 
   "10", 
   "4"]
  ```
  
   For `n = "0"`, the output should be `[]`

vc-preamble: |-

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def split_exp (s : String) : List String := sorry
  
  def stringToFloat (s : String) : Float := sorry

vc-theorems: |-
  theorem split_exp_sum_equals_original (s : String) :
    let result := split_exp s
    if result.isEmpty then 
      ∀ (c : Char), s.replace "." "" |>.data.contains c → c = '0'
    else
      let sum := result.foldl (fun acc x => acc + stringToFloat x) 0
      (stringToFloat s - sum).abs < 1e-10 := sorry
  
  theorem split_exp_all_components_nonzero (s : String) :
    let result := split_exp s
    ∀ component, component ∈ result →
      (component.toList.filter (fun c => c.isDigit && c ≠ '0')).length = 1 := sorry
  
  theorem split_exp_ordering (s : String) :
    let result := split_exp s
    let float_results := result.map stringToFloat
    ∀ i j, i < j → j < float_results.length → 
      float_results[i]! ≥ float_results[j]! := sorry
  
  theorem split_exp_zero :
    split_exp "0" = [] ∧
    split_exp "0.0" = [] ∧
    split_exp "00.00" = [] := sorry
  
  /--
  info: ['7000000', '900000', '70000', '500', '20', '1', '.5', '.05', '.004', '.0004']
  -/
  #guard_msgs in
  #eval split_exp "7970521.5544"
  
  /--
  info: ['7000000', '400000', '90000', '6000', '300', '10', '4']
  -/
  #guard_msgs in
  #eval split_exp "7496314"
  
  /--
  info: []
  -/
  #guard_msgs in
  #eval split_exp "0"

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded

