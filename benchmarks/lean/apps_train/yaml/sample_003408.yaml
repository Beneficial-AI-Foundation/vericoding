vc-description: |-
  /-
  **An [isogram](https://en.wikipedia.org/wiki/Isogram)** (also known as a "nonpattern word") is a logological term for a word or phrase without a repeating letter. It is also used by some to mean a word or phrase in which each letter appears the same number of times, not necessarily just once.
  
  You task is to write a method `isogram?` that takes a string argument and returns true if the string has the properties of being an isogram and false otherwise. Anything that is not a string is not an isogram (ints, nils, etc.)
  
  **Properties:**
  
   - must be a string
   - cannot be nil or empty
   - each letter appears the same number of times (not necessarily just once)
   - letter case is not important (= case insensitive)
   - non-letter characters (e.g. hyphens) should be ignored
  -/

vc-preamble: |-

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def is_isogram (s : String) : Bool := sorry
  
  theorem isogram_output_is_bool :
    ∀ s : String, is_isogram s = true ∨ is_isogram s = false := sorry

vc-theorems: |-
  theorem non_string_input_is_false :
    is_isogram "" = false := sorry
  
  theorem case_insensitive :
    ∀ s : String, is_isogram s = is_isogram s.toLower := sorry
  
  /-
  info: True
  -/
  -- #guard_msgs in
  -- #eval is_isogram "Dermatoglyphics"
  
  /-
  info: False
  -/
  -- #guard_msgs in
  -- #eval is_isogram None
  
  /-
  info: True
  -/
  -- #guard_msgs in
  -- #eval is_isogram "aabbccddeeffgg"

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded

