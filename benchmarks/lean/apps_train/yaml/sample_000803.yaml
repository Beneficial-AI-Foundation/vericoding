vc-description: |-
  Chef likes problems which using some math. Now he asks you to solve next one. You have 4 integers, Chef wondering is there non-empty subset which has sum equals 0.
  
  -----Input-----
  The first line of input contains T - number of test cases. 
  Each of the next T lines containing four pairwise distinct integer numbers - a, b, c, d.
  
  -----Output-----
  For each test case output "Yes", if possible to get 0 by choosing non-empty subset of {a, b, c, d} with sum equal 0, or "No" in another case.
  
  -----Constraints-----
  - 1 ≤ T ≤ 103
  - -106 ≤ a, b, c, d ≤ 106 
  
  -----Example-----
  Input:
  3
  1 2 0 3
  1 2 4 -1
  1 2 3 4
  
  Output:
  Yes
  Yes
  No
  
  -----Explanation-----
  Example case 1. We can choose subset {0} 
  Example case 2. We can choose subset {-1, 1}

vc-preamble: |-

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def can_get_zero_sum_subset (a b c d : Int) : String := sorry
  
  theorem zerosum_gives_yes_result {a b c d : Int} (h : a = 0 ∨ b = 0 ∨ c = 0 ∨ d = 0) : 
    can_get_zero_sum_subset a b c d = "Yes" := sorry

vc-theorems: |-
  theorem opposite_pairs_give_yes_result {a b c d : Int} 
    (h : a = -b ∨ a = -c ∨ a = -d ∨ b = -c ∨ b = -d ∨ c = -d) :
    can_get_zero_sum_subset a b c d = "Yes" := sorry
  
  theorem all_positive_gives_no_result {a b c d : Int} 
    (h : a > 0 ∧ b > 0 ∧ c > 0 ∧ d > 0) :
    can_get_zero_sum_subset a b c d = "No" := sorry
  
  theorem all_negative_gives_no_result {a b c d : Int}
    (h : a < 0 ∧ b < 0 ∧ c < 0 ∧ d < 0) :
    can_get_zero_sum_subset a b c d = "No" := sorry
  
  theorem result_is_yes_or_no (a b c d : Int) :
    (can_get_zero_sum_subset a b c d = "Yes") ∨ 
    (can_get_zero_sum_subset a b c d = "No") := sorry
  
  theorem single_zero_gives_yes (x : Int) :
    can_get_zero_sum_subset x 0 (x+1) (x+2) = "Yes" := sorry
  
  theorem opposite_pair_gives_yes (x : Int) :
    can_get_zero_sum_subset x (-x) (x+1) (x+2) = "Yes" := sorry
  
  theorem all_positive_sequence_gives_no (x : Int) (h : x > 0) :
    can_get_zero_sum_subset x (x+1) (x+2) (x+3) = "No" := sorry

vc-postamble: |-
  -- Apps difficulty: interview
  -- Assurance level: guarded

