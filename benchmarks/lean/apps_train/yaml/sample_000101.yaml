vc-description: |-
  /-
  Hooray! Polycarp turned $n$ years old! The Technocup Team sincerely congratulates Polycarp!
  
  Polycarp celebrated all of his $n$ birthdays: from the $1$-th to the $n$-th. At the moment, he is wondering: how many times he turned beautiful number of years?
  
  According to Polycarp, a positive integer is beautiful if it consists of only one digit repeated one or more times. For example, the following numbers are beautiful: $1$, $77$, $777$, $44$ and $999999$. The following numbers are not beautiful: $12$, $11110$, $6969$ and $987654321$.
  
  Of course, Polycarpus uses the decimal numeral system (i.e. radix is 10).
  
  Help Polycarpus to find the number of numbers from $1$ to $n$ (inclusive) that are beautiful.
  
  -----Input-----
  
  The first line contains an integer $t$ ($1 \le t \le 10^4$) — the number of test cases in the input. Then $t$ test cases follow.
  
  Each test case consists of one line, which contains a positive integer $n$ ($1 \le n \le 10^9$) — how many years Polycarp has turned.
  
  -----Output-----
  
  Print $t$ integers — the answers to the given test cases in the order they are written in the test. Each answer is an integer: the number of beautiful years between $1$ and $n$, inclusive.
  
  -----Example-----
  Input
  6
  18
  1
  9
  100500
  33
  1000000000
  
  Output
  10
  1
  9
  45
  12
  81
  
  -----Note-----
  
  In the first test case of the example beautiful years are $1$, $2$, $3$, $4$, $5$, $6$, $7$, $8$, $9$ and $11$.
  -/

vc-preamble: |-

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def count_beautiful_numbers (n : Nat) : Nat := sorry
  
  theorem count_beautiful_range (n : Nat) (h : n > 0) :
    1 ≤ count_beautiful_numbers n ∧ count_beautiful_numbers n ≤ 81 := sorry

vc-theorems: |-
  theorem count_beautiful_monotonic (n : Nat) (h : n > 1) :
    count_beautiful_numbers n ≥ count_beautiful_numbers (n-1) := sorry
  
  theorem count_beautiful_single_digits (d : Nat) (h1 : d > 0) (h2 : d ≤ 9) :
    count_beautiful_numbers d = d := sorry
  
  theorem count_beautiful_powers_ten :
    count_beautiful_numbers 99 = 18 ∧ 
    count_beautiful_numbers 999 = 27 ∧
    count_beautiful_numbers 9999 = 36 := sorry
  
  /-
  info: 10
  -/
  -- #guard_msgs in
  -- #eval count_beautiful_numbers 18
  
  /-
  info: 9
  -/
  -- #guard_msgs in
  -- #eval count_beautiful_numbers 9
  
  /-
  info: 45
  -/
  -- #guard_msgs in
  -- #eval count_beautiful_numbers 100500

vc-postamble: |-
  -- Apps difficulty: interview
  -- Assurance level: guarded_and_plausible

