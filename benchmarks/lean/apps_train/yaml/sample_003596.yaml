vc-description: |-
  You've just recently been hired to calculate scores for a  Dart Board game!
  
  Scoring specifications:
  
  * 0 points - radius above 10
  * 5 points - radius between 5 and 10 inclusive
  * 10 points - radius less than 5
  
  **If all radii are less than 5, award 100 BONUS POINTS!**
  
  Write a function that accepts an array of radii (can be integers and/or floats), and returns a total score using the above specification.
  
  An empty array should return 0.
  
  ## Examples:

vc-preamble: |-
  def score_throws (radiuses : List Float) : Nat := sorry
  
  theorem score_throws_empty : 
    score_throws [] = 0 := sorry
  
  def throw_points (r : Float) : Nat :=
    if r < 5 then 10
    else if r ≤ 10 then 5
    else 0

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def bonus_points (radiuses : List Float) : Nat :=
    match radiuses with
    | [] => 0
    | xs => if (∀ r ∈ xs, r < 5) then 100 else 0

vc-theorems: |-
  /--
  info: 15
  -/
  #guard_msgs in
  #eval score_throws [1, 5, 11]
  
  /--
  info: 140
  -/
  #guard_msgs in
  #eval score_throws [1, 2, 3, 4]
  
  /--
  info: 0
  -/
  #guard_msgs in
  #eval score_throws []

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: guarded_and_plausible

