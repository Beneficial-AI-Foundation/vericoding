vc-description: |-
  We have two consecutive integers k1 and k2, k2 = k1 + 1
  
  We need to calculate the lowest integer `n`, such that:
  the values nk1 and nk2 have the same digits but in different order.
  
  E.g.# 1:
  ```
  k1 = 100
  k2 = 101
  n = 8919
  #Because 8919 * 100 = 891900 
  and      8919 * 101 = 900819
  ```
  
  E.g.# 2:
  ```
  k1 = 325
  k2 = 326
  n = 477
  #Because 477 * 325 = 155025
  and      477 * 326 = 155502
  ```
  
  Your task is to prepare a function that will receive the value of `k` and outputs the value of `n`.
  
  The examples given above will be:
  ```python
  find_lowest_int(100) === 8919
  find_lowest_int(325) ===  477
  ```
  Features of the random tests
  ```
  10 < k < 10.000.000.000.000.000 (For Python, Ruby and Haskell)
  10 < k < 1.000.000.000  (For Javascript 1e9)
  ```
  Enjoy it!!
  
  Ruby and Javascript versions will be released soon.

vc-preamble: |-

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def find_lowest_int (k : Nat) : Nat := sorry
  
  def digits_to_sorted_list (n : Nat) : List Nat := sorry

vc-theorems: |-
  theorem find_lowest_int_positive (k : Nat) (h : k > 0) : 
    find_lowest_int k > 0 := sorry
  
  theorem find_lowest_int_products_different (k : Nat) (h : k > 0) :
    find_lowest_int k * k â‰  find_lowest_int k * (k + 1) := sorry
  
  /--
  info: 8919
  -/
  #guard_msgs in
  #eval find_lowest_int 100
  
  /--
  info: 477
  -/
  #guard_msgs in
  #eval find_lowest_int 325
  
  /--
  info: 2394
  -/
  #guard_msgs in
  #eval find_lowest_int 599

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: guarded_and_plausible

