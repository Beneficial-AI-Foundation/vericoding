vc-description: |-
  Rick wants a faster way to get the product of the largest pair in an array. Your task is to create a performant solution to find the product of the largest two integers in a unique array of positive numbers. All inputs will be valid.
  Passing [2, 6, 3] should return 18, the product of [6, 3].
  
  ```Disclaimer: Mr. Roll will only accept solutions that are faster than his, which has a running time O(nlogn).``` 
  
  ```python
  max_product([2, 1, 5, 0, 4, 3])              # => 20
  max_product([7, 8, 9])                       # => 72
  max_product([33, 231, 454, 11, 9, 99, 57])   # => 104874
  ```

vc-preamble: |-

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def max_product (l: List Int) : Option Int := sorry
  
  theorem max_product_symmetric (nums: List Int) :
    max_product nums = max_product nums.reverse := sorry

vc-theorems: |-
  /--
  info: 20
  -/
  #guard_msgs in
  #eval max_product [2, 1, 5, 0, 4, 3]
  
  /--
  info: 72
  -/
  #guard_msgs in
  #eval max_product [7, 8, 9]
  
  /--
  info: 104874
  -/
  #guard_msgs in
  #eval max_product [33, 231, 454, 11, 9, 99, 57]

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: guarded_and_plausible

