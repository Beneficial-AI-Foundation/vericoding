vc-description: |-
  Write a simple parser that will parse and run Deadfish.  
  
  Deadfish has 4 commands, each 1 character long:
  * `i` increments the value (initially `0`)
  * `d` decrements the value
  * `s` squares the value
  * `o` outputs the value into the return array
  
  Invalid characters should be ignored.
  
  ```python
  parse("iiisdoso")  ==>  [8, 64]
  ```

vc-preamble: |-

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def parse (s : String) : List Int := sorry
  
  def countChar (s : String) (c : Char) : Nat := 
    s.toList.filter (· = c) |>.length

vc-theorems: |-
  theorem parse_output_bounded (s : String) :
    ∀ x ∈ parse s, x ≥ -s.length
    := sorry
  
  /--
  info: [0, 0, 0]
  -/
  #guard_msgs in
  #eval parse "ooo"
  
  /--
  info: [1, 2, 3]
  -/
  #guard_msgs in
  #eval parse "ioioio"
  
  /--
  info: [0, 1]
  -/
  #guard_msgs in
  #eval parse "idoiido"

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: guarded_and_plausible

