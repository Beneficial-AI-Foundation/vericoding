vc-description: |-
  ## Objective
  
  Given a number `n` we will define it's sXORe to be `0 XOR 1 XOR 2 ... XOR n` where `XOR` is the [bitwise XOR operator](https://en.wikipedia.org/wiki/Bitwise_operation#XOR).
  
  Write a function that takes `n` and returns it's sXORe.
  
  ## Examples
  |    n    | sXORe n
  |---------|--------         
  | 0       | 0
  | 1       | 1
  | 50      | 51
  | 1000000 | 1000000
  ---

vc-preamble: |-

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def sxore (n : Nat) : Nat := sorry
  
  theorem sxore_matches_manual_xor (n : Nat) : 
    sxore n = (List.range (n + 1)).foldl Nat.xor 0 := sorry

vc-theorems: |-
  theorem sxore_output_pattern (n : Nat) :
    (n % 4 = 0 → sxore n = n) ∧
    (n % 4 = 1 → sxore n = 1) ∧ 
    (n % 4 = 2 → sxore n = n + 1) ∧
    (n % 4 = 3 → sxore n = 0) := sorry

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: guarded_and_plausible

