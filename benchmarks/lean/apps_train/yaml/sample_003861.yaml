vc-description: |-
  #Permutation  position
  In this kata you will have to permutate through a string of lowercase letters, each permutation will start at ```a``` and you must calculate how many iterations it takes to reach the current permutation.
  
  ##examples
  ```
  input: 'a'
  result: 1
  
  input: 'c'
  result: 3
  
  input: 'z'
  result: 26
  
  input: 'foo'
  result: 3759
  
  input: 'aba'
  result: 27
  
  input: 'abb'
  result: 28
  
  ```

vc-preamble: |-

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def permutation_position (s : String) : Nat := sorry 
  
  def position_to_perm (pos : Nat) : String := sorry

vc-theorems: |-
  theorem permutation_position_positive (s : String) (h : s â‰  "") :
    permutation_position s > 0 := sorry
  
  /--
  info: 1
  -/
  #guard_msgs in
  #eval permutation_position "a"
  
  /--
  info: 26
  -/
  #guard_msgs in
  #eval permutation_position "z"
  
  /--
  info: 3759
  -/
  #guard_msgs in
  #eval permutation_position "foo"

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: guarded_and_plausible

