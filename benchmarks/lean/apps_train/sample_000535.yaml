vc-description: |-
  In a fictitious city of CODASLAM there were many skyscrapers. The mayor of the city decided to make the city beautiful and for this he decided to arrange the skyscrapers in descending order of their height, and the order must be strictly decreasing but he also didn’t want to waste much money so he decided to get the minimum cuts possible. Your job is to output the minimum value of cut that is possible to arrange the skyscrapers in descending order.
  
  -----Input-----
  
  *First line of input is the number of sky-scrappers in the city
  *Second line of input is the height of the respective sky-scrappers
  
  -----Output-----
  
  * Your output should be the minimum value of cut required to arrange these sky-scrappers in descending order.
  
  -----Example-----
  Input:
  5
  1 2 3 4 5
  
  Output:
  8
  
  By:
  Chintan,Asad,Ashayam,Akanksha

vc-preamble: |-

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def min_cuts_for_skyscrapers (n : Nat) (heights : List Nat) : Nat := sorry
  
  theorem cuts_non_negative (n : Nat) (heights : List Nat) :
    min_cuts_for_skyscrapers n heights ≥ 0 := sorry

vc-theorems: |-
  theorem single_building_no_cuts (h : Nat) :
    min_cuts_for_skyscrapers 1 [h] = 0 := sorry
  
  theorem cuts_non_negative_multi (n : Nat) (heights : List Nat) :
    n ≥ 2 → min_cuts_for_skyscrapers n heights ≥ 0 := sorry
  
  /--
  info: 8
  -/
  #guard_msgs in
  #eval min_cuts_for_skyscrapers 5 [1, 2, 3, 4, 5]
  
  /--
  info: 0
  -/
  #guard_msgs in
  #eval min_cuts_for_skyscrapers 5 [5, 4, 3, 2, 1]

vc-postamble: |-
  -- Apps difficulty: interview
  -- Assurance level: unguarded

