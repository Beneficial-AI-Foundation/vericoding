vc-description: |-
  Write a function, that doubles every second integer in a list starting from the left.
vc-preamble: |-
  import Imports.AllImports
vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>
vc-definitions: |
  def double_every_other : List Int â†’ List Int
    | _ => sorry
vc-theorems: |
  theorem double_every_other_length (lst : List Int) :
    (double_every_other lst).length = lst.length :=
  sorry






  theorem double_every_other_empty :
    double_every_other [] = [] :=
  sorry


  theorem double_every_other_singleton (x : Int) :
    double_every_other [x] = [x] :=
  sorry

  /--
  info: [1, 4, 3, 8, 5]
  -/
  #guard_msgs in
  #eval double_every_other [1, 2, 3, 4, 5]

  /--
  info: [1, 38, 6, 4, 12, -6]
  -/
  #guard_msgs in
  #eval double_every_other [1, 19, 6, 2, 12, -3]

  /--
  info: [-1000, 3306, 210, 0, 1]
  -/
  #guard_msgs in
  #eval double_every_other [-1000, 1653, 210, 0, 1]
vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: guarded_and_plausible
