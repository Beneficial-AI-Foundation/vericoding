vc-description: |-
  Consider the infinite x$x$ axis. There are N$N$ impacts on this X-axis at integral points (X1$X_1$,X2$X_2$,....XN$X_N$)  (all distinct) . An impact at a point X$X$i propagates such that at a point X$X$0, the effect of the impact is K|Xi−X0|$K^{|X_i - X_0|}$. Given the point X0$X_0$, N$N$ and K$K$. Assume the total impact on X0$X_0$ is M$M$, find if it is possible to do so.Note: You are not required to find the set X

  Formally print "yes" if this is possible and "no" if not possible.

  -----Input:-----
  - First line will contain T$T$, number of testcases. Then the testcases follow. 
  -  Each testcase contains of a single line of input, four integers N$N$,K$K$,M$M$,X$X$0 

  -----Output:-----
  -  The output of each test case is either "yes" or "no"

  -----Constraints -----
  -  1≤T≤1000$1\leq T \leq 1000$
  -  1≤N≤100$1\leq N \leq 100$
  -  1≤K≤1000$1\leq K \leq 1000$
  -  1≤M≤1018$1\leq M \leq 10^{18}$
  -  −109≤X0≤109$-10^9 \leq X_0 \leq 10^9$ 

  -----Sample Input:-----
  	2

  4 3 10 10

  2 3 10 10

  -----Sample Output:-----
  	no

  yes
vc-preamble: |-
  import Imports.AllImports
vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>
vc-definitions: |
  def solve_impact_points (N : Nat) (K : Nat) (M : Nat) (X0 : Nat) : String := sorry

  theorem solve_impact_points_returns_valid_output 
    (N : Nat) (K : Nat) (M : Nat) (X0 : Nat)
    (hN : 1 ≤ N ∧ N ≤ 1000)
    (hK : 1 ≤ K ∧ K ≤ 10) 
    (hM : 0 ≤ M ∧ M ≤ 1000)
    (hX0 : 0 ≤ X0 ∧ X0 ≤ 1000) :
    solve_impact_points N K M X0 = "yes" ∨ 
    solve_impact_points N K M X0 = "no" := sorry
vc-theorems: |
  theorem k_equals_one_property
    (N : Nat) (M : Nat) (X0 : Nat)
    (hN : 1 ≤ N ∧ N ≤ 1000)
    (hM : 0 ≤ M ∧ M ≤ 1000)
    (hX0 : 0 ≤ X0 ∧ X0 ≤ 1000) :
    solve_impact_points N 1 M X0 = (if N = M then "yes" else "no") := sorry


  theorem k_two_three_property_mod
    (N : Nat) (K : Nat) (M : Nat) (X0 : Nat)
    (hN : 1 ≤ N ∧ N ≤ 100)
    (hK : K = 2 ∨ K = 3)
    (hM : 0 ≤ M ∧ M ≤ 100)
    (hX0 : 0 ≤ X0 ∧ X0 ≤ 100)
    (hmod : M % K > 1) :
    solve_impact_points N K M X0 = "no" := sorry


  theorem k_three_digit_property
    (N : Nat) (M : Nat) (X0 : Nat)
    (hN : 1 ≤ N ∧ N ≤ 100)
    (hM : 0 ≤ M ∧ M ≤ 100)
    (hX0 : 0 ≤ X0 ∧ X0 ≤ 100)
    (hdigit : ∃ d, d > 2 ∧ ∃ k, M = d + 3 * k) :
    solve_impact_points N 3 M X0 = "no" := sorry


  theorem x0_invariant
    (N : Nat) (K : Nat) (M : Nat) (X0_1 X0_2 : Nat)
    (hN : 1 ≤ N ∧ N ≤ 100)
    (hK : 1 ≤ K ∧ K ≤ 10)
    (hM : 0 ≤ M ∧ M ≤ 100)
    (hX0_1 : 0 ≤ X0_1 ∧ X0_1 ≤ 100)
    (hX0_2 : 0 ≤ X0_2 ∧ X0_2 ≤ 100) :
    solve_impact_points N K M X0_1 = solve_impact_points N K M X0_2 := sorry

  /--
  info: 'no'
  -/
  #guard_msgs in
  #eval solve_impact_points 4 3 10 10

  /--
  info: 'yes'
  -/
  #guard_msgs in
  #eval solve_impact_points 2 3 10 10

  /--
  info: 'yes'
  -/
  #guard_msgs in
  #eval solve_impact_points 1 3 3 0
vc-postamble: |-
  -- Apps difficulty: interview
  -- Assurance level: unguarded
