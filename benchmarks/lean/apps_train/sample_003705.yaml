vc-description: |-
  In Russia, there is an army-purposed station named UVB-76 or "Buzzer" (see also https://en.wikipedia.org/wiki/UVB-76). Most of time specific "buzz" noise is being broadcasted, but on very rare occasions, the buzzer signal is interrupted and a voice transmission in Russian takes place. Transmitted messages have always the same format like this:
  
   MDZHB 01 213 SKIF 38 87 23 95 
  
  or: 
  
   MDZHB 80 516 GANOMATIT 21 23 86 25 
  
  Message format consists of following parts:
  
   Initial keyword "MDZHB"; 
   Two groups of digits, 2 digits in first and 3 in second ones; 
   Some keyword of arbitrary length consisting only of uppercase letters; 
   Final 4 groups of digits with 2 digits in each group. 
  
  Your task is to write a function that can validate the correct UVB-76 message. Function should return "True" if message is in correct format and "False" otherwise.

vc-preamble: |-

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def validate (message : String) : Bool :=
    sorry

vc-theorems: |-
  theorem validate_valid_messages (message : String) : 
    (∃ digits1 digits2 digits3 word digits4 digits5 digits6 digits7 : String,
      message = s!"MDZHB {digits1} {digits2} {word} {digits4} {digits5} {digits6} {digits7}" ∧
      digits1.length = 2 ∧
      digits2.length = 3 ∧
      word.all Char.isUpper ∧
      digits4.length = 2 ∧
      digits5.length = 2 ∧
      digits6.length = 2 ∧
      digits7.length = 2 ∧
      digits1.all Char.isDigit ∧
      digits2.all Char.isDigit ∧
      digits4.all Char.isDigit ∧
      digits5.all Char.isDigit ∧
      digits6.all Char.isDigit ∧
      digits7.all Char.isDigit) →
    validate message = true :=
  sorry
  
  theorem validate_invalid_messages (message : String) :
    (¬∃ digits1 digits2 digits3 word digits4 digits5 digits6 digits7 : String,
      message = s!"MDZHB {digits1} {digits2} {word} {digits4} {digits5} {digits6} {digits7}" ∧
      digits1.length = 2 ∧
      digits2.length = 3 ∧
      word.all Char.isUpper ∧
      digits4.length = 2 ∧
      digits5.length = 2 ∧
      digits6.length = 2 ∧
      digits7.length = 2 ∧
      digits1.all Char.isDigit ∧
      digits2.all Char.isDigit ∧
      digits4.all Char.isDigit ∧
      digits5.all Char.isDigit ∧
      digits6.all Char.isDigit ∧
      digits7.all Char.isDigit) →
    validate message = false :=
  sorry
  
  theorem validate_correct_pattern (message : String) :
    validate message = true →
    ∃ digits1 digits2 digits3 word digits4 digits5 digits6 digits7 : String,
      message = s!"MDZHB {digits1} {digits2} {word} {digits4} {digits5} {digits6} {digits7}" ∧
      digits1.length = 2 ∧
      digits2.length = 3 ∧
      word.all Char.isUpper ∧
      digits4.length = 2 ∧
      digits5.length = 2 ∧
      digits6.length = 2 ∧
      digits7.length = 2 ∧
      digits1.all Char.isDigit ∧
      digits2.all Char.isDigit ∧
      digits4.all Char.isDigit ∧
      digits5.all Char.isDigit ∧
      digits6.all Char.isDigit ∧
      digits7.all Char.isDigit :=
  sorry
  
  /--
  info: True
  -/
  #guard_msgs in
  #eval validate "MDZHB 85 596 KLASA 81 00 02 91"
  
  /--
  info: False
  -/
  #guard_msgs in
  #eval validate "MDZHV 60 130 VATRUKH 58 89 54 54"
  
  /--
  info: False
  -/
  #guard_msgs in
  #eval validate "MDZHB 12 733 EDIN ENIE 67 79 66 32"

vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded

