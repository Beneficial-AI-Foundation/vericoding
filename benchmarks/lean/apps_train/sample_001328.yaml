vc-description: |-
  -----General Statement:-----
  Given the actual high and low temperatures for the day and the normal high and low temperatures for that day, calculate the average difference from normal.

  -----Input:-----
  The first line of the data set for this problem is an integer that represents the number of data sets that follow. Each data set is on a separate line and consists of today’s high, today’s low, normal high, and normal low – in that order.

  -----Output:-----
  If the average difference is negative, do not output the negative sign (-).
  Output the amount of deviation from normal, followed by the words
  DEGREE(S) ABOVE NORMAL, or by the words
  DEGREE(S) BELOW NORMAL.
  Round to 1 decimal place. A trailing zero is required if the average is an integer.
  The output is to be formatted exactly like that for the sample output given below.

  -----Assumptions:-----
  Temperatures are in the range –15..100 degrees.
  The average temperature difference will not be zero.

  -----Discussion:-----
  Determine the average of the difference of the high temperatures and the difference of the low temperatures.

  -----Sample Input:-----
  3
  75 45 78 40
  50 32 45 30
  56 48 62 45

  -----Sample Output:-----
  1.0 DEGREE(S) ABOVE NORMAL
  3.5 DEGREE(S) ABOVE NORMAL
  1.5 DEGREE(S) BELOW NORMAL
vc-preamble: |-
  import Imports.AllImports

  def calculate_temp_difference (today_high today_low normal_high normal_low : Int) : String := sorry

  def String.contains? (s : String) (substr : String) : Bool := sorry
vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>
vc-definitions: |
  def String.toFloat (s : String) : Float := sorry
  def Int.toFloat (i : Int) : Float := sorry
vc-theorems: |-
  theorem temp_diff_result_format (today_high today_low normal_high normal_low : Int) 
    (h1 : today_high ≥ today_low) (h2 : normal_high ≥ normal_low) :
    let result := calculate_temp_difference today_high today_low normal_high normal_low
    ∃ (diff : String) (dir : String),
      result = diff ++ " DEGREE(S) " ++ dir ++ " NORMAL" ∧
      (dir = "ABOVE" ∨ dir = "BELOW") := sorry


  theorem temp_diff_nonnegative (today_high today_low normal_high normal_low : Int)
    (h1 : today_high ≥ today_low) (h2 : normal_high ≥ normal_low) :
    let result := calculate_temp_difference today_high today_low normal_high normal_low
    let parts := result.splitOn " DEGREE(S) "
    let diff := parts[0]!
    String.toFloat diff ≥ 0 := sorry


  theorem temp_diff_direction (today_high today_low normal_high normal_low : Int)
    (h1 : today_high ≥ today_low) (h2 : normal_high ≥ normal_low) :
    let result := calculate_temp_difference today_high today_low normal_high normal_low
    let avg_today : Float := (today_high.toFloat + today_low.toFloat) / 2
    let avg_normal : Float := (normal_high.toFloat + normal_low.toFloat) / 2
    (avg_today > avg_normal → result.contains? "ABOVE") ∧
    (avg_today ≤ avg_normal → result.contains? "BELOW") := sorry
vc-postamble: |-
  -- Apps difficulty: interview
  -- Assurance level: guarded
