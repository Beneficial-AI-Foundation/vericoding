vc-description: |-
  You're a programmer in a SEO company. The SEO specialist of your company gets the list of all project keywords everyday, then he looks for the longest keys to analyze them.

  You will get the list with keywords and must write a simple function that returns the biggest search keywords and sorts them in lexicographical order.

  For instance you might get:
  ```python
  'key1', 'key2', 'key3', 'key n', 'bigkey2', 'bigkey1'
  ```

  And your function should return:
  ```python
  "'bigkey1', 'bigkey2'"
  ```

  Don't forget to rate this kata! Thanks :)
vc-preamble: |-
  import Imports.AllImports
vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>
vc-definitions: |
  def the_biggest_search_keys : List String → String := sorry

  theorem returns_string {keys : List String} :
    ∃ s : String, the_biggest_search_keys keys = s := sorry
vc-theorems: |-
  theorem empty_input_returns_empty {keys : List String} :
    keys = [] → the_biggest_search_keys keys = "''" := sorry


  theorem basic_properties {keys : List String} (h : keys ≠ []) :
    let result := the_biggest_search_keys keys
    let max_len := List.foldl (fun acc k => max acc k.length) 0 keys
    let result_list := (result.splitOn ",").map String.trim
    result ≠ "''" →
    (∀ k ∈ result_list, k.startsWith "'" ∧ k.endsWith "'") ∧
    result_list ≠ [] := sorry
vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: guarded
