vc-description: |-
  ## Task

  Your challenge is to write a function named `getSlope`/`get_slope`/`GetSlope` that calculates the slope of the line through two points.

  ## Input

  ```if:javascript,python
  Each point that the function takes in is an array 2 elements long. The first number is the x coordinate and the second number is the y coordinate.
  If the line through the two points is vertical or if the same point is given twice, the function should return `null`/`None`.
  ```

  ```if:csharp
  `GetSlope` will take in two Point objects. If the line through the two points is vertical, or the two points are the same, return `null`.

  The Point object:

  ~~~
  public class Point : System.Object
  {
    public double X;
    public double Y;
    
    public Point(double x, double y)
    {
      this.X = x;
      this.Y = y;
    }
    
    public override string ToString()
    {
      return $"({this.X}, {this.Y})";
    }
    
    public override bool Equals(object point)
    {
      // Typechecking
      if (point == null || point.GetType() != this.GetType())
      {
        return false;
      }
      
      return this.ToString() == point.ToString();
    }
  }
  ~~~

  ```
vc-preamble: |-
  import Imports.AllImports
vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>
vc-definitions: |
  def Point := Float × Float

  def get_slope : Point → Point → Option Float := sorry
vc-theorems: |
  theorem slope_same_direction {p1 p2 : Point} :
    get_slope p1 p2 = get_slope p2 p1 := sorry


  theorem slope_formula {p1 p2 : Point} (h : p1.1 ≠ p2.1) :
    match get_slope p1 p2 with
    | some s => (s - (p2.2 - p1.2)/(p2.1 - p1.1)).abs < 1e-10
    | none => False := sorry


  theorem slope_same_point {p : Point} :
    get_slope p p = none := sorry


  theorem slope_vertical {p1 p2 : Point} :
    p1.1 = p2.1 → get_slope p1 p2 = none := sorry

  /--
  info: 1
  -/
  #guard_msgs in
  #eval get_slope [1, 1] [2, 2]

  /--
  info: None
  -/
  #guard_msgs in
  #eval get_slope [1, 1] [1, 2]

  /--
  info: -1
  -/
  #guard_msgs in
  #eval get_slope [11, 1] [1, 11]
vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded
