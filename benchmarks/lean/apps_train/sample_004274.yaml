vc-description: |-
  A *Vampire number* is a positive integer `z` with a factorization `x * y = z` such that

  - `x` and `y` have the same number of digits and
  - the multiset of digits of `z` is equal to the multiset of digits of `x` and `y`.
  - Additionally, to avoid trivialities, `x` and `y` may not both end with `0`.

  In this case, `x` and `y` are called *fangs* of `z`. (The fangs of a Vampire number may not be unique, but this shouldn't bother us.) The first three Vampire numbers are

  ```
  1260 = 21*60
  1395 = 15*93
  1435 = 35*41
  ```

  Write an algorithm that on input `k` returns the `k`th Vampire number. To avoid time-outs, the Python version will test with `1 <= k <= 155`.

  PS: In the OEIS, the Vampire numbers are sequence [A014575](https://oeis.org/A014575).

  PPS: So called *Pseudo-Vampire Numbers* are treated in [this kata](http://www.codewars.com/kata/vampire-numbers-1).
vc-preamble: |-
  import Imports.AllImports
vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>
vc-definitions: |
  def vampire_number (n: Nat): Nat :=
    sorry
vc-theorems: |
  theorem vampire_number_gives_positive {n: Nat} (h: 1 ≤ n ∧ n ≤ 155): 
    vampire_number n > 0 := 
    sorry


  theorem vampire_result_has_even_digits {n: Nat} (h: 1 ≤ n ∧ n ≤ 155):
    ∃ k, String.length (Nat.repr (vampire_number n)) = 2 * k :=
    sorry


  theorem vampire_has_valid_factors {n: Nat} (h: 1 ≤ n ∧ n ≤ 155): 
    ∃ x y: Nat, 
      -- x and y are factors
      vampire_number n = x * y ∧ 
      -- x and y have equal number of digits
      String.length (Nat.repr x) = String.length (Nat.repr y) ∧
      -- Combined digits of factors give original number
      Nat.repr x ++ Nat.repr y = Nat.repr (vampire_number n) ∧
      -- Not both ending in 0
      ¬(x % 10 = 0 ∧ y % 10 = 0) :=
    sorry


  theorem vampire_numbers_increasing {n₁ n₂: Nat} 
    (h₁: 1 ≤ n₁ ∧ n₁ ≤ 155) (h₂: 1 ≤ n₂ ∧ n₂ ≤ 155) (h₃: n₁ < n₂):
    vampire_number n₁ < vampire_number n₂ :=
    sorry


  theorem vampire_undefined_outside_range (n: Nat) (h: n ≥ 156):
    ¬∃ m: Nat, vampire_number n = m :=
    sorry

  /--
  info: 105210
  -/
  #guard_msgs in
  #eval vampire_number 10

  /--
  info: 336960
  -/
  #guard_msgs in
  #eval vampire_number 100

  /--
  info: 939658
  -/
  #guard_msgs in
  #eval vampire_number 155
vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded
