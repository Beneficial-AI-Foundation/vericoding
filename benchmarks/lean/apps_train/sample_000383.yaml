vc-description: |-
  Write a program to find the n-th ugly number.
  Ugly numbers are positive integers which are divisible by a or b or c.
  
  Example 1:
  Input: n = 3, a = 2, b = 3, c = 5
  Output: 4
  Explanation: The ugly numbers are 2, 3, 4, 5, 6, 8, 9, 10... The 3rd is 4.
  Example 2:
  Input: n = 4, a = 2, b = 3, c = 4
  Output: 6
  Explanation: The ugly numbers are 2, 3, 4, 6, 8, 9, 10, 12... The 4th is 6.
  
  Example 3:
  Input: n = 5, a = 2, b = 11, c = 13
  Output: 10
  Explanation: The ugly numbers are 2, 4, 6, 8, 10, 11, 12, 13... The 5th is 10.
  
  Example 4:
  Input: n = 1000000000, a = 2, b = 217983653, c = 336916467
  Output: 1999999984
  
  Constraints:
  
  1 <= n, a, b, c <= 10^9
  1 <= a * b * c <= 10^18
  It's guaranteed that the result will be in range [1, 2 * 10^9]

vc-preamble: |-
  def find_nth_ugly_number (n a b c : Nat) : Nat := sorry
  
  def gcd (a b : Nat) : Nat := sorry

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-definitions: |-
  def count_divisible (num a b c : Nat) : Nat := sorry
  
  theorem ugly_number_divisible (n a b c : Nat) (h1 : n > 0) (h2 : a > 0) (h3 : b > 0) (h4 : c > 0) :
    let result := find_nth_ugly_number n a b c
    result % a = 0 ∨ result % b = 0 ∨ result % c = 0 := sorry

vc-theorems: |-
  theorem ugly_number_positive (n a b c : Nat) (h1 : n > 0) (h2 : a > 0) (h3 : b > 0) (h4 : c > 0) :
    find_nth_ugly_number n a b c > 0 := sorry
  
  theorem ugly_number_min_bound (n a b c : Nat) (h1 : n > 0) (h2 : a > 0) (h3 : b > 0) (h4 : c > 0) :
    find_nth_ugly_number n a b c ≥ min a (min b c) := sorry
  
  theorem ugly_number_max_bound (n a b c : Nat) (h1 : n > 0) (h2 : a > 0) (h3 : b > 0) (h4 : c > 0) :
    find_nth_ugly_number n a b c ≤ n * min a (min b c) := sorry
  
  theorem ugly_number_equal_divisors (a : Nat) (h : a > 0) :
    find_nth_ugly_number 1 a a a = a := sorry
  
  /--
  info: 4
  -/
  #guard_msgs in
  #eval find_nth_ugly_number 3 2 3 5
  
  /--
  info: 6
  -/
  #guard_msgs in
  #eval find_nth_ugly_number 4 2 3 4
  
  /--
  info: 10
  -/
  #guard_msgs in
  #eval find_nth_ugly_number 5 2 11 13

vc-postamble: |-
  -- Apps difficulty: interview
  -- Assurance level: guarded_and_plausible

