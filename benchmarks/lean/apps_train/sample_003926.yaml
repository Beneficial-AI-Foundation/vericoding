vc-description: |-
  After a hard quarter in the office you decide to get some rest on a vacation. So you will book a flight for you and your girlfriend and try to leave all the mess behind you.

  You will need a rental car in order for you to get around in your vacation. The manager of the car rental makes you some good offers.

  Every day you rent the car costs $40. If you rent the car for 7 or more days, you get $50 off your total. Alternatively, if you rent the car for 3 or more days, you get $20 off your total.

  Write a code that gives out the total amount for different days(d).
vc-preamble: |-
  import Imports.AllImports
vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>
vc-definitions: |
  def rental_car_cost (days : Int) : Int := sorry

  theorem rental_cost_always_positive {days : Int} (h : days > 0) : 
    rental_car_cost days ≥ 0 := sorry
vc-theorems: |
  theorem rental_base_calculation (days : Int) :
    (days < 3 → rental_car_cost days = days * 40) ∧
    (3 ≤ days ∧ days < 7 → rental_car_cost days = days * 40 - 20) ∧
    (days ≥ 7 → rental_car_cost days = days * 40 - 50) := sorry


  theorem no_discount_short_rental {days : Int} (h1 : days ≤ 2) (h2 : days > 0) :
    rental_car_cost days = days * 40 := sorry


  theorem long_rental_discount {days : Int} (h : days ≥ 7) :
    rental_car_cost days = days * 40 - 50 := sorry


  theorem medium_rental_discount {days : Int} (h1 : days ≥ 3) (h2 : days ≤ 6) :
    rental_car_cost days = days * 40 - 20 := sorry

  /--
  info: 80
  -/
  #guard_msgs in
  #eval rental_car_cost 2

  /--
  info: 180
  -/
  #guard_msgs in
  #eval rental_car_cost 5

  /--
  info: 350
  -/
  #guard_msgs in
  #eval rental_car_cost 10
vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: guarded
