vc-description: |-
  Complete the function so that it takes an array of keys and a default value and returns a hash (Ruby) / dictionary (Python) with all keys set to the default value. 

  ## Example

  ```python
  ["draft", "completed"], 0   # should return {"draft": 0, "completed: 0}
  ```
vc-preamble: |-
  import Imports.AllImports
vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>
vc-definitions: |
  def populate_dict {α β : Type} (keys : List α) (default : β) : List (α × β) := sorry

  theorem populate_dict_size {α β : Type} (keys : List α) (default : β) :
    (populate_dict keys default).length = keys.length := sorry
vc-theorems: |-
  theorem populate_dict_contains_all_keys {α β : Type} (keys : List α) (default : β) :
    ∀ k ∈ keys, k ∈ (populate_dict keys default).map Prod.fst := sorry


  theorem populate_dict_all_values_default {α β : Type} (keys : List α) (default : β) :
    ∀ v ∈ (populate_dict keys default).map Prod.snd, v = default := sorry
vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: guarded
