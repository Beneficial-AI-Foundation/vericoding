vc-description: |-
  # Definition

  **_Strong number_** is the number that *the sum of the factorial of its digits is equal to number itself*.

  ## **_For example_**:  **_145_**, since 
  ```
  1! + 4! + 5! = 1 + 24 + 120 = 145
  ```
  So, **_145_** is a **_Strong number_**. 
  ____

  # Task

  **_Given_** a number, **_Find if it is Strong or not_**.
  ____

  # Warm-up (Highly recommended)

  # [Playing With Numbers Series](https://www.codewars.com/collections/playing-with-numbers)
  ___

  # Notes 

  * **_Number_** *passed is always*  **_Positive_**.
  * **_Return_** *the result as* **_String_**
  ___

  # Input >> Output Examples


  ```
  strong_num(1) ==> return "STRONG!!!!"
  ```

  ## **_Explanation_**:

  Since , **_the sum of its digits' factorial of (1) is equal to number itself (1)_** , **_Then_** its a **_Strong_** .  
  ____

  ```
  strong_num(123) ==> return "Not Strong !!"
  ```

  ## **_Explanation_**:

  Since **_the sum of its digits' factorial of 1! + 2! + 3! = 9 is not equal to number itself (123)_** , **_Then_** it's  **_Not Strong_** . 
  ___

  ```
  strong_num(2)  ==>  return "STRONG!!!!"
  ```

  ## **_Explanation_**:

  Since **_the sum of its digits' factorial of 2! = 2 is equal to number itself (2)_** , **_Then_** its a **_Strong_** .  
  ____

  ```
  strong_num(150) ==> return "Not Strong !!"
  ```

  ## **_Explanation_**:

  Since **_the sum of its digits' factorial of 1! + 5! + 0! = 122 is not equal to number itself (150)_**, **_Then_** it's **_Not Strong_** . 
  ___
  ___
  ___

  # [Playing with Numbers Series](https://www.codewars.com/collections/playing-with-numbers)

  # [Playing With Lists/Arrays Series](https://www.codewars.com/collections/playing-with-lists-slash-arrays)

  # [For More Enjoyable Katas](http://www.codewars.com/users/MrZizoScream/authored)
  ___

  ## ALL translations are welcomed

  ## Enjoy Learning !!
  # Zizou
vc-preamble: |
  import Imports.AllImports

  def strong_num (n : Nat) : String := sorry

  def factorial (n : Nat) : Nat := sorry
vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>
vc-definitions: |
  def sumDigitFactorials (n : Nat) : Nat := sorry

  def digitsOfNat (n : Nat) : List Nat := sorry
vc-theorems: |
  theorem strong_num_outputs_valid_string (n : Nat) :
    (strong_num n = "STRONG!!!!" ∨ strong_num n = "Not Strong !!") := sorry


  theorem strong_num_correctness (n : Nat) :
    (strong_num n = "STRONG!!!!" ↔ sumDigitFactorials n = n) := sorry


  theorem single_digit_strong_nums (n : Nat) :
    n ≤ 9 →
    (strong_num n = "STRONG!!!!" ↔ (n = 1 ∨ n = 2)) := sorry


  theorem digit_composition_property (digits : List Nat) :
    (∀ d ∈ digits, d ≤ 9) →
    let n := sorry -- conversion of digits to number
    (strong_num n = "STRONG!!!!" ↔ (sumDigitFactorials n = n)) := sorry

  /--
  info: 'STRONG!!!!'
  -/
  #guard_msgs in
  #eval strong_num 145

  /--
  info: 'Not Strong !!'
  -/
  #guard_msgs in
  #eval strong_num 123

  /--
  info: 'STRONG!!!!'
  -/
  #guard_msgs in
  #eval strong_num 40585
vc-postamble: |-
  -- Apps difficulty: introductory
  -- Assurance level: unguarded
