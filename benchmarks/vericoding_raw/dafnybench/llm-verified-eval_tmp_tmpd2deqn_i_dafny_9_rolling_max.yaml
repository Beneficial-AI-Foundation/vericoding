vc-description: |-

vc-preamble: |-
  function isMax(m: int, numbers: seq<int>): bool
  {
      m in numbers &&
      forall i :: 0 <= i < |numbers| ==> numbers[i] <= m

  }

vc-helpers: |-
  // <vc-helpers>
  // </vc-helpers>

vc-spec: |-
  method rolling_max(numbers: seq<int>) returns (result: seq<int>)
  requires numbers != []
  ensures |result| == |numbers|
  ensures forall i :: 0 < i < |result| ==> isMax(result[i], numbers[0..(i+1)])

vc-code: |-
  {
      var m := numbers[0];
      result := [m];
      for i := 1 to |numbers|
      invariant |result| == i
      invariant m == result[i-1]
      invariant forall j :: 0 <= j < i ==> isMax(result[j], numbers[0..(j+1)])
      {
          if numbers[i] > m {
              m := numbers[i];
          }
          result := result + [m];
      }
  }

vc-postamble: |-

