vc-description: |-
  /--
  -----Description-----

  This task requires writing a Lean 4 method that takes a list of natural numbers and partitions it into two separate lists: one containing all the even numbers and the other containing all the odd numbers. The order of elements in each sublist should match their appearance in the original list. Assume there are no duplicates in the input.

  -----Input-----

  The input consists of a single list with no duplicate natural numbers:
  - nums: A list of natural numbers (Nat)

  -----Output-----

  The output is a tuple of two lists:
  - The first list contains all even numbers from the input list, in order.
  - The second list contains all odd numbers from the input list, in order.
  -/

vc-preamble: |-

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-signature: |-
  def partitionEvensOdds (nums : List Nat) (h_precond : partitionEvensOdds_precond (nums)) : (List Nat × List Nat) :=

vc-implementation: |-
  -- <vc-implementation>
    let rec helper (nums : List Nat) : (List Nat × List Nat) :=
      match nums with
      | [] => ([], [])
      | x :: xs =>
        let (evens, odds) := helper xs
        if x % 2 == 0 then (x :: evens, odds)
        else (evens, x :: odds)
    helper nums
  -- </vc-implementation>
  
vc-condition: |-
  @[reducible]
  def partitionEvensOdds_precond (nums : List Nat) : Prop :=
    True

  @[reducible]
  def partitionEvensOdds_postcond (nums : List Nat) (result: (List Nat × List Nat)) (h_precond : partitionEvensOdds_precond (nums)): Prop :=
    let evens := result.fst
    let odds := result.snd
    -- All elements from nums are in evens ++ odds, no extras
    evens ++ odds = nums.filter (fun n => n % 2 == 0) ++ nums.filter (fun n => n % 2 == 1) ∧
    evens.all (fun n => n % 2 == 0) ∧
    odds.all (fun n => n % 2 == 1)

  theorem partitionEvensOdds_spec_satisfied (nums: List Nat) (h_precond : partitionEvensOdds_precond (nums)) :
      partitionEvensOdds_postcond (nums) (partitionEvensOdds (nums) h_precond) h_precond := by

vc-proof: |-
  -- <vc-proof>
    sorry
  -- </vc-proof>

vc-postamble: |-