vc-description: |-
  /--
  -----Description-----
  This task requires writing a Lean 4 method that reverses a given string. The method should return a new string which consists of the characters of the input string in reverse order.

  -----Input-----
  The input consists of:
  s: A string (which may be empty).

  -----Output-----
  The output is a string:
  Returns a string where the characters are in reverse order from the original input.
  -/

vc-preamble: |-

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-signature: |-
  def reverseString (s : String) (h_precond : reverseString_precond (s)) : String :=

vc-implementation: |-
  -- <vc-implementation>
    let rec reverseAux (chars : List Char) (acc : List Char) : List Char :=
      match chars with
      | [] => acc
      | h::t => reverseAux t (h::acc)
    String.mk (reverseAux (s.toList) [])
  -- </vc-implementation>
  
vc-condition: |-
  @[reducible]
  def reverseString_precond (s : String) : Prop :=
    True

  @[reducible]
  def reverseString_postcond (s : String) (result: String) (h_precond : reverseString_precond (s)) : Prop :=
    result.length = s.length âˆ§ result.toList = s.toList.reverse

  theorem reverseString_spec_satisfied (s: String) (h_precond : reverseString_precond (s)) :
      reverseString_postcond (s) (reverseString (s) h_precond) h_precond := by

vc-proof: |-
  -- <vc-proof>
    sorry
  -- </vc-proof>

vc-postamble: |-