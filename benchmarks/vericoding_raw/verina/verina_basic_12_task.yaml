vc-description: |-
  /--
  -----Description----- 
  This task requires writing a Lean 4 method that calculates the surface area of a cube based on the length of one of its edges. The method should compute the surface area using the standard formula for a cube.

  -----Input-----
  The input consists of:
  size: An natural number representing the length of an edge of the cube.

  -----Output-----
  The output is an natural number:
  Returns the surface area of the cube.
  -/

vc-preamble: |-

vc-helpers: |-
  -- <vc-helpers>
  -- </vc-helpers>

vc-signature: |-
  def cubeSurfaceArea (size : Nat) (h_precond : cubeSurfaceArea_precond (size)) : Nat :=

vc-implementation: |-
  -- <vc-implementation>
    6 * size * size
  -- </vc-implementation>
  
vc-condition: |-
  @[reducible, simp]
  def cubeSurfaceArea_precond (size : Nat) : Prop :=
    True

  @[reducible, simp]
  def cubeSurfaceArea_postcond (size : Nat) (result: Nat) (h_precond : cubeSurfaceArea_precond (size)) :=
    result - 6 * size * size = 0 âˆ§ 6 * size * size - result = 0

  theorem cubeSurfaceArea_spec_satisfied (size: Nat) (h_precond : cubeSurfaceArea_precond (size)) :
      cubeSurfaceArea_postcond (size) (cubeSurfaceArea (size) h_precond) h_precond := by

vc-proof: |-
  -- <vc-proof>
    unfold cubeSurfaceArea cubeSurfaceArea_postcond
    simp
  -- </vc-proof>

vc-postamble: |-
  /--
  -- Reject Inputs
  []
  -- Test
  [
      {
          "input": {
              "size": 3
          },
          "expected": 54,
          "unexpected": [
              27,
              48,
              60
          ]
      },
      {
          "input": {
              "size": 1
          },
          "expected": 6,
          "unexpected": [
              1,
              2,
              3
          ]
      },
      {
          "input": {
              "size": 10
          },
          "expected": 600,
          "unexpected": [
              100,
              500,
              610
          ]
      },
      {
          "input": {
              "size": 5
          },
          "expected": 150,
          "unexpected": [
              25,
              100,
              125
          ]
      },
      {
          "input": {
              "size": 2
          },
          "expected": 24,
          "unexpected": [
              8,
              16,
              20
          ]
      }
  ]
  -/
