vc-description: |-
  /*
  This task requires writing a Dafny method that determines whether a natural number is a power of four. The method should return a boolean value that indicates whether the given natural number is a power of four. An integer n is a power of four, if there exists a natural number x such that n = 4^x.
  
  -----Input-----
  The input consists of one natural number:
  n: A natural number.
  
  -----Output-----
  The output is a boolean value:
  Return a boolean value that indicates whether the given natural number is a power of four. Return "true" if it is a power of four. Otherwise, return "false".
  */
vc-preamble: |-
  function Power(base: int, exp: nat): int
  {
    if exp == 0 then 1
    else base * Power(base, exp - 1)
  }

vc-helpers: |-

vc-spec: |-
  method IfPowerOfFour(n: nat) returns (result: bool)
      ensures result <==> (exists m: nat :: n == Power(4, m))

vc-code: |-
  {
      // impl-start
      assume {:axiom} false;
      result := false;
      // impl-end
  }

vc-postamble: |-