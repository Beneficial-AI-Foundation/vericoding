vc-description: |-
  /*
  This task requires writing a Dafny method that locates the first occurrence of a specified integer within a sorted array of integers. The method returns the index corresponding to the first time the target value appears in the array; if the target is absent, it returns -1. It is also essential that the original array remains unchanged.
  
  Input:
  The input consists of:
  • arr: An array of integers sorted in non-decreasing order.
  • target: An integer representing the value to search for.
  
  Output:
  The output is an integer:
  • If the target is found, the method returns the index of its first occurrence.
  • If the target is not found, the method returns -1.
  
  Note:
  • The input array must be sorted in non-decreasing order.
  • The array is guaranteed to remain unmodified after the method executes.
  */

vc-preamble: |-

vc-helpers: |-

vc-spec: |-
  method FindFirstOccurrence(arr: array<int>, target: int) returns (result: int)
      requires forall i, j :: 0 <= i < j < arr.Length ==> arr[i] <= arr[j]
      ensures (result >= 0 ==> (
          0 <= result < arr.Length &&
          arr[result] == target &&
          forall i :: 0 <= i < result ==> arr[i] != target
      )) &&
      (result == -1 ==> (
          forall i :: 0 <= i < arr.Length ==> arr[i] != target
      ))

vc-code: |-
  {
      // impl-start
      assume {:axiom} false;
      result := -1;
      // impl-end
  }

vc-postamble: |-