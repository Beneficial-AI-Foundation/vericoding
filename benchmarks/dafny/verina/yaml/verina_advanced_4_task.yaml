vc-description: |-
  /*
  This task requires writing a Dafny method that finds the length of the longest increasing sequence in a given array. The method should return the length of the longest increasing subsequence, in which every element is strictly less than the latter element.
  
  -----Input-----
  The input consists of an array:
  a: The input array.
  
  -----Output-----
  The output is an integer:
  Returns the length of the longest increasing subsequence, assuring that it is a subsequence of the input sequence and that every element in it is strictly less than the latter one.
  */

vc-preamble: |-

vc-helpers: |-
  function IntMax(x: int, y: int): int
  {
      if x < y then y else x
  }

vc-spec: |-
  method LongestIncreasingSubsequence(a: array<int>) returns (result: int)
      ensures result >= 0
      ensures result <= a.Length

vc-code: |-
  {
      // TODO: implement
      result := 0;
  }

vc-postamble: |-