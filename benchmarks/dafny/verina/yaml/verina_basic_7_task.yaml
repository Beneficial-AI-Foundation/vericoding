vc-description: |-
  /*
  This task requires writing a Dafny method that computes the sum of the squares of the first n odd natural numbers. The result should match the formula: (n * (2 * n - 1) * (2 * n + 1)) / 3.
  
  -----Input-----
  The input consists of:
  n: A natural number representing the count of odd natural numbers to consider (n should be non-negative).
  
  -----Output-----
  The output is a natural number:
  Returns the sum of the squares of the first n odd natural numbers, as defined by the formula: (n * (2 * n - 1) * (2 * n + 1)) / 3.
  */
vc-preamble: |-

vc-helpers: |-

vc-spec: |-
  method SumOfSquaresOfFirstNOddNumbers(n: nat) returns (result: nat)
      requires n >= 0
      ensures result as int == (n as int * (2 * n as int - 1) * (2 * n as int + 1)) / 3

vc-code: |-
  {
      assume {:axiom} false;
      result := 0;
  }

vc-postamble: |-