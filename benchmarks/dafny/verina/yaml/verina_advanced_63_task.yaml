vc-description: |-
  /*
  This task requires writing a Dafny method that counts the unique elements from a sorted array.
  
  -----Input-----
  The input is a single list of integers:
  nums: An array of integers sorted in non-decreasing order.
  
  -----Output-----
  The output is a single integer:
  Returns the number of unique elements (k).
  */

vc-preamble: |-

vc-helpers: |-

vc-spec: |-
  method RemoveDuplicates(nums: seq<int>) returns (result: nat)
      requires forall i, j :: 0 <= i < j < |nums| ==> nums[i] <= nums[j]
      ensures result <= |nums|

vc-code: |-
  {
      // impl-start
      assume {:axiom} false;
      result := 0;
      // impl-end
  }

  lemma RemoveDuplicatesSpecSatisfied(nums: seq<int>)
      requires forall i, j :: 0 <= i < j < |nums| ==> nums[i] <= nums[j]
  {
      // TODO: Implement proof
  }

vc-postamble: |-