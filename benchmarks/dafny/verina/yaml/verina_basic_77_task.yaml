vc-description: |-
  /*
  This task involves updating an element within a 2-dimensional array. The goal is to modify only a specific inner array by changing one of its elements to a new value while keeping every other element and all other inner arrays unchanged.
  
  -----Input-----
  The input consists of:
  • arr: An array of arrays of natural numbers.
  • index1: A natural number representing the index in the outer array identifying which inner array to modify (0-indexed).
  • index2: A natural number representing the index within the selected inner array that should be updated (0-indexed).
  • val: A natural number which is the new value to set at the specified inner index.
  
  -----Output-----
  The output is an array of arrays of natural numbers that:
  • Has the same overall structure as the input.
  • Contains all original inner arrays unchanged except for the inner array at position index1.
  • In the modified inner array, only the element at index2 is replaced with val, while all other elements remain the same.
  
  -----Note-----
  It is assumed that index1 is a valid index for the outer array and that index2 is a valid index within the corresponding inner array.
  */

vc-preamble: |-

vc-helpers: |-
  method UpdateInner(a: seq<nat>, idx: int, val: nat) returns (result: seq<nat>)
      requires 0 <= idx < |a|
      ensures |result| == |a|
      ensures result[idx] == val
      ensures forall i :: 0 <= i < |a| && i != idx ==> result[i] == a[i]
  {
      result := a[idx := val];
  }

vc-spec: |-
  method ModifyArrayElement(arr: seq<seq<nat>>, index1: int, index2: int, val: nat) returns (result: seq<seq<nat>>)
      requires 0 <= index1 < |arr|
      requires 0 <= index2 < |arr[index1]|
      ensures |result| == |arr|
      ensures forall i :: 0 <= i < |arr| && i != index1 ==> result[i] == arr[i]
      ensures |result[index1]| == |arr[index1]|
      ensures forall j :: 0 <= j < |arr[index1]| && j != index2 ==> result[index1][j] == arr[index1][j]
      ensures result[index1][index2] == val

vc-code: |-
  {
      // impl-start
      var updatedInner := UpdateInner(arr[index1], index2, val);
      result := arr[index1 := updatedInner];
      // impl-end
  }

vc-postamble: |-