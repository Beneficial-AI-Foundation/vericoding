vc-description: |-
  /*
  Implement a Dafny method that merges two ascendingly sorted arrays of integers into one single sorted array (ascending). The resulting array must contain all elements from both input arrays, preserving their ascending order.
  
  Input:
  The input consists of two arrays of integers:
  arr1: A sorted array of integers (ascending)
  arr2: Another sorted array of integers (ascending)
  
  Output:
  The output is an array of integers:
  Returns a new array containing all elements from arr1 and arr2, sorted in ascending order.
  */

vc-preamble: |-

vc-helpers: |-

vc-spec: |-
  method MergeSortedLists(arr1: array<int>, arr2: array<int>) returns (result: array<int>)
      requires 
          forall i, j :: 0 <= i < j < arr1.Length ==> arr1[i] <= arr1[j]
      requires
          forall i, j :: 0 <= i < j < arr2.Length ==> arr2[i] <= arr2[j]
      ensures
          forall i, j :: 0 <= i < j < result.Length ==> result[i] <= result[j]
      ensures
          result.Length == arr1.Length + arr2.Length

vc-code: |-
  {
      // impl-start
      result := new int[arr1.Length + arr2.Length];
      assume {:axiom} false;
      // impl-end
  }

vc-postamble: |-