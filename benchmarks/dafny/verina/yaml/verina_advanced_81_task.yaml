vc-description: |-
  /*
  Implement a Dafny method that, given an array of integers, removes all duplicates and returns the resulting array in ascending order.
  
  Input:
  The input consists of a single array of integers:
  arr: An array of integers.
  
  Output:
  The output is an array of integers:
  Returns an array containing the unique elements of the input, sorted in ascending order. The returned array must not contain any duplicates, and every element in the output must appear in the original input array.
  */

vc-preamble: |-

vc-helpers: |-

vc-spec: |-
  method UniqueSorted(arr: array<int>) returns (result: array<int>)
      ensures result.Length <= arr.Length
      ensures forall i :: 0 <= i < result.Length - 1 ==> result[i] <= result[i + 1]
      ensures forall x :: x in arr[..] <==> x in result[..]

vc-code: |-
  {
      assume {:axiom} false;
      result := new int[0];
  }

vc-postamble: |-