vc-description: |-
  function_signature: def order_by_points(nums: List[int]) -> List[int]
  Write a function which sorts the given list of integers in ascending order according to the sum of their digits. Note: if there are several items with similar sum of their digits, order them based on their index in original list.
  
  // post-conditions-start
  
  // post-conditions-end

vc-preamble: |-
  function digits_sum_pos(n: int): int
    requires n >= 0
  {
    if n < 10 then n else digits_sum_pos(n / 10) + n % 10
  }
  function digits_sum(n: int): int {
    if n < 0 then digits_sum_pos(-n) else digits_sum_pos(n)
  }

vc-helpers: |-

vc-spec: |-
  method order_by_points(s: seq<int>) returns (sorted: seq<int>)
  
    ensures forall i, j :: 0 <= i < j < |sorted| ==> digits_sum(sorted[i]) <= digits_sum(sorted[j])
    ensures |sorted| == |s|
    ensures multiset(s) == multiset(sorted)

vc-code: |-
  {
    assume {:axiom} false;
  }

vc-postamble: |-

