vc-description: |-
  function_signature: def fibfib(n: int)
  The FibFib number sequence is a sequence similar to the Fibbonacci sequnece that's defined as follows: fibfib(0) == 0 fibfib(1) == 0 fibfib(2) == 1 fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3). Please write a function to efficiently compute the n-th element of the fibfib number sequence. Note(Meghana): While the specification asks for an efficient computation of fibfib, we cannot enforce this constraint currently.

vc-preamble: |-
  function fibfib(n: nat): nat
    decreases n
  {
    if n == 0 || n == 1 then 0
    else if n == 2 then 1
    else fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)
  }

vc-helpers: |-

vc-spec: |-
  method ComputeFibFib(n: nat) returns (result: nat)
    // post-conditions-start
    ensures result == fibfib(n)
    // post-conditions-end

vc-code: |-
  {
    assume {:axiom} false;
  }

vc-postamble: |-

