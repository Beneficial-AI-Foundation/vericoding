vc-description: |-
  function_signature: def unique_digits(x: List[nat]) -> List[nat]
  Given a list of positive integers x. return a sorted list of all elements that hasn't any even digit.
  
  // post-conditions-start
  
  // post-conditions-end

vc-preamble: |-
  function HasNoEvenDigit(n: int) : bool
    decreases n
  {
    n >= 0 && ((n < 10 && n % 2 == 1) || (n % 2 == 1 && HasNoEvenDigit(n / 10)))
  }

vc-helpers: |-

vc-spec: |-
  method UniqueDigits(x: seq<int>) returns (result: seq<int>)
  
    ensures forall i :: 0 <= i < |result| ==> HasNoEvenDigit(result[i])
    ensures forall i, j :: 0 <= i < j < |result| ==> result[i] <= result[j]
    ensures forall e :: e in x && HasNoEvenDigit(e) ==> e in result
    ensures forall e :: e in result ==> e in x

vc-code: |-
  {
    assume {:axiom} false;
  }

vc-postamble: |-

