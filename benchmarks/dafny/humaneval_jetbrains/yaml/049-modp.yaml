vc-description: |-
  function_signature: def modp(n: Nat, p: Nat) -> Nat
  Return 2^n modulo p (be aware of numerics).
  
  // pre-conditions-start
  
  // pre-conditions-end
  
  // post-conditions-start
  
  // post-conditions-end

vc-preamble: |-
  function modp_rec(n: int, p: int): int
    requires p > 0
    requires n >= 0
  {
      if n == 0 then 1 % p else (modp_rec(n - 1, p) * 2) % p
  }

vc-helpers: |-

vc-spec: |-
  method modp(n: int, p: int) returns (r: int)
  
    requires p > 0
    requires n >= 0
  
    ensures r == modp_rec(n, p)

vc-code: |-
  {
    assume {:axiom} false;
  }

vc-postamble: |-

