vc-description: |-
  function_signature: method parse_nested_parens(paren_string: string) returns (res : seq<int>)
  Parse input. Requires: the condition holds for all values. Ensures: the condition holds for all values.
  
  // pre-conditions-start
  
  // pre-conditions-end
  
  // post-conditions-start
  
  // post-conditions-end
  
  // pre-conditions-start
  
  // pre-conditions-end
  
  // post-conditions-start
  
  // post-conditions-end
  
  // pre-conditions-start
  
  // pre-conditions-end
  
  // post-conditions-start
  
  // post-conditions-end

vc-preamble: |-
  method parse_paren_group(s : string) returns (max_depth : int)
  
      requires forall i :: i >= 0 && i < |s| ==> s[i] == '(' || s[i] == ')'
  
      ensures max_depth >= 0
  
  {
    assume{:axiom} false;
  }
  method split(s : string) returns (res : seq<string>)
  
      requires forall i :: i >= 0 && i < |s| ==> s[i] == '(' || s[i] == ')' || s[i] == ' '
  
      ensures forall s1 :: s1 in res ==> (forall i :: i >= 0 && i < |s1| ==> s1[i] == '(' || s1[i] == ')') && |s1| > 0
  
  {
    assume{:axiom} false;
  }

vc-helpers: |-

vc-spec: |-
  method parse_nested_parens(paren_string: string) returns (res : seq<int>)
  
      requires forall i :: i >= 0 && i < |paren_string| ==> paren_string[i] == '(' || paren_string[i] == ')' || paren_string[i] == ' '
  
      ensures forall x :: x in res ==> x >= 0

vc-code: |-
  {
    assume {:axiom} false;
  }

vc-postamble: |-

