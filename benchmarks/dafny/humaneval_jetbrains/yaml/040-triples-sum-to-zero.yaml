vc-description: |-
  function_signature: def triples_sum_to_zero(numbers: List[int]) -> Bool
  triples_sum_to_zero takes a list of integers as an input. it returns True if there are three distinct elements in the list that sum to zero, and False otherwise.

vc-preamble: |-

vc-helpers: |-

vc-spec: |-
  method triples_sum_to_zero(l : seq<int>) returns (result : bool)
      // post-conditions-start
      ensures result ==> exists i : int, j : int, k : int :: 0 <= i < |l| && 0 <= j < |l| && 0 <= k < |l| && i != j && j != k && i != k && l[i] + l[j] + l[k] == 0
      ensures !result ==> forall i : int, j : int, k : int :: 0 <= i < |l| && 0 <= j < |l| && 0 <= k < |l| && i != j && j != k && i != k ==> l[i] + l[j] + l[k] != 0
      // post-conditions-end

vc-code: |-
  {
    assume false;
  }

vc-postamble: |-

