vc-description: |-
  function_signature: def fib4(n: int)
  The Fib4 number sequence is a sequence similar to the Fibbonacci sequnece that's defined as follows: fib4(0) -> 0 fib4(1) -> 0 fib4(2) -> 2 fib4(3) -> 0 fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4). Please write a function to efficiently compute the n-th element of the fib4 number sequence.  Do not use recursion.

vc-preamble: |-
  function fib4_rec(n: nat): nat
    decreases n
  {
    if n == 0 || n == 1 || n == 2 then 0
    else if n == 3 then 1
    else fib4_rec(n - 1) + fib4_rec(n - 2) + fib4_rec(n - 3) + fib4_rec(n - 4)
  }

vc-helpers: |-

vc-spec: |-
  method fib4(n: nat) returns (result: nat)
  
    ensures result == fib4_rec(n)

vc-code: |-
  {
    assume {:axiom} false;
  }

vc-postamble: |-

