vc-description: |-
  function_signature: def is_multiply_prime(a: int) -> bool
  Write a function that returns true if the given number is the multiplication of 3 prime numbers and false otherwise. Knowing that (a) is less then 100.
  
  // pre-conditions-start
  
  // pre-conditions-end
  
  // post-conditions-start
  
  // post-conditions-end

vc-preamble: |-
  function Prime(p: nat) : bool
  {
      p > 1 &&
      forall k :: 1 < k < p ==> p % k != 0
  }

vc-helpers: |-

vc-spec: |-
  method is_multiply_prime(x: nat) returns (ans : bool)
  
      requires x > 1
  
      ensures ans <==> exists a: nat, b: nat, c: nat :: Prime(a) && Prime(b) && Prime(c) && x == a * b * c

vc-code: |-
  {
    assume {:axiom} false;
  }

vc-postamble: |-

