vc-description: |-
  function_signature: method sorted_even(a: seq<int>) returns (sorted: seq<int>)
  Sort elements. Requires: requires size of asize of  > 0. Ensures: returns the correct size/count; the result is sorted according to the ordering relation; the result is sorted according to the ordering relation; returns a sorted permutation of the input.

vc-preamble: |-

vc-helpers: |-

vc-spec: |-
  method sorted_even(a: seq<int>) returns (sorted: seq<int>)
  
    requires |a| > 0
  
    ensures |sorted| == |a|
    ensures forall i, j :: 0 <= i < j && 2 * i < |sorted| && 2 * j < |sorted| ==>
        sorted[2 * i] <= sorted[2 * j]
        ensures forall i :: 0 <= i < |a| && i % 2 == 1 ==> sorted[i] == a[i]
        ensures multiset(a) == multiset(sorted)

vc-code: |-
  {
    assume {:axiom} false;
  }

vc-postamble: |-
  method SortSeqPred(s: seq<int>, p: seq<bool>) returns (sorted: seq<int>)
  
    requires |s| == |p|
  
    ensures |sorted| == |s|
    ensures forall i, j :: 0 <= i < j < |sorted| && p[i] && p[j] ==> sorted[i] <= sorted[j]
    ensures multiset(s) == multiset(sorted)
    ensures forall i :: 0 <= i < |s| && !p[i] ==> sorted[i] == s[i]
  
  {
    assume{:axiom} false;
  }

