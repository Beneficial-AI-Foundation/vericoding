vc-description: |-
  function_signature: method encode_cyclic(s: seq<int>) returns (res: seq<int>)
  Encode data. Ensures: returns the correct size/count; the condition holds for all values; the condition holds for all values; the condition holds for all values; the condition holds for all values.

vc-preamble: |-

vc-helpers: |-

vc-spec: |-
  method encode_cyclic(s: seq<int>) returns (res: seq<int>) 
  
      ensures |s| == |res|
      ensures forall i :: 0 <= i < |s| - |s| % 3 ==> (i % 3 == 0 ==> res[i] == s[i + 1])
      ensures forall i :: 0 <= i < |s| - |s| % 3 ==> (i % 3 == 1 ==> res[i] == s[i + 1])
      ensures forall i :: 0 <= i < |s| - |s| % 3 ==> (i % 3 == 2 ==> res[i] == s[i - 2])
      ensures forall i :: |s| - |s| % 3 <= i < |s| ==> (res[i] == s[i])

vc-code: |-
  {
    assume {:axiom} false;
  }

vc-postamble: |-
  method decode_cyclic(s: seq<int>) returns (res: seq<int>)
  
      ensures |s| == |res|
      ensures forall i :: |s| - |s| % 3 <= i < |s| ==> (res[i] == s[i])
      ensures forall i :: 0 <= i < |s| - |s| % 3 ==> (i % 3 == 0 ==> res[i] == s[i + 2])
      ensures forall i :: 0 <= i < |s| - |s| % 3 ==> (i % 3 == 1 ==> res[i] == s[i - 1])
  
  {
    assume{:axiom} false;
  }

