vc-description: |-
  function_signature: def count_up_to(n : int) -> list[int]
  Implement a function that takes an non-negative integer and returns an array of the first n integers that are prime numbers and less than n.
  
  // pre-conditions-start
  
  // pre-conditions-end
  
  // post-conditions-start
  
  // post-conditions-end

vc-preamble: |-
  function IsPrime(n: int) : bool
  {
    n > 1 && forall k :: 2 <= k < n ==> n % k != 0
  }

vc-helpers: |-

vc-spec: |-
  method CountUpTo(n: int) returns (primes: seq<int>)
  
    requires n >= 0
  
    ensures forall i :: 0 <= i < |primes| ==> IsPrime(primes[i])
    ensures forall i :: 0 <= i < |primes| ==> primes[i] < n
    ensures forall p :: 2 <= p < n && IsPrime(p) <==> p in primes

vc-code: |-
  {
    assume {:axiom} false;
  }

vc-postamble: |-

