vc-description: |-
  function_signature: def histogram(s : str) -> Dict[str, int]
  Given a string representing a space separated lowercase letters, return a dictionary of the letter with the most repetition and containing the corresponding count. If several letters have the same occurrence, return all of them.

vc-preamble: |-
  type BiggestMap = map<int, int>

vc-helpers: |-

vc-spec: |-
  method count(a: seq<int>) returns (biggest: BiggestMap)
  
    ensures forall i :: 0 <= i < |a| && a[i] in biggest ==>
      biggest[a[i]] == |set j | 0 <= j < |a| && a[j] == a[i]|
    ensures forall i, j :: 0 <= i < |a| && 0 <= j < |a| && a[i] in biggest ==>
      biggest[a[i]] >= |set k | 0 <= k < |a| && a[k] == a[j]|
    ensures forall i, j :: 0 <= i < |a| && 0 <= j < |a| && a[i] in biggest && a[j] in biggest ==>
      biggest[a[i]] == biggest[a[j]]

vc-code: |-
  {
    assume {:axiom} false;
  }

vc-postamble: |-

