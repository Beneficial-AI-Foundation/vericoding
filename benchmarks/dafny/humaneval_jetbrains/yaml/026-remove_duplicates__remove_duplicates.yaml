vc-description: |-
  function_signature: method remove_duplicates(a: seq<int>) returns (result: seq<int>)
  Process input. Requires: the condition holds for all values. Ensures: the condition holds for all values; the condition holds for all values.

vc-preamble: |-
  function count_rec(a: seq<int>, x: int): int {
    if |a| == 0 then 0
    else count_rec(a[1..], x) + (if a[0] == x then 1 else 0)
  }

vc-helpers: |-

vc-spec: |-
  method remove_duplicates(a: seq<int>) returns (result: seq<int>)
    // pre-conditions-start
    requires forall i :: 0 <= i < |a| ==> count_rec(a, a[i]) >= 1
    // pre-conditions-end
    // post-conditions-start
    ensures forall i :: 0 <= i < |result| ==> count_rec(a, result[i]) == 1
    ensures forall i :: 0 <= i < |a| ==> (a[i] in result <==> count_rec(a, a[i]) == 1)
    // post-conditions-end

vc-code: |-
  {
    assume {:axiom} false;
  }

vc-postamble: |-
  method count(a: seq<int>, x: int) returns (cnt: int)
    // post-conditions-start
    ensures cnt == |set i | 0 <= i < |a| && a[i] == x|
    ensures cnt == count_rec(a, x)
    // post-conditions-end
  {
    assume{:axiom} false;
  }

