vc-description: |-
  function_signature: method reverse(s: seq<int>) returns (rev: seq<int>)
  Reverse order. Ensures: returns the correct size/count; the condition holds for all values.
  
  // post-conditions-start
  
  // post-conditions-end
  
  // post-conditions-start
  
  // post-conditions-end
  
  // post-conditions-start
  
  // post-conditions-end

vc-preamble: |-
  method sort_array(s: seq<int>) returns (sorted: seq<int>)
  
    ensures |sorted| == |s|
    ensures |s| > 0 && (s[0] + s[|s| - 1]) % 2 == 0 ==>
      forall i, j :: 0 <= i < j < |sorted| ==> sorted[i] >= sorted[j]
    ensures |s| > 0 && (s[0] + s[|s| - 1]) % 2 != 0 ==>
      forall i, j :: 0 <= i < j < |sorted| ==> sorted[i] <= sorted[j]
  
  {
    assume{:axiom} false;
  }

vc-helpers: |-

vc-spec: |-
  method reverse(s: seq<int>) returns (rev: seq<int>)
  
    ensures |rev| == |s|
    ensures forall k :: 0 <= k < |s| ==> rev[k] == s[|s| - 1 - k]

vc-code: |-
  {
    assume {:axiom} false;
  }

vc-postamble: |-
  method SortSeq(s: seq<int>) returns (sorted: seq<int>)
  
    ensures forall i, j :: 0 <= i < j < |sorted| ==> sorted[i] <= sorted[j]
    ensures |sorted| == |s|
    ensures multiset(s) == multiset(sorted)
  
  {
    assume{:axiom} false;
  }

