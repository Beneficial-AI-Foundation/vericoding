vc-description: |-
  Bignum task: bignum_ModExp.
  Implement the method according to the Dafny specification.

vc-preamble: |-
  ghost function Str2Int(s: string): nat
    requires ValidBitString(s)
    decreases s
  {
    if |s| == 0 then  0  else  (2 * Str2Int(s[0..|s|-1]) + (if s[|s|-1] == '1' then 1 else 0))
  }
  ghost function Exp_int(x: nat, y:nat): nat
  {
    if y == 0 then 1 else x * Exp_int(x, y - 1)
  }
  predicate ValidBitString(s: string)
  {
    // All characters must be '0' or '1'.
    forall i | 0 <= i < |s| :: s[i] == '0' || s[i] == '1'
  }

vc-helpers: |-

vc-spec: |-
  method ModExp(sx: string, sy: string, sz: string) returns (res: string)
    requires ValidBitString(sx) && ValidBitString(sy) &&  ValidBitString(sz)
    ensures ValidBitString(res)
    ensures Str2Int(res) == Exp_int(Str2Int(sx), Str2Int(sy)) % Str2Int(sz)
    //requires y < Exp_int(2,n+1)
    requires |sy| > 0 && Str2Int(sz) > 1 //&& n > 0
    decreases |sy|

vc-code: |-
  {
    assume false;
  }

vc-postamble: |-

