vc-description: |-
  Implement a function to validate date strings according to specific formatting and validity rules. The date must be in "mm-dd-yyyy" format with exactly two hyphens as separators, contain only numeric components, have a valid month (1-12), and have a valid day for the given month (considering different month lengths including February with 29 days maximum).

vc-preamble: |-
  // Validate a date string according to specific rules:
  // 1. Date string must not be empty
  // 2. Format must be exactly "mm-dd-yyyy" (using hyphens as separators)  
  // 3. Month must be between 1 and 12 (inclusive)
  // 4. Day must be valid for the given month (1-31 for months 1,3,5,7,8,10,12; 1-30 for months 4,6,9,11; 1-29 for month 2)
  // 5. All components (month, day, year) must be numeric
  
  predicate ValidDateFormat(date: string)
  {
      |date| > 0 &&
      count_char(date, '-') == 2 &&
      (var parts := split_by_hyphen(date);
       |parts| == 3 &&
       |parts[0]| > 0 && |parts[1]| > 0 && |parts[2]| > 0 &&
       is_numeric(parts[0]) && is_numeric(parts[1]) && is_numeric(parts[2]) &&
       (var month := string_to_int(parts[0]);
        var day := string_to_int(parts[1]);
        1 <= month <= 12 &&
        (if month in {1, 3, 5, 7, 8, 10, 12} then 1 <= day <= 31
         else if month in {4, 6, 9, 11} then 1 <= day <= 30
         else 1 <= day <= 29)))
  }
  
  function count_char(s: string, c: char): nat
  {
      if |s| == 0 then 0
      else if s[0] == c then 1 + count_char(s[1..], c)
      else count_char(s[1..], c)
  }
  
  function is_digit(c: char): bool
  {
      '0' <= c <= '9'
  }
  
  function is_numeric(s: string): bool
  {
      |s| > 0 && (forall i :: 0 <= i < |s| ==> is_digit(s[i]))
  }
  
  function char_to_int(c: char): nat
      requires is_digit(c)
  {
      c as nat - '0' as nat
  }
  
  function string_to_int(s: string): nat
      requires is_numeric(s)
  {
      if |s| == 0 then 0
      else if |s| == 1 then char_to_int(s[0])
      else string_to_int(s[..|s|-1]) * 10 + char_to_int(s[|s|-1])
  }
  
  function find_first_hyphen(s: string, start: nat): nat
      requires start <= |s|
      ensures find_first_hyphen(s, start) >= start
      ensures find_first_hyphen(s, start) <= |s|
      ensures find_first_hyphen(s, start) < |s| ==> s[find_first_hyphen(s, start)] == '-'
      decreases |s| - start
  {
      if start >= |s| then |s|
      else if s[start] == '-' then start
      else find_first_hyphen(s, start + 1)
  }
  
  function split_by_hyphen(s: string): seq<string>
  {
      var first_hyphen := find_first_hyphen(s, 0);
      if first_hyphen >= |s| then [s]
      else 
          var tmpCall1 := find_first_hyphen(s, first_hyphen + 1);
          var second_hyphen := tmpCall1;
          if second_hyphen >= |s| then [s[..first_hyphen], s[first_hyphen+1..]]
          else 
              [s[..first_hyphen], s[first_hyphen+1..second_hyphen], s[second_hyphen+1..]]
  }

vc-helpers: |-

vc-spec: |-
  function valid_date(date: string): bool
      ensures valid_date(date) == ValidDateFormat(date)

vc-code: |-
  {
      if |date| == 0 then false
      else
          var hyphen_count := count_char(date, '-');
          if hyphen_count != 2 then false
          else
              var parts := split_by_hyphen(date);
              if |parts| != 3 then false
              else
                  var month_str := parts[0];
                  var day_str := parts[1];
                  var year_str := parts[2];
  
                  if |month_str| == 0 || |day_str| == 0 || |year_str| == 0 then false
                  else if !is_numeric(month_str) || !is_numeric(day_str) || !is_numeric(year_str) then false
                  else
                      var month := string_to_int(month_str);
                      var day := string_to_int(day_str);
                      var year := string_to_int(year_str);
  
                      if month < 1 || month > 12 then false
                      else
                          if month in {1, 3, 5, 7, 8, 10, 12} then
                              day >= 1 && day <= 31
                          else if month in {4, 6, 9, 11} then
                              day >= 1 && day <= 30
                          else
                              day >= 1 && day <= 29
  }

vc-postamble: |-

