vc-description: |-
  Given a class name (string) and a list of extension names (strings), find the "strongest" extension and return the result in the format "ClassName.StrongestExtensionName". The strength of an extension is calculated as: (number of uppercase letters) - (number of lowercase letters). Choose the extension with the highest strength value. If multiple extensions have the same highest strength, choose the first one that appears in the list.

vc-preamble: |-
  // Given a class name (string) and a list of extension names (strings), find the "strongest" extension 
  // and return the result in the format "ClassName.StrongestExtensionName".
  // The strength of an extension is calculated as: (number of uppercase letters) - (number of lowercase letters).
  // Choose the extension with the highest strength value. If multiple extensions have the same highest strength, 
  // choose the first one that appears in the list.
  
  function count_upper(s: string): int
  {
      if |s| == 0 then 0
      else (if 'A' <= s[0] <= 'Z' then 1 else 0) + count_upper(s[1..])
  }
  
  function count_lower(s: string): int
  {
      if |s| == 0 then 0
      else (if 'a' <= s[0] <= 'z' then 1 else 0) + count_lower(s[1..])
  }
  
  function strength(s: string): int
  {
      count_upper(s) - count_lower(s)
  }

vc-helpers: |-

vc-spec: |-
  method Strongest_Extension(class_name: string, extensions: seq<string>) returns (result: string)
      requires |extensions| > 0
      ensures exists i :: 0 <= i < |extensions| && result == class_name + "." + extensions[i] &&
              (forall j :: 0 <= j < |extensions| ==> strength(extensions[i]) >= strength(extensions[j])) &&
              (forall j :: 0 <= j < i ==> strength(extensions[j]) < strength(extensions[i]))

vc-code: |-
  {
      var strongest_idx := 0;
      var max_strength := strength(extensions[0]);
  
      for i := 1 to |extensions| 
          invariant 0 <= strongest_idx < i <= |extensions|
          invariant max_strength == strength(extensions[strongest_idx])
          invariant forall j :: 0 <= j < i ==> strength(extensions[j]) <= max_strength
          invariant forall j :: 0 <= j < strongest_idx ==> strength(extensions[j]) < max_strength
      {
          var current_strength := strength(extensions[i]);
          if current_strength > max_strength {
              max_strength := current_strength;
              strongest_idx := i;
          }
      }
  
      result := class_name + "." + extensions[strongest_idx];
  }

vc-postamble: |-

