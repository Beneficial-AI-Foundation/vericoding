vc-description: |-
  This verification task implements a string encryption algorithm that shifts each alphabetic character forward by 4 positions in the alphabet with wraparound. The implementation should preserve the case of letters and leave non-alphabetic characters unchanged.

vc-preamble: |-
  // Encrypts a string by shifting each alphabetic character forward by 4 positions in the alphabet.
  // The shift wraps around (after 'z' comes 'a', after 'Z' comes 'A').
  // Non-alphabetic characters remain unchanged. Case of letters is preserved.

vc-helpers: |-

vc-spec: |-
  method encrypt(s: string) returns (result: string)
      requires |s| >= 0
      ensures |result| == |s|
      ensures forall i :: 0 <= i < |s| ==> (
          if 'a' <= s[i] <= 'z' then
              result[i] == (((s[i] as int - 'a' as int + 4) % 26) + 'a' as int) as char
          else if 'A' <= s[i] <= 'Z' then
              result[i] == (((s[i] as int - 'A' as int + 4) % 26) + 'A' as int) as char
          else
              result[i] == s[i]
      )

vc-code: |-
  {
      var encrypted := [];
      var shift := 4;
  
      for i := 0 to |s|
          invariant 0 <= i <= |s|
          invariant |encrypted| == i
          invariant forall j :: 0 <= j < i ==> (
              if 'a' <= s[j] <= 'z' then
                  encrypted[j] == (((s[j] as int - 'a' as int + 4) % 26) + 'a' as int) as char
              else if 'A' <= s[j] <= 'Z' then
                  encrypted[j] == (((s[j] as int - 'A' as int + 4) % 26) + 'A' as int) as char
              else
                  encrypted[j] == s[j]
          )
      {
          var c := s[i];
  
          if 'a' <= c && c <= 'z' {
              var shifted_pos := (c as int - 'a' as int + shift) % 26;
              var new_char := (shifted_pos + 'a' as int) as char;
              encrypted := encrypted + [new_char];
          } else if 'A' <= c && c <= 'Z' {
              var shifted_pos := (c as int - 'A' as int + shift) % 26;
              var new_char := (shifted_pos + 'A' as int) as char;
              encrypted := encrypted + [new_char];
          } else {
              encrypted := encrypted + [c];
          }
      }
  
      result := encrypted;
  }

vc-postamble: |-

