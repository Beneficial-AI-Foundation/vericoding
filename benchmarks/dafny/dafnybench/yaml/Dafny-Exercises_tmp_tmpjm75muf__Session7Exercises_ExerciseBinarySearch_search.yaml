vc-description: |-
  //Implement by calling binary search function
  
  //Recursive binary search

vc-preamble: |-
  predicate sorted(s : seq<int>) {
      forall u, w :: 0 <= u < w < |s| ==> s[u] <= s[w]
  }
  
  method binarySearch(v:array<int>, elem:int) returns (p:int)
   requires sorted(v[0..v.Length])
   ensures -1<=p<v.Length
   ensures (forall u::0<=u<=p ==> v[u]<=elem) && (forall w::p<w<v.Length ==> v[w]>elem)
  {
    assume{:axiom} false;
  }

vc-helpers: |-

vc-spec: |-
  method search(v:array<int>,elem:int) returns (b:bool)
   requires sorted(v[0..v.Length])
  ensures b==(elem in v[0..v.Length])

vc-code: |-
  {
    assume {:axiom} false;
  }

vc-postamble: |-

