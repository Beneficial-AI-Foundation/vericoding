vc-preamble: |-
   module Permutation
   {
      predicate distinct'(a: array<int>, n: nat)
          requires a.Length == n
          reads a
      {
          forall i, j :: 0 <= i < j < n ==> a[i] != a[j]
      }
  
      predicate distinct_prefix(a: array<int>, k: nat)
          requires a != null && k <= a.Length
          reads a
      {
          forall i, j :: 0 <= i < j < k ==> a[i] != a[j]
      }
  
      predicate distinct(a: array<int>)
          requires a != null
          reads a
      {
          distinct'(a, a.Length)
      }
  
     predicate isValid(a: array<int>, n: nat)
      requires a != null && a.Length == n
      reads a
      {    
          distinct(a)
          && (forall i :: 0 <= i < a.Length ==> 0 <= a[i] < n)
          && (forall i :: 0 <= i < n ==> i in a[..])
      }

vc-helpers: |-
  // <vc-helpers>
  // </vc-helpers>

vc-spec: |-
  // <vc-spec>
  method Generate(n: int) returns (perm: array<int>)
          requires n >= 0
          ensures perm != null
          ensures perm.Length == n
          ensures fresh(perm)
          ensures isValid(perm, n)
  // </vc-spec>

vc-code: |-
  // <vc-code>
  {
    assume false;
  }
  // </vc-code>

vc-postamble: |-
  }

