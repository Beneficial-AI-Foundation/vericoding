vc-description: |-

vc-preamble: |-
  //Problem01
  //a)
  
  //b)
  //Problem04
  
  method FindMin(a: array<int>, lo: nat) returns (minIdx: nat)
      requires a != null && a.Length > 0 && lo < a.Length
      ensures lo <= minIdx < a.Length
      ensures forall x :: lo <= x < a.Length ==> a[minIdx] <= a[x]
  {
    assume{:axiom} false;
  }
  
  //Problem02
  ghost predicate sorted(a:seq<int>)
  {
      forall i | 0 < i < |a| :: a[i-1] <= a[i]     
  }

vc-helpers: |-
  // <vc-helpers>
  // </vc-helpers>

vc-spec: |-
  // <vc-spec>
  method selectionSort(a: array<int>)
      modifies a
      //ensures multiset(a[..]) == multiset(old(a[..]))
      //ensures sorted(a[..])
  // </vc-spec>

vc-code: |-
  // <vc-code>
  {
    assume false;
  }
  // </vc-code>

vc-postamble: |-
  //Problem03

