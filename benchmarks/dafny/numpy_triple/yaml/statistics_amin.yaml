---
vc-description: |-
  Implementation of numpy.amin - returns the minimum value from a non-empty array.
  This function finds the smallest element in the input array, ensuring that
  NaN propagation and proper minimum computation is handled according to numpy semantics.
vc-preamble: |-
  // Floating point datatype that supports NaN for proper numpy semantics
  datatype Float = NaN | Value(val: real)
  
  // Method that returns the minimum element from a non-empty sequence of floating point numbers
vc-helpers: |-
  
vc-spec: |-
  method amin(a: seq<Float>) returns (result: Float)
    // Precondition: array must be non-empty since minimum is undefined for empty sets
    requires |a| > 0
    // Postcondition 1: if any element is NaN, result is NaN (NaN propagation)
    ensures (exists i :: 0 <= i < |a| && a[i] == NaN) ==> result == NaN
    // Postcondition 2: if no NaN present, result must be an actual element from the input array
    ensures (forall i :: 0 <= i < |a| ==> a[i] != NaN) ==> (exists i :: 0 <= i < |a| && a[i] == result)
    // Postcondition 3: if no NaN present, result must be less than or equal to all elements
    ensures (forall i :: 0 <= i < |a| ==> a[i] != NaN) ==> (forall i :: 0 <= i < |a| ==> a[i].Value? ==> result.Value? && result.val <= a[i].val)
vc-code: |-
  {
    assume {:axiom} false;
  }
vc-postamble: |-
  
