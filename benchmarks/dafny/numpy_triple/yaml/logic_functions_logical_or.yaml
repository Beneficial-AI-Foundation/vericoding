---
vc-description: |-
  Specification for numpy.logical_or: Compute the truth value of x1 OR x2 element-wise.
  Performs logical OR operation on corresponding elements of two boolean vectors,
  returning a vector where each element is the logical OR of the corresponding
  elements from the input vectors.
vc-preamble: |-
  
vc-helpers: |-
  
vc-spec: |-
  method logical_or(x1: seq<bool>, x2: seq<bool>) returns (result: seq<bool>)
    // Input vectors must have the same length
    requires |x1| == |x2|
    
    // Output vector has the same length as input vectors
    ensures |result| == |x1|
    
    // Core specification: each element is logical OR of corresponding input elements
    ensures forall i :: 0 <= i < |result| ==> result[i] == (x1[i] || x2[i])
    
    // Commutativity property: a ∨ b = b ∨ a
    ensures forall i :: 0 <= i < |result| ==> (x1[i] || x2[i]) == (x2[i] || x1[i])
    
    // Identity with false: a ∨ false = a
    ensures forall i :: 0 <= i < |x1| ==> (x1[i] || false) == x1[i]
    
    // Absorption with true: a ∨ true = true
    ensures forall i :: 0 <= i < |x1| ==> (x1[i] || true) == true
    
    // Idempotent property: a ∨ a = a
    ensures forall i :: 0 <= i < |x1| ==> (x1[i] || x1[i]) == x1[i]
    
    // Result is true if either operand is true
    ensures forall i :: 0 <= i < |result| ==> 
      (x1[i] == true || x2[i] == true) ==> result[i] == true
    
    // Result is false only when both operands are false
    ensures forall i :: 0 <= i < |result| ==> 
      (x1[i] == false && x2[i] == false) ==> result[i] == false
vc-code: |-
  {
    assume {:axiom} false;
  }
vc-postamble: |-
  
