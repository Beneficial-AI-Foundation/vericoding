---
vc-description: |-
  This file implements numpy.maximum_sctype functionality - returning the scalar type
  of highest precision of the same kind as the input type. It defines a type hierarchy
  for numeric types with different kinds (integer, float, complex, etc.) and precision
  levels, then provides a method to find the maximum precision type for each kind.
vc-preamble: |-
  // Define the different kinds of numeric types
  datatype NumericKind = Integer | UnsignedInteger | Float | Complex | String | Boolean
  
  // Define precision levels from lowest to highest
  datatype Precision = P8 | P16 | P32 | P64 | P128 | P256
  
  // A numeric type combining kind and precision
  datatype NumericType = NumericType(kind: NumericKind, precision: Precision)
  
  // Define the maximum precision available for each numeric kind
  function MaxPrecisionFor(kind: NumericKind): Precision
  {
      match kind
      case Integer => P64
      case UnsignedInteger => P64
      case Float => P128
      case Complex => P256
      case String => P64  // Represents max string length handling capacity
      case Boolean => P8
  }
  
  // Define precision ordering - returns true if p1 <= p2
  predicate PrecisionLE(p1: Precision, p2: Precision)
  {
      match (p1, p2)
      case (P8, _) => true
      case (P16, P8) => false
      case (P16, _) => true
      case (P32, P8) => false
      case (P32, P16) => false
      case (P32, _) => true
      case (P64, P8) => false
      case (P64, P16) => false
      case (P64, P32) => false
      case (P64, _) => true
      case (P128, P256) => true
      case (P128, _) => false
      case (P256, _) => false
  }
  
  // Return the scalar type of highest precision of the same kind as the input
vc-helpers: |-
  
vc-spec: |-
  method MaximumSctype(t: NumericType) returns (result: NumericType)
      ensures result.kind == t.kind  // Same kind as input
      ensures result.precision == MaxPrecisionFor(t.kind)  // Maximum precision for that kind
      ensures PrecisionLE(t.precision, result.precision)  // Result has higher or equal precision
vc-code: |-
  {
    assume {:axiom} false;
  }
vc-postamble: |-
  
