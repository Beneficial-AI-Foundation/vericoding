---
vc-description: |-
  Implements the numpy.ldexp function which returns x1 * 2**x2, element-wise.
  The mantissas x1 and twos exponents x2 are used to construct floating point numbers x1 * 2**x2.
  
  Note: This specification models the mathematical behavior of ldexp using Dafny's real type.
  In practice, ldexp operates on IEEE 754 floating-point numbers with finite precision,
  overflow/underflow behavior, and rounding. This mathematical model provides an
  idealized specification of the intended computation.
vc-preamble: |-
  // Helper function to compute 2^n for integer exponents
  // Note: Models mathematical exponentiation; actual IEEE 754 may have overflow/underflow
  function Pow2(n: int): real
    decreases if n >= 0 then n else -n
  {
    if n == 0 then 1.0
    else if n > 0 then 2.0 * Pow2(n - 1)
    else 1.0 / Pow2(-n)
  }
  
  // Method implementing the ldexp functionality
  // Note: Uses mathematical reals as approximation of floating-point behavior
vc-helpers: |-
  
vc-spec: |-
  method ldexp(x1: seq<real>, x2: seq<int>) returns (result: seq<real>)
    // Input vectors must have the same length
    requires |x1| == |x2|
    // Output vector has the same length as input vectors
    ensures |result| == |x1|
    // Element-wise specification: result[i] = x1[i] * 2^x2[i]
    // Note: Mathematical specification; actual floating-point implementation may differ
    // due to precision limits, overflow, underflow, and rounding
    ensures forall i :: 0 <= i < |result| ==> 
      result[i] == x1[i] * Pow2(x2[i])
vc-code: |-
  {
    assume {:axiom} false;
  }
vc-postamble: |-
  
