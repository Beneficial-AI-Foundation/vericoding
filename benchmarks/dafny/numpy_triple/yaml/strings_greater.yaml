---
vc-description: |-
  numpy.strings.greater: Return the truth value of (x1 > x2) element-wise for string arrays.
  Performs element-wise string comparison between two sequences of strings.
  Returns a boolean sequence indicating whether corresponding strings from x1
  are lexicographically greater than corresponding strings from x2.
vc-preamble: |-
  predicate StringGreater(s1: string, s2: string)
  {
      if |s1| == 0 then false
      else if |s2| == 0 then true
      else if s1[0] == s2[0] then StringGreater(s1[1..], s2[1..])
      else s1[0] > s2[0]
  }
vc-helpers: |-
  
vc-spec: |-
  method Greater(x1: seq<string>, x2: seq<string>) returns (result: seq<bool>)
      // Input vectors must have the same length
      requires |x1| == |x2|
      
      // Output vector has same length as input vectors
      ensures |result| == |x1|
      
      // Core property: result[i] = (x1[i] > x2[i]) for all indices
      ensures forall i :: 0 <= i < |result| ==> result[i] == StringGreater(x1[i], x2[i])
      
      // Asymmetry: if x1[i] > x2[i], then NOT (x2[i] > x1[i])
      ensures forall i :: 0 <= i < |result| ==> result[i] ==> !StringGreater(x2[i], x1[i])
      
      // Irreflexivity: no string is greater than itself
      ensures forall i :: 0 <= i < |result| ==> x1[i] == x2[i] ==> !result[i]
      
      // Transitivity property: if x1[i] > x2[i] and s < x2[i], then x1[i] > s
      ensures forall i :: 0 <= i < |result| ==> result[i] ==> 
              forall s :: StringGreater(x2[i], s) ==> StringGreater(x1[i], s)
      
      // Decidability: result is always boolean (true or false)
      ensures forall i :: 0 <= i < |result| ==> result[i] || !result[i]
vc-code: |-
  {
    assume {:axiom} false;
  }
vc-postamble: |-
  
