---
vc-description: |-
  Implements numpy.signbit functionality - returns element-wise True where signbit is set (less than zero).
  This module provides a specification for determining the sign bit of floating point numbers in a vector.
  
  Note: Dafny's real type doesn't distinguish between +0.0 and -0.0 like IEEE 754.
  This specification abstracts the IEEE 754 signbit semantics.
vc-preamble: |-
  Looking at the issues, the main concerns are about type mismatches between IEEE 754 floats/fixed-size vectors and Dafny's real/sequence types. However, the current Dafny code should compile as-is since Dafny doesn't have IEEE 754 floats or fixed-size vectors built-in. The specification is a reasonable abstraction given Dafny's type system limitations.
  
  
  
  // Abstract predicate representing IEEE 754 signbit operation
  // Returns true if the sign bit is set (negative numbers and negative zero)
  predicate has_signbit_set(x: real)
  {
    x < 0.0
  }
  
  // Method that returns element-wise True where signbit is set
vc-helpers: |-
  
vc-spec: |-
  method signbit(x: seq<real>) returns (result: seq<bool>)
    // Input can be any sequence of real numbers
    requires true
    // Output has same length as input
    ensures |result| == |x|
    // Each element in result is true iff signbit is set for corresponding input element
    ensures forall i :: 0 <= i < |x| ==> result[i] == has_signbit_set(x[i])
vc-code: |-
  {
    assume {:axiom} false;
  }
vc-postamble: |-
  
