---
vc-description: |-
  Implementation of numpy.setxor1d functionality for finding the set exclusive-or of two arrays.
  Returns the sorted, unique values that are in only one (not both) of the input arrays,
  which is equivalent to the symmetric difference of two sets.
vc-preamble: |-
  // Helper predicate to check if a sequence is sorted in ascending order
  predicate IsSorted(s: seq<real>) {
      forall i, j :: 0 <= i < j < |s| ==> s[i] <= s[j]
  }
  
  // Helper predicate to check if a sequence has no duplicate elements
  predicate NoDuplicates(s: seq<real>) {
      forall i, j :: 0 <= i < j < |s| ==> s[i] != s[j]
  }
  
  // Main method implementing numpy.setxor1d behavior
vc-helpers: |-
  
vc-spec: |-
  method numpy_setxor1d(ar1: seq<real>, ar2: seq<real>) returns (result: seq<real>)
      // No preconditions required
      ensures IsSorted(result)
      // Result contains no duplicates
      ensures NoDuplicates(result)
      // Every element in result is from exactly one input array
      ensures forall x :: x in result ==> 
          (x in ar1 && x !in ar2) || (x in ar2 && x !in ar1)
      // Every element that appears in exactly one input array is in the result
      ensures forall x :: 
          ((x in ar1 && x !in ar2) || (x in ar2 && x !in ar1)) ==> x in result
vc-code: |-
  {
    assume {:axiom} false;
  }
vc-postamble: |-
  
