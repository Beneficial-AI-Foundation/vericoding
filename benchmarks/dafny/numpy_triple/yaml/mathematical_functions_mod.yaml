---
vc-description: |-
  This file implements the numpy.mod function specification in Dafny.
  numpy.mod returns the element-wise remainder of division, equivalent to x1 % x2.
  The result has the same sign as the divisor and satisfies the mathematical
  property: x1 = floor(x1/x2) * x2 + result.
  
  Note: This specification uses real numbers to approximate floating-point behavior.
  In practice, this would operate on fixed-size vectors of floating-point numbers.
vc-preamble: |-
  // Method to compute element-wise modulo operation on fixed-size vectors
vc-helpers: |-
  
vc-spec: |-
  method numpy_mod(n: nat, x1: seq<real>, x2: seq<real>) returns (result: seq<real>)
    // Precondition: vectors must have fixed length n and all divisors must be non-zero
    requires |x1| == n && |x2| == n
    requires forall i :: 0 <= i < |x2| ==> x2[i] != 0.0
    
    // Postcondition: result has same fixed length as inputs
    ensures |result| == n
    
    // Postcondition: each element satisfies the mathematical remainder properties
    // (approximating floating-point floor behavior with real floor)
    ensures forall i :: 0 <= i < |result| ==>
      var r := result[i];
      var a := x1[i];
      var b := x2[i];
      // Basic remainder property: a = floor(a/b) * b + r
      a == (a / b).Floor as real * b + r &&
      // Result has same sign as divisor and proper bounds
      (b > 0.0 ==> r >= 0.0 && r < b) &&
      (b < 0.0 ==> r <= 0.0 && r > b)
vc-code: |-
  {
    assume {:axiom} false;
  }
vc-postamble: |-
  
