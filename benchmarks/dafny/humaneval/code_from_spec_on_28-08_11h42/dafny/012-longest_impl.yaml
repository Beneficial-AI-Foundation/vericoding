vc-preamble: |-
  datatype Option<T> = None | Some(T)
  function getVal(mx : Option<string>) : string
      requires mx != None
  {
      match mx {
          case Some(n) => n
      }
  }

vc-helpers: |-
  lemma MaxLengthExists(strings: seq<string>, maxLen: int)
    requires |strings| > 0
    requires forall s :: s in strings ==> |s| <= maxLen
    requires exists s :: s in strings && |s| == maxLen
    ensures exists i :: 0 <= i < |strings| && |strings[i]| == maxLen
  {
    assert exists s :: s in strings && |s| == maxLen;
  }
  
  lemma MaxLengthProperty(strings: seq<string>, i: int)
    requires |strings| > 0
    requires 0 <= i < |strings|
    requires forall j :: 0 <= j < |strings| ==> |strings[j]| <= |strings[i]|
    ensures forall s :: s in strings ==> |strings[i]| >= |s|
  {
    forall s | s in strings
      ensures |strings[i]| >= |s|
    {
      assert exists j :: 0 <= j < |strings| && strings[j] == s;
    }
  }

vc-description: |-
  function_signature: def longest(strings: List[str]) -> Optional[str]
  Out of list of strings, return the longest one. Return the first one in case of multiple strings of the same length. Return None in case the input list is empty.

vc-spec: |-
  method longest(strings: seq<string>) returns (result : Option<string>)
    // post-conditions-start
    ensures result == None <==> |strings| == 0
    ensures result != None ==> forall s :: s in strings ==> |getVal(result)| >= |s|
    ensures result != None ==> getVal(result) in strings 
    // post-conditions-end

vc-code: |-
  {
    if |strings| == 0 {
      result := None;
      return;
    }
    
    var maxLen := |strings[0]|;
    var maxIndex := 0;
    
    var i := 1;
    while i < |strings|
      invariant 1 <= i <= |strings|
      invariant 0 <= maxIndex < i
      invariant maxLen == |strings[maxIndex]|
      invariant forall j :: 0 <= j < i ==> |strings[j]| <= maxLen
    {
      if |strings[i]| > maxLen {
        maxLen := |strings[i]|;
        maxIndex := i;
      }
      i := i + 1;
    }
    
    assert forall j :: 0 <= j < |strings| ==> |strings[j]| <= |strings[maxIndex]|;
    MaxLengthProperty(strings, maxIndex);
    
    result := Some(strings[maxIndex]);
  }

vc-postamble: |-


