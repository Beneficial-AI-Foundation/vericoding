vc-preamble: |-


vc-helpers: |-


vc-description: |-
  function_signature: def find_max(words: List String) -> String
  Write a function that accepts a list of strings. The list contains different words. Return the word with maximum number of unique characters. If multiple strings have maximum number of unique characters, return the one which comes first in lexicographical order.

vc-spec: |-
  method find_max(strings : seq<string>) returns (s : string)
     // pre-conditions-start
      requires |strings| > 0
      // pre-conditions-end
      // post-conditions-start
      ensures s in strings
      ensures forall i : int :: 0 <= i < |strings| ==> |set c | c in s| >= |set c | c in strings[i]|
      // post-conditions-end

vc-code: |-
  {
    s := strings[0];
    var i := 1;
    while i < |strings|
      invariant 1 <= i <= |strings|
      invariant s in strings
      invariant forall j : int :: 0 <= j < i ==> |set c | c in s| >= |set c | c in strings[j]|
    {
      if |set c | c in strings[i]| > |set c | c in s| {
        s := strings[i];
      }
      i := i + 1;
    }
  }

vc-postamble: |-


