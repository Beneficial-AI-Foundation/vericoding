vc-preamble: |-


vc-helpers: |-
  // No additional helpers needed for this specification and implementation.

vc-description: |-
  function_signature: def eat(number: Nat, need: Nat, remaining: Nat) -> List Nat
  You're a hungry rabbit, and you already have eaten a certain number of carrots, but now you need to eat more carrots to complete the day's meals. you should return an array of [ total number of eaten carrots after your meals, the number of carrots left after your meals ] if there are not enough remaining carrots, you will eat all remaining carrots, but will still be hungry.

vc-spec: |-
  method Eat(number: nat, need: nat, remaining: nat) returns (result: array<nat>)
    requires number >= 0 && need >= 0 && remaining >= 0
    ensures result.Length == 2
    ensures result[0] == number + (if remaining >= need then need else remaining)
    ensures result[1] == (if remaining >= need then remaining - need else 0)

vc-code: |-
  {
    var eaten: nat;
    var left: nat;
    if remaining >= need {
      eaten := need;
      left := remaining - need;
    } else {
      eaten := remaining;
      left := 0;
    }
    result := new nat[2];
    result[0] := number + eaten;
    result[1] := left;
  }

vc-postamble: |-


