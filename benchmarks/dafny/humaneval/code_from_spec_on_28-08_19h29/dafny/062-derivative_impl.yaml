vc-preamble: |-


vc-helpers: |-
  // No additional helpers needed for this specification and implementation.

vc-description: |-
  function_signature: def derivative(xs: List Int) -> List Int
  xs represent coefficients of a polynomial. xs[0] + xs[1] * x + xs[2] * x^2 + .... Return derivative of this polynomial in the same form.

vc-spec: |-
  method Derivative(xs: seq<int>) returns (result: seq<int>)
    requires |xs| > 0
    ensures |result| == |xs| - 1 || |xs| == 1
    ensures |xs| == 1 ==> result == []
    ensures |xs| > 1 ==> forall i :: 0 <= i < |result| ==> result[i] == xs[i + 1] * (i + 1)

vc-code: |-
  {
    if |xs| == 1 {
      return [];
    }
    var res: seq<int> := [];
    for i := 0 to |xs| - 1
      invariant |res| == i
      invariant forall k :: 0 <= k < i ==> res[k] == xs[k + 1] * (k + 1)
    {
      res := res + [xs[i + 1] * (i + 1)];
    }
    return res;
  }

vc-postamble: |-


