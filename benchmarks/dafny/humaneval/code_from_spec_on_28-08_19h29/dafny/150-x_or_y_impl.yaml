vc-preamble: |-
  function IsPrime(n: nat) : bool
  {
    n > 1 &&
    forall k :: 2 <= k < n ==> n % k != 0
  }

vc-helpers: |-
  function IsPrimeHelper(n: nat) : bool
  {
    n > 1 &&
    forall k :: 2 <= k < n ==> n % k != 0
  }

vc-description: |-
  function_signature: def x_or_y(int n, int x, int y) -> int
  A simple program which should return the value of x if n is a prime number and should return the value of y otherwise.

vc-spec: |-
  method x_or_y(n: int, x: int, y: int) returns (result: int)
    requires n >= 0
    ensures result == if IsPrimeHelper(n) then x else y

vc-code: |-
  {
    if IsPrimeHelper(n) {
      result := x;
    } else {
      result := y;
    }
  }

vc-postamble: |-


