vc-preamble: |-
  function contains_char(s: string, c: char): bool
    decreases |s|
    requires forall i :: 0 <= i < |s| ==> 'a' <= s[i] <= 'z' || 'A' <= s[i] <= 'Z'
    requires 'a' <= c <= 'z'
  {
    if |s| == 0 then false else s[0] == c || s[0] == upper_char(c) || contains_char(s[1..], c)
  }
  function upper_char(c: char) : (C: char)
    requires 'a' <= c <= 'z'
    ensures 'A' <= C <= 'Z'
  { c - 'a' + 'A' }

vc-helpers: |-
  function contains_char_upper(s: string, c: char): bool
    decreases |s|
    requires forall i :: 0 <= i < |s| ==> 'a' <= s[i] <= 'z' || 'A' <= s[i] <= 'Z'
    requires 'A' <= c <= 'Z'
  {
    if |s| == 0 then false else s[0] == c || s[0] == c - 'A' + 'a' || contains_char_upper(s[1..], c)
  }

vc-description: |-
  function_signature: def count_distinct_characters(string: str) -> int
  Given a string, find out how many distinct characters (regardless of case) does it consist of

vc-spec: |-
  method count_distinct_characters(s: string) returns (count: int)
    requires forall i :: 0 <= i < |s| ==> 'a' <= s[i] <= 'z' || 'A' <= s[i] <= 'Z'
    ensures count >= 0
    ensures count <= 26
    ensures count == |set c: char | 'a' <= c <= 'z' && (contains_char(s, c) || contains_char_upper(s, upper_char(c)))|

vc-code: |-
  {
    var distinct_chars: set<char> := {};
    var i := 0;
    while i < 26
      invariant 0 <= i <= 26
      invariant distinct_chars <= {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}
      invariant |distinct_chars| <= i
      invariant forall c :: 'a' <= c <= 'z' && c in distinct_chars ==> (exists k :: 0 <= k < i && c == 'a' + k as char && (contains_char(s, c) || contains_char_upper(s, upper_char(c))))
      invariant forall k :: 0 <= k < i ==> var c := 'a' + k as char; (contains_char(s, c) || contains_char_upper(s, upper_char(c))) ==> c in distinct_chars
    {
      var c: char := 'a' + i as char;
      if contains_char(s, c) || contains_char_upper(s, upper_char(c)) {
        distinct_chars := distinct_chars + {c};
      }
      i := i + 1;
    }
    count := |distinct_chars|;
  }

vc-postamble: |-


