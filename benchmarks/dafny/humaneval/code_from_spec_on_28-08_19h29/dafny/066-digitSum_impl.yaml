vc-preamble: |-
  function upper_sum_rec(s: string): int
    // post-conditions-start
    ensures upper_sum_rec(s) >= 0
    // post-conditions-end
  {
    // impl-start
    if |s| == 0 then
      0
    else
      var remaining := upper_sum_rec(s[1..]);
      to_int(s[0]) + remaining
    // impl-end
  }
  function to_int(c: char): int
      ensures 'A' <= c <= 'Z' ==> to_int(c) == c as int
      ensures c < 'A' || c > 'Z' ==> to_int(c) == 0
  {
      if 'A' <= c <= 'Z' then c as int else 0
  }

vc-helpers: |-
  // No additional helpers needed beyond the provided functions.

vc-description: |-
  function_signature: def digitSum(string: str) -> Nat
  Write a function that takes a string as input and returns the sum of the upper characters only' ASCII codes.

vc-spec: |-
  function digitSum(str: string): nat
    ensures digitSum(str) >= 0

vc-code: |-
  {
    upper_sum_rec(str)
  }

vc-postamble: |-


