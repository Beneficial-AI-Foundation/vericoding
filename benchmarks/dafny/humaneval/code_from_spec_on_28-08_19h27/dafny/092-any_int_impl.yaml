vc-preamble: |-


vc-helpers: |-
  predicate IsInteger(x: real) {
    x == x.Floor as real
  }

vc-description: |-
  function_signature: def any_int(a: float, b: float, c: float) -> bool
  Create a function that takes 3 numbers. Returns true if one of the numbers is equal to the sum of the other two, and all numbers are integers. Returns false in any other cases.

vc-spec: |-
  method any_int(a: real, b: real, c: real) returns (result: bool)
    ensures result == (IsInteger(a) && IsInteger(b) && IsInteger(c) && 
                      (a == b + c || b == a + c || c == a + b))

vc-code: |-
  {
    if IsInteger(a) && IsInteger(b) && IsInteger(c) {
      result := (a == b + c) || (b == a + c) || (c == a + b);
    } else {
      result := false;
    }
  }

vc-postamble: |-


