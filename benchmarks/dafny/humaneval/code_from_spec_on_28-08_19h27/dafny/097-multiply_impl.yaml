vc-preamble: |-
  function last_digit(n: int): int
    // post-conditions-start
    ensures n >= 0 ==> last_digit(n) == n % 10
    ensures n < 0 ==> last_digit(n) == (-n) % 10
    // post-conditions-end
  {
    // impl-start
    if n < 0 then (-n) % 10 else n % 10
    // impl-end
  }

vc-helpers: |-


vc-description: |-
  function_signature: def multiply(a : Int, b : Int) -> Int
  Complete the function that takes two integers and returns the product of their unit digits. Assume the input is always valid.

vc-spec: |-
  function multiply(a: int, b: int): int
    ensures multiply(a, b) == last_digit(a) * last_digit(b)

vc-code: |-
  {
    last_digit(a) * last_digit(b)
  }

vc-postamble: |-


