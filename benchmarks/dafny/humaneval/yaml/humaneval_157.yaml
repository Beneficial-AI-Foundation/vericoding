vc-description: |-
  This verification task involves implementing a method to determine if three positive numbers representing triangle side lengths form a right-angled triangle. The implementation must check both that the sides form a valid triangle (positive lengths satisfying triangle inequality) and that they satisfy the Pythagorean theorem.

vc-preamble: |-
  
  predicate ValidTriangle(a: real, b: real, c: real)
  {
      a > 0.0 && b > 0.0 && c > 0.0 &&
      a + b > c && a + c > b && b + c > a
  }
  
  predicate IsRightTriangle(a: real, b: real, c: real)
  {
      a * a + b * b == c * c || 
      a * a + c * c == b * b || 
      b * b + c * c == a * a
  }
  
  predicate ValidRightTriangle(a: real, b: real, c: real)
  {
      ValidTriangle(a, b, c) && IsRightTriangle(a, b, c)
  }

vc-helpers: |-

vc-spec: |-
  method right_angle_triangle(a: real, b: real, c: real) returns (result: bool)
      ensures result <==> ValidRightTriangle(a, b, c)

vc-code: |-
  {
      assume {:axiom} false;
    }
vc-postamble: |-
