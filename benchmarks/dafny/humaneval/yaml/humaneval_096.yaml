vc-description: |-
  This verification task involves implementing a function that returns all prime numbers strictly less than a given non-negative integer n, in ascending order. The implementation should correctly identify prime numbers using a helper method and build the result sequence while maintaining the sorted order.

vc-preamble: |-
  
  predicate is_prime_number(num: int)
  {
      num >= 2 && forall k :: 2 <= k < num ==> num % k != 0
  }

vc-helpers: |-

vc-spec: |-
  method count_up_to(n: int) returns (result: seq<int>)
      requires n >= 0
      ensures forall i :: 0 <= i < |result| ==> is_prime_number(result[i])
      ensures forall i :: 0 <= i < |result| ==> result[i] < n
      ensures forall p :: 2 <= p < n && is_prime_number(p) ==> p in result
      ensures forall i, j :: 0 <= i < j < |result| ==> result[i] < result[j]

vc-code: |-
  {
      assume {:axiom} false;
    }
vc-postamble: |-
