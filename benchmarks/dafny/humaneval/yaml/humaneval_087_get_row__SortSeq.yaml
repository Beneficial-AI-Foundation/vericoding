vc-description: |-
  function_signature: method SortSeq(s: SortSeqState) returns (sorted: SortSeqState)
  Sort elements. Ensures: the result is sorted according to the ordering relation; returns the correct size/count; returns a sorted permutation of the input.

vc-preamble: |-
  type SortSeqState = seq<(int, int)>
  function less(a: (int, int), b: (int, int)): bool {
    var (x, y) := a; var (u, v) := b;
    x < u || (x == u && y > v)
  }
  function less_eq(a: (int, int), b: (int, int)): bool {
    var (x, y) := a; var (u, v) := b;
    (x == u && y == v) || less(a, b)
  }

vc-helpers: |-

vc-spec: |-
  method SortSeq(s: SortSeqState) returns (sorted: SortSeqState)
  
    ensures forall i, j :: 0 <= i < j < |sorted| ==> less_eq(sorted[i], sorted[j])
    ensures |sorted| == |s|
    ensures multiset(s) == multiset(sorted)

vc-code: |-
  {
      assume {:axiom} false;
    }
vc-postamble: |-

