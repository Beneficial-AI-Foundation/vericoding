vc-preamble: |-
  function CalcBal(s: seq<int>, i: int, j: int) : int 
      requires 0 <= i <= j <= |s|
  {
      if i == j then 0
      else (if s[j - 1] == 0 then 1 else -1) + CalcBal(s, i, j - 1)
  }

vc-helpers: |-


vc-description: |-
  function_signature: def correct_bracketing(brackets: str) -> Bool
  brackets is a string of "<" and ">". return True if every opening bracket has a corresponding closing bracket, i.e., (each open bracket is properly closed)

vc-spec: |-
  method correct_bracketing(s: seq<int>) returns (b: bool)
      // pre-conditions-start
      requires forall i :: 0 <= i < |s| ==> s[i] == 0 || s[i] == 1
      // pre-conditions-end
      // post-conditions-start
      ensures (forall i :: 0 <= i <= |s| ==> CalcBal(s, 0, i) >= 0) ==> b
      ensures b ==> (forall i :: 0 <= i <= |s| ==> CalcBal(s, 0, i) >= 0)
      // post-conditions-end

vc-code: |-
  {
    assume false;
  }

vc-postamble: |-
