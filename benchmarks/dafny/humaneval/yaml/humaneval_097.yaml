vc-description: |-
  This task implements a function to compute the product of the unit digits of two integers. The unit digit is defined as the ones place digit of the absolute value of a number. Given two integers (which can be positive, negative, or zero), the method should return the product of their respective unit digits.

vc-preamble: |-
  
  function UnitDigit(n: int): int
  {
      (if n >= 0 then n else -n) % 10
  }
  
  function ProductOfUnitDigits(a: int, b: int): int
  {
      UnitDigit(a) * UnitDigit(b)
  }
  
  predicate ValidResult(result: int)
  {
      result >= 0 && result <= 81
  }

vc-helpers: |-

vc-spec: |-
  method multiply(a: int, b: int) returns (result: int)
      ensures result == ProductOfUnitDigits(a, b)
      ensures ValidResult(result)

vc-code: |-
  {
      assume {:axiom} false;
    }
vc-postamble: |-
