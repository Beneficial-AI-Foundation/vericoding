vc-description: |-
  Count the number of distinct characters in a string, ignoring case differences. The implementation should return an integer representing the count of unique characters, treating 'A' and 'a' as the same character through case-insensitive comparison.

vc-preamble: |-
  
  function to_lower_char(c: char): char
  {
      if 'A' <= c <= 'Z' then
          (c as int - 'A' as int + 'a' as int) as char
      else
          c
  }

vc-helpers: |-

vc-spec: |-
  method count_distinct_characters(s: string) returns (count: int)
      ensures count >= 0
      ensures count <= |s|
      ensures count == |set i | 0 <= i < |s| :: to_lower_char(s[i])|

vc-code: |-
  {
      assume {:axiom} false;
    }
vc-postamble: |-
