vc-description: |-
  This task involves computing the n-th Fibonacci number using 1-based indexing, where fib(1) = 1 and fib(2) = 1. The implementation should efficiently calculate the result for positive integers n.
  
  The solution uses an iterative approach with loop invariants to maintain correctness while avoiding the exponential time complexity of a naive recursive implementation.

vc-preamble: |-
  
  predicate ValidInput(n: int) {
      n > 0
  }
  
  function fib_spec(n: int): int
      requires n > 0
  {
      if n == 1 then 1
      else if n == 2 then 1
      else fib_spec(n-1) + fib_spec(n-2)
  }

vc-helpers: |-

vc-spec: |-
  method fib(n: int) returns (result: int)
      requires ValidInput(n)
      ensures result == fib_spec(n)
      ensures result > 0

vc-code: |-
  {
      assume {:axiom} false;
    }
vc-postamble: |-
