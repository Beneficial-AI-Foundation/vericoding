vc-description: |-
  This verification task involves implementing the FibFib sequence, which is a modified Fibonacci sequence. The FibFib sequence is defined with base cases fibfib(0) = 0, fibfib(1) = 0, fibfib(2) = 1, and for n >= 3, fibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3). The expected implementation should efficiently compute the n-th element using dynamic programming rather than naive recursion.

vc-preamble: |-
  
  function fibfib_spec(n: int): int
      requires n >= 0
  {
      if n == 0 then 0
      else if n == 1 then 0
      else if n == 2 then 1
      else fibfib_spec(n-1) + fibfib_spec(n-2) + fibfib_spec(n-3)
  }

vc-helpers: |-

vc-spec: |-
  method fibfib(n: int) returns (result: int)
      requires n >= 0
      ensures result == fibfib_spec(n)
      ensures n == 0 ==> result == 0
      ensures n == 1 ==> result == 0
      ensures n == 2 ==> result == 1
      ensures n >= 3 ==> result == fibfib_spec(n-1) + fibfib_spec(n-2) + fibfib_spec(n-3)

vc-code: |-
  {
      assume {:axiom} false;
    }
vc-postamble: |-
