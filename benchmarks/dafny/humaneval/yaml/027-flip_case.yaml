vc-preamble: |-
  function lower(c: char) : bool
      {
          'a' <= c <= 'z'
      }
  function upper(c: char) : bool
      {
          'A' <= c <= 'Z'
      }
  function alpha(c: char) : bool
      {
          lower(c) || upper(c)
      }
  function flip_char(c: char) : (C: char)
          ensures lower(c) <==> upper(C)
          ensures upper(c) <==> lower(C)
      {
          if lower(c) then c - 'a' + 'A' else
          if upper(c) then c + 'a' - 'A' else c
      }

vc-helpers: |-
vc-description: |-

  /*
  function_signature: def flip_case(string: str) -> str
  For a given string, flip lowercase characters to uppercase and uppercase to lowercase.
  */

vc-spec: |-
  method flip_case(s: string) returns (S: string)
      // post-conditions-start
      ensures |S| == |s|
      ensures forall i :: 0 <= i < |s| ==> (lower(s[i]) <==> upper(S[i]))
      ensures forall i :: 0 <= i < |s| ==> (upper(s[i]) <==> lower(S[i]))
      // post-conditions-end

vc-code: |-
  {
    assume false;
  }

vc-postamble: |-


