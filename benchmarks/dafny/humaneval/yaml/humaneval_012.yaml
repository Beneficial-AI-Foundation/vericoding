vc-description: |-
  This task involves finding the longest string in a sequence of strings. If multiple strings have the same maximum length, the method should return the first one that appears in the list. If the list is empty, it should return None using an Option type.

vc-preamble: |-

  datatype Option<T> = Some(value: T) | None

  predicate ValidResult(strings: seq<string>, result: Option<string>)
  {
      if |strings| == 0 then
          result == None
      else
          result.Some? &&
          (exists i :: (0 <= i < |strings| && strings[i] == result.value &&
          (forall s :: s in strings ==> |result.value| >= |s|) &&
          (forall j :: 0 <= j < i ==> |strings[j]| < |result.value|)))
  }

vc-helpers: |-

vc-spec: |-
  method longest(strings: seq<string>) returns (result: Option<string>)
      ensures ValidResult(strings, result)

vc-code: |-
  {
      assume {:axiom} false;
    }
vc-postamble: |-
