vc-description: |-
  This verification task involves implementing a method to determine if a positive integer is a prime number. A prime number is defined as a natural number greater than 1 that has exactly two distinct positive divisors: 1 and itself.

  The implementation should efficiently check for primality by testing divisibility up to the square root of the input number, with optimizations for even numbers.

vc-preamble: |-

  predicate is_prime_number(n: int)
  {
      n >= 2 && forall k :: 2 <= k < n ==> n % k != 0
  }

vc-helpers: |-

vc-spec: |-
  method is_prime(n: int) returns (result: bool)
      ensures result <==> is_prime_number(n)

vc-code: |-
  {
      assume {:axiom} false;
    }
vc-postamble: |-
