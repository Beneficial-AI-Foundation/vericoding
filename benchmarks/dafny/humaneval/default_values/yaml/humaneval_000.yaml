vc-description: |-
  This verification task involves implementing a method to determine if any two numbers in a given list have an absolute difference less than a specified threshold. The implementation uses nested loops to compare all pairs of elements and returns true as soon as a close pair is found, or false if no such pair exists.

vc-preamble: |-
  
  predicate ValidInput(numbers: seq<real>, threshold: real)
  {
      true
  }
  
  function AbsDiff(a: real, b: real): real
  {
      if a >= b then a - b else b - a
  }
  
  predicate HasCloseElements(numbers: seq<real>, threshold: real)
  {
      exists i, j :: 0 <= i < j < |numbers| && AbsDiff(numbers[i], numbers[j]) < threshold
  }

vc-helpers: |-

vc-spec: |-
  method has_close_elements(numbers: seq<real>, threshold: real) returns (result: bool)
      requires ValidInput(numbers, threshold)
      ensures result == HasCloseElements(numbers, threshold)

vc-code: |-
  {
      assume {:axiom} false;
    }
vc-postamble: |-
