vc-preamble: |-
  function IsPrime(n: int) : bool
  {
    n > 1 &&
    forall k :: 2 <= k < n ==> n % k != 0
  }

vc-helpers: |-


vc-description: |-
  function_signature: def prime_length(s: str) -> bool
  Write a function that takes a string and returns True if the string length is a prime number or False otherwise

vc-spec: |-
  method PrimeLength(s: string) returns (p : bool)
    // post-conditions-start
    ensures p <==> IsPrime(|s|)
    // post-conditions-end

vc-code: |-
  {
    var length := |s|;
    if length <= 1 {
      p := false;
    } else {
      p := true;
      var k := 2;
      while k < length
        invariant 2 <= k <= length
        invariant p <==> (forall j :: 2 <= j < k ==> length % j != 0)
      {
        if length % k == 0 {
          p := false;
          break;
        }
        k := k + 1;
      }
    }
  }

vc-postamble: |-


