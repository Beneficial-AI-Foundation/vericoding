vc-preamble: |-
  method min(a : int, b : int) returns (m : int)
    ensures m == a || m == b
    ensures m <= a && m <= b
  {
    assume{:axiom} false;
  }
  method max(a : int, b : int) returns (m : int)
    ensures m == a || m == b
    ensures m >= a && m >= b
  {
    assume{:axiom} false;
  }

vc-helpers: |-


vc-description: |-
  function_signature: method generate_integers(a : int, b : int) returns (result: seq<int>)
  Generate elements. Ensures: the condition holds for all values; the condition holds for all values.

vc-spec: |-
  method generate_integers(a : int, b : int) returns (result: seq<int>)
    // post-conditions-start
    ensures forall i : int :: i >= 0 && i < |result| ==> result[i] % 2 == 0
    ensures forall i : int :: i >= 0 && i < |result| ==> result[i] in [2, 4, 6, 8]
    // post-conditions-end

vc-code: |-
  {
    result := [2, 4, 6, 8];
  }

vc-postamble: |-


