vc-preamble: |-
  function sum_chars_rec(list: seq<string>): nat
  {
    if |list| == 0 then 0
    else |list[0]| + sum_chars_rec(list[1..])
  }
  method TotalMatch(list1: seq<string>, list2: seq<string>) returns (result: seq<string>)
    // post-conditions-start
    ensures |result| == |list1| || |result| == |list2|
    ensures result == list1 || result == list2
    ensures sum_chars_rec(result) <= sum_chars_rec(list1)
    ensures sum_chars_rec(result) <= sum_chars_rec(list2)
    ensures sum_chars_rec(list1) == sum_chars_rec(list2) ==> result == list1
    // post-conditions-end
  {
    assume{:axiom} false;
  }

vc-helpers: |-
  lemma SumCharsRecSliceProperty(list: seq<string>, i: int)
    requires 0 <= i < |list|
    ensures sum_chars_rec(list[..i+1]) == sum_chars_rec(list[..i]) + |list[i]|
  {
    if i == 0 {
      assert list[..1] == [list[0]];
      assert sum_chars_rec(list[..1]) == |list[0]| + sum_chars_rec([]);
      assert sum_chars_rec([]) == 0;
      assert sum_chars_rec(list[..0]) == sum_chars_rec([]) == 0;
    } else {
      assert list[..i+1] == list[..i] + [list[i]];
      SumCharsRecAppendProperty(list[..i], [list[i]]);
      assert sum_chars_rec(list[..i+1]) == sum_chars_rec(list[..i]) + sum_chars_rec([list[i]]);
      assert sum_chars_rec([list[i]]) == |list[i]|;
    }
  }
  
  lemma SumCharsRecAppendProperty(list1: seq<string>, list2: seq<string>)
    ensures sum_chars_rec(list1 + list2) == sum_chars_rec(list1) + sum_chars_rec(list2)
  {
    if |list1| == 0 {
      assert list1 + list2 == list2;
    } else {
      assert (list1 + list2)[1..] == list1[1..] + list2;
      SumCharsRecAppendProperty(list1[1..], list2);
    }
  }

vc-description: |-
  function_signature: method SumChars(list: seq<string>) returns (sum: nat)
  Calculate sum. Ensures: returns the sum of character lengths in all strings.

vc-spec: |-
  method SumChars(list: seq<string>) returns (sum: nat)
    // post-conditions-start
    ensures sum == sum_chars_rec(list)
    // post-conditions-end

vc-code: |-
  {
    sum := 0;
    var i := 0;
    while i < |list|
      invariant 0 <= i <= |list|
      invariant sum == sum_chars_rec(list[..i])
    {
      SumCharsRecSliceProperty(list, i);
      sum := sum + |list[i]|;
      i := i + 1;
    }
    assert i == |list|;
    assert list[..i] == list;
  }

vc-postamble: |-


