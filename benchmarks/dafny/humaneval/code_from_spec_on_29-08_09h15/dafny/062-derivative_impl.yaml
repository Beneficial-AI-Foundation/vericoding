vc-preamble: |-


vc-helpers: |-


vc-description: |-
  function_signature: def derivative(xs: List Int) -> List Int
  xs represent coefficients of a polynomial. xs[0] + xs[1] * x + xs[2] * x^2 + .... Return derivative of this polynomial in the same form.

vc-spec: |-
  method derivative(xs: seq<int>) returns (result: seq<int>)
    // pre-conditions-start
    requires |xs| > 0
    // pre-conditions-end
    // post-conditions-start
    ensures |result| == |xs| - 1
    ensures forall i :: 0 <= i < |result| ==> result[i] == xs[i+1] * (i+1)
    // post-conditions-end

vc-code: |-
  {
    result := [];
    var i := 1;
    while i < |xs|
      invariant 0 <= i <= |xs|
      invariant |result| == i - 1
      invariant forall j :: 0 <= j < |result| ==> result[j] == xs[j+1] * (j+1)
    {
      result := result + [xs[i] * i];
      i := i + 1;
    }
  }

vc-postamble: |-


