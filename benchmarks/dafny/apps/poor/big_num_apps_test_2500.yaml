vc-description: |-
  Given a positive integer N, count the number of pairs (u, v) where 0 ≤ u, v ≤ N 
  such that there exist non-negative integers a and b satisfying a XOR b = u and a + b = v.
  Return the count modulo 10^9 + 7.

vc-preamble: |-
  predicate ValidInput(N: int) {
      N >= 1
  }
  
  predicate ValidOutput(result: int) {
      result >= 0 && result < 1000000007
  }
  
  function CountValidPairs(n: int): int
      requires n >= 0
      ensures CountValidPairs(n) > 0
      decreases n
  {
      if n == 0 then 1
      else if n == 1 then 2
      else CountValidPairs(n / 2) + CountValidPairs((n - 1) / 2) + CountValidPairs((n - 2) / 2)
  }

vc-helpers: |-
  

vc-spec: |-
  

vc-code: |-
  

vc-postamble: |-
