vc-description: |-
  Given n spectators numbered 1 to n, a Mexican wave proceeds in three phases:
  Growing phase (time 1 to k): spectator i stands at time i
  Steady phase (time k+1 to n): spectator i stands at time i, spectator (i-k) sits at time i  
  Decreasing phase (time n+1 to n+k): spectator (i-k) sits at time i, no new spectators stand
  Determine how many spectators are standing at time t.

vc-preamble: |-
  predicate ValidInput(n: int, k: int, t: int)
  {
      1 <= n <= 1000000000 && 1 <= k <= n && 1 <= t < n + k
  }
  
  function CorrectResult(n: int, k: int, t: int): int
      requires ValidInput(n, k, t)
  {
      if t <= k then t
      else if t > n then k + n - t
      else k
  }

vc-helpers: |-
  

vc-spec: |-
  method solve(n: int, k: int, t: int) returns (result: int)
      requires ValidInput(n, k, t)
      ensures result == CorrectResult(n, k, t)
      ensures 0 <= result <= k

vc-code: |-
  {
      if t <= k {
          result := t;
      } else if t > n {
          result := k + n - t;
      } else {
          result := k;
      }
  }

vc-postamble: |-
