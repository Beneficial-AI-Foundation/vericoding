vc-description: |-
  Given N strings, count the number of distinct strings.
  Input: A sequence of strings (length >= 1)
  Output: Integer representing the count of distinct strings

vc-preamble: |-
  function DistinctStrings(strings: seq<string>): set<string>
  {
      set i | 0 <= i < |strings| :: strings[i]
  }
  
  predicate ValidInput(strings: seq<string>)
  {
      |strings| >= 1
  }

vc-helpers: |-
  

vc-spec: |-
  method solve(strings: seq<string>) returns (count: int)
      requires ValidInput(strings)
      ensures count >= 1
      ensures count <= |strings|
      ensures count == |DistinctStrings(strings)|

vc-code: |-
  {
      var seen: set<string> := {};
      var i := 0;
      while i < |strings|
          invariant 0 <= i <= |strings|
          invariant seen == (set j | 0 <= j < i :: strings[j])
          invariant |seen| <= i
      {
          seen := seen + {strings[i]};
          i := i + 1;
      }
  
      assert seen == DistinctStrings(strings);
      assert |strings| >= 1;
      assert strings[0] in seen;
      assert |seen| >= 1;
      assert |seen| <= |strings|;
  
      count := |seen|;
  }

vc-postamble: |-
