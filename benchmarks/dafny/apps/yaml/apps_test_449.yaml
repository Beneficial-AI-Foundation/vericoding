vc-description: |-
  Given an integer n representing dollars, find the minimum number of bills 
  needed to represent this amount using denominations of $1, $5, $10, $20, and $100.

vc-preamble: |-
  predicate ValidInput(n: int) {
      n >= 1
  }
  
  function MinBills(n: int): int
      requires n >= 1
  {
      n / 100 + (n % 100) / 20 + ((n % 100) % 20) / 10 + (((n % 100) % 20) % 10) / 5 + ((((n % 100) % 20) % 10) % 5)
  }

vc-helpers: |-
  

vc-spec: |-
  method solve(n: int) returns (result: int)
      requires ValidInput(n)
      ensures result >= 0
      ensures result == MinBills(n)

vc-code: |-
  {
      var remaining := n;
      var ans := 0;
  
      // $100 bills
      ans := ans + remaining / 100;
      remaining := remaining % 100;
  
      // $20 bills  
      ans := ans + remaining / 20;
      remaining := remaining % 20;
  
      // $10 bills
      ans := ans + remaining / 10;
      remaining := remaining % 10;
  
      // $5 bills
      ans := ans + remaining / 5;
      remaining := remaining % 5;
  
      // $1 bills
      ans := ans + remaining;
  
      result := ans;
  }

vc-postamble: |-
