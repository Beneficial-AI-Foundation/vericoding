vc-description: |-
  Given a string representing a row of cells with flowers (A, B, C) or empty cells (.),
  determine if it's possible for at least one cell to contain all three colors after
  some flowers wither and spread petals to adjacent cells.

vc-preamble: |-
  predicate ValidInput(s: string)
  {
      |s| >= 0 && forall i :: 0 <= i < |s| ==> s[i] in {'A', 'B', 'C', '.'}
  }
  
  predicate HasAllThreeColors(s: string, start: int)
      requires 0 <= start <= |s| - 3
  {
      'A' in s[start..start+3] && 'B' in s[start..start+3] && 'C' in s[start..start+3]
  }
  
  predicate PossibleToGetAllColors(s: string)
  {
      |s| >= 3 && exists i :: 0 <= i <= |s| - 3 && HasAllThreeColors(s, i)
  }

vc-helpers: |-

vc-spec: |-
  method solve(s: string) returns (result: string)
      requires ValidInput(s)
      ensures result == "Yes" ==> PossibleToGetAllColors(s)
      ensures result == "No" ==> !PossibleToGetAllColors(s)
      ensures result == "Yes" || result == "No"

vc-code: |-
  {
    assume {:axiom} false;
  }

vc-postamble: |-

