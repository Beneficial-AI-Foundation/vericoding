vc-description: |-
  Given n matches, find the minimum number of additional matches needed to form a valid equation a + b = c 
  where a, b, c are positive integers. Each integer k uses k matches, '+' uses 1 match, '=' uses 1 match.
  Total matches needed: a + b + c + 2 = 2(a + b) + 2 since c = a + b.

vc-preamble: |-
  predicate ValidInput(queries: seq<int>) {
      forall i :: 0 <= i < |queries| ==> queries[i] >= 2
  }
  
  function MinAdditionalMatches(n: int): int
      requires n >= 2
  {
      if n >= 4 then n % 2 else 4 - n
  }
  
  predicate ValidResult(queries: seq<int>, results: seq<int>)
      requires ValidInput(queries)
  {
      |results| == |queries| &&
      forall i :: 0 <= i < |queries| ==> results[i] == MinAdditionalMatches(queries[i])
  }

vc-helpers: |-

vc-spec: |-
  method solve(queries: seq<int>) returns (results: seq<int>)
      requires ValidInput(queries)
      ensures ValidResult(queries, results)

vc-code: |-
  {
    assume {:axiom} false;
  }

vc-postamble: |-

