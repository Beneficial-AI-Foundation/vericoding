vc-description: |-
  Given a sequence of magnets with orientations "01" or "10", count the number of groups formed.
  Adjacent magnets with same orientation attract (same group), different orientations repel (separate groups).

vc-preamble: |-
  predicate ValidInput(magnets: seq<string>)
  {
      forall i :: 0 <= i < |magnets| ==> magnets[i] in {"01", "10"}
  }
  
  function CountGroups(magnets: seq<string>) : int
      requires ValidInput(magnets)
  {
      if |magnets| == 0 then 0
      else 1 + |set i | 1 <= i < |magnets| && magnets[i] != magnets[i-1]|
  }

vc-helpers: |-

vc-spec: |-
  method solve(magnets: seq<string>) returns (result: int)
      requires ValidInput(magnets)
      ensures result >= 0
      ensures |magnets| == 0 ==> result == 0
      ensures |magnets| > 0 ==> result >= 1
      ensures result <= |magnets|
      ensures result == CountGroups(magnets)

vc-code: |-
  {
    assume {:axiom} false;
  }

vc-postamble: |-

