vc-description: |-
  Three players (Alice, Bob, Charlie) play a card game with decks of cards labeled 'a', 'b', or 'c'.
  Alice starts first. On each turn, if current player's deck is empty, they win the game.
  Otherwise, discard the top card; the letter determines next player ('a'→Alice, 'b'→Bob, 'c'→Charlie).
  Given initial decks as strings, determine the winner.

vc-preamble: |-
  predicate ValidDeck(deck: string)
  {
      forall i :: 0 <= i < |deck| ==> deck[i] == 'a' || deck[i] == 'b' || deck[i] == 'c'
  }
  
  predicate ValidInput(A: string, B: string, C: string)
  {
      ValidDeck(A) && ValidDeck(B) && ValidDeck(C)
  }
  
  predicate ValidWinner(winner: char)
  {
      winner == 'A' || winner == 'B' || winner == 'C'
  }

vc-helpers: |-

vc-spec: |-
  method solve(A: string, B: string, C: string) returns (result: char)
      requires ValidInput(A, B, C)
      ensures ValidWinner(result)

vc-code: |-
  {
    assume {:axiom} false;
  }

vc-postamble: |-

