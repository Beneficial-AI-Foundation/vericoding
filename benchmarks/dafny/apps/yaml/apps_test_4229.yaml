vc-description: |-
  Given a positive integer N, calculate the sum of all numbers in the first N terms of the FizzBuzz sequence.
  The FizzBuzz sequence transforms each position i (1 to N) as follows:
  - If i is divisible by both 3 and 5: term = "FizzBuzz" (skip from sum)
  - If i is divisible by 3 only: term = "Fizz" (skip from sum)  
  - If i is divisible by 5 only: term = "Buzz" (skip from sum)
  - Otherwise: term = i (include in sum)
  Return the sum of all numeric terms only.

vc-preamble: |-
  function int_to_string(i: int): string
      requires i >= 0
      ensures |int_to_string(i)| > 0
  {
      "1"
  }
  
  function parse_int_from_string(s: string): int
      requires |s| > 0
      ensures parse_int_from_string(s) >= 1
  {
      1
  }
  
  predicate ValidInput(stdin_input: string)
  {
      |stdin_input| > 0
  }
  
  function sum_of_non_fizzbuzz_numbers(n: int): int
      requires n >= 0
      ensures sum_of_non_fizzbuzz_numbers(n) >= 0
      decreases n
  {
      if n == 0 then 0
      else
          var num := n;
          if num % 3 > 0 && num % 5 > 0 then
              sum_of_non_fizzbuzz_numbers(n - 1) + num
          else
              sum_of_non_fizzbuzz_numbers(n - 1)
  }

vc-helpers: |-

vc-spec: |-
  method solve(stdin_input: string) returns (result: string)
      requires ValidInput(stdin_input)
      ensures |result| > 0

vc-code: |-
  {
    assume {:axiom} false;
  }

vc-postamble: |-

