vc-description: |-
  Given n cards with letters/digits, determine minimum cards to flip to verify:
  "If a card has a vowel on one side, then it has an even digit on the other side."
  Input: string representing visible sides. Output: minimum flips needed.

vc-preamble: |-
  predicate IsVowel(c: char) {
    c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u'
  }
  
  predicate IsOddDigit(c: char) {
    c == '1' || c == '3' || c == '5' || c == '7' || c == '9'
  }
  
  predicate NeedsFlipping(c: char) {
    IsVowel(c) || IsOddDigit(c)
  }
  
  function CountFlips(s: string): int {
    |set i | 0 <= i < |s| && NeedsFlipping(s[i])|
  }

vc-helpers: |-

vc-spec: |-
  method solve(s: string) returns (result: string)
    requires |s| >= 1 && |s| <= 50
    ensures |result| > 0
    ensures result == toString(CountFlips(s)) + "\n"

vc-code: |-
  {
    assume {:axiom} false;
  }

vc-postamble: |-

