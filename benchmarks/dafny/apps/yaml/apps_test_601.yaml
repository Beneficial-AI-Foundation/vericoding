vc-description: |-
  Given two people with carrying capacities p and f, and a shop containing cnt_s swords
  (each weighing s units) and cnt_w war axes (each weighing w units), find the maximum
  total number of items both people can carry. The input contains multiple test cases.

vc-preamble: |-
  predicate validInput(input: string)
  {
      |input| > 0 && 
      var lines := splitFunc(input, '\n');
      |lines| >= 1 &&
      parseIntFunc(lines[0]) >= 0 &&
      |lines| >= 1 + 3 * parseIntFunc(lines[0])
  }
  
  function processTestCases(input: string): seq<int>
      requires validInput(input)
  {
      var lines := splitFunc(input, '\n');
      var t := parseIntFunc(lines[0]);
      processTestCasesHelper(input, lines, 1, 0, t, [])
  }
  
  function formatOutput(results: seq<int>): string
  {
      formatOutputHelper(results, 0, "")
  }

vc-helpers: |-

vc-spec: |-
  method solve(input: string) returns (result: string)
      requires |input| > 0
      requires validInput(input)
      ensures |result| >= 0
      ensures result == formatOutput(processTestCases(input))

vc-code: |-
  {
    assume {:axiom} false;
  }

vc-postamble: |-

