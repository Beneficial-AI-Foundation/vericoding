vc-description: |-
  Given a 3Ã—3 grid of lowercase English letters, extract and concatenate 
  the characters on the main diagonal (from top-left to bottom-right) 
  to form a string of length 3.

vc-preamble: |-
  predicate ValidInput(lines: seq<string>)
  {
      |lines| == 3 && forall i :: 0 <= i < 3 ==> |lines[i]| == 3
  }
  
  function ExtractDiagonal(lines: seq<string>): string
      requires ValidInput(lines)
  {
      [lines[0][0], lines[1][1], lines[2][2]]
  }

vc-helpers: |-

vc-spec: |-
  method solve(lines: seq<string>) returns (result: string)
      requires ValidInput(lines)
      ensures |result| == 4
      ensures result[0] == lines[0][0]
      ensures result[1] == lines[1][1] 
      ensures result[2] == lines[2][2]
      ensures result[3] == '\n'
      ensures result == ExtractDiagonal(lines) + ['\n']

vc-code: |-
  {
      result := ExtractDiagonal(lines) + ['\n'];
  }

vc-postamble: |-

