vc-description: |-
  Given a phone keypad layout and a phone number, determine if the finger movement 
  sequence between consecutive key presses is unique (no other number produces the same sequence).
  The keypad layout is: 1-2-3 in top row, 4-5-6 in middle row, 7-8-9 in bottom row, 
  and 0 below 8.

vc-preamble: |-
  function string_to_digits(s: string): set<int>
  {
      set i | 0 <= i < |s| && '0' <= s[i] <= '9' :: (s[i] as int) - ('0' as int)
  }
  
  predicate ValidInput(input: string)
  {
      |input| > 0 && '\n' in input
  }
  
  predicate HasUniqueMovementSequence(digits: set<int>)
  {
      (1 in digits || 4 in digits || 7 in digits || 0 in digits) &&
      (1 in digits || 2 in digits || 3 in digits) &&
      (3 in digits || 6 in digits || 9 in digits || 0 in digits) &&
      (7 in digits || 0 in digits || 9 in digits)
  }
  
  function split_lines(s: string): seq<string>
  {
      if '\n' !in s then [s]
      else 
          var idx := find_char(s, '\n');
          if idx == -1 then [s]
          else if idx < |s| then [s[..idx]] + split_lines(s[idx+1..])
          else [s]
  }

vc-helpers: |-
  function find_char(s: string, c: char): (result: int)
    ensures result == -1 || (0 <= result < |s| && s[result] == c)
  {
      if |s| == 0 then -1
      else if s[0] == c then 0
      else 
          var rest := find_char(s[1..], c);
          if rest == -1 then -1 else rest + 1
  }

vc-spec: |-
  method solve(input: string) returns (result: string)
    requires ValidInput(input)
    ensures result == "YES\n" || result == "NO\n"
    ensures |result| > 0
    ensures var lines := split_lines(input);
            |lines| >= 2 ==>
            var digits_str := lines[1];
            var digits := string_to_digits(digits_str);
            result == "YES\n" <==> HasUniqueMovementSequence(digits)

vc-code: |-
  {
      var lines := split_lines(input);
      if |lines| >= 2 {
          var digits_str := lines[1];
          var digits := string_to_digits(digits_str);
          if HasUniqueMovementSequence(digits) {
              result := "YES\n";
          } else {
              result := "NO\n";
          }
      } else {
          result := "NO\n";
      }
  }

vc-postamble: |-

