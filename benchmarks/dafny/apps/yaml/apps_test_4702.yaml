vc-description: |-
  Given an integer x where 0 ≤ x ≤ 1 represented as a string, output the logical NOT of x.
  If x = 0, output 1. If x = 1, output 0.

vc-preamble: |-
  predicate ValidInput(input: string)
  {
      |input| > 0 && 
      (input[0] == '0' || input[0] == '1') && 
      (|input| == 1 || (|input| > 1 && input[1] == '\n'))
  }
  
  function LogicalNot(digit: char): string
      requires digit == '0' || digit == '1'
  {
      if digit == '0' then "1\n" else "0\n"
  }
  
  predicate CorrectOutput(input: string, output: string)
      requires ValidInput(input)
  {
      output == LogicalNot(input[0])
  }

vc-helpers: |-

vc-spec: |-
  method solve(input: string) returns (output: string)
      requires ValidInput(input)
      ensures CorrectOutput(input, output)

vc-code: |-
  {
    assume {:axiom} false;
  }

vc-postamble: |-

