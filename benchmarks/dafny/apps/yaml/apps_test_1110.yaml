vc-description: |-
  Find the worst-case number of button presses needed to open a lock with n buttons.
  The lock has a specific unknown sequence. When a button is pressed:
  - If it's the next correct button, it stays pressed
  - If it's incorrect, all pressed buttons reset
  - The lock opens when all n buttons are pressed simultaneously (sequence complete)

vc-preamble: |-
  predicate ValidInput(n: int) {
      n >= 1
  }
  
  function WorstCasePresses(n: int): int
      requires ValidInput(n)
  {
      n * (n * n + 5) / 6
  }

vc-helpers: |-

vc-spec: |-
  method solve(n: int) returns (result: int)
      requires ValidInput(n)
      ensures result == WorstCasePresses(n)
      ensures result >= 1

vc-code: |-
  {
    assume {:axiom} false;
  }

vc-postamble: |-

