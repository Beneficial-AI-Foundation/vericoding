vc-description: |-
  Given a list of university entrance years for groups that student Igor joined,
  determine Igor's university entrance year. Igor joins his own group and all groups
  where the entrance year differs by at most x years from his entrance year.
  The solution computes Igor's entrance year as the average of all group years.

vc-preamble: |-
  function sumRange(s: seq<int>, start: int, end: int): int
      requires 0 <= start <= end <= |s|
      decreases end - start
  {
      if start == end then 0
      else s[start] + sumRange(s, start + 1, end)
  }
  
  predicate ValidInput(n: int, years: seq<int>)
  {
      n > 0 && |years| == n
  }

vc-helpers: |-

vc-spec: |-
  method solve(n: int, years: seq<int>) returns (result: int)
      requires ValidInput(n, years)
      ensures result == sumRange(years, 0, |years|) / n

vc-code: |-
  {
    assume {:axiom} false;
  }

vc-postamble: |-

