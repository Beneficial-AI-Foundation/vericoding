vc-description: |-
  Generate a string of exactly n characters where each character is either 'O' or 'o'.
  The i-th character (1-indexed) should be 'O' if i is a Fibonacci number, 'o' otherwise.
  Fibonacci sequence: f₁ = 1, f₂ = 1, fₙ = fₙ₋₁ + fₙ₋₂ for n > 2.

vc-preamble: |-
  function isFibonacci(num: int): bool
    requires num >= 1
  {
    isFibHelper(num, 1, 1)
  }
  
  function isFibHelper(num: int, prev: int, curr: int): bool
    requires num >= 1 && prev >= 1 && curr >= 1
    decreases if curr >= num then 0 else num - curr
  {
    if curr == num then true
    else if curr > num then false
    else isFibHelper(num, curr, prev + curr)
  }

vc-helpers: |-

vc-spec: |-
  method solve(n: int) returns (result: string)
    requires n >= 1 && n <= 1000
    ensures |result| == n
    ensures forall i :: 0 <= i < |result| ==> result[i] == 'O' || result[i] == 'o'
    ensures forall i :: 1 <= i <= n ==> (isFibonacci(i) <==> result[i-1] == 'O')
    ensures forall i :: 1 <= i <= n ==> (!isFibonacci(i) <==> result[i-1] == 'o')

vc-code: |-
  {
    // Generate Fibonacci numbers up to n
    var fibs: seq<int> := [1, 1];
    while |fibs| >= 2 && fibs[|fibs| - 1] < n
      invariant |fibs| >= 2
      invariant forall k :: 0 <= k < |fibs| ==> fibs[k] >= 1
      invariant forall k :: 2 <= k < |fibs| ==> fibs[k] == fibs[k-1] + fibs[k-2]
      invariant fibs[0] == 1 && fibs[1] == 1
      decreases n - fibs[|fibs| - 1]
    {
      var nextFib := fibs[|fibs| - 1] + fibs[|fibs| - 2];
      fibs := fibs + [nextFib];
    }
  
    // Create the result string
    var res: string := "";
    var i := 1;
    while i <= n
      invariant 1 <= i <= n + 1
      invariant |res| == i - 1
      invariant forall j :: 0 <= j < |res| ==> res[j] == 'O' || res[j] == 'o'
      invariant forall j :: 1 <= j < i ==> (isFibonacci(j) <==> res[j-1] == 'O')
      invariant forall j :: 1 <= j < i ==> (!isFibonacci(j) <==> res[j-1] == 'o')
    {
      if isFibonacci(i)
      {
        res := res + "O";
      }
      else
      {
        res := res + "o";
      }
      i := i + 1;
    }
  
    result := res;
  }

vc-postamble: |-

