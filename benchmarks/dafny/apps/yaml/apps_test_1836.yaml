vc-description: |-
  Given n points and m segments, find a "hedgehog" with maximum beauty.
  A hedgehog has a tail (path with strictly increasing point numbers) and 
  spines (all segments connected to tail's endpoint). 
  Beauty = (tail length) Ã— (number of spines).

vc-preamble: |-
  predicate ValidInput(n: int, edges: seq<(int, int)>)
  {
      n >= 2 &&
      forall i :: 0 <= i < |edges| ==> 1 <= edges[i].0 <= n && 1 <= edges[i].1 <= n && edges[i].0 != edges[i].1
  }
  
  predicate ValidOutput(result: int, n: int, edges: seq<(int, int)>)
  {
      result >= 0 && result <= 2 * |edges| * (|edges| + 1)
  }

vc-helpers: |-

vc-spec: |-
  method solve(n: int, edges: seq<(int, int)>) returns (result: int)
      requires ValidInput(n, edges)
      ensures ValidOutput(result, n, edges)

vc-code: |-
  {
    assume {:axiom} false;
  }

vc-postamble: |-

