vc-description: |-
  Given an integer n representing a bank account balance, perform at most one operation:
  delete the last digit, delete the digit before the last digit, or do nothing.
  Find the maximum possible balance after performing the operation.
  Constraint: absolute value of n is at least 10.

vc-preamble: |-
  predicate ValidInput(n: int)
  {
      n >= 10 || n <= -10
  }
  
  function MaxBalanceAfterOperation(n: int): int
      requires ValidInput(n)
  {
      if n >= 0 then n
      else 
          var s := IntToString(n);
          var option1 := StringToInt(s[..|s|-1]);  // delete last digit
          var option2 := StringToInt(s[..|s|-2] + s[|s|-1..]);  // delete digit before last
          if option1 > option2 then option1 else option2
  }

vc-helpers: |-
  function IntToString(n: int): string
  {
      if n == 0 then "0"
      else if n > 0 then IntToStringHelper(n, "")
      else "-" + IntToStringHelper(-n, "")
  }
  
  function IntToStringHelper(n: int, acc: string): string
      requires n >= 0
      ensures n > 0 ==> |IntToStringHelper(n, acc)| > |acc|
  {
      if n == 0 then acc
      else IntToStringHelper(n / 10, [('0' as int + n % 10) as char] + acc)
  }
  
  function IntToStringLength(n: int): int
      requires n >= 0
      ensures IntToStringLength(n) >= 1
      ensures n >= 10 ==> IntToStringLength(n) >= 2
  {
      if n == 0 then 1
      else if n < 10 then 1
      else 1 + IntToStringLength(n / 10)
  }
  
  function StringToInt(s: string): int
  {
      if |s| == 0 then 0
      else if s[0] == '-' then -StringToIntHelper(s[1..], 0)
      else StringToIntHelper(s, 0)
  }
  
  function StringToIntHelper(s: string, acc: int): int
  {
      if |s| == 0 then acc
      else StringToIntHelper(s[1..], acc * 10 + (s[0] as int - '0' as int))
  }

vc-spec: |-
  method solve(n: int) returns (result: int)
      requires ValidInput(n)
      ensures result == MaxBalanceAfterOperation(n)

vc-code: |-
  {
      if n >= 0 {
          result := n;
      } else {
          var s := IntToString(n);
          var len := |s|;
  
          assert n <= -10;
          assert -n >= 10;
          assert IntToStringLength(-n) >= 2;
          assert len >= 3;
  
          var s1 := s[..len-1];
          var option1 := StringToInt(s1);
  
          var s2 := s[..len-2] + s[len-1..];
          var option2 := StringToInt(s2);
  
          result := if option1 > option2 then option1 else option2;
      }
  }

vc-postamble: |-
