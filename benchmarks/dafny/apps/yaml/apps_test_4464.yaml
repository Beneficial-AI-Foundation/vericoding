vc-description: |-
  Given three integers A, B, and C, determine if it's possible to select one or more 
  positive multiples of A such that their sum is congruent to C modulo B.

vc-preamble: |-
  predicate ValidInput(A: int, B: int, C: int)
  {
    1 <= A <= 100 && 1 <= B <= 100 && 0 <= C < B
  }
  
  predicate IsSolvable(A: int, B: int, C: int)
  {
    exists i :: 1 <= i < B && (i * (A % B)) % B == C
  }

vc-helpers: |-

vc-spec: |-
  method solve(A: int, B: int, C: int) returns (result: string)
    requires ValidInput(A, B, C)
    ensures result == "YES" <==> IsSolvable(A, B, C)
    ensures result == "NO" || result == "YES"

vc-code: |-
  {
    assume {:axiom} false;
  }

vc-postamble: |-

