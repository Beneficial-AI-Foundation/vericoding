vc-description: |-
  Given N words announced in a shiritori game, determine if all shiritori rules were followed.
  Shiritori rules: 1) No word can be repeated, 2) For each consecutive pair of words, 
  the last character of the first word must equal the first character of the second word.

vc-preamble: |-
  predicate NoRepeats(words: seq<string>)
  {
      forall i, j :: 0 <= i < j < |words| ==> words[i] != words[j]
  }
  
  predicate ConsecutiveCharsMatch(words: seq<string>)
      requires forall i :: 0 <= i < |words| ==> |words[i]| > 0
  {
      forall i :: 0 <= i < |words| - 1 ==> words[i][|words[i]| - 1] == words[i+1][0]
  }
  
  predicate ValidShiritori(words: seq<string>)
      requires forall i :: 0 <= i < |words| ==> |words[i]| > 0
  {
      NoRepeats(words) && ConsecutiveCharsMatch(words)
  }

vc-helpers: |-

vc-spec: |-
  method solve(words: seq<string>) returns (result: string)
      requires forall i :: 0 <= i < |words| ==> |words[i]| > 0
      ensures result == "Yes" || result == "No"
      ensures result == "Yes" <==> ValidShiritori(words)

vc-code: |-
  {
    assume {:axiom} false;
  }

vc-postamble: |-

